
SHARC_buoy_transmission_data.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008894  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000052c  08008958  08008958  00018958  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008e84  08008e84  000201dc  2**0
                  CONTENTS
  4 .ARM          00000000  08008e84  08008e84  000201dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  08008e84  08008e84  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008e84  08008e84  00018e84  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08008e88  08008e88  00018e88  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  08008e8c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000bc  200001dc  08009068  000201dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000298  08009068  00020298  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00007aa4  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001422  00000000  00000000  00027ca8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000660  00000000  00000000  000290d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000005d8  00000000  00000000  00029730  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00012271  00000000  00000000  00029d08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000085c3  00000000  00000000  0003bf79  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00069f5f  00000000  00000000  0004453c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000ae49b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000027fc  00000000  00000000  000ae4ec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001dc 	.word	0x200001dc
 80000e0:	00000000 	.word	0x00000000
 80000e4:	0800893c 	.word	0x0800893c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001e0 	.word	0x200001e0
 8000104:	0800893c 	.word	0x0800893c

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	; 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	; 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f001 f96b 	bl	8001718 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f001 f8bb 	bl	80015c8 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 f95d 	bl	8001718 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 f953 	bl	8001718 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 f8e3 	bl	800164c <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f001 f8d9 	bl	800164c <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_cfrcmple>:
 80004a8:	4684      	mov	ip, r0
 80004aa:	0008      	movs	r0, r1
 80004ac:	4661      	mov	r1, ip
 80004ae:	e7ff      	b.n	80004b0 <__aeabi_cfcmpeq>

080004b0 <__aeabi_cfcmpeq>:
 80004b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80004b2:	f000 f89f 	bl	80005f4 <__lesf2>
 80004b6:	2800      	cmp	r0, #0
 80004b8:	d401      	bmi.n	80004be <__aeabi_cfcmpeq+0xe>
 80004ba:	2100      	movs	r1, #0
 80004bc:	42c8      	cmn	r0, r1
 80004be:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

080004c0 <__aeabi_fcmpeq>:
 80004c0:	b510      	push	{r4, lr}
 80004c2:	f000 f82b 	bl	800051c <__eqsf2>
 80004c6:	4240      	negs	r0, r0
 80004c8:	3001      	adds	r0, #1
 80004ca:	bd10      	pop	{r4, pc}

080004cc <__aeabi_fcmplt>:
 80004cc:	b510      	push	{r4, lr}
 80004ce:	f000 f891 	bl	80005f4 <__lesf2>
 80004d2:	2800      	cmp	r0, #0
 80004d4:	db01      	blt.n	80004da <__aeabi_fcmplt+0xe>
 80004d6:	2000      	movs	r0, #0
 80004d8:	bd10      	pop	{r4, pc}
 80004da:	2001      	movs	r0, #1
 80004dc:	bd10      	pop	{r4, pc}
 80004de:	46c0      	nop			; (mov r8, r8)

080004e0 <__aeabi_fcmple>:
 80004e0:	b510      	push	{r4, lr}
 80004e2:	f000 f887 	bl	80005f4 <__lesf2>
 80004e6:	2800      	cmp	r0, #0
 80004e8:	dd01      	ble.n	80004ee <__aeabi_fcmple+0xe>
 80004ea:	2000      	movs	r0, #0
 80004ec:	bd10      	pop	{r4, pc}
 80004ee:	2001      	movs	r0, #1
 80004f0:	bd10      	pop	{r4, pc}
 80004f2:	46c0      	nop			; (mov r8, r8)

080004f4 <__aeabi_fcmpgt>:
 80004f4:	b510      	push	{r4, lr}
 80004f6:	f000 f837 	bl	8000568 <__gesf2>
 80004fa:	2800      	cmp	r0, #0
 80004fc:	dc01      	bgt.n	8000502 <__aeabi_fcmpgt+0xe>
 80004fe:	2000      	movs	r0, #0
 8000500:	bd10      	pop	{r4, pc}
 8000502:	2001      	movs	r0, #1
 8000504:	bd10      	pop	{r4, pc}
 8000506:	46c0      	nop			; (mov r8, r8)

08000508 <__aeabi_fcmpge>:
 8000508:	b510      	push	{r4, lr}
 800050a:	f000 f82d 	bl	8000568 <__gesf2>
 800050e:	2800      	cmp	r0, #0
 8000510:	da01      	bge.n	8000516 <__aeabi_fcmpge+0xe>
 8000512:	2000      	movs	r0, #0
 8000514:	bd10      	pop	{r4, pc}
 8000516:	2001      	movs	r0, #1
 8000518:	bd10      	pop	{r4, pc}
 800051a:	46c0      	nop			; (mov r8, r8)

0800051c <__eqsf2>:
 800051c:	b570      	push	{r4, r5, r6, lr}
 800051e:	0042      	lsls	r2, r0, #1
 8000520:	0245      	lsls	r5, r0, #9
 8000522:	024e      	lsls	r6, r1, #9
 8000524:	004c      	lsls	r4, r1, #1
 8000526:	0fc3      	lsrs	r3, r0, #31
 8000528:	0a6d      	lsrs	r5, r5, #9
 800052a:	2001      	movs	r0, #1
 800052c:	0e12      	lsrs	r2, r2, #24
 800052e:	0a76      	lsrs	r6, r6, #9
 8000530:	0e24      	lsrs	r4, r4, #24
 8000532:	0fc9      	lsrs	r1, r1, #31
 8000534:	2aff      	cmp	r2, #255	; 0xff
 8000536:	d006      	beq.n	8000546 <__eqsf2+0x2a>
 8000538:	2cff      	cmp	r4, #255	; 0xff
 800053a:	d003      	beq.n	8000544 <__eqsf2+0x28>
 800053c:	42a2      	cmp	r2, r4
 800053e:	d101      	bne.n	8000544 <__eqsf2+0x28>
 8000540:	42b5      	cmp	r5, r6
 8000542:	d006      	beq.n	8000552 <__eqsf2+0x36>
 8000544:	bd70      	pop	{r4, r5, r6, pc}
 8000546:	2d00      	cmp	r5, #0
 8000548:	d1fc      	bne.n	8000544 <__eqsf2+0x28>
 800054a:	2cff      	cmp	r4, #255	; 0xff
 800054c:	d1fa      	bne.n	8000544 <__eqsf2+0x28>
 800054e:	2e00      	cmp	r6, #0
 8000550:	d1f8      	bne.n	8000544 <__eqsf2+0x28>
 8000552:	428b      	cmp	r3, r1
 8000554:	d006      	beq.n	8000564 <__eqsf2+0x48>
 8000556:	2001      	movs	r0, #1
 8000558:	2a00      	cmp	r2, #0
 800055a:	d1f3      	bne.n	8000544 <__eqsf2+0x28>
 800055c:	0028      	movs	r0, r5
 800055e:	1e43      	subs	r3, r0, #1
 8000560:	4198      	sbcs	r0, r3
 8000562:	e7ef      	b.n	8000544 <__eqsf2+0x28>
 8000564:	2000      	movs	r0, #0
 8000566:	e7ed      	b.n	8000544 <__eqsf2+0x28>

08000568 <__gesf2>:
 8000568:	b570      	push	{r4, r5, r6, lr}
 800056a:	0042      	lsls	r2, r0, #1
 800056c:	0245      	lsls	r5, r0, #9
 800056e:	024e      	lsls	r6, r1, #9
 8000570:	004c      	lsls	r4, r1, #1
 8000572:	0fc3      	lsrs	r3, r0, #31
 8000574:	0a6d      	lsrs	r5, r5, #9
 8000576:	0e12      	lsrs	r2, r2, #24
 8000578:	0a76      	lsrs	r6, r6, #9
 800057a:	0e24      	lsrs	r4, r4, #24
 800057c:	0fc8      	lsrs	r0, r1, #31
 800057e:	2aff      	cmp	r2, #255	; 0xff
 8000580:	d01b      	beq.n	80005ba <__gesf2+0x52>
 8000582:	2cff      	cmp	r4, #255	; 0xff
 8000584:	d00e      	beq.n	80005a4 <__gesf2+0x3c>
 8000586:	2a00      	cmp	r2, #0
 8000588:	d11b      	bne.n	80005c2 <__gesf2+0x5a>
 800058a:	2c00      	cmp	r4, #0
 800058c:	d101      	bne.n	8000592 <__gesf2+0x2a>
 800058e:	2e00      	cmp	r6, #0
 8000590:	d01c      	beq.n	80005cc <__gesf2+0x64>
 8000592:	2d00      	cmp	r5, #0
 8000594:	d00c      	beq.n	80005b0 <__gesf2+0x48>
 8000596:	4283      	cmp	r3, r0
 8000598:	d01c      	beq.n	80005d4 <__gesf2+0x6c>
 800059a:	2102      	movs	r1, #2
 800059c:	1e58      	subs	r0, r3, #1
 800059e:	4008      	ands	r0, r1
 80005a0:	3801      	subs	r0, #1
 80005a2:	bd70      	pop	{r4, r5, r6, pc}
 80005a4:	2e00      	cmp	r6, #0
 80005a6:	d122      	bne.n	80005ee <__gesf2+0x86>
 80005a8:	2a00      	cmp	r2, #0
 80005aa:	d1f4      	bne.n	8000596 <__gesf2+0x2e>
 80005ac:	2d00      	cmp	r5, #0
 80005ae:	d1f2      	bne.n	8000596 <__gesf2+0x2e>
 80005b0:	2800      	cmp	r0, #0
 80005b2:	d1f6      	bne.n	80005a2 <__gesf2+0x3a>
 80005b4:	2001      	movs	r0, #1
 80005b6:	4240      	negs	r0, r0
 80005b8:	e7f3      	b.n	80005a2 <__gesf2+0x3a>
 80005ba:	2d00      	cmp	r5, #0
 80005bc:	d117      	bne.n	80005ee <__gesf2+0x86>
 80005be:	2cff      	cmp	r4, #255	; 0xff
 80005c0:	d0f0      	beq.n	80005a4 <__gesf2+0x3c>
 80005c2:	2c00      	cmp	r4, #0
 80005c4:	d1e7      	bne.n	8000596 <__gesf2+0x2e>
 80005c6:	2e00      	cmp	r6, #0
 80005c8:	d1e5      	bne.n	8000596 <__gesf2+0x2e>
 80005ca:	e7e6      	b.n	800059a <__gesf2+0x32>
 80005cc:	2000      	movs	r0, #0
 80005ce:	2d00      	cmp	r5, #0
 80005d0:	d0e7      	beq.n	80005a2 <__gesf2+0x3a>
 80005d2:	e7e2      	b.n	800059a <__gesf2+0x32>
 80005d4:	42a2      	cmp	r2, r4
 80005d6:	dc05      	bgt.n	80005e4 <__gesf2+0x7c>
 80005d8:	dbea      	blt.n	80005b0 <__gesf2+0x48>
 80005da:	42b5      	cmp	r5, r6
 80005dc:	d802      	bhi.n	80005e4 <__gesf2+0x7c>
 80005de:	d3e7      	bcc.n	80005b0 <__gesf2+0x48>
 80005e0:	2000      	movs	r0, #0
 80005e2:	e7de      	b.n	80005a2 <__gesf2+0x3a>
 80005e4:	4243      	negs	r3, r0
 80005e6:	4158      	adcs	r0, r3
 80005e8:	0040      	lsls	r0, r0, #1
 80005ea:	3801      	subs	r0, #1
 80005ec:	e7d9      	b.n	80005a2 <__gesf2+0x3a>
 80005ee:	2002      	movs	r0, #2
 80005f0:	4240      	negs	r0, r0
 80005f2:	e7d6      	b.n	80005a2 <__gesf2+0x3a>

080005f4 <__lesf2>:
 80005f4:	b570      	push	{r4, r5, r6, lr}
 80005f6:	0042      	lsls	r2, r0, #1
 80005f8:	0245      	lsls	r5, r0, #9
 80005fa:	024e      	lsls	r6, r1, #9
 80005fc:	004c      	lsls	r4, r1, #1
 80005fe:	0fc3      	lsrs	r3, r0, #31
 8000600:	0a6d      	lsrs	r5, r5, #9
 8000602:	0e12      	lsrs	r2, r2, #24
 8000604:	0a76      	lsrs	r6, r6, #9
 8000606:	0e24      	lsrs	r4, r4, #24
 8000608:	0fc8      	lsrs	r0, r1, #31
 800060a:	2aff      	cmp	r2, #255	; 0xff
 800060c:	d00b      	beq.n	8000626 <__lesf2+0x32>
 800060e:	2cff      	cmp	r4, #255	; 0xff
 8000610:	d00d      	beq.n	800062e <__lesf2+0x3a>
 8000612:	2a00      	cmp	r2, #0
 8000614:	d11f      	bne.n	8000656 <__lesf2+0x62>
 8000616:	2c00      	cmp	r4, #0
 8000618:	d116      	bne.n	8000648 <__lesf2+0x54>
 800061a:	2e00      	cmp	r6, #0
 800061c:	d114      	bne.n	8000648 <__lesf2+0x54>
 800061e:	2000      	movs	r0, #0
 8000620:	2d00      	cmp	r5, #0
 8000622:	d010      	beq.n	8000646 <__lesf2+0x52>
 8000624:	e009      	b.n	800063a <__lesf2+0x46>
 8000626:	2d00      	cmp	r5, #0
 8000628:	d10c      	bne.n	8000644 <__lesf2+0x50>
 800062a:	2cff      	cmp	r4, #255	; 0xff
 800062c:	d113      	bne.n	8000656 <__lesf2+0x62>
 800062e:	2e00      	cmp	r6, #0
 8000630:	d108      	bne.n	8000644 <__lesf2+0x50>
 8000632:	2a00      	cmp	r2, #0
 8000634:	d008      	beq.n	8000648 <__lesf2+0x54>
 8000636:	4283      	cmp	r3, r0
 8000638:	d012      	beq.n	8000660 <__lesf2+0x6c>
 800063a:	2102      	movs	r1, #2
 800063c:	1e58      	subs	r0, r3, #1
 800063e:	4008      	ands	r0, r1
 8000640:	3801      	subs	r0, #1
 8000642:	e000      	b.n	8000646 <__lesf2+0x52>
 8000644:	2002      	movs	r0, #2
 8000646:	bd70      	pop	{r4, r5, r6, pc}
 8000648:	2d00      	cmp	r5, #0
 800064a:	d1f4      	bne.n	8000636 <__lesf2+0x42>
 800064c:	2800      	cmp	r0, #0
 800064e:	d1fa      	bne.n	8000646 <__lesf2+0x52>
 8000650:	2001      	movs	r0, #1
 8000652:	4240      	negs	r0, r0
 8000654:	e7f7      	b.n	8000646 <__lesf2+0x52>
 8000656:	2c00      	cmp	r4, #0
 8000658:	d1ed      	bne.n	8000636 <__lesf2+0x42>
 800065a:	2e00      	cmp	r6, #0
 800065c:	d1eb      	bne.n	8000636 <__lesf2+0x42>
 800065e:	e7ec      	b.n	800063a <__lesf2+0x46>
 8000660:	42a2      	cmp	r2, r4
 8000662:	dc05      	bgt.n	8000670 <__lesf2+0x7c>
 8000664:	dbf2      	blt.n	800064c <__lesf2+0x58>
 8000666:	42b5      	cmp	r5, r6
 8000668:	d802      	bhi.n	8000670 <__lesf2+0x7c>
 800066a:	d3ef      	bcc.n	800064c <__lesf2+0x58>
 800066c:	2000      	movs	r0, #0
 800066e:	e7ea      	b.n	8000646 <__lesf2+0x52>
 8000670:	4243      	negs	r3, r0
 8000672:	4158      	adcs	r0, r3
 8000674:	0040      	lsls	r0, r0, #1
 8000676:	3801      	subs	r0, #1
 8000678:	e7e5      	b.n	8000646 <__lesf2+0x52>
 800067a:	46c0      	nop			; (mov r8, r8)

0800067c <__aeabi_fmul>:
 800067c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800067e:	464f      	mov	r7, r9
 8000680:	4646      	mov	r6, r8
 8000682:	46d6      	mov	lr, sl
 8000684:	0244      	lsls	r4, r0, #9
 8000686:	0045      	lsls	r5, r0, #1
 8000688:	b5c0      	push	{r6, r7, lr}
 800068a:	0a64      	lsrs	r4, r4, #9
 800068c:	1c0f      	adds	r7, r1, #0
 800068e:	0e2d      	lsrs	r5, r5, #24
 8000690:	0fc6      	lsrs	r6, r0, #31
 8000692:	2d00      	cmp	r5, #0
 8000694:	d100      	bne.n	8000698 <__aeabi_fmul+0x1c>
 8000696:	e08d      	b.n	80007b4 <__aeabi_fmul+0x138>
 8000698:	2dff      	cmp	r5, #255	; 0xff
 800069a:	d100      	bne.n	800069e <__aeabi_fmul+0x22>
 800069c:	e092      	b.n	80007c4 <__aeabi_fmul+0x148>
 800069e:	2300      	movs	r3, #0
 80006a0:	2080      	movs	r0, #128	; 0x80
 80006a2:	4699      	mov	r9, r3
 80006a4:	469a      	mov	sl, r3
 80006a6:	00e4      	lsls	r4, r4, #3
 80006a8:	04c0      	lsls	r0, r0, #19
 80006aa:	4304      	orrs	r4, r0
 80006ac:	3d7f      	subs	r5, #127	; 0x7f
 80006ae:	0278      	lsls	r0, r7, #9
 80006b0:	0a43      	lsrs	r3, r0, #9
 80006b2:	4698      	mov	r8, r3
 80006b4:	007b      	lsls	r3, r7, #1
 80006b6:	0e1b      	lsrs	r3, r3, #24
 80006b8:	0fff      	lsrs	r7, r7, #31
 80006ba:	2b00      	cmp	r3, #0
 80006bc:	d100      	bne.n	80006c0 <__aeabi_fmul+0x44>
 80006be:	e070      	b.n	80007a2 <__aeabi_fmul+0x126>
 80006c0:	2bff      	cmp	r3, #255	; 0xff
 80006c2:	d100      	bne.n	80006c6 <__aeabi_fmul+0x4a>
 80006c4:	e086      	b.n	80007d4 <__aeabi_fmul+0x158>
 80006c6:	4642      	mov	r2, r8
 80006c8:	00d0      	lsls	r0, r2, #3
 80006ca:	2280      	movs	r2, #128	; 0x80
 80006cc:	3b7f      	subs	r3, #127	; 0x7f
 80006ce:	18ed      	adds	r5, r5, r3
 80006d0:	2300      	movs	r3, #0
 80006d2:	04d2      	lsls	r2, r2, #19
 80006d4:	4302      	orrs	r2, r0
 80006d6:	4690      	mov	r8, r2
 80006d8:	469c      	mov	ip, r3
 80006da:	0031      	movs	r1, r6
 80006dc:	464b      	mov	r3, r9
 80006de:	4079      	eors	r1, r7
 80006e0:	1c68      	adds	r0, r5, #1
 80006e2:	2b0f      	cmp	r3, #15
 80006e4:	d81c      	bhi.n	8000720 <__aeabi_fmul+0xa4>
 80006e6:	4a76      	ldr	r2, [pc, #472]	; (80008c0 <__aeabi_fmul+0x244>)
 80006e8:	009b      	lsls	r3, r3, #2
 80006ea:	58d3      	ldr	r3, [r2, r3]
 80006ec:	469f      	mov	pc, r3
 80006ee:	0039      	movs	r1, r7
 80006f0:	4644      	mov	r4, r8
 80006f2:	46e2      	mov	sl, ip
 80006f4:	4653      	mov	r3, sl
 80006f6:	2b02      	cmp	r3, #2
 80006f8:	d00f      	beq.n	800071a <__aeabi_fmul+0x9e>
 80006fa:	2b03      	cmp	r3, #3
 80006fc:	d100      	bne.n	8000700 <__aeabi_fmul+0x84>
 80006fe:	e0d7      	b.n	80008b0 <__aeabi_fmul+0x234>
 8000700:	2b01      	cmp	r3, #1
 8000702:	d137      	bne.n	8000774 <__aeabi_fmul+0xf8>
 8000704:	2000      	movs	r0, #0
 8000706:	2400      	movs	r4, #0
 8000708:	05c0      	lsls	r0, r0, #23
 800070a:	4320      	orrs	r0, r4
 800070c:	07c9      	lsls	r1, r1, #31
 800070e:	4308      	orrs	r0, r1
 8000710:	bce0      	pop	{r5, r6, r7}
 8000712:	46ba      	mov	sl, r7
 8000714:	46b1      	mov	r9, r6
 8000716:	46a8      	mov	r8, r5
 8000718:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800071a:	20ff      	movs	r0, #255	; 0xff
 800071c:	2400      	movs	r4, #0
 800071e:	e7f3      	b.n	8000708 <__aeabi_fmul+0x8c>
 8000720:	0c26      	lsrs	r6, r4, #16
 8000722:	0424      	lsls	r4, r4, #16
 8000724:	0c22      	lsrs	r2, r4, #16
 8000726:	4644      	mov	r4, r8
 8000728:	0424      	lsls	r4, r4, #16
 800072a:	0c24      	lsrs	r4, r4, #16
 800072c:	4643      	mov	r3, r8
 800072e:	0027      	movs	r7, r4
 8000730:	0c1b      	lsrs	r3, r3, #16
 8000732:	4357      	muls	r7, r2
 8000734:	4374      	muls	r4, r6
 8000736:	435a      	muls	r2, r3
 8000738:	435e      	muls	r6, r3
 800073a:	1912      	adds	r2, r2, r4
 800073c:	0c3b      	lsrs	r3, r7, #16
 800073e:	189b      	adds	r3, r3, r2
 8000740:	429c      	cmp	r4, r3
 8000742:	d903      	bls.n	800074c <__aeabi_fmul+0xd0>
 8000744:	2280      	movs	r2, #128	; 0x80
 8000746:	0252      	lsls	r2, r2, #9
 8000748:	4694      	mov	ip, r2
 800074a:	4466      	add	r6, ip
 800074c:	043f      	lsls	r7, r7, #16
 800074e:	041a      	lsls	r2, r3, #16
 8000750:	0c3f      	lsrs	r7, r7, #16
 8000752:	19d2      	adds	r2, r2, r7
 8000754:	0194      	lsls	r4, r2, #6
 8000756:	1e67      	subs	r7, r4, #1
 8000758:	41bc      	sbcs	r4, r7
 800075a:	0c1b      	lsrs	r3, r3, #16
 800075c:	0e92      	lsrs	r2, r2, #26
 800075e:	199b      	adds	r3, r3, r6
 8000760:	4314      	orrs	r4, r2
 8000762:	019b      	lsls	r3, r3, #6
 8000764:	431c      	orrs	r4, r3
 8000766:	011b      	lsls	r3, r3, #4
 8000768:	d400      	bmi.n	800076c <__aeabi_fmul+0xf0>
 800076a:	e09b      	b.n	80008a4 <__aeabi_fmul+0x228>
 800076c:	2301      	movs	r3, #1
 800076e:	0862      	lsrs	r2, r4, #1
 8000770:	401c      	ands	r4, r3
 8000772:	4314      	orrs	r4, r2
 8000774:	0002      	movs	r2, r0
 8000776:	327f      	adds	r2, #127	; 0x7f
 8000778:	2a00      	cmp	r2, #0
 800077a:	dd64      	ble.n	8000846 <__aeabi_fmul+0x1ca>
 800077c:	0763      	lsls	r3, r4, #29
 800077e:	d004      	beq.n	800078a <__aeabi_fmul+0x10e>
 8000780:	230f      	movs	r3, #15
 8000782:	4023      	ands	r3, r4
 8000784:	2b04      	cmp	r3, #4
 8000786:	d000      	beq.n	800078a <__aeabi_fmul+0x10e>
 8000788:	3404      	adds	r4, #4
 800078a:	0123      	lsls	r3, r4, #4
 800078c:	d503      	bpl.n	8000796 <__aeabi_fmul+0x11a>
 800078e:	0002      	movs	r2, r0
 8000790:	4b4c      	ldr	r3, [pc, #304]	; (80008c4 <__aeabi_fmul+0x248>)
 8000792:	3280      	adds	r2, #128	; 0x80
 8000794:	401c      	ands	r4, r3
 8000796:	2afe      	cmp	r2, #254	; 0xfe
 8000798:	dcbf      	bgt.n	800071a <__aeabi_fmul+0x9e>
 800079a:	01a4      	lsls	r4, r4, #6
 800079c:	0a64      	lsrs	r4, r4, #9
 800079e:	b2d0      	uxtb	r0, r2
 80007a0:	e7b2      	b.n	8000708 <__aeabi_fmul+0x8c>
 80007a2:	4643      	mov	r3, r8
 80007a4:	2b00      	cmp	r3, #0
 80007a6:	d13d      	bne.n	8000824 <__aeabi_fmul+0x1a8>
 80007a8:	464a      	mov	r2, r9
 80007aa:	3301      	adds	r3, #1
 80007ac:	431a      	orrs	r2, r3
 80007ae:	4691      	mov	r9, r2
 80007b0:	469c      	mov	ip, r3
 80007b2:	e792      	b.n	80006da <__aeabi_fmul+0x5e>
 80007b4:	2c00      	cmp	r4, #0
 80007b6:	d129      	bne.n	800080c <__aeabi_fmul+0x190>
 80007b8:	2304      	movs	r3, #4
 80007ba:	4699      	mov	r9, r3
 80007bc:	3b03      	subs	r3, #3
 80007be:	2500      	movs	r5, #0
 80007c0:	469a      	mov	sl, r3
 80007c2:	e774      	b.n	80006ae <__aeabi_fmul+0x32>
 80007c4:	2c00      	cmp	r4, #0
 80007c6:	d11b      	bne.n	8000800 <__aeabi_fmul+0x184>
 80007c8:	2308      	movs	r3, #8
 80007ca:	4699      	mov	r9, r3
 80007cc:	3b06      	subs	r3, #6
 80007ce:	25ff      	movs	r5, #255	; 0xff
 80007d0:	469a      	mov	sl, r3
 80007d2:	e76c      	b.n	80006ae <__aeabi_fmul+0x32>
 80007d4:	4643      	mov	r3, r8
 80007d6:	35ff      	adds	r5, #255	; 0xff
 80007d8:	2b00      	cmp	r3, #0
 80007da:	d10b      	bne.n	80007f4 <__aeabi_fmul+0x178>
 80007dc:	2302      	movs	r3, #2
 80007de:	464a      	mov	r2, r9
 80007e0:	431a      	orrs	r2, r3
 80007e2:	4691      	mov	r9, r2
 80007e4:	469c      	mov	ip, r3
 80007e6:	e778      	b.n	80006da <__aeabi_fmul+0x5e>
 80007e8:	4653      	mov	r3, sl
 80007ea:	0031      	movs	r1, r6
 80007ec:	2b02      	cmp	r3, #2
 80007ee:	d000      	beq.n	80007f2 <__aeabi_fmul+0x176>
 80007f0:	e783      	b.n	80006fa <__aeabi_fmul+0x7e>
 80007f2:	e792      	b.n	800071a <__aeabi_fmul+0x9e>
 80007f4:	2303      	movs	r3, #3
 80007f6:	464a      	mov	r2, r9
 80007f8:	431a      	orrs	r2, r3
 80007fa:	4691      	mov	r9, r2
 80007fc:	469c      	mov	ip, r3
 80007fe:	e76c      	b.n	80006da <__aeabi_fmul+0x5e>
 8000800:	230c      	movs	r3, #12
 8000802:	4699      	mov	r9, r3
 8000804:	3b09      	subs	r3, #9
 8000806:	25ff      	movs	r5, #255	; 0xff
 8000808:	469a      	mov	sl, r3
 800080a:	e750      	b.n	80006ae <__aeabi_fmul+0x32>
 800080c:	0020      	movs	r0, r4
 800080e:	f001 fed7 	bl	80025c0 <__clzsi2>
 8000812:	2576      	movs	r5, #118	; 0x76
 8000814:	1f43      	subs	r3, r0, #5
 8000816:	409c      	lsls	r4, r3
 8000818:	2300      	movs	r3, #0
 800081a:	426d      	negs	r5, r5
 800081c:	4699      	mov	r9, r3
 800081e:	469a      	mov	sl, r3
 8000820:	1a2d      	subs	r5, r5, r0
 8000822:	e744      	b.n	80006ae <__aeabi_fmul+0x32>
 8000824:	4640      	mov	r0, r8
 8000826:	f001 fecb 	bl	80025c0 <__clzsi2>
 800082a:	4642      	mov	r2, r8
 800082c:	1f43      	subs	r3, r0, #5
 800082e:	409a      	lsls	r2, r3
 8000830:	2300      	movs	r3, #0
 8000832:	1a2d      	subs	r5, r5, r0
 8000834:	4690      	mov	r8, r2
 8000836:	469c      	mov	ip, r3
 8000838:	3d76      	subs	r5, #118	; 0x76
 800083a:	e74e      	b.n	80006da <__aeabi_fmul+0x5e>
 800083c:	2480      	movs	r4, #128	; 0x80
 800083e:	2100      	movs	r1, #0
 8000840:	20ff      	movs	r0, #255	; 0xff
 8000842:	03e4      	lsls	r4, r4, #15
 8000844:	e760      	b.n	8000708 <__aeabi_fmul+0x8c>
 8000846:	2301      	movs	r3, #1
 8000848:	1a9b      	subs	r3, r3, r2
 800084a:	2b1b      	cmp	r3, #27
 800084c:	dd00      	ble.n	8000850 <__aeabi_fmul+0x1d4>
 800084e:	e759      	b.n	8000704 <__aeabi_fmul+0x88>
 8000850:	0022      	movs	r2, r4
 8000852:	309e      	adds	r0, #158	; 0x9e
 8000854:	40da      	lsrs	r2, r3
 8000856:	4084      	lsls	r4, r0
 8000858:	0013      	movs	r3, r2
 800085a:	1e62      	subs	r2, r4, #1
 800085c:	4194      	sbcs	r4, r2
 800085e:	431c      	orrs	r4, r3
 8000860:	0763      	lsls	r3, r4, #29
 8000862:	d004      	beq.n	800086e <__aeabi_fmul+0x1f2>
 8000864:	230f      	movs	r3, #15
 8000866:	4023      	ands	r3, r4
 8000868:	2b04      	cmp	r3, #4
 800086a:	d000      	beq.n	800086e <__aeabi_fmul+0x1f2>
 800086c:	3404      	adds	r4, #4
 800086e:	0163      	lsls	r3, r4, #5
 8000870:	d51a      	bpl.n	80008a8 <__aeabi_fmul+0x22c>
 8000872:	2001      	movs	r0, #1
 8000874:	2400      	movs	r4, #0
 8000876:	e747      	b.n	8000708 <__aeabi_fmul+0x8c>
 8000878:	2080      	movs	r0, #128	; 0x80
 800087a:	03c0      	lsls	r0, r0, #15
 800087c:	4204      	tst	r4, r0
 800087e:	d009      	beq.n	8000894 <__aeabi_fmul+0x218>
 8000880:	4643      	mov	r3, r8
 8000882:	4203      	tst	r3, r0
 8000884:	d106      	bne.n	8000894 <__aeabi_fmul+0x218>
 8000886:	4644      	mov	r4, r8
 8000888:	4304      	orrs	r4, r0
 800088a:	0264      	lsls	r4, r4, #9
 800088c:	0039      	movs	r1, r7
 800088e:	20ff      	movs	r0, #255	; 0xff
 8000890:	0a64      	lsrs	r4, r4, #9
 8000892:	e739      	b.n	8000708 <__aeabi_fmul+0x8c>
 8000894:	2080      	movs	r0, #128	; 0x80
 8000896:	03c0      	lsls	r0, r0, #15
 8000898:	4304      	orrs	r4, r0
 800089a:	0264      	lsls	r4, r4, #9
 800089c:	0031      	movs	r1, r6
 800089e:	20ff      	movs	r0, #255	; 0xff
 80008a0:	0a64      	lsrs	r4, r4, #9
 80008a2:	e731      	b.n	8000708 <__aeabi_fmul+0x8c>
 80008a4:	0028      	movs	r0, r5
 80008a6:	e765      	b.n	8000774 <__aeabi_fmul+0xf8>
 80008a8:	01a4      	lsls	r4, r4, #6
 80008aa:	2000      	movs	r0, #0
 80008ac:	0a64      	lsrs	r4, r4, #9
 80008ae:	e72b      	b.n	8000708 <__aeabi_fmul+0x8c>
 80008b0:	2080      	movs	r0, #128	; 0x80
 80008b2:	03c0      	lsls	r0, r0, #15
 80008b4:	4304      	orrs	r4, r0
 80008b6:	0264      	lsls	r4, r4, #9
 80008b8:	20ff      	movs	r0, #255	; 0xff
 80008ba:	0a64      	lsrs	r4, r4, #9
 80008bc:	e724      	b.n	8000708 <__aeabi_fmul+0x8c>
 80008be:	46c0      	nop			; (mov r8, r8)
 80008c0:	080089d0 	.word	0x080089d0
 80008c4:	f7ffffff 	.word	0xf7ffffff

080008c8 <__aeabi_i2f>:
 80008c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ca:	2800      	cmp	r0, #0
 80008cc:	d013      	beq.n	80008f6 <__aeabi_i2f+0x2e>
 80008ce:	17c3      	asrs	r3, r0, #31
 80008d0:	18c6      	adds	r6, r0, r3
 80008d2:	405e      	eors	r6, r3
 80008d4:	0fc4      	lsrs	r4, r0, #31
 80008d6:	0030      	movs	r0, r6
 80008d8:	f001 fe72 	bl	80025c0 <__clzsi2>
 80008dc:	239e      	movs	r3, #158	; 0x9e
 80008de:	0005      	movs	r5, r0
 80008e0:	1a1b      	subs	r3, r3, r0
 80008e2:	2b96      	cmp	r3, #150	; 0x96
 80008e4:	dc0f      	bgt.n	8000906 <__aeabi_i2f+0x3e>
 80008e6:	2808      	cmp	r0, #8
 80008e8:	dd01      	ble.n	80008ee <__aeabi_i2f+0x26>
 80008ea:	3d08      	subs	r5, #8
 80008ec:	40ae      	lsls	r6, r5
 80008ee:	0276      	lsls	r6, r6, #9
 80008f0:	0a76      	lsrs	r6, r6, #9
 80008f2:	b2d8      	uxtb	r0, r3
 80008f4:	e002      	b.n	80008fc <__aeabi_i2f+0x34>
 80008f6:	2400      	movs	r4, #0
 80008f8:	2000      	movs	r0, #0
 80008fa:	2600      	movs	r6, #0
 80008fc:	05c0      	lsls	r0, r0, #23
 80008fe:	4330      	orrs	r0, r6
 8000900:	07e4      	lsls	r4, r4, #31
 8000902:	4320      	orrs	r0, r4
 8000904:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000906:	2b99      	cmp	r3, #153	; 0x99
 8000908:	dd0c      	ble.n	8000924 <__aeabi_i2f+0x5c>
 800090a:	2205      	movs	r2, #5
 800090c:	0031      	movs	r1, r6
 800090e:	1a12      	subs	r2, r2, r0
 8000910:	40d1      	lsrs	r1, r2
 8000912:	000a      	movs	r2, r1
 8000914:	0001      	movs	r1, r0
 8000916:	0030      	movs	r0, r6
 8000918:	311b      	adds	r1, #27
 800091a:	4088      	lsls	r0, r1
 800091c:	1e41      	subs	r1, r0, #1
 800091e:	4188      	sbcs	r0, r1
 8000920:	4302      	orrs	r2, r0
 8000922:	0016      	movs	r6, r2
 8000924:	2d05      	cmp	r5, #5
 8000926:	dc12      	bgt.n	800094e <__aeabi_i2f+0x86>
 8000928:	0031      	movs	r1, r6
 800092a:	4f0d      	ldr	r7, [pc, #52]	; (8000960 <__aeabi_i2f+0x98>)
 800092c:	4039      	ands	r1, r7
 800092e:	0772      	lsls	r2, r6, #29
 8000930:	d009      	beq.n	8000946 <__aeabi_i2f+0x7e>
 8000932:	200f      	movs	r0, #15
 8000934:	4030      	ands	r0, r6
 8000936:	2804      	cmp	r0, #4
 8000938:	d005      	beq.n	8000946 <__aeabi_i2f+0x7e>
 800093a:	3104      	adds	r1, #4
 800093c:	014a      	lsls	r2, r1, #5
 800093e:	d502      	bpl.n	8000946 <__aeabi_i2f+0x7e>
 8000940:	239f      	movs	r3, #159	; 0x9f
 8000942:	4039      	ands	r1, r7
 8000944:	1b5b      	subs	r3, r3, r5
 8000946:	0189      	lsls	r1, r1, #6
 8000948:	0a4e      	lsrs	r6, r1, #9
 800094a:	b2d8      	uxtb	r0, r3
 800094c:	e7d6      	b.n	80008fc <__aeabi_i2f+0x34>
 800094e:	1f6a      	subs	r2, r5, #5
 8000950:	4096      	lsls	r6, r2
 8000952:	0031      	movs	r1, r6
 8000954:	4f02      	ldr	r7, [pc, #8]	; (8000960 <__aeabi_i2f+0x98>)
 8000956:	4039      	ands	r1, r7
 8000958:	0772      	lsls	r2, r6, #29
 800095a:	d0f4      	beq.n	8000946 <__aeabi_i2f+0x7e>
 800095c:	e7e9      	b.n	8000932 <__aeabi_i2f+0x6a>
 800095e:	46c0      	nop			; (mov r8, r8)
 8000960:	fbffffff 	.word	0xfbffffff

08000964 <__aeabi_dadd>:
 8000964:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000966:	464f      	mov	r7, r9
 8000968:	4646      	mov	r6, r8
 800096a:	46d6      	mov	lr, sl
 800096c:	000d      	movs	r5, r1
 800096e:	0004      	movs	r4, r0
 8000970:	b5c0      	push	{r6, r7, lr}
 8000972:	001f      	movs	r7, r3
 8000974:	0011      	movs	r1, r2
 8000976:	0328      	lsls	r0, r5, #12
 8000978:	0f62      	lsrs	r2, r4, #29
 800097a:	0a40      	lsrs	r0, r0, #9
 800097c:	4310      	orrs	r0, r2
 800097e:	007a      	lsls	r2, r7, #1
 8000980:	0d52      	lsrs	r2, r2, #21
 8000982:	00e3      	lsls	r3, r4, #3
 8000984:	033c      	lsls	r4, r7, #12
 8000986:	4691      	mov	r9, r2
 8000988:	0a64      	lsrs	r4, r4, #9
 800098a:	0ffa      	lsrs	r2, r7, #31
 800098c:	0f4f      	lsrs	r7, r1, #29
 800098e:	006e      	lsls	r6, r5, #1
 8000990:	4327      	orrs	r7, r4
 8000992:	4692      	mov	sl, r2
 8000994:	46b8      	mov	r8, r7
 8000996:	0d76      	lsrs	r6, r6, #21
 8000998:	0fed      	lsrs	r5, r5, #31
 800099a:	00c9      	lsls	r1, r1, #3
 800099c:	4295      	cmp	r5, r2
 800099e:	d100      	bne.n	80009a2 <__aeabi_dadd+0x3e>
 80009a0:	e099      	b.n	8000ad6 <__aeabi_dadd+0x172>
 80009a2:	464c      	mov	r4, r9
 80009a4:	1b34      	subs	r4, r6, r4
 80009a6:	46a4      	mov	ip, r4
 80009a8:	2c00      	cmp	r4, #0
 80009aa:	dc00      	bgt.n	80009ae <__aeabi_dadd+0x4a>
 80009ac:	e07c      	b.n	8000aa8 <__aeabi_dadd+0x144>
 80009ae:	464a      	mov	r2, r9
 80009b0:	2a00      	cmp	r2, #0
 80009b2:	d100      	bne.n	80009b6 <__aeabi_dadd+0x52>
 80009b4:	e0b8      	b.n	8000b28 <__aeabi_dadd+0x1c4>
 80009b6:	4ac5      	ldr	r2, [pc, #788]	; (8000ccc <__aeabi_dadd+0x368>)
 80009b8:	4296      	cmp	r6, r2
 80009ba:	d100      	bne.n	80009be <__aeabi_dadd+0x5a>
 80009bc:	e11c      	b.n	8000bf8 <__aeabi_dadd+0x294>
 80009be:	2280      	movs	r2, #128	; 0x80
 80009c0:	003c      	movs	r4, r7
 80009c2:	0412      	lsls	r2, r2, #16
 80009c4:	4314      	orrs	r4, r2
 80009c6:	46a0      	mov	r8, r4
 80009c8:	4662      	mov	r2, ip
 80009ca:	2a38      	cmp	r2, #56	; 0x38
 80009cc:	dd00      	ble.n	80009d0 <__aeabi_dadd+0x6c>
 80009ce:	e161      	b.n	8000c94 <__aeabi_dadd+0x330>
 80009d0:	2a1f      	cmp	r2, #31
 80009d2:	dd00      	ble.n	80009d6 <__aeabi_dadd+0x72>
 80009d4:	e1cc      	b.n	8000d70 <__aeabi_dadd+0x40c>
 80009d6:	4664      	mov	r4, ip
 80009d8:	2220      	movs	r2, #32
 80009da:	1b12      	subs	r2, r2, r4
 80009dc:	4644      	mov	r4, r8
 80009de:	4094      	lsls	r4, r2
 80009e0:	000f      	movs	r7, r1
 80009e2:	46a1      	mov	r9, r4
 80009e4:	4664      	mov	r4, ip
 80009e6:	4091      	lsls	r1, r2
 80009e8:	40e7      	lsrs	r7, r4
 80009ea:	464c      	mov	r4, r9
 80009ec:	1e4a      	subs	r2, r1, #1
 80009ee:	4191      	sbcs	r1, r2
 80009f0:	433c      	orrs	r4, r7
 80009f2:	4642      	mov	r2, r8
 80009f4:	4321      	orrs	r1, r4
 80009f6:	4664      	mov	r4, ip
 80009f8:	40e2      	lsrs	r2, r4
 80009fa:	1a80      	subs	r0, r0, r2
 80009fc:	1a5c      	subs	r4, r3, r1
 80009fe:	42a3      	cmp	r3, r4
 8000a00:	419b      	sbcs	r3, r3
 8000a02:	425f      	negs	r7, r3
 8000a04:	1bc7      	subs	r7, r0, r7
 8000a06:	023b      	lsls	r3, r7, #8
 8000a08:	d400      	bmi.n	8000a0c <__aeabi_dadd+0xa8>
 8000a0a:	e0d0      	b.n	8000bae <__aeabi_dadd+0x24a>
 8000a0c:	027f      	lsls	r7, r7, #9
 8000a0e:	0a7f      	lsrs	r7, r7, #9
 8000a10:	2f00      	cmp	r7, #0
 8000a12:	d100      	bne.n	8000a16 <__aeabi_dadd+0xb2>
 8000a14:	e0ff      	b.n	8000c16 <__aeabi_dadd+0x2b2>
 8000a16:	0038      	movs	r0, r7
 8000a18:	f001 fdd2 	bl	80025c0 <__clzsi2>
 8000a1c:	0001      	movs	r1, r0
 8000a1e:	3908      	subs	r1, #8
 8000a20:	2320      	movs	r3, #32
 8000a22:	0022      	movs	r2, r4
 8000a24:	1a5b      	subs	r3, r3, r1
 8000a26:	408f      	lsls	r7, r1
 8000a28:	40da      	lsrs	r2, r3
 8000a2a:	408c      	lsls	r4, r1
 8000a2c:	4317      	orrs	r7, r2
 8000a2e:	42b1      	cmp	r1, r6
 8000a30:	da00      	bge.n	8000a34 <__aeabi_dadd+0xd0>
 8000a32:	e0ff      	b.n	8000c34 <__aeabi_dadd+0x2d0>
 8000a34:	1b89      	subs	r1, r1, r6
 8000a36:	1c4b      	adds	r3, r1, #1
 8000a38:	2b1f      	cmp	r3, #31
 8000a3a:	dd00      	ble.n	8000a3e <__aeabi_dadd+0xda>
 8000a3c:	e0a8      	b.n	8000b90 <__aeabi_dadd+0x22c>
 8000a3e:	2220      	movs	r2, #32
 8000a40:	0039      	movs	r1, r7
 8000a42:	1ad2      	subs	r2, r2, r3
 8000a44:	0020      	movs	r0, r4
 8000a46:	4094      	lsls	r4, r2
 8000a48:	4091      	lsls	r1, r2
 8000a4a:	40d8      	lsrs	r0, r3
 8000a4c:	1e62      	subs	r2, r4, #1
 8000a4e:	4194      	sbcs	r4, r2
 8000a50:	40df      	lsrs	r7, r3
 8000a52:	2600      	movs	r6, #0
 8000a54:	4301      	orrs	r1, r0
 8000a56:	430c      	orrs	r4, r1
 8000a58:	0763      	lsls	r3, r4, #29
 8000a5a:	d009      	beq.n	8000a70 <__aeabi_dadd+0x10c>
 8000a5c:	230f      	movs	r3, #15
 8000a5e:	4023      	ands	r3, r4
 8000a60:	2b04      	cmp	r3, #4
 8000a62:	d005      	beq.n	8000a70 <__aeabi_dadd+0x10c>
 8000a64:	1d23      	adds	r3, r4, #4
 8000a66:	42a3      	cmp	r3, r4
 8000a68:	41a4      	sbcs	r4, r4
 8000a6a:	4264      	negs	r4, r4
 8000a6c:	193f      	adds	r7, r7, r4
 8000a6e:	001c      	movs	r4, r3
 8000a70:	023b      	lsls	r3, r7, #8
 8000a72:	d400      	bmi.n	8000a76 <__aeabi_dadd+0x112>
 8000a74:	e09e      	b.n	8000bb4 <__aeabi_dadd+0x250>
 8000a76:	4b95      	ldr	r3, [pc, #596]	; (8000ccc <__aeabi_dadd+0x368>)
 8000a78:	3601      	adds	r6, #1
 8000a7a:	429e      	cmp	r6, r3
 8000a7c:	d100      	bne.n	8000a80 <__aeabi_dadd+0x11c>
 8000a7e:	e0b7      	b.n	8000bf0 <__aeabi_dadd+0x28c>
 8000a80:	4a93      	ldr	r2, [pc, #588]	; (8000cd0 <__aeabi_dadd+0x36c>)
 8000a82:	08e4      	lsrs	r4, r4, #3
 8000a84:	4017      	ands	r7, r2
 8000a86:	077b      	lsls	r3, r7, #29
 8000a88:	0571      	lsls	r1, r6, #21
 8000a8a:	027f      	lsls	r7, r7, #9
 8000a8c:	4323      	orrs	r3, r4
 8000a8e:	0b3f      	lsrs	r7, r7, #12
 8000a90:	0d4a      	lsrs	r2, r1, #21
 8000a92:	0512      	lsls	r2, r2, #20
 8000a94:	433a      	orrs	r2, r7
 8000a96:	07ed      	lsls	r5, r5, #31
 8000a98:	432a      	orrs	r2, r5
 8000a9a:	0018      	movs	r0, r3
 8000a9c:	0011      	movs	r1, r2
 8000a9e:	bce0      	pop	{r5, r6, r7}
 8000aa0:	46ba      	mov	sl, r7
 8000aa2:	46b1      	mov	r9, r6
 8000aa4:	46a8      	mov	r8, r5
 8000aa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000aa8:	2c00      	cmp	r4, #0
 8000aaa:	d04b      	beq.n	8000b44 <__aeabi_dadd+0x1e0>
 8000aac:	464c      	mov	r4, r9
 8000aae:	1ba4      	subs	r4, r4, r6
 8000ab0:	46a4      	mov	ip, r4
 8000ab2:	2e00      	cmp	r6, #0
 8000ab4:	d000      	beq.n	8000ab8 <__aeabi_dadd+0x154>
 8000ab6:	e123      	b.n	8000d00 <__aeabi_dadd+0x39c>
 8000ab8:	0004      	movs	r4, r0
 8000aba:	431c      	orrs	r4, r3
 8000abc:	d100      	bne.n	8000ac0 <__aeabi_dadd+0x15c>
 8000abe:	e1af      	b.n	8000e20 <__aeabi_dadd+0x4bc>
 8000ac0:	4662      	mov	r2, ip
 8000ac2:	1e54      	subs	r4, r2, #1
 8000ac4:	2a01      	cmp	r2, #1
 8000ac6:	d100      	bne.n	8000aca <__aeabi_dadd+0x166>
 8000ac8:	e215      	b.n	8000ef6 <__aeabi_dadd+0x592>
 8000aca:	4d80      	ldr	r5, [pc, #512]	; (8000ccc <__aeabi_dadd+0x368>)
 8000acc:	45ac      	cmp	ip, r5
 8000ace:	d100      	bne.n	8000ad2 <__aeabi_dadd+0x16e>
 8000ad0:	e1c8      	b.n	8000e64 <__aeabi_dadd+0x500>
 8000ad2:	46a4      	mov	ip, r4
 8000ad4:	e11b      	b.n	8000d0e <__aeabi_dadd+0x3aa>
 8000ad6:	464a      	mov	r2, r9
 8000ad8:	1ab2      	subs	r2, r6, r2
 8000ada:	4694      	mov	ip, r2
 8000adc:	2a00      	cmp	r2, #0
 8000ade:	dc00      	bgt.n	8000ae2 <__aeabi_dadd+0x17e>
 8000ae0:	e0ac      	b.n	8000c3c <__aeabi_dadd+0x2d8>
 8000ae2:	464a      	mov	r2, r9
 8000ae4:	2a00      	cmp	r2, #0
 8000ae6:	d043      	beq.n	8000b70 <__aeabi_dadd+0x20c>
 8000ae8:	4a78      	ldr	r2, [pc, #480]	; (8000ccc <__aeabi_dadd+0x368>)
 8000aea:	4296      	cmp	r6, r2
 8000aec:	d100      	bne.n	8000af0 <__aeabi_dadd+0x18c>
 8000aee:	e1af      	b.n	8000e50 <__aeabi_dadd+0x4ec>
 8000af0:	2280      	movs	r2, #128	; 0x80
 8000af2:	003c      	movs	r4, r7
 8000af4:	0412      	lsls	r2, r2, #16
 8000af6:	4314      	orrs	r4, r2
 8000af8:	46a0      	mov	r8, r4
 8000afa:	4662      	mov	r2, ip
 8000afc:	2a38      	cmp	r2, #56	; 0x38
 8000afe:	dc67      	bgt.n	8000bd0 <__aeabi_dadd+0x26c>
 8000b00:	2a1f      	cmp	r2, #31
 8000b02:	dc00      	bgt.n	8000b06 <__aeabi_dadd+0x1a2>
 8000b04:	e15f      	b.n	8000dc6 <__aeabi_dadd+0x462>
 8000b06:	4647      	mov	r7, r8
 8000b08:	3a20      	subs	r2, #32
 8000b0a:	40d7      	lsrs	r7, r2
 8000b0c:	4662      	mov	r2, ip
 8000b0e:	2a20      	cmp	r2, #32
 8000b10:	d005      	beq.n	8000b1e <__aeabi_dadd+0x1ba>
 8000b12:	4664      	mov	r4, ip
 8000b14:	2240      	movs	r2, #64	; 0x40
 8000b16:	1b12      	subs	r2, r2, r4
 8000b18:	4644      	mov	r4, r8
 8000b1a:	4094      	lsls	r4, r2
 8000b1c:	4321      	orrs	r1, r4
 8000b1e:	1e4a      	subs	r2, r1, #1
 8000b20:	4191      	sbcs	r1, r2
 8000b22:	000c      	movs	r4, r1
 8000b24:	433c      	orrs	r4, r7
 8000b26:	e057      	b.n	8000bd8 <__aeabi_dadd+0x274>
 8000b28:	003a      	movs	r2, r7
 8000b2a:	430a      	orrs	r2, r1
 8000b2c:	d100      	bne.n	8000b30 <__aeabi_dadd+0x1cc>
 8000b2e:	e105      	b.n	8000d3c <__aeabi_dadd+0x3d8>
 8000b30:	0022      	movs	r2, r4
 8000b32:	3a01      	subs	r2, #1
 8000b34:	2c01      	cmp	r4, #1
 8000b36:	d100      	bne.n	8000b3a <__aeabi_dadd+0x1d6>
 8000b38:	e182      	b.n	8000e40 <__aeabi_dadd+0x4dc>
 8000b3a:	4c64      	ldr	r4, [pc, #400]	; (8000ccc <__aeabi_dadd+0x368>)
 8000b3c:	45a4      	cmp	ip, r4
 8000b3e:	d05b      	beq.n	8000bf8 <__aeabi_dadd+0x294>
 8000b40:	4694      	mov	ip, r2
 8000b42:	e741      	b.n	80009c8 <__aeabi_dadd+0x64>
 8000b44:	4c63      	ldr	r4, [pc, #396]	; (8000cd4 <__aeabi_dadd+0x370>)
 8000b46:	1c77      	adds	r7, r6, #1
 8000b48:	4227      	tst	r7, r4
 8000b4a:	d000      	beq.n	8000b4e <__aeabi_dadd+0x1ea>
 8000b4c:	e0c4      	b.n	8000cd8 <__aeabi_dadd+0x374>
 8000b4e:	0004      	movs	r4, r0
 8000b50:	431c      	orrs	r4, r3
 8000b52:	2e00      	cmp	r6, #0
 8000b54:	d000      	beq.n	8000b58 <__aeabi_dadd+0x1f4>
 8000b56:	e169      	b.n	8000e2c <__aeabi_dadd+0x4c8>
 8000b58:	2c00      	cmp	r4, #0
 8000b5a:	d100      	bne.n	8000b5e <__aeabi_dadd+0x1fa>
 8000b5c:	e1bf      	b.n	8000ede <__aeabi_dadd+0x57a>
 8000b5e:	4644      	mov	r4, r8
 8000b60:	430c      	orrs	r4, r1
 8000b62:	d000      	beq.n	8000b66 <__aeabi_dadd+0x202>
 8000b64:	e1d0      	b.n	8000f08 <__aeabi_dadd+0x5a4>
 8000b66:	0742      	lsls	r2, r0, #29
 8000b68:	08db      	lsrs	r3, r3, #3
 8000b6a:	4313      	orrs	r3, r2
 8000b6c:	08c0      	lsrs	r0, r0, #3
 8000b6e:	e029      	b.n	8000bc4 <__aeabi_dadd+0x260>
 8000b70:	003a      	movs	r2, r7
 8000b72:	430a      	orrs	r2, r1
 8000b74:	d100      	bne.n	8000b78 <__aeabi_dadd+0x214>
 8000b76:	e170      	b.n	8000e5a <__aeabi_dadd+0x4f6>
 8000b78:	4662      	mov	r2, ip
 8000b7a:	4664      	mov	r4, ip
 8000b7c:	3a01      	subs	r2, #1
 8000b7e:	2c01      	cmp	r4, #1
 8000b80:	d100      	bne.n	8000b84 <__aeabi_dadd+0x220>
 8000b82:	e0e0      	b.n	8000d46 <__aeabi_dadd+0x3e2>
 8000b84:	4c51      	ldr	r4, [pc, #324]	; (8000ccc <__aeabi_dadd+0x368>)
 8000b86:	45a4      	cmp	ip, r4
 8000b88:	d100      	bne.n	8000b8c <__aeabi_dadd+0x228>
 8000b8a:	e161      	b.n	8000e50 <__aeabi_dadd+0x4ec>
 8000b8c:	4694      	mov	ip, r2
 8000b8e:	e7b4      	b.n	8000afa <__aeabi_dadd+0x196>
 8000b90:	003a      	movs	r2, r7
 8000b92:	391f      	subs	r1, #31
 8000b94:	40ca      	lsrs	r2, r1
 8000b96:	0011      	movs	r1, r2
 8000b98:	2b20      	cmp	r3, #32
 8000b9a:	d003      	beq.n	8000ba4 <__aeabi_dadd+0x240>
 8000b9c:	2240      	movs	r2, #64	; 0x40
 8000b9e:	1ad3      	subs	r3, r2, r3
 8000ba0:	409f      	lsls	r7, r3
 8000ba2:	433c      	orrs	r4, r7
 8000ba4:	1e63      	subs	r3, r4, #1
 8000ba6:	419c      	sbcs	r4, r3
 8000ba8:	2700      	movs	r7, #0
 8000baa:	2600      	movs	r6, #0
 8000bac:	430c      	orrs	r4, r1
 8000bae:	0763      	lsls	r3, r4, #29
 8000bb0:	d000      	beq.n	8000bb4 <__aeabi_dadd+0x250>
 8000bb2:	e753      	b.n	8000a5c <__aeabi_dadd+0xf8>
 8000bb4:	46b4      	mov	ip, r6
 8000bb6:	08e4      	lsrs	r4, r4, #3
 8000bb8:	077b      	lsls	r3, r7, #29
 8000bba:	4323      	orrs	r3, r4
 8000bbc:	08f8      	lsrs	r0, r7, #3
 8000bbe:	4a43      	ldr	r2, [pc, #268]	; (8000ccc <__aeabi_dadd+0x368>)
 8000bc0:	4594      	cmp	ip, r2
 8000bc2:	d01d      	beq.n	8000c00 <__aeabi_dadd+0x29c>
 8000bc4:	4662      	mov	r2, ip
 8000bc6:	0307      	lsls	r7, r0, #12
 8000bc8:	0552      	lsls	r2, r2, #21
 8000bca:	0b3f      	lsrs	r7, r7, #12
 8000bcc:	0d52      	lsrs	r2, r2, #21
 8000bce:	e760      	b.n	8000a92 <__aeabi_dadd+0x12e>
 8000bd0:	4644      	mov	r4, r8
 8000bd2:	430c      	orrs	r4, r1
 8000bd4:	1e62      	subs	r2, r4, #1
 8000bd6:	4194      	sbcs	r4, r2
 8000bd8:	18e4      	adds	r4, r4, r3
 8000bda:	429c      	cmp	r4, r3
 8000bdc:	419b      	sbcs	r3, r3
 8000bde:	425f      	negs	r7, r3
 8000be0:	183f      	adds	r7, r7, r0
 8000be2:	023b      	lsls	r3, r7, #8
 8000be4:	d5e3      	bpl.n	8000bae <__aeabi_dadd+0x24a>
 8000be6:	4b39      	ldr	r3, [pc, #228]	; (8000ccc <__aeabi_dadd+0x368>)
 8000be8:	3601      	adds	r6, #1
 8000bea:	429e      	cmp	r6, r3
 8000bec:	d000      	beq.n	8000bf0 <__aeabi_dadd+0x28c>
 8000bee:	e0b5      	b.n	8000d5c <__aeabi_dadd+0x3f8>
 8000bf0:	0032      	movs	r2, r6
 8000bf2:	2700      	movs	r7, #0
 8000bf4:	2300      	movs	r3, #0
 8000bf6:	e74c      	b.n	8000a92 <__aeabi_dadd+0x12e>
 8000bf8:	0742      	lsls	r2, r0, #29
 8000bfa:	08db      	lsrs	r3, r3, #3
 8000bfc:	4313      	orrs	r3, r2
 8000bfe:	08c0      	lsrs	r0, r0, #3
 8000c00:	001a      	movs	r2, r3
 8000c02:	4302      	orrs	r2, r0
 8000c04:	d100      	bne.n	8000c08 <__aeabi_dadd+0x2a4>
 8000c06:	e1e1      	b.n	8000fcc <__aeabi_dadd+0x668>
 8000c08:	2780      	movs	r7, #128	; 0x80
 8000c0a:	033f      	lsls	r7, r7, #12
 8000c0c:	4307      	orrs	r7, r0
 8000c0e:	033f      	lsls	r7, r7, #12
 8000c10:	4a2e      	ldr	r2, [pc, #184]	; (8000ccc <__aeabi_dadd+0x368>)
 8000c12:	0b3f      	lsrs	r7, r7, #12
 8000c14:	e73d      	b.n	8000a92 <__aeabi_dadd+0x12e>
 8000c16:	0020      	movs	r0, r4
 8000c18:	f001 fcd2 	bl	80025c0 <__clzsi2>
 8000c1c:	0001      	movs	r1, r0
 8000c1e:	3118      	adds	r1, #24
 8000c20:	291f      	cmp	r1, #31
 8000c22:	dc00      	bgt.n	8000c26 <__aeabi_dadd+0x2c2>
 8000c24:	e6fc      	b.n	8000a20 <__aeabi_dadd+0xbc>
 8000c26:	3808      	subs	r0, #8
 8000c28:	4084      	lsls	r4, r0
 8000c2a:	0027      	movs	r7, r4
 8000c2c:	2400      	movs	r4, #0
 8000c2e:	42b1      	cmp	r1, r6
 8000c30:	db00      	blt.n	8000c34 <__aeabi_dadd+0x2d0>
 8000c32:	e6ff      	b.n	8000a34 <__aeabi_dadd+0xd0>
 8000c34:	4a26      	ldr	r2, [pc, #152]	; (8000cd0 <__aeabi_dadd+0x36c>)
 8000c36:	1a76      	subs	r6, r6, r1
 8000c38:	4017      	ands	r7, r2
 8000c3a:	e70d      	b.n	8000a58 <__aeabi_dadd+0xf4>
 8000c3c:	2a00      	cmp	r2, #0
 8000c3e:	d02f      	beq.n	8000ca0 <__aeabi_dadd+0x33c>
 8000c40:	464a      	mov	r2, r9
 8000c42:	1b92      	subs	r2, r2, r6
 8000c44:	4694      	mov	ip, r2
 8000c46:	2e00      	cmp	r6, #0
 8000c48:	d100      	bne.n	8000c4c <__aeabi_dadd+0x2e8>
 8000c4a:	e0ad      	b.n	8000da8 <__aeabi_dadd+0x444>
 8000c4c:	4a1f      	ldr	r2, [pc, #124]	; (8000ccc <__aeabi_dadd+0x368>)
 8000c4e:	4591      	cmp	r9, r2
 8000c50:	d100      	bne.n	8000c54 <__aeabi_dadd+0x2f0>
 8000c52:	e10f      	b.n	8000e74 <__aeabi_dadd+0x510>
 8000c54:	2280      	movs	r2, #128	; 0x80
 8000c56:	0412      	lsls	r2, r2, #16
 8000c58:	4310      	orrs	r0, r2
 8000c5a:	4662      	mov	r2, ip
 8000c5c:	2a38      	cmp	r2, #56	; 0x38
 8000c5e:	dd00      	ble.n	8000c62 <__aeabi_dadd+0x2fe>
 8000c60:	e10f      	b.n	8000e82 <__aeabi_dadd+0x51e>
 8000c62:	2a1f      	cmp	r2, #31
 8000c64:	dd00      	ble.n	8000c68 <__aeabi_dadd+0x304>
 8000c66:	e180      	b.n	8000f6a <__aeabi_dadd+0x606>
 8000c68:	4664      	mov	r4, ip
 8000c6a:	2220      	movs	r2, #32
 8000c6c:	001e      	movs	r6, r3
 8000c6e:	1b12      	subs	r2, r2, r4
 8000c70:	4667      	mov	r7, ip
 8000c72:	0004      	movs	r4, r0
 8000c74:	4093      	lsls	r3, r2
 8000c76:	4094      	lsls	r4, r2
 8000c78:	40fe      	lsrs	r6, r7
 8000c7a:	1e5a      	subs	r2, r3, #1
 8000c7c:	4193      	sbcs	r3, r2
 8000c7e:	40f8      	lsrs	r0, r7
 8000c80:	4334      	orrs	r4, r6
 8000c82:	431c      	orrs	r4, r3
 8000c84:	4480      	add	r8, r0
 8000c86:	1864      	adds	r4, r4, r1
 8000c88:	428c      	cmp	r4, r1
 8000c8a:	41bf      	sbcs	r7, r7
 8000c8c:	427f      	negs	r7, r7
 8000c8e:	464e      	mov	r6, r9
 8000c90:	4447      	add	r7, r8
 8000c92:	e7a6      	b.n	8000be2 <__aeabi_dadd+0x27e>
 8000c94:	4642      	mov	r2, r8
 8000c96:	430a      	orrs	r2, r1
 8000c98:	0011      	movs	r1, r2
 8000c9a:	1e4a      	subs	r2, r1, #1
 8000c9c:	4191      	sbcs	r1, r2
 8000c9e:	e6ad      	b.n	80009fc <__aeabi_dadd+0x98>
 8000ca0:	4c0c      	ldr	r4, [pc, #48]	; (8000cd4 <__aeabi_dadd+0x370>)
 8000ca2:	1c72      	adds	r2, r6, #1
 8000ca4:	4222      	tst	r2, r4
 8000ca6:	d000      	beq.n	8000caa <__aeabi_dadd+0x346>
 8000ca8:	e0a1      	b.n	8000dee <__aeabi_dadd+0x48a>
 8000caa:	0002      	movs	r2, r0
 8000cac:	431a      	orrs	r2, r3
 8000cae:	2e00      	cmp	r6, #0
 8000cb0:	d000      	beq.n	8000cb4 <__aeabi_dadd+0x350>
 8000cb2:	e0fa      	b.n	8000eaa <__aeabi_dadd+0x546>
 8000cb4:	2a00      	cmp	r2, #0
 8000cb6:	d100      	bne.n	8000cba <__aeabi_dadd+0x356>
 8000cb8:	e145      	b.n	8000f46 <__aeabi_dadd+0x5e2>
 8000cba:	003a      	movs	r2, r7
 8000cbc:	430a      	orrs	r2, r1
 8000cbe:	d000      	beq.n	8000cc2 <__aeabi_dadd+0x35e>
 8000cc0:	e146      	b.n	8000f50 <__aeabi_dadd+0x5ec>
 8000cc2:	0742      	lsls	r2, r0, #29
 8000cc4:	08db      	lsrs	r3, r3, #3
 8000cc6:	4313      	orrs	r3, r2
 8000cc8:	08c0      	lsrs	r0, r0, #3
 8000cca:	e77b      	b.n	8000bc4 <__aeabi_dadd+0x260>
 8000ccc:	000007ff 	.word	0x000007ff
 8000cd0:	ff7fffff 	.word	0xff7fffff
 8000cd4:	000007fe 	.word	0x000007fe
 8000cd8:	4647      	mov	r7, r8
 8000cda:	1a5c      	subs	r4, r3, r1
 8000cdc:	1bc2      	subs	r2, r0, r7
 8000cde:	42a3      	cmp	r3, r4
 8000ce0:	41bf      	sbcs	r7, r7
 8000ce2:	427f      	negs	r7, r7
 8000ce4:	46b9      	mov	r9, r7
 8000ce6:	0017      	movs	r7, r2
 8000ce8:	464a      	mov	r2, r9
 8000cea:	1abf      	subs	r7, r7, r2
 8000cec:	023a      	lsls	r2, r7, #8
 8000cee:	d500      	bpl.n	8000cf2 <__aeabi_dadd+0x38e>
 8000cf0:	e08d      	b.n	8000e0e <__aeabi_dadd+0x4aa>
 8000cf2:	0023      	movs	r3, r4
 8000cf4:	433b      	orrs	r3, r7
 8000cf6:	d000      	beq.n	8000cfa <__aeabi_dadd+0x396>
 8000cf8:	e68a      	b.n	8000a10 <__aeabi_dadd+0xac>
 8000cfa:	2000      	movs	r0, #0
 8000cfc:	2500      	movs	r5, #0
 8000cfe:	e761      	b.n	8000bc4 <__aeabi_dadd+0x260>
 8000d00:	4cb4      	ldr	r4, [pc, #720]	; (8000fd4 <__aeabi_dadd+0x670>)
 8000d02:	45a1      	cmp	r9, r4
 8000d04:	d100      	bne.n	8000d08 <__aeabi_dadd+0x3a4>
 8000d06:	e0ad      	b.n	8000e64 <__aeabi_dadd+0x500>
 8000d08:	2480      	movs	r4, #128	; 0x80
 8000d0a:	0424      	lsls	r4, r4, #16
 8000d0c:	4320      	orrs	r0, r4
 8000d0e:	4664      	mov	r4, ip
 8000d10:	2c38      	cmp	r4, #56	; 0x38
 8000d12:	dc3d      	bgt.n	8000d90 <__aeabi_dadd+0x42c>
 8000d14:	4662      	mov	r2, ip
 8000d16:	2c1f      	cmp	r4, #31
 8000d18:	dd00      	ble.n	8000d1c <__aeabi_dadd+0x3b8>
 8000d1a:	e0b7      	b.n	8000e8c <__aeabi_dadd+0x528>
 8000d1c:	2520      	movs	r5, #32
 8000d1e:	001e      	movs	r6, r3
 8000d20:	1b2d      	subs	r5, r5, r4
 8000d22:	0004      	movs	r4, r0
 8000d24:	40ab      	lsls	r3, r5
 8000d26:	40ac      	lsls	r4, r5
 8000d28:	40d6      	lsrs	r6, r2
 8000d2a:	40d0      	lsrs	r0, r2
 8000d2c:	4642      	mov	r2, r8
 8000d2e:	1e5d      	subs	r5, r3, #1
 8000d30:	41ab      	sbcs	r3, r5
 8000d32:	4334      	orrs	r4, r6
 8000d34:	1a12      	subs	r2, r2, r0
 8000d36:	4690      	mov	r8, r2
 8000d38:	4323      	orrs	r3, r4
 8000d3a:	e02c      	b.n	8000d96 <__aeabi_dadd+0x432>
 8000d3c:	0742      	lsls	r2, r0, #29
 8000d3e:	08db      	lsrs	r3, r3, #3
 8000d40:	4313      	orrs	r3, r2
 8000d42:	08c0      	lsrs	r0, r0, #3
 8000d44:	e73b      	b.n	8000bbe <__aeabi_dadd+0x25a>
 8000d46:	185c      	adds	r4, r3, r1
 8000d48:	429c      	cmp	r4, r3
 8000d4a:	419b      	sbcs	r3, r3
 8000d4c:	4440      	add	r0, r8
 8000d4e:	425b      	negs	r3, r3
 8000d50:	18c7      	adds	r7, r0, r3
 8000d52:	2601      	movs	r6, #1
 8000d54:	023b      	lsls	r3, r7, #8
 8000d56:	d400      	bmi.n	8000d5a <__aeabi_dadd+0x3f6>
 8000d58:	e729      	b.n	8000bae <__aeabi_dadd+0x24a>
 8000d5a:	2602      	movs	r6, #2
 8000d5c:	4a9e      	ldr	r2, [pc, #632]	; (8000fd8 <__aeabi_dadd+0x674>)
 8000d5e:	0863      	lsrs	r3, r4, #1
 8000d60:	4017      	ands	r7, r2
 8000d62:	2201      	movs	r2, #1
 8000d64:	4014      	ands	r4, r2
 8000d66:	431c      	orrs	r4, r3
 8000d68:	07fb      	lsls	r3, r7, #31
 8000d6a:	431c      	orrs	r4, r3
 8000d6c:	087f      	lsrs	r7, r7, #1
 8000d6e:	e673      	b.n	8000a58 <__aeabi_dadd+0xf4>
 8000d70:	4644      	mov	r4, r8
 8000d72:	3a20      	subs	r2, #32
 8000d74:	40d4      	lsrs	r4, r2
 8000d76:	4662      	mov	r2, ip
 8000d78:	2a20      	cmp	r2, #32
 8000d7a:	d005      	beq.n	8000d88 <__aeabi_dadd+0x424>
 8000d7c:	4667      	mov	r7, ip
 8000d7e:	2240      	movs	r2, #64	; 0x40
 8000d80:	1bd2      	subs	r2, r2, r7
 8000d82:	4647      	mov	r7, r8
 8000d84:	4097      	lsls	r7, r2
 8000d86:	4339      	orrs	r1, r7
 8000d88:	1e4a      	subs	r2, r1, #1
 8000d8a:	4191      	sbcs	r1, r2
 8000d8c:	4321      	orrs	r1, r4
 8000d8e:	e635      	b.n	80009fc <__aeabi_dadd+0x98>
 8000d90:	4303      	orrs	r3, r0
 8000d92:	1e58      	subs	r0, r3, #1
 8000d94:	4183      	sbcs	r3, r0
 8000d96:	1acc      	subs	r4, r1, r3
 8000d98:	42a1      	cmp	r1, r4
 8000d9a:	41bf      	sbcs	r7, r7
 8000d9c:	4643      	mov	r3, r8
 8000d9e:	427f      	negs	r7, r7
 8000da0:	4655      	mov	r5, sl
 8000da2:	464e      	mov	r6, r9
 8000da4:	1bdf      	subs	r7, r3, r7
 8000da6:	e62e      	b.n	8000a06 <__aeabi_dadd+0xa2>
 8000da8:	0002      	movs	r2, r0
 8000daa:	431a      	orrs	r2, r3
 8000dac:	d100      	bne.n	8000db0 <__aeabi_dadd+0x44c>
 8000dae:	e0bd      	b.n	8000f2c <__aeabi_dadd+0x5c8>
 8000db0:	4662      	mov	r2, ip
 8000db2:	4664      	mov	r4, ip
 8000db4:	3a01      	subs	r2, #1
 8000db6:	2c01      	cmp	r4, #1
 8000db8:	d100      	bne.n	8000dbc <__aeabi_dadd+0x458>
 8000dba:	e0e5      	b.n	8000f88 <__aeabi_dadd+0x624>
 8000dbc:	4c85      	ldr	r4, [pc, #532]	; (8000fd4 <__aeabi_dadd+0x670>)
 8000dbe:	45a4      	cmp	ip, r4
 8000dc0:	d058      	beq.n	8000e74 <__aeabi_dadd+0x510>
 8000dc2:	4694      	mov	ip, r2
 8000dc4:	e749      	b.n	8000c5a <__aeabi_dadd+0x2f6>
 8000dc6:	4664      	mov	r4, ip
 8000dc8:	2220      	movs	r2, #32
 8000dca:	1b12      	subs	r2, r2, r4
 8000dcc:	4644      	mov	r4, r8
 8000dce:	4094      	lsls	r4, r2
 8000dd0:	000f      	movs	r7, r1
 8000dd2:	46a1      	mov	r9, r4
 8000dd4:	4664      	mov	r4, ip
 8000dd6:	4091      	lsls	r1, r2
 8000dd8:	40e7      	lsrs	r7, r4
 8000dda:	464c      	mov	r4, r9
 8000ddc:	1e4a      	subs	r2, r1, #1
 8000dde:	4191      	sbcs	r1, r2
 8000de0:	433c      	orrs	r4, r7
 8000de2:	4642      	mov	r2, r8
 8000de4:	430c      	orrs	r4, r1
 8000de6:	4661      	mov	r1, ip
 8000de8:	40ca      	lsrs	r2, r1
 8000dea:	1880      	adds	r0, r0, r2
 8000dec:	e6f4      	b.n	8000bd8 <__aeabi_dadd+0x274>
 8000dee:	4c79      	ldr	r4, [pc, #484]	; (8000fd4 <__aeabi_dadd+0x670>)
 8000df0:	42a2      	cmp	r2, r4
 8000df2:	d100      	bne.n	8000df6 <__aeabi_dadd+0x492>
 8000df4:	e6fd      	b.n	8000bf2 <__aeabi_dadd+0x28e>
 8000df6:	1859      	adds	r1, r3, r1
 8000df8:	4299      	cmp	r1, r3
 8000dfa:	419b      	sbcs	r3, r3
 8000dfc:	4440      	add	r0, r8
 8000dfe:	425f      	negs	r7, r3
 8000e00:	19c7      	adds	r7, r0, r7
 8000e02:	07fc      	lsls	r4, r7, #31
 8000e04:	0849      	lsrs	r1, r1, #1
 8000e06:	0016      	movs	r6, r2
 8000e08:	430c      	orrs	r4, r1
 8000e0a:	087f      	lsrs	r7, r7, #1
 8000e0c:	e6cf      	b.n	8000bae <__aeabi_dadd+0x24a>
 8000e0e:	1acc      	subs	r4, r1, r3
 8000e10:	42a1      	cmp	r1, r4
 8000e12:	41bf      	sbcs	r7, r7
 8000e14:	4643      	mov	r3, r8
 8000e16:	427f      	negs	r7, r7
 8000e18:	1a18      	subs	r0, r3, r0
 8000e1a:	4655      	mov	r5, sl
 8000e1c:	1bc7      	subs	r7, r0, r7
 8000e1e:	e5f7      	b.n	8000a10 <__aeabi_dadd+0xac>
 8000e20:	08c9      	lsrs	r1, r1, #3
 8000e22:	077b      	lsls	r3, r7, #29
 8000e24:	4655      	mov	r5, sl
 8000e26:	430b      	orrs	r3, r1
 8000e28:	08f8      	lsrs	r0, r7, #3
 8000e2a:	e6c8      	b.n	8000bbe <__aeabi_dadd+0x25a>
 8000e2c:	2c00      	cmp	r4, #0
 8000e2e:	d000      	beq.n	8000e32 <__aeabi_dadd+0x4ce>
 8000e30:	e081      	b.n	8000f36 <__aeabi_dadd+0x5d2>
 8000e32:	4643      	mov	r3, r8
 8000e34:	430b      	orrs	r3, r1
 8000e36:	d115      	bne.n	8000e64 <__aeabi_dadd+0x500>
 8000e38:	2080      	movs	r0, #128	; 0x80
 8000e3a:	2500      	movs	r5, #0
 8000e3c:	0300      	lsls	r0, r0, #12
 8000e3e:	e6e3      	b.n	8000c08 <__aeabi_dadd+0x2a4>
 8000e40:	1a5c      	subs	r4, r3, r1
 8000e42:	42a3      	cmp	r3, r4
 8000e44:	419b      	sbcs	r3, r3
 8000e46:	1bc7      	subs	r7, r0, r7
 8000e48:	425b      	negs	r3, r3
 8000e4a:	2601      	movs	r6, #1
 8000e4c:	1aff      	subs	r7, r7, r3
 8000e4e:	e5da      	b.n	8000a06 <__aeabi_dadd+0xa2>
 8000e50:	0742      	lsls	r2, r0, #29
 8000e52:	08db      	lsrs	r3, r3, #3
 8000e54:	4313      	orrs	r3, r2
 8000e56:	08c0      	lsrs	r0, r0, #3
 8000e58:	e6d2      	b.n	8000c00 <__aeabi_dadd+0x29c>
 8000e5a:	0742      	lsls	r2, r0, #29
 8000e5c:	08db      	lsrs	r3, r3, #3
 8000e5e:	4313      	orrs	r3, r2
 8000e60:	08c0      	lsrs	r0, r0, #3
 8000e62:	e6ac      	b.n	8000bbe <__aeabi_dadd+0x25a>
 8000e64:	4643      	mov	r3, r8
 8000e66:	4642      	mov	r2, r8
 8000e68:	08c9      	lsrs	r1, r1, #3
 8000e6a:	075b      	lsls	r3, r3, #29
 8000e6c:	4655      	mov	r5, sl
 8000e6e:	430b      	orrs	r3, r1
 8000e70:	08d0      	lsrs	r0, r2, #3
 8000e72:	e6c5      	b.n	8000c00 <__aeabi_dadd+0x29c>
 8000e74:	4643      	mov	r3, r8
 8000e76:	4642      	mov	r2, r8
 8000e78:	075b      	lsls	r3, r3, #29
 8000e7a:	08c9      	lsrs	r1, r1, #3
 8000e7c:	430b      	orrs	r3, r1
 8000e7e:	08d0      	lsrs	r0, r2, #3
 8000e80:	e6be      	b.n	8000c00 <__aeabi_dadd+0x29c>
 8000e82:	4303      	orrs	r3, r0
 8000e84:	001c      	movs	r4, r3
 8000e86:	1e63      	subs	r3, r4, #1
 8000e88:	419c      	sbcs	r4, r3
 8000e8a:	e6fc      	b.n	8000c86 <__aeabi_dadd+0x322>
 8000e8c:	0002      	movs	r2, r0
 8000e8e:	3c20      	subs	r4, #32
 8000e90:	40e2      	lsrs	r2, r4
 8000e92:	0014      	movs	r4, r2
 8000e94:	4662      	mov	r2, ip
 8000e96:	2a20      	cmp	r2, #32
 8000e98:	d003      	beq.n	8000ea2 <__aeabi_dadd+0x53e>
 8000e9a:	2540      	movs	r5, #64	; 0x40
 8000e9c:	1aad      	subs	r5, r5, r2
 8000e9e:	40a8      	lsls	r0, r5
 8000ea0:	4303      	orrs	r3, r0
 8000ea2:	1e58      	subs	r0, r3, #1
 8000ea4:	4183      	sbcs	r3, r0
 8000ea6:	4323      	orrs	r3, r4
 8000ea8:	e775      	b.n	8000d96 <__aeabi_dadd+0x432>
 8000eaa:	2a00      	cmp	r2, #0
 8000eac:	d0e2      	beq.n	8000e74 <__aeabi_dadd+0x510>
 8000eae:	003a      	movs	r2, r7
 8000eb0:	430a      	orrs	r2, r1
 8000eb2:	d0cd      	beq.n	8000e50 <__aeabi_dadd+0x4ec>
 8000eb4:	0742      	lsls	r2, r0, #29
 8000eb6:	08db      	lsrs	r3, r3, #3
 8000eb8:	4313      	orrs	r3, r2
 8000eba:	2280      	movs	r2, #128	; 0x80
 8000ebc:	08c0      	lsrs	r0, r0, #3
 8000ebe:	0312      	lsls	r2, r2, #12
 8000ec0:	4210      	tst	r0, r2
 8000ec2:	d006      	beq.n	8000ed2 <__aeabi_dadd+0x56e>
 8000ec4:	08fc      	lsrs	r4, r7, #3
 8000ec6:	4214      	tst	r4, r2
 8000ec8:	d103      	bne.n	8000ed2 <__aeabi_dadd+0x56e>
 8000eca:	0020      	movs	r0, r4
 8000ecc:	08cb      	lsrs	r3, r1, #3
 8000ece:	077a      	lsls	r2, r7, #29
 8000ed0:	4313      	orrs	r3, r2
 8000ed2:	0f5a      	lsrs	r2, r3, #29
 8000ed4:	00db      	lsls	r3, r3, #3
 8000ed6:	0752      	lsls	r2, r2, #29
 8000ed8:	08db      	lsrs	r3, r3, #3
 8000eda:	4313      	orrs	r3, r2
 8000edc:	e690      	b.n	8000c00 <__aeabi_dadd+0x29c>
 8000ede:	4643      	mov	r3, r8
 8000ee0:	430b      	orrs	r3, r1
 8000ee2:	d100      	bne.n	8000ee6 <__aeabi_dadd+0x582>
 8000ee4:	e709      	b.n	8000cfa <__aeabi_dadd+0x396>
 8000ee6:	4643      	mov	r3, r8
 8000ee8:	4642      	mov	r2, r8
 8000eea:	08c9      	lsrs	r1, r1, #3
 8000eec:	075b      	lsls	r3, r3, #29
 8000eee:	4655      	mov	r5, sl
 8000ef0:	430b      	orrs	r3, r1
 8000ef2:	08d0      	lsrs	r0, r2, #3
 8000ef4:	e666      	b.n	8000bc4 <__aeabi_dadd+0x260>
 8000ef6:	1acc      	subs	r4, r1, r3
 8000ef8:	42a1      	cmp	r1, r4
 8000efa:	4189      	sbcs	r1, r1
 8000efc:	1a3f      	subs	r7, r7, r0
 8000efe:	4249      	negs	r1, r1
 8000f00:	4655      	mov	r5, sl
 8000f02:	2601      	movs	r6, #1
 8000f04:	1a7f      	subs	r7, r7, r1
 8000f06:	e57e      	b.n	8000a06 <__aeabi_dadd+0xa2>
 8000f08:	4642      	mov	r2, r8
 8000f0a:	1a5c      	subs	r4, r3, r1
 8000f0c:	1a87      	subs	r7, r0, r2
 8000f0e:	42a3      	cmp	r3, r4
 8000f10:	4192      	sbcs	r2, r2
 8000f12:	4252      	negs	r2, r2
 8000f14:	1abf      	subs	r7, r7, r2
 8000f16:	023a      	lsls	r2, r7, #8
 8000f18:	d53d      	bpl.n	8000f96 <__aeabi_dadd+0x632>
 8000f1a:	1acc      	subs	r4, r1, r3
 8000f1c:	42a1      	cmp	r1, r4
 8000f1e:	4189      	sbcs	r1, r1
 8000f20:	4643      	mov	r3, r8
 8000f22:	4249      	negs	r1, r1
 8000f24:	1a1f      	subs	r7, r3, r0
 8000f26:	4655      	mov	r5, sl
 8000f28:	1a7f      	subs	r7, r7, r1
 8000f2a:	e595      	b.n	8000a58 <__aeabi_dadd+0xf4>
 8000f2c:	077b      	lsls	r3, r7, #29
 8000f2e:	08c9      	lsrs	r1, r1, #3
 8000f30:	430b      	orrs	r3, r1
 8000f32:	08f8      	lsrs	r0, r7, #3
 8000f34:	e643      	b.n	8000bbe <__aeabi_dadd+0x25a>
 8000f36:	4644      	mov	r4, r8
 8000f38:	08db      	lsrs	r3, r3, #3
 8000f3a:	430c      	orrs	r4, r1
 8000f3c:	d130      	bne.n	8000fa0 <__aeabi_dadd+0x63c>
 8000f3e:	0742      	lsls	r2, r0, #29
 8000f40:	4313      	orrs	r3, r2
 8000f42:	08c0      	lsrs	r0, r0, #3
 8000f44:	e65c      	b.n	8000c00 <__aeabi_dadd+0x29c>
 8000f46:	077b      	lsls	r3, r7, #29
 8000f48:	08c9      	lsrs	r1, r1, #3
 8000f4a:	430b      	orrs	r3, r1
 8000f4c:	08f8      	lsrs	r0, r7, #3
 8000f4e:	e639      	b.n	8000bc4 <__aeabi_dadd+0x260>
 8000f50:	185c      	adds	r4, r3, r1
 8000f52:	429c      	cmp	r4, r3
 8000f54:	419b      	sbcs	r3, r3
 8000f56:	4440      	add	r0, r8
 8000f58:	425b      	negs	r3, r3
 8000f5a:	18c7      	adds	r7, r0, r3
 8000f5c:	023b      	lsls	r3, r7, #8
 8000f5e:	d400      	bmi.n	8000f62 <__aeabi_dadd+0x5fe>
 8000f60:	e625      	b.n	8000bae <__aeabi_dadd+0x24a>
 8000f62:	4b1d      	ldr	r3, [pc, #116]	; (8000fd8 <__aeabi_dadd+0x674>)
 8000f64:	2601      	movs	r6, #1
 8000f66:	401f      	ands	r7, r3
 8000f68:	e621      	b.n	8000bae <__aeabi_dadd+0x24a>
 8000f6a:	0004      	movs	r4, r0
 8000f6c:	3a20      	subs	r2, #32
 8000f6e:	40d4      	lsrs	r4, r2
 8000f70:	4662      	mov	r2, ip
 8000f72:	2a20      	cmp	r2, #32
 8000f74:	d004      	beq.n	8000f80 <__aeabi_dadd+0x61c>
 8000f76:	2240      	movs	r2, #64	; 0x40
 8000f78:	4666      	mov	r6, ip
 8000f7a:	1b92      	subs	r2, r2, r6
 8000f7c:	4090      	lsls	r0, r2
 8000f7e:	4303      	orrs	r3, r0
 8000f80:	1e5a      	subs	r2, r3, #1
 8000f82:	4193      	sbcs	r3, r2
 8000f84:	431c      	orrs	r4, r3
 8000f86:	e67e      	b.n	8000c86 <__aeabi_dadd+0x322>
 8000f88:	185c      	adds	r4, r3, r1
 8000f8a:	428c      	cmp	r4, r1
 8000f8c:	4189      	sbcs	r1, r1
 8000f8e:	4440      	add	r0, r8
 8000f90:	4249      	negs	r1, r1
 8000f92:	1847      	adds	r7, r0, r1
 8000f94:	e6dd      	b.n	8000d52 <__aeabi_dadd+0x3ee>
 8000f96:	0023      	movs	r3, r4
 8000f98:	433b      	orrs	r3, r7
 8000f9a:	d100      	bne.n	8000f9e <__aeabi_dadd+0x63a>
 8000f9c:	e6ad      	b.n	8000cfa <__aeabi_dadd+0x396>
 8000f9e:	e606      	b.n	8000bae <__aeabi_dadd+0x24a>
 8000fa0:	0744      	lsls	r4, r0, #29
 8000fa2:	4323      	orrs	r3, r4
 8000fa4:	2480      	movs	r4, #128	; 0x80
 8000fa6:	08c0      	lsrs	r0, r0, #3
 8000fa8:	0324      	lsls	r4, r4, #12
 8000faa:	4220      	tst	r0, r4
 8000fac:	d008      	beq.n	8000fc0 <__aeabi_dadd+0x65c>
 8000fae:	4642      	mov	r2, r8
 8000fb0:	08d6      	lsrs	r6, r2, #3
 8000fb2:	4226      	tst	r6, r4
 8000fb4:	d104      	bne.n	8000fc0 <__aeabi_dadd+0x65c>
 8000fb6:	4655      	mov	r5, sl
 8000fb8:	0030      	movs	r0, r6
 8000fba:	08cb      	lsrs	r3, r1, #3
 8000fbc:	0751      	lsls	r1, r2, #29
 8000fbe:	430b      	orrs	r3, r1
 8000fc0:	0f5a      	lsrs	r2, r3, #29
 8000fc2:	00db      	lsls	r3, r3, #3
 8000fc4:	08db      	lsrs	r3, r3, #3
 8000fc6:	0752      	lsls	r2, r2, #29
 8000fc8:	4313      	orrs	r3, r2
 8000fca:	e619      	b.n	8000c00 <__aeabi_dadd+0x29c>
 8000fcc:	2300      	movs	r3, #0
 8000fce:	4a01      	ldr	r2, [pc, #4]	; (8000fd4 <__aeabi_dadd+0x670>)
 8000fd0:	001f      	movs	r7, r3
 8000fd2:	e55e      	b.n	8000a92 <__aeabi_dadd+0x12e>
 8000fd4:	000007ff 	.word	0x000007ff
 8000fd8:	ff7fffff 	.word	0xff7fffff

08000fdc <__aeabi_ddiv>:
 8000fdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000fde:	4657      	mov	r7, sl
 8000fe0:	464e      	mov	r6, r9
 8000fe2:	4645      	mov	r5, r8
 8000fe4:	46de      	mov	lr, fp
 8000fe6:	b5e0      	push	{r5, r6, r7, lr}
 8000fe8:	4681      	mov	r9, r0
 8000fea:	0005      	movs	r5, r0
 8000fec:	030c      	lsls	r4, r1, #12
 8000fee:	0048      	lsls	r0, r1, #1
 8000ff0:	4692      	mov	sl, r2
 8000ff2:	001f      	movs	r7, r3
 8000ff4:	b085      	sub	sp, #20
 8000ff6:	0b24      	lsrs	r4, r4, #12
 8000ff8:	0d40      	lsrs	r0, r0, #21
 8000ffa:	0fce      	lsrs	r6, r1, #31
 8000ffc:	2800      	cmp	r0, #0
 8000ffe:	d100      	bne.n	8001002 <__aeabi_ddiv+0x26>
 8001000:	e156      	b.n	80012b0 <__aeabi_ddiv+0x2d4>
 8001002:	4bd4      	ldr	r3, [pc, #848]	; (8001354 <__aeabi_ddiv+0x378>)
 8001004:	4298      	cmp	r0, r3
 8001006:	d100      	bne.n	800100a <__aeabi_ddiv+0x2e>
 8001008:	e172      	b.n	80012f0 <__aeabi_ddiv+0x314>
 800100a:	0f6b      	lsrs	r3, r5, #29
 800100c:	00e4      	lsls	r4, r4, #3
 800100e:	431c      	orrs	r4, r3
 8001010:	2380      	movs	r3, #128	; 0x80
 8001012:	041b      	lsls	r3, r3, #16
 8001014:	4323      	orrs	r3, r4
 8001016:	4698      	mov	r8, r3
 8001018:	4bcf      	ldr	r3, [pc, #828]	; (8001358 <__aeabi_ddiv+0x37c>)
 800101a:	00ed      	lsls	r5, r5, #3
 800101c:	469b      	mov	fp, r3
 800101e:	2300      	movs	r3, #0
 8001020:	4699      	mov	r9, r3
 8001022:	4483      	add	fp, r0
 8001024:	9300      	str	r3, [sp, #0]
 8001026:	033c      	lsls	r4, r7, #12
 8001028:	007b      	lsls	r3, r7, #1
 800102a:	4650      	mov	r0, sl
 800102c:	0b24      	lsrs	r4, r4, #12
 800102e:	0d5b      	lsrs	r3, r3, #21
 8001030:	0fff      	lsrs	r7, r7, #31
 8001032:	2b00      	cmp	r3, #0
 8001034:	d100      	bne.n	8001038 <__aeabi_ddiv+0x5c>
 8001036:	e11f      	b.n	8001278 <__aeabi_ddiv+0x29c>
 8001038:	4ac6      	ldr	r2, [pc, #792]	; (8001354 <__aeabi_ddiv+0x378>)
 800103a:	4293      	cmp	r3, r2
 800103c:	d100      	bne.n	8001040 <__aeabi_ddiv+0x64>
 800103e:	e162      	b.n	8001306 <__aeabi_ddiv+0x32a>
 8001040:	49c5      	ldr	r1, [pc, #788]	; (8001358 <__aeabi_ddiv+0x37c>)
 8001042:	0f42      	lsrs	r2, r0, #29
 8001044:	468c      	mov	ip, r1
 8001046:	00e4      	lsls	r4, r4, #3
 8001048:	4659      	mov	r1, fp
 800104a:	4314      	orrs	r4, r2
 800104c:	2280      	movs	r2, #128	; 0x80
 800104e:	4463      	add	r3, ip
 8001050:	0412      	lsls	r2, r2, #16
 8001052:	1acb      	subs	r3, r1, r3
 8001054:	4314      	orrs	r4, r2
 8001056:	469b      	mov	fp, r3
 8001058:	00c2      	lsls	r2, r0, #3
 800105a:	2000      	movs	r0, #0
 800105c:	0033      	movs	r3, r6
 800105e:	407b      	eors	r3, r7
 8001060:	469a      	mov	sl, r3
 8001062:	464b      	mov	r3, r9
 8001064:	2b0f      	cmp	r3, #15
 8001066:	d827      	bhi.n	80010b8 <__aeabi_ddiv+0xdc>
 8001068:	49bc      	ldr	r1, [pc, #752]	; (800135c <__aeabi_ddiv+0x380>)
 800106a:	009b      	lsls	r3, r3, #2
 800106c:	58cb      	ldr	r3, [r1, r3]
 800106e:	469f      	mov	pc, r3
 8001070:	46b2      	mov	sl, r6
 8001072:	9b00      	ldr	r3, [sp, #0]
 8001074:	2b02      	cmp	r3, #2
 8001076:	d016      	beq.n	80010a6 <__aeabi_ddiv+0xca>
 8001078:	2b03      	cmp	r3, #3
 800107a:	d100      	bne.n	800107e <__aeabi_ddiv+0xa2>
 800107c:	e28e      	b.n	800159c <__aeabi_ddiv+0x5c0>
 800107e:	2b01      	cmp	r3, #1
 8001080:	d000      	beq.n	8001084 <__aeabi_ddiv+0xa8>
 8001082:	e0d9      	b.n	8001238 <__aeabi_ddiv+0x25c>
 8001084:	2300      	movs	r3, #0
 8001086:	2400      	movs	r4, #0
 8001088:	2500      	movs	r5, #0
 800108a:	4652      	mov	r2, sl
 800108c:	051b      	lsls	r3, r3, #20
 800108e:	4323      	orrs	r3, r4
 8001090:	07d2      	lsls	r2, r2, #31
 8001092:	4313      	orrs	r3, r2
 8001094:	0028      	movs	r0, r5
 8001096:	0019      	movs	r1, r3
 8001098:	b005      	add	sp, #20
 800109a:	bcf0      	pop	{r4, r5, r6, r7}
 800109c:	46bb      	mov	fp, r7
 800109e:	46b2      	mov	sl, r6
 80010a0:	46a9      	mov	r9, r5
 80010a2:	46a0      	mov	r8, r4
 80010a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80010a6:	2400      	movs	r4, #0
 80010a8:	2500      	movs	r5, #0
 80010aa:	4baa      	ldr	r3, [pc, #680]	; (8001354 <__aeabi_ddiv+0x378>)
 80010ac:	e7ed      	b.n	800108a <__aeabi_ddiv+0xae>
 80010ae:	46ba      	mov	sl, r7
 80010b0:	46a0      	mov	r8, r4
 80010b2:	0015      	movs	r5, r2
 80010b4:	9000      	str	r0, [sp, #0]
 80010b6:	e7dc      	b.n	8001072 <__aeabi_ddiv+0x96>
 80010b8:	4544      	cmp	r4, r8
 80010ba:	d200      	bcs.n	80010be <__aeabi_ddiv+0xe2>
 80010bc:	e1c7      	b.n	800144e <__aeabi_ddiv+0x472>
 80010be:	d100      	bne.n	80010c2 <__aeabi_ddiv+0xe6>
 80010c0:	e1c2      	b.n	8001448 <__aeabi_ddiv+0x46c>
 80010c2:	2301      	movs	r3, #1
 80010c4:	425b      	negs	r3, r3
 80010c6:	469c      	mov	ip, r3
 80010c8:	002e      	movs	r6, r5
 80010ca:	4640      	mov	r0, r8
 80010cc:	2500      	movs	r5, #0
 80010ce:	44e3      	add	fp, ip
 80010d0:	0223      	lsls	r3, r4, #8
 80010d2:	0e14      	lsrs	r4, r2, #24
 80010d4:	431c      	orrs	r4, r3
 80010d6:	0c1b      	lsrs	r3, r3, #16
 80010d8:	4699      	mov	r9, r3
 80010da:	0423      	lsls	r3, r4, #16
 80010dc:	0c1f      	lsrs	r7, r3, #16
 80010de:	0212      	lsls	r2, r2, #8
 80010e0:	4649      	mov	r1, r9
 80010e2:	9200      	str	r2, [sp, #0]
 80010e4:	9701      	str	r7, [sp, #4]
 80010e6:	f7ff f8b1 	bl	800024c <__aeabi_uidivmod>
 80010ea:	0002      	movs	r2, r0
 80010ec:	437a      	muls	r2, r7
 80010ee:	040b      	lsls	r3, r1, #16
 80010f0:	0c31      	lsrs	r1, r6, #16
 80010f2:	4680      	mov	r8, r0
 80010f4:	4319      	orrs	r1, r3
 80010f6:	428a      	cmp	r2, r1
 80010f8:	d907      	bls.n	800110a <__aeabi_ddiv+0x12e>
 80010fa:	2301      	movs	r3, #1
 80010fc:	425b      	negs	r3, r3
 80010fe:	469c      	mov	ip, r3
 8001100:	1909      	adds	r1, r1, r4
 8001102:	44e0      	add	r8, ip
 8001104:	428c      	cmp	r4, r1
 8001106:	d800      	bhi.n	800110a <__aeabi_ddiv+0x12e>
 8001108:	e207      	b.n	800151a <__aeabi_ddiv+0x53e>
 800110a:	1a88      	subs	r0, r1, r2
 800110c:	4649      	mov	r1, r9
 800110e:	f7ff f89d 	bl	800024c <__aeabi_uidivmod>
 8001112:	0409      	lsls	r1, r1, #16
 8001114:	468c      	mov	ip, r1
 8001116:	0431      	lsls	r1, r6, #16
 8001118:	4666      	mov	r6, ip
 800111a:	9a01      	ldr	r2, [sp, #4]
 800111c:	0c09      	lsrs	r1, r1, #16
 800111e:	4342      	muls	r2, r0
 8001120:	0003      	movs	r3, r0
 8001122:	4331      	orrs	r1, r6
 8001124:	428a      	cmp	r2, r1
 8001126:	d904      	bls.n	8001132 <__aeabi_ddiv+0x156>
 8001128:	1909      	adds	r1, r1, r4
 800112a:	3b01      	subs	r3, #1
 800112c:	428c      	cmp	r4, r1
 800112e:	d800      	bhi.n	8001132 <__aeabi_ddiv+0x156>
 8001130:	e1ed      	b.n	800150e <__aeabi_ddiv+0x532>
 8001132:	1a88      	subs	r0, r1, r2
 8001134:	4642      	mov	r2, r8
 8001136:	0412      	lsls	r2, r2, #16
 8001138:	431a      	orrs	r2, r3
 800113a:	4690      	mov	r8, r2
 800113c:	4641      	mov	r1, r8
 800113e:	9b00      	ldr	r3, [sp, #0]
 8001140:	040e      	lsls	r6, r1, #16
 8001142:	0c1b      	lsrs	r3, r3, #16
 8001144:	001f      	movs	r7, r3
 8001146:	9302      	str	r3, [sp, #8]
 8001148:	9b00      	ldr	r3, [sp, #0]
 800114a:	0c36      	lsrs	r6, r6, #16
 800114c:	041b      	lsls	r3, r3, #16
 800114e:	0c19      	lsrs	r1, r3, #16
 8001150:	000b      	movs	r3, r1
 8001152:	4373      	muls	r3, r6
 8001154:	0c12      	lsrs	r2, r2, #16
 8001156:	437e      	muls	r6, r7
 8001158:	9103      	str	r1, [sp, #12]
 800115a:	4351      	muls	r1, r2
 800115c:	437a      	muls	r2, r7
 800115e:	0c1f      	lsrs	r7, r3, #16
 8001160:	46bc      	mov	ip, r7
 8001162:	1876      	adds	r6, r6, r1
 8001164:	4466      	add	r6, ip
 8001166:	42b1      	cmp	r1, r6
 8001168:	d903      	bls.n	8001172 <__aeabi_ddiv+0x196>
 800116a:	2180      	movs	r1, #128	; 0x80
 800116c:	0249      	lsls	r1, r1, #9
 800116e:	468c      	mov	ip, r1
 8001170:	4462      	add	r2, ip
 8001172:	0c31      	lsrs	r1, r6, #16
 8001174:	188a      	adds	r2, r1, r2
 8001176:	0431      	lsls	r1, r6, #16
 8001178:	041e      	lsls	r6, r3, #16
 800117a:	0c36      	lsrs	r6, r6, #16
 800117c:	198e      	adds	r6, r1, r6
 800117e:	4290      	cmp	r0, r2
 8001180:	d302      	bcc.n	8001188 <__aeabi_ddiv+0x1ac>
 8001182:	d112      	bne.n	80011aa <__aeabi_ddiv+0x1ce>
 8001184:	42b5      	cmp	r5, r6
 8001186:	d210      	bcs.n	80011aa <__aeabi_ddiv+0x1ce>
 8001188:	4643      	mov	r3, r8
 800118a:	1e59      	subs	r1, r3, #1
 800118c:	9b00      	ldr	r3, [sp, #0]
 800118e:	469c      	mov	ip, r3
 8001190:	4465      	add	r5, ip
 8001192:	001f      	movs	r7, r3
 8001194:	429d      	cmp	r5, r3
 8001196:	419b      	sbcs	r3, r3
 8001198:	425b      	negs	r3, r3
 800119a:	191b      	adds	r3, r3, r4
 800119c:	18c0      	adds	r0, r0, r3
 800119e:	4284      	cmp	r4, r0
 80011a0:	d200      	bcs.n	80011a4 <__aeabi_ddiv+0x1c8>
 80011a2:	e1a0      	b.n	80014e6 <__aeabi_ddiv+0x50a>
 80011a4:	d100      	bne.n	80011a8 <__aeabi_ddiv+0x1cc>
 80011a6:	e19b      	b.n	80014e0 <__aeabi_ddiv+0x504>
 80011a8:	4688      	mov	r8, r1
 80011aa:	1bae      	subs	r6, r5, r6
 80011ac:	42b5      	cmp	r5, r6
 80011ae:	41ad      	sbcs	r5, r5
 80011b0:	1a80      	subs	r0, r0, r2
 80011b2:	426d      	negs	r5, r5
 80011b4:	1b40      	subs	r0, r0, r5
 80011b6:	4284      	cmp	r4, r0
 80011b8:	d100      	bne.n	80011bc <__aeabi_ddiv+0x1e0>
 80011ba:	e1d5      	b.n	8001568 <__aeabi_ddiv+0x58c>
 80011bc:	4649      	mov	r1, r9
 80011be:	f7ff f845 	bl	800024c <__aeabi_uidivmod>
 80011c2:	9a01      	ldr	r2, [sp, #4]
 80011c4:	040b      	lsls	r3, r1, #16
 80011c6:	4342      	muls	r2, r0
 80011c8:	0c31      	lsrs	r1, r6, #16
 80011ca:	0005      	movs	r5, r0
 80011cc:	4319      	orrs	r1, r3
 80011ce:	428a      	cmp	r2, r1
 80011d0:	d900      	bls.n	80011d4 <__aeabi_ddiv+0x1f8>
 80011d2:	e16c      	b.n	80014ae <__aeabi_ddiv+0x4d2>
 80011d4:	1a88      	subs	r0, r1, r2
 80011d6:	4649      	mov	r1, r9
 80011d8:	f7ff f838 	bl	800024c <__aeabi_uidivmod>
 80011dc:	9a01      	ldr	r2, [sp, #4]
 80011de:	0436      	lsls	r6, r6, #16
 80011e0:	4342      	muls	r2, r0
 80011e2:	0409      	lsls	r1, r1, #16
 80011e4:	0c36      	lsrs	r6, r6, #16
 80011e6:	0003      	movs	r3, r0
 80011e8:	430e      	orrs	r6, r1
 80011ea:	42b2      	cmp	r2, r6
 80011ec:	d900      	bls.n	80011f0 <__aeabi_ddiv+0x214>
 80011ee:	e153      	b.n	8001498 <__aeabi_ddiv+0x4bc>
 80011f0:	9803      	ldr	r0, [sp, #12]
 80011f2:	1ab6      	subs	r6, r6, r2
 80011f4:	0002      	movs	r2, r0
 80011f6:	042d      	lsls	r5, r5, #16
 80011f8:	431d      	orrs	r5, r3
 80011fa:	9f02      	ldr	r7, [sp, #8]
 80011fc:	042b      	lsls	r3, r5, #16
 80011fe:	0c1b      	lsrs	r3, r3, #16
 8001200:	435a      	muls	r2, r3
 8001202:	437b      	muls	r3, r7
 8001204:	469c      	mov	ip, r3
 8001206:	0c29      	lsrs	r1, r5, #16
 8001208:	4348      	muls	r0, r1
 800120a:	0c13      	lsrs	r3, r2, #16
 800120c:	4484      	add	ip, r0
 800120e:	4463      	add	r3, ip
 8001210:	4379      	muls	r1, r7
 8001212:	4298      	cmp	r0, r3
 8001214:	d903      	bls.n	800121e <__aeabi_ddiv+0x242>
 8001216:	2080      	movs	r0, #128	; 0x80
 8001218:	0240      	lsls	r0, r0, #9
 800121a:	4684      	mov	ip, r0
 800121c:	4461      	add	r1, ip
 800121e:	0c18      	lsrs	r0, r3, #16
 8001220:	0412      	lsls	r2, r2, #16
 8001222:	041b      	lsls	r3, r3, #16
 8001224:	0c12      	lsrs	r2, r2, #16
 8001226:	1841      	adds	r1, r0, r1
 8001228:	189b      	adds	r3, r3, r2
 800122a:	428e      	cmp	r6, r1
 800122c:	d200      	bcs.n	8001230 <__aeabi_ddiv+0x254>
 800122e:	e0ff      	b.n	8001430 <__aeabi_ddiv+0x454>
 8001230:	d100      	bne.n	8001234 <__aeabi_ddiv+0x258>
 8001232:	e0fa      	b.n	800142a <__aeabi_ddiv+0x44e>
 8001234:	2301      	movs	r3, #1
 8001236:	431d      	orrs	r5, r3
 8001238:	4a49      	ldr	r2, [pc, #292]	; (8001360 <__aeabi_ddiv+0x384>)
 800123a:	445a      	add	r2, fp
 800123c:	2a00      	cmp	r2, #0
 800123e:	dc00      	bgt.n	8001242 <__aeabi_ddiv+0x266>
 8001240:	e0aa      	b.n	8001398 <__aeabi_ddiv+0x3bc>
 8001242:	076b      	lsls	r3, r5, #29
 8001244:	d000      	beq.n	8001248 <__aeabi_ddiv+0x26c>
 8001246:	e13d      	b.n	80014c4 <__aeabi_ddiv+0x4e8>
 8001248:	08ed      	lsrs	r5, r5, #3
 800124a:	4643      	mov	r3, r8
 800124c:	01db      	lsls	r3, r3, #7
 800124e:	d506      	bpl.n	800125e <__aeabi_ddiv+0x282>
 8001250:	4642      	mov	r2, r8
 8001252:	4b44      	ldr	r3, [pc, #272]	; (8001364 <__aeabi_ddiv+0x388>)
 8001254:	401a      	ands	r2, r3
 8001256:	4690      	mov	r8, r2
 8001258:	2280      	movs	r2, #128	; 0x80
 800125a:	00d2      	lsls	r2, r2, #3
 800125c:	445a      	add	r2, fp
 800125e:	4b42      	ldr	r3, [pc, #264]	; (8001368 <__aeabi_ddiv+0x38c>)
 8001260:	429a      	cmp	r2, r3
 8001262:	dd00      	ble.n	8001266 <__aeabi_ddiv+0x28a>
 8001264:	e71f      	b.n	80010a6 <__aeabi_ddiv+0xca>
 8001266:	4643      	mov	r3, r8
 8001268:	075b      	lsls	r3, r3, #29
 800126a:	431d      	orrs	r5, r3
 800126c:	4643      	mov	r3, r8
 800126e:	0552      	lsls	r2, r2, #21
 8001270:	025c      	lsls	r4, r3, #9
 8001272:	0b24      	lsrs	r4, r4, #12
 8001274:	0d53      	lsrs	r3, r2, #21
 8001276:	e708      	b.n	800108a <__aeabi_ddiv+0xae>
 8001278:	4652      	mov	r2, sl
 800127a:	4322      	orrs	r2, r4
 800127c:	d100      	bne.n	8001280 <__aeabi_ddiv+0x2a4>
 800127e:	e07b      	b.n	8001378 <__aeabi_ddiv+0x39c>
 8001280:	2c00      	cmp	r4, #0
 8001282:	d100      	bne.n	8001286 <__aeabi_ddiv+0x2aa>
 8001284:	e0fa      	b.n	800147c <__aeabi_ddiv+0x4a0>
 8001286:	0020      	movs	r0, r4
 8001288:	f001 f99a 	bl	80025c0 <__clzsi2>
 800128c:	0002      	movs	r2, r0
 800128e:	3a0b      	subs	r2, #11
 8001290:	231d      	movs	r3, #29
 8001292:	0001      	movs	r1, r0
 8001294:	1a9b      	subs	r3, r3, r2
 8001296:	4652      	mov	r2, sl
 8001298:	3908      	subs	r1, #8
 800129a:	40da      	lsrs	r2, r3
 800129c:	408c      	lsls	r4, r1
 800129e:	4314      	orrs	r4, r2
 80012a0:	4652      	mov	r2, sl
 80012a2:	408a      	lsls	r2, r1
 80012a4:	4b31      	ldr	r3, [pc, #196]	; (800136c <__aeabi_ddiv+0x390>)
 80012a6:	4458      	add	r0, fp
 80012a8:	469b      	mov	fp, r3
 80012aa:	4483      	add	fp, r0
 80012ac:	2000      	movs	r0, #0
 80012ae:	e6d5      	b.n	800105c <__aeabi_ddiv+0x80>
 80012b0:	464b      	mov	r3, r9
 80012b2:	4323      	orrs	r3, r4
 80012b4:	4698      	mov	r8, r3
 80012b6:	d044      	beq.n	8001342 <__aeabi_ddiv+0x366>
 80012b8:	2c00      	cmp	r4, #0
 80012ba:	d100      	bne.n	80012be <__aeabi_ddiv+0x2e2>
 80012bc:	e0ce      	b.n	800145c <__aeabi_ddiv+0x480>
 80012be:	0020      	movs	r0, r4
 80012c0:	f001 f97e 	bl	80025c0 <__clzsi2>
 80012c4:	0001      	movs	r1, r0
 80012c6:	0002      	movs	r2, r0
 80012c8:	390b      	subs	r1, #11
 80012ca:	231d      	movs	r3, #29
 80012cc:	1a5b      	subs	r3, r3, r1
 80012ce:	4649      	mov	r1, r9
 80012d0:	0010      	movs	r0, r2
 80012d2:	40d9      	lsrs	r1, r3
 80012d4:	3808      	subs	r0, #8
 80012d6:	4084      	lsls	r4, r0
 80012d8:	000b      	movs	r3, r1
 80012da:	464d      	mov	r5, r9
 80012dc:	4323      	orrs	r3, r4
 80012de:	4698      	mov	r8, r3
 80012e0:	4085      	lsls	r5, r0
 80012e2:	4823      	ldr	r0, [pc, #140]	; (8001370 <__aeabi_ddiv+0x394>)
 80012e4:	1a83      	subs	r3, r0, r2
 80012e6:	469b      	mov	fp, r3
 80012e8:	2300      	movs	r3, #0
 80012ea:	4699      	mov	r9, r3
 80012ec:	9300      	str	r3, [sp, #0]
 80012ee:	e69a      	b.n	8001026 <__aeabi_ddiv+0x4a>
 80012f0:	464b      	mov	r3, r9
 80012f2:	4323      	orrs	r3, r4
 80012f4:	4698      	mov	r8, r3
 80012f6:	d11d      	bne.n	8001334 <__aeabi_ddiv+0x358>
 80012f8:	2308      	movs	r3, #8
 80012fa:	4699      	mov	r9, r3
 80012fc:	3b06      	subs	r3, #6
 80012fe:	2500      	movs	r5, #0
 8001300:	4683      	mov	fp, r0
 8001302:	9300      	str	r3, [sp, #0]
 8001304:	e68f      	b.n	8001026 <__aeabi_ddiv+0x4a>
 8001306:	4652      	mov	r2, sl
 8001308:	4322      	orrs	r2, r4
 800130a:	d109      	bne.n	8001320 <__aeabi_ddiv+0x344>
 800130c:	2302      	movs	r3, #2
 800130e:	4649      	mov	r1, r9
 8001310:	4319      	orrs	r1, r3
 8001312:	4b18      	ldr	r3, [pc, #96]	; (8001374 <__aeabi_ddiv+0x398>)
 8001314:	4689      	mov	r9, r1
 8001316:	469c      	mov	ip, r3
 8001318:	2400      	movs	r4, #0
 800131a:	2002      	movs	r0, #2
 800131c:	44e3      	add	fp, ip
 800131e:	e69d      	b.n	800105c <__aeabi_ddiv+0x80>
 8001320:	2303      	movs	r3, #3
 8001322:	464a      	mov	r2, r9
 8001324:	431a      	orrs	r2, r3
 8001326:	4b13      	ldr	r3, [pc, #76]	; (8001374 <__aeabi_ddiv+0x398>)
 8001328:	4691      	mov	r9, r2
 800132a:	469c      	mov	ip, r3
 800132c:	4652      	mov	r2, sl
 800132e:	2003      	movs	r0, #3
 8001330:	44e3      	add	fp, ip
 8001332:	e693      	b.n	800105c <__aeabi_ddiv+0x80>
 8001334:	230c      	movs	r3, #12
 8001336:	4699      	mov	r9, r3
 8001338:	3b09      	subs	r3, #9
 800133a:	46a0      	mov	r8, r4
 800133c:	4683      	mov	fp, r0
 800133e:	9300      	str	r3, [sp, #0]
 8001340:	e671      	b.n	8001026 <__aeabi_ddiv+0x4a>
 8001342:	2304      	movs	r3, #4
 8001344:	4699      	mov	r9, r3
 8001346:	2300      	movs	r3, #0
 8001348:	469b      	mov	fp, r3
 800134a:	3301      	adds	r3, #1
 800134c:	2500      	movs	r5, #0
 800134e:	9300      	str	r3, [sp, #0]
 8001350:	e669      	b.n	8001026 <__aeabi_ddiv+0x4a>
 8001352:	46c0      	nop			; (mov r8, r8)
 8001354:	000007ff 	.word	0x000007ff
 8001358:	fffffc01 	.word	0xfffffc01
 800135c:	08008a10 	.word	0x08008a10
 8001360:	000003ff 	.word	0x000003ff
 8001364:	feffffff 	.word	0xfeffffff
 8001368:	000007fe 	.word	0x000007fe
 800136c:	000003f3 	.word	0x000003f3
 8001370:	fffffc0d 	.word	0xfffffc0d
 8001374:	fffff801 	.word	0xfffff801
 8001378:	4649      	mov	r1, r9
 800137a:	2301      	movs	r3, #1
 800137c:	4319      	orrs	r1, r3
 800137e:	4689      	mov	r9, r1
 8001380:	2400      	movs	r4, #0
 8001382:	2001      	movs	r0, #1
 8001384:	e66a      	b.n	800105c <__aeabi_ddiv+0x80>
 8001386:	2300      	movs	r3, #0
 8001388:	2480      	movs	r4, #128	; 0x80
 800138a:	469a      	mov	sl, r3
 800138c:	2500      	movs	r5, #0
 800138e:	4b8a      	ldr	r3, [pc, #552]	; (80015b8 <__aeabi_ddiv+0x5dc>)
 8001390:	0324      	lsls	r4, r4, #12
 8001392:	e67a      	b.n	800108a <__aeabi_ddiv+0xae>
 8001394:	2501      	movs	r5, #1
 8001396:	426d      	negs	r5, r5
 8001398:	2301      	movs	r3, #1
 800139a:	1a9b      	subs	r3, r3, r2
 800139c:	2b38      	cmp	r3, #56	; 0x38
 800139e:	dd00      	ble.n	80013a2 <__aeabi_ddiv+0x3c6>
 80013a0:	e670      	b.n	8001084 <__aeabi_ddiv+0xa8>
 80013a2:	2b1f      	cmp	r3, #31
 80013a4:	dc00      	bgt.n	80013a8 <__aeabi_ddiv+0x3cc>
 80013a6:	e0bf      	b.n	8001528 <__aeabi_ddiv+0x54c>
 80013a8:	211f      	movs	r1, #31
 80013aa:	4249      	negs	r1, r1
 80013ac:	1a8a      	subs	r2, r1, r2
 80013ae:	4641      	mov	r1, r8
 80013b0:	40d1      	lsrs	r1, r2
 80013b2:	000a      	movs	r2, r1
 80013b4:	2b20      	cmp	r3, #32
 80013b6:	d004      	beq.n	80013c2 <__aeabi_ddiv+0x3e6>
 80013b8:	4641      	mov	r1, r8
 80013ba:	4b80      	ldr	r3, [pc, #512]	; (80015bc <__aeabi_ddiv+0x5e0>)
 80013bc:	445b      	add	r3, fp
 80013be:	4099      	lsls	r1, r3
 80013c0:	430d      	orrs	r5, r1
 80013c2:	1e6b      	subs	r3, r5, #1
 80013c4:	419d      	sbcs	r5, r3
 80013c6:	2307      	movs	r3, #7
 80013c8:	432a      	orrs	r2, r5
 80013ca:	001d      	movs	r5, r3
 80013cc:	2400      	movs	r4, #0
 80013ce:	4015      	ands	r5, r2
 80013d0:	4213      	tst	r3, r2
 80013d2:	d100      	bne.n	80013d6 <__aeabi_ddiv+0x3fa>
 80013d4:	e0d4      	b.n	8001580 <__aeabi_ddiv+0x5a4>
 80013d6:	210f      	movs	r1, #15
 80013d8:	2300      	movs	r3, #0
 80013da:	4011      	ands	r1, r2
 80013dc:	2904      	cmp	r1, #4
 80013de:	d100      	bne.n	80013e2 <__aeabi_ddiv+0x406>
 80013e0:	e0cb      	b.n	800157a <__aeabi_ddiv+0x59e>
 80013e2:	1d11      	adds	r1, r2, #4
 80013e4:	4291      	cmp	r1, r2
 80013e6:	4192      	sbcs	r2, r2
 80013e8:	4252      	negs	r2, r2
 80013ea:	189b      	adds	r3, r3, r2
 80013ec:	000a      	movs	r2, r1
 80013ee:	0219      	lsls	r1, r3, #8
 80013f0:	d400      	bmi.n	80013f4 <__aeabi_ddiv+0x418>
 80013f2:	e0c2      	b.n	800157a <__aeabi_ddiv+0x59e>
 80013f4:	2301      	movs	r3, #1
 80013f6:	2400      	movs	r4, #0
 80013f8:	2500      	movs	r5, #0
 80013fa:	e646      	b.n	800108a <__aeabi_ddiv+0xae>
 80013fc:	2380      	movs	r3, #128	; 0x80
 80013fe:	4641      	mov	r1, r8
 8001400:	031b      	lsls	r3, r3, #12
 8001402:	4219      	tst	r1, r3
 8001404:	d008      	beq.n	8001418 <__aeabi_ddiv+0x43c>
 8001406:	421c      	tst	r4, r3
 8001408:	d106      	bne.n	8001418 <__aeabi_ddiv+0x43c>
 800140a:	431c      	orrs	r4, r3
 800140c:	0324      	lsls	r4, r4, #12
 800140e:	46ba      	mov	sl, r7
 8001410:	0015      	movs	r5, r2
 8001412:	4b69      	ldr	r3, [pc, #420]	; (80015b8 <__aeabi_ddiv+0x5dc>)
 8001414:	0b24      	lsrs	r4, r4, #12
 8001416:	e638      	b.n	800108a <__aeabi_ddiv+0xae>
 8001418:	2480      	movs	r4, #128	; 0x80
 800141a:	4643      	mov	r3, r8
 800141c:	0324      	lsls	r4, r4, #12
 800141e:	431c      	orrs	r4, r3
 8001420:	0324      	lsls	r4, r4, #12
 8001422:	46b2      	mov	sl, r6
 8001424:	4b64      	ldr	r3, [pc, #400]	; (80015b8 <__aeabi_ddiv+0x5dc>)
 8001426:	0b24      	lsrs	r4, r4, #12
 8001428:	e62f      	b.n	800108a <__aeabi_ddiv+0xae>
 800142a:	2b00      	cmp	r3, #0
 800142c:	d100      	bne.n	8001430 <__aeabi_ddiv+0x454>
 800142e:	e703      	b.n	8001238 <__aeabi_ddiv+0x25c>
 8001430:	19a6      	adds	r6, r4, r6
 8001432:	1e68      	subs	r0, r5, #1
 8001434:	42a6      	cmp	r6, r4
 8001436:	d200      	bcs.n	800143a <__aeabi_ddiv+0x45e>
 8001438:	e08d      	b.n	8001556 <__aeabi_ddiv+0x57a>
 800143a:	428e      	cmp	r6, r1
 800143c:	d200      	bcs.n	8001440 <__aeabi_ddiv+0x464>
 800143e:	e0a3      	b.n	8001588 <__aeabi_ddiv+0x5ac>
 8001440:	d100      	bne.n	8001444 <__aeabi_ddiv+0x468>
 8001442:	e0b3      	b.n	80015ac <__aeabi_ddiv+0x5d0>
 8001444:	0005      	movs	r5, r0
 8001446:	e6f5      	b.n	8001234 <__aeabi_ddiv+0x258>
 8001448:	42aa      	cmp	r2, r5
 800144a:	d900      	bls.n	800144e <__aeabi_ddiv+0x472>
 800144c:	e639      	b.n	80010c2 <__aeabi_ddiv+0xe6>
 800144e:	4643      	mov	r3, r8
 8001450:	07de      	lsls	r6, r3, #31
 8001452:	0858      	lsrs	r0, r3, #1
 8001454:	086b      	lsrs	r3, r5, #1
 8001456:	431e      	orrs	r6, r3
 8001458:	07ed      	lsls	r5, r5, #31
 800145a:	e639      	b.n	80010d0 <__aeabi_ddiv+0xf4>
 800145c:	4648      	mov	r0, r9
 800145e:	f001 f8af 	bl	80025c0 <__clzsi2>
 8001462:	0001      	movs	r1, r0
 8001464:	0002      	movs	r2, r0
 8001466:	3115      	adds	r1, #21
 8001468:	3220      	adds	r2, #32
 800146a:	291c      	cmp	r1, #28
 800146c:	dc00      	bgt.n	8001470 <__aeabi_ddiv+0x494>
 800146e:	e72c      	b.n	80012ca <__aeabi_ddiv+0x2ee>
 8001470:	464b      	mov	r3, r9
 8001472:	3808      	subs	r0, #8
 8001474:	4083      	lsls	r3, r0
 8001476:	2500      	movs	r5, #0
 8001478:	4698      	mov	r8, r3
 800147a:	e732      	b.n	80012e2 <__aeabi_ddiv+0x306>
 800147c:	f001 f8a0 	bl	80025c0 <__clzsi2>
 8001480:	0003      	movs	r3, r0
 8001482:	001a      	movs	r2, r3
 8001484:	3215      	adds	r2, #21
 8001486:	3020      	adds	r0, #32
 8001488:	2a1c      	cmp	r2, #28
 800148a:	dc00      	bgt.n	800148e <__aeabi_ddiv+0x4b2>
 800148c:	e700      	b.n	8001290 <__aeabi_ddiv+0x2b4>
 800148e:	4654      	mov	r4, sl
 8001490:	3b08      	subs	r3, #8
 8001492:	2200      	movs	r2, #0
 8001494:	409c      	lsls	r4, r3
 8001496:	e705      	b.n	80012a4 <__aeabi_ddiv+0x2c8>
 8001498:	1936      	adds	r6, r6, r4
 800149a:	3b01      	subs	r3, #1
 800149c:	42b4      	cmp	r4, r6
 800149e:	d900      	bls.n	80014a2 <__aeabi_ddiv+0x4c6>
 80014a0:	e6a6      	b.n	80011f0 <__aeabi_ddiv+0x214>
 80014a2:	42b2      	cmp	r2, r6
 80014a4:	d800      	bhi.n	80014a8 <__aeabi_ddiv+0x4cc>
 80014a6:	e6a3      	b.n	80011f0 <__aeabi_ddiv+0x214>
 80014a8:	1e83      	subs	r3, r0, #2
 80014aa:	1936      	adds	r6, r6, r4
 80014ac:	e6a0      	b.n	80011f0 <__aeabi_ddiv+0x214>
 80014ae:	1909      	adds	r1, r1, r4
 80014b0:	3d01      	subs	r5, #1
 80014b2:	428c      	cmp	r4, r1
 80014b4:	d900      	bls.n	80014b8 <__aeabi_ddiv+0x4dc>
 80014b6:	e68d      	b.n	80011d4 <__aeabi_ddiv+0x1f8>
 80014b8:	428a      	cmp	r2, r1
 80014ba:	d800      	bhi.n	80014be <__aeabi_ddiv+0x4e2>
 80014bc:	e68a      	b.n	80011d4 <__aeabi_ddiv+0x1f8>
 80014be:	1e85      	subs	r5, r0, #2
 80014c0:	1909      	adds	r1, r1, r4
 80014c2:	e687      	b.n	80011d4 <__aeabi_ddiv+0x1f8>
 80014c4:	230f      	movs	r3, #15
 80014c6:	402b      	ands	r3, r5
 80014c8:	2b04      	cmp	r3, #4
 80014ca:	d100      	bne.n	80014ce <__aeabi_ddiv+0x4f2>
 80014cc:	e6bc      	b.n	8001248 <__aeabi_ddiv+0x26c>
 80014ce:	2305      	movs	r3, #5
 80014d0:	425b      	negs	r3, r3
 80014d2:	42ab      	cmp	r3, r5
 80014d4:	419b      	sbcs	r3, r3
 80014d6:	3504      	adds	r5, #4
 80014d8:	425b      	negs	r3, r3
 80014da:	08ed      	lsrs	r5, r5, #3
 80014dc:	4498      	add	r8, r3
 80014de:	e6b4      	b.n	800124a <__aeabi_ddiv+0x26e>
 80014e0:	42af      	cmp	r7, r5
 80014e2:	d900      	bls.n	80014e6 <__aeabi_ddiv+0x50a>
 80014e4:	e660      	b.n	80011a8 <__aeabi_ddiv+0x1cc>
 80014e6:	4282      	cmp	r2, r0
 80014e8:	d804      	bhi.n	80014f4 <__aeabi_ddiv+0x518>
 80014ea:	d000      	beq.n	80014ee <__aeabi_ddiv+0x512>
 80014ec:	e65c      	b.n	80011a8 <__aeabi_ddiv+0x1cc>
 80014ee:	42ae      	cmp	r6, r5
 80014f0:	d800      	bhi.n	80014f4 <__aeabi_ddiv+0x518>
 80014f2:	e659      	b.n	80011a8 <__aeabi_ddiv+0x1cc>
 80014f4:	2302      	movs	r3, #2
 80014f6:	425b      	negs	r3, r3
 80014f8:	469c      	mov	ip, r3
 80014fa:	9b00      	ldr	r3, [sp, #0]
 80014fc:	44e0      	add	r8, ip
 80014fe:	469c      	mov	ip, r3
 8001500:	4465      	add	r5, ip
 8001502:	429d      	cmp	r5, r3
 8001504:	419b      	sbcs	r3, r3
 8001506:	425b      	negs	r3, r3
 8001508:	191b      	adds	r3, r3, r4
 800150a:	18c0      	adds	r0, r0, r3
 800150c:	e64d      	b.n	80011aa <__aeabi_ddiv+0x1ce>
 800150e:	428a      	cmp	r2, r1
 8001510:	d800      	bhi.n	8001514 <__aeabi_ddiv+0x538>
 8001512:	e60e      	b.n	8001132 <__aeabi_ddiv+0x156>
 8001514:	1e83      	subs	r3, r0, #2
 8001516:	1909      	adds	r1, r1, r4
 8001518:	e60b      	b.n	8001132 <__aeabi_ddiv+0x156>
 800151a:	428a      	cmp	r2, r1
 800151c:	d800      	bhi.n	8001520 <__aeabi_ddiv+0x544>
 800151e:	e5f4      	b.n	800110a <__aeabi_ddiv+0x12e>
 8001520:	1e83      	subs	r3, r0, #2
 8001522:	4698      	mov	r8, r3
 8001524:	1909      	adds	r1, r1, r4
 8001526:	e5f0      	b.n	800110a <__aeabi_ddiv+0x12e>
 8001528:	4925      	ldr	r1, [pc, #148]	; (80015c0 <__aeabi_ddiv+0x5e4>)
 800152a:	0028      	movs	r0, r5
 800152c:	4459      	add	r1, fp
 800152e:	408d      	lsls	r5, r1
 8001530:	4642      	mov	r2, r8
 8001532:	408a      	lsls	r2, r1
 8001534:	1e69      	subs	r1, r5, #1
 8001536:	418d      	sbcs	r5, r1
 8001538:	4641      	mov	r1, r8
 800153a:	40d8      	lsrs	r0, r3
 800153c:	40d9      	lsrs	r1, r3
 800153e:	4302      	orrs	r2, r0
 8001540:	432a      	orrs	r2, r5
 8001542:	000b      	movs	r3, r1
 8001544:	0751      	lsls	r1, r2, #29
 8001546:	d100      	bne.n	800154a <__aeabi_ddiv+0x56e>
 8001548:	e751      	b.n	80013ee <__aeabi_ddiv+0x412>
 800154a:	210f      	movs	r1, #15
 800154c:	4011      	ands	r1, r2
 800154e:	2904      	cmp	r1, #4
 8001550:	d000      	beq.n	8001554 <__aeabi_ddiv+0x578>
 8001552:	e746      	b.n	80013e2 <__aeabi_ddiv+0x406>
 8001554:	e74b      	b.n	80013ee <__aeabi_ddiv+0x412>
 8001556:	0005      	movs	r5, r0
 8001558:	428e      	cmp	r6, r1
 800155a:	d000      	beq.n	800155e <__aeabi_ddiv+0x582>
 800155c:	e66a      	b.n	8001234 <__aeabi_ddiv+0x258>
 800155e:	9a00      	ldr	r2, [sp, #0]
 8001560:	4293      	cmp	r3, r2
 8001562:	d000      	beq.n	8001566 <__aeabi_ddiv+0x58a>
 8001564:	e666      	b.n	8001234 <__aeabi_ddiv+0x258>
 8001566:	e667      	b.n	8001238 <__aeabi_ddiv+0x25c>
 8001568:	4a16      	ldr	r2, [pc, #88]	; (80015c4 <__aeabi_ddiv+0x5e8>)
 800156a:	445a      	add	r2, fp
 800156c:	2a00      	cmp	r2, #0
 800156e:	dc00      	bgt.n	8001572 <__aeabi_ddiv+0x596>
 8001570:	e710      	b.n	8001394 <__aeabi_ddiv+0x3b8>
 8001572:	2301      	movs	r3, #1
 8001574:	2500      	movs	r5, #0
 8001576:	4498      	add	r8, r3
 8001578:	e667      	b.n	800124a <__aeabi_ddiv+0x26e>
 800157a:	075d      	lsls	r5, r3, #29
 800157c:	025b      	lsls	r3, r3, #9
 800157e:	0b1c      	lsrs	r4, r3, #12
 8001580:	08d2      	lsrs	r2, r2, #3
 8001582:	2300      	movs	r3, #0
 8001584:	4315      	orrs	r5, r2
 8001586:	e580      	b.n	800108a <__aeabi_ddiv+0xae>
 8001588:	9800      	ldr	r0, [sp, #0]
 800158a:	3d02      	subs	r5, #2
 800158c:	0042      	lsls	r2, r0, #1
 800158e:	4282      	cmp	r2, r0
 8001590:	41bf      	sbcs	r7, r7
 8001592:	427f      	negs	r7, r7
 8001594:	193c      	adds	r4, r7, r4
 8001596:	1936      	adds	r6, r6, r4
 8001598:	9200      	str	r2, [sp, #0]
 800159a:	e7dd      	b.n	8001558 <__aeabi_ddiv+0x57c>
 800159c:	2480      	movs	r4, #128	; 0x80
 800159e:	4643      	mov	r3, r8
 80015a0:	0324      	lsls	r4, r4, #12
 80015a2:	431c      	orrs	r4, r3
 80015a4:	0324      	lsls	r4, r4, #12
 80015a6:	4b04      	ldr	r3, [pc, #16]	; (80015b8 <__aeabi_ddiv+0x5dc>)
 80015a8:	0b24      	lsrs	r4, r4, #12
 80015aa:	e56e      	b.n	800108a <__aeabi_ddiv+0xae>
 80015ac:	9a00      	ldr	r2, [sp, #0]
 80015ae:	429a      	cmp	r2, r3
 80015b0:	d3ea      	bcc.n	8001588 <__aeabi_ddiv+0x5ac>
 80015b2:	0005      	movs	r5, r0
 80015b4:	e7d3      	b.n	800155e <__aeabi_ddiv+0x582>
 80015b6:	46c0      	nop			; (mov r8, r8)
 80015b8:	000007ff 	.word	0x000007ff
 80015bc:	0000043e 	.word	0x0000043e
 80015c0:	0000041e 	.word	0x0000041e
 80015c4:	000003ff 	.word	0x000003ff

080015c8 <__eqdf2>:
 80015c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80015ca:	464e      	mov	r6, r9
 80015cc:	4645      	mov	r5, r8
 80015ce:	46de      	mov	lr, fp
 80015d0:	4657      	mov	r7, sl
 80015d2:	4690      	mov	r8, r2
 80015d4:	b5e0      	push	{r5, r6, r7, lr}
 80015d6:	0017      	movs	r7, r2
 80015d8:	031a      	lsls	r2, r3, #12
 80015da:	0b12      	lsrs	r2, r2, #12
 80015dc:	0005      	movs	r5, r0
 80015de:	4684      	mov	ip, r0
 80015e0:	4819      	ldr	r0, [pc, #100]	; (8001648 <__eqdf2+0x80>)
 80015e2:	030e      	lsls	r6, r1, #12
 80015e4:	004c      	lsls	r4, r1, #1
 80015e6:	4691      	mov	r9, r2
 80015e8:	005a      	lsls	r2, r3, #1
 80015ea:	0fdb      	lsrs	r3, r3, #31
 80015ec:	469b      	mov	fp, r3
 80015ee:	0b36      	lsrs	r6, r6, #12
 80015f0:	0d64      	lsrs	r4, r4, #21
 80015f2:	0fc9      	lsrs	r1, r1, #31
 80015f4:	0d52      	lsrs	r2, r2, #21
 80015f6:	4284      	cmp	r4, r0
 80015f8:	d019      	beq.n	800162e <__eqdf2+0x66>
 80015fa:	4282      	cmp	r2, r0
 80015fc:	d010      	beq.n	8001620 <__eqdf2+0x58>
 80015fe:	2001      	movs	r0, #1
 8001600:	4294      	cmp	r4, r2
 8001602:	d10e      	bne.n	8001622 <__eqdf2+0x5a>
 8001604:	454e      	cmp	r6, r9
 8001606:	d10c      	bne.n	8001622 <__eqdf2+0x5a>
 8001608:	2001      	movs	r0, #1
 800160a:	45c4      	cmp	ip, r8
 800160c:	d109      	bne.n	8001622 <__eqdf2+0x5a>
 800160e:	4559      	cmp	r1, fp
 8001610:	d017      	beq.n	8001642 <__eqdf2+0x7a>
 8001612:	2c00      	cmp	r4, #0
 8001614:	d105      	bne.n	8001622 <__eqdf2+0x5a>
 8001616:	0030      	movs	r0, r6
 8001618:	4328      	orrs	r0, r5
 800161a:	1e43      	subs	r3, r0, #1
 800161c:	4198      	sbcs	r0, r3
 800161e:	e000      	b.n	8001622 <__eqdf2+0x5a>
 8001620:	2001      	movs	r0, #1
 8001622:	bcf0      	pop	{r4, r5, r6, r7}
 8001624:	46bb      	mov	fp, r7
 8001626:	46b2      	mov	sl, r6
 8001628:	46a9      	mov	r9, r5
 800162a:	46a0      	mov	r8, r4
 800162c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800162e:	0033      	movs	r3, r6
 8001630:	2001      	movs	r0, #1
 8001632:	432b      	orrs	r3, r5
 8001634:	d1f5      	bne.n	8001622 <__eqdf2+0x5a>
 8001636:	42a2      	cmp	r2, r4
 8001638:	d1f3      	bne.n	8001622 <__eqdf2+0x5a>
 800163a:	464b      	mov	r3, r9
 800163c:	433b      	orrs	r3, r7
 800163e:	d1f0      	bne.n	8001622 <__eqdf2+0x5a>
 8001640:	e7e2      	b.n	8001608 <__eqdf2+0x40>
 8001642:	2000      	movs	r0, #0
 8001644:	e7ed      	b.n	8001622 <__eqdf2+0x5a>
 8001646:	46c0      	nop			; (mov r8, r8)
 8001648:	000007ff 	.word	0x000007ff

0800164c <__gedf2>:
 800164c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800164e:	4647      	mov	r7, r8
 8001650:	46ce      	mov	lr, r9
 8001652:	0004      	movs	r4, r0
 8001654:	0018      	movs	r0, r3
 8001656:	0016      	movs	r6, r2
 8001658:	031b      	lsls	r3, r3, #12
 800165a:	0b1b      	lsrs	r3, r3, #12
 800165c:	4d2d      	ldr	r5, [pc, #180]	; (8001714 <__gedf2+0xc8>)
 800165e:	004a      	lsls	r2, r1, #1
 8001660:	4699      	mov	r9, r3
 8001662:	b580      	push	{r7, lr}
 8001664:	0043      	lsls	r3, r0, #1
 8001666:	030f      	lsls	r7, r1, #12
 8001668:	46a4      	mov	ip, r4
 800166a:	46b0      	mov	r8, r6
 800166c:	0b3f      	lsrs	r7, r7, #12
 800166e:	0d52      	lsrs	r2, r2, #21
 8001670:	0fc9      	lsrs	r1, r1, #31
 8001672:	0d5b      	lsrs	r3, r3, #21
 8001674:	0fc0      	lsrs	r0, r0, #31
 8001676:	42aa      	cmp	r2, r5
 8001678:	d021      	beq.n	80016be <__gedf2+0x72>
 800167a:	42ab      	cmp	r3, r5
 800167c:	d013      	beq.n	80016a6 <__gedf2+0x5a>
 800167e:	2a00      	cmp	r2, #0
 8001680:	d122      	bne.n	80016c8 <__gedf2+0x7c>
 8001682:	433c      	orrs	r4, r7
 8001684:	2b00      	cmp	r3, #0
 8001686:	d102      	bne.n	800168e <__gedf2+0x42>
 8001688:	464d      	mov	r5, r9
 800168a:	432e      	orrs	r6, r5
 800168c:	d022      	beq.n	80016d4 <__gedf2+0x88>
 800168e:	2c00      	cmp	r4, #0
 8001690:	d010      	beq.n	80016b4 <__gedf2+0x68>
 8001692:	4281      	cmp	r1, r0
 8001694:	d022      	beq.n	80016dc <__gedf2+0x90>
 8001696:	2002      	movs	r0, #2
 8001698:	3901      	subs	r1, #1
 800169a:	4008      	ands	r0, r1
 800169c:	3801      	subs	r0, #1
 800169e:	bcc0      	pop	{r6, r7}
 80016a0:	46b9      	mov	r9, r7
 80016a2:	46b0      	mov	r8, r6
 80016a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016a6:	464d      	mov	r5, r9
 80016a8:	432e      	orrs	r6, r5
 80016aa:	d129      	bne.n	8001700 <__gedf2+0xb4>
 80016ac:	2a00      	cmp	r2, #0
 80016ae:	d1f0      	bne.n	8001692 <__gedf2+0x46>
 80016b0:	433c      	orrs	r4, r7
 80016b2:	d1ee      	bne.n	8001692 <__gedf2+0x46>
 80016b4:	2800      	cmp	r0, #0
 80016b6:	d1f2      	bne.n	800169e <__gedf2+0x52>
 80016b8:	2001      	movs	r0, #1
 80016ba:	4240      	negs	r0, r0
 80016bc:	e7ef      	b.n	800169e <__gedf2+0x52>
 80016be:	003d      	movs	r5, r7
 80016c0:	4325      	orrs	r5, r4
 80016c2:	d11d      	bne.n	8001700 <__gedf2+0xb4>
 80016c4:	4293      	cmp	r3, r2
 80016c6:	d0ee      	beq.n	80016a6 <__gedf2+0x5a>
 80016c8:	2b00      	cmp	r3, #0
 80016ca:	d1e2      	bne.n	8001692 <__gedf2+0x46>
 80016cc:	464c      	mov	r4, r9
 80016ce:	4326      	orrs	r6, r4
 80016d0:	d1df      	bne.n	8001692 <__gedf2+0x46>
 80016d2:	e7e0      	b.n	8001696 <__gedf2+0x4a>
 80016d4:	2000      	movs	r0, #0
 80016d6:	2c00      	cmp	r4, #0
 80016d8:	d0e1      	beq.n	800169e <__gedf2+0x52>
 80016da:	e7dc      	b.n	8001696 <__gedf2+0x4a>
 80016dc:	429a      	cmp	r2, r3
 80016de:	dc0a      	bgt.n	80016f6 <__gedf2+0xaa>
 80016e0:	dbe8      	blt.n	80016b4 <__gedf2+0x68>
 80016e2:	454f      	cmp	r7, r9
 80016e4:	d8d7      	bhi.n	8001696 <__gedf2+0x4a>
 80016e6:	d00e      	beq.n	8001706 <__gedf2+0xba>
 80016e8:	2000      	movs	r0, #0
 80016ea:	454f      	cmp	r7, r9
 80016ec:	d2d7      	bcs.n	800169e <__gedf2+0x52>
 80016ee:	2900      	cmp	r1, #0
 80016f0:	d0e2      	beq.n	80016b8 <__gedf2+0x6c>
 80016f2:	0008      	movs	r0, r1
 80016f4:	e7d3      	b.n	800169e <__gedf2+0x52>
 80016f6:	4243      	negs	r3, r0
 80016f8:	4158      	adcs	r0, r3
 80016fa:	0040      	lsls	r0, r0, #1
 80016fc:	3801      	subs	r0, #1
 80016fe:	e7ce      	b.n	800169e <__gedf2+0x52>
 8001700:	2002      	movs	r0, #2
 8001702:	4240      	negs	r0, r0
 8001704:	e7cb      	b.n	800169e <__gedf2+0x52>
 8001706:	45c4      	cmp	ip, r8
 8001708:	d8c5      	bhi.n	8001696 <__gedf2+0x4a>
 800170a:	2000      	movs	r0, #0
 800170c:	45c4      	cmp	ip, r8
 800170e:	d2c6      	bcs.n	800169e <__gedf2+0x52>
 8001710:	e7ed      	b.n	80016ee <__gedf2+0xa2>
 8001712:	46c0      	nop			; (mov r8, r8)
 8001714:	000007ff 	.word	0x000007ff

08001718 <__ledf2>:
 8001718:	b5f0      	push	{r4, r5, r6, r7, lr}
 800171a:	4647      	mov	r7, r8
 800171c:	46ce      	mov	lr, r9
 800171e:	0004      	movs	r4, r0
 8001720:	0018      	movs	r0, r3
 8001722:	0016      	movs	r6, r2
 8001724:	031b      	lsls	r3, r3, #12
 8001726:	0b1b      	lsrs	r3, r3, #12
 8001728:	4d2c      	ldr	r5, [pc, #176]	; (80017dc <__ledf2+0xc4>)
 800172a:	004a      	lsls	r2, r1, #1
 800172c:	4699      	mov	r9, r3
 800172e:	b580      	push	{r7, lr}
 8001730:	0043      	lsls	r3, r0, #1
 8001732:	030f      	lsls	r7, r1, #12
 8001734:	46a4      	mov	ip, r4
 8001736:	46b0      	mov	r8, r6
 8001738:	0b3f      	lsrs	r7, r7, #12
 800173a:	0d52      	lsrs	r2, r2, #21
 800173c:	0fc9      	lsrs	r1, r1, #31
 800173e:	0d5b      	lsrs	r3, r3, #21
 8001740:	0fc0      	lsrs	r0, r0, #31
 8001742:	42aa      	cmp	r2, r5
 8001744:	d00d      	beq.n	8001762 <__ledf2+0x4a>
 8001746:	42ab      	cmp	r3, r5
 8001748:	d010      	beq.n	800176c <__ledf2+0x54>
 800174a:	2a00      	cmp	r2, #0
 800174c:	d127      	bne.n	800179e <__ledf2+0x86>
 800174e:	433c      	orrs	r4, r7
 8001750:	2b00      	cmp	r3, #0
 8001752:	d111      	bne.n	8001778 <__ledf2+0x60>
 8001754:	464d      	mov	r5, r9
 8001756:	432e      	orrs	r6, r5
 8001758:	d10e      	bne.n	8001778 <__ledf2+0x60>
 800175a:	2000      	movs	r0, #0
 800175c:	2c00      	cmp	r4, #0
 800175e:	d015      	beq.n	800178c <__ledf2+0x74>
 8001760:	e00e      	b.n	8001780 <__ledf2+0x68>
 8001762:	003d      	movs	r5, r7
 8001764:	4325      	orrs	r5, r4
 8001766:	d110      	bne.n	800178a <__ledf2+0x72>
 8001768:	4293      	cmp	r3, r2
 800176a:	d118      	bne.n	800179e <__ledf2+0x86>
 800176c:	464d      	mov	r5, r9
 800176e:	432e      	orrs	r6, r5
 8001770:	d10b      	bne.n	800178a <__ledf2+0x72>
 8001772:	2a00      	cmp	r2, #0
 8001774:	d102      	bne.n	800177c <__ledf2+0x64>
 8001776:	433c      	orrs	r4, r7
 8001778:	2c00      	cmp	r4, #0
 800177a:	d00b      	beq.n	8001794 <__ledf2+0x7c>
 800177c:	4281      	cmp	r1, r0
 800177e:	d014      	beq.n	80017aa <__ledf2+0x92>
 8001780:	2002      	movs	r0, #2
 8001782:	3901      	subs	r1, #1
 8001784:	4008      	ands	r0, r1
 8001786:	3801      	subs	r0, #1
 8001788:	e000      	b.n	800178c <__ledf2+0x74>
 800178a:	2002      	movs	r0, #2
 800178c:	bcc0      	pop	{r6, r7}
 800178e:	46b9      	mov	r9, r7
 8001790:	46b0      	mov	r8, r6
 8001792:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001794:	2800      	cmp	r0, #0
 8001796:	d1f9      	bne.n	800178c <__ledf2+0x74>
 8001798:	2001      	movs	r0, #1
 800179a:	4240      	negs	r0, r0
 800179c:	e7f6      	b.n	800178c <__ledf2+0x74>
 800179e:	2b00      	cmp	r3, #0
 80017a0:	d1ec      	bne.n	800177c <__ledf2+0x64>
 80017a2:	464c      	mov	r4, r9
 80017a4:	4326      	orrs	r6, r4
 80017a6:	d1e9      	bne.n	800177c <__ledf2+0x64>
 80017a8:	e7ea      	b.n	8001780 <__ledf2+0x68>
 80017aa:	429a      	cmp	r2, r3
 80017ac:	dd04      	ble.n	80017b8 <__ledf2+0xa0>
 80017ae:	4243      	negs	r3, r0
 80017b0:	4158      	adcs	r0, r3
 80017b2:	0040      	lsls	r0, r0, #1
 80017b4:	3801      	subs	r0, #1
 80017b6:	e7e9      	b.n	800178c <__ledf2+0x74>
 80017b8:	429a      	cmp	r2, r3
 80017ba:	dbeb      	blt.n	8001794 <__ledf2+0x7c>
 80017bc:	454f      	cmp	r7, r9
 80017be:	d8df      	bhi.n	8001780 <__ledf2+0x68>
 80017c0:	d006      	beq.n	80017d0 <__ledf2+0xb8>
 80017c2:	2000      	movs	r0, #0
 80017c4:	454f      	cmp	r7, r9
 80017c6:	d2e1      	bcs.n	800178c <__ledf2+0x74>
 80017c8:	2900      	cmp	r1, #0
 80017ca:	d0e5      	beq.n	8001798 <__ledf2+0x80>
 80017cc:	0008      	movs	r0, r1
 80017ce:	e7dd      	b.n	800178c <__ledf2+0x74>
 80017d0:	45c4      	cmp	ip, r8
 80017d2:	d8d5      	bhi.n	8001780 <__ledf2+0x68>
 80017d4:	2000      	movs	r0, #0
 80017d6:	45c4      	cmp	ip, r8
 80017d8:	d2d8      	bcs.n	800178c <__ledf2+0x74>
 80017da:	e7f5      	b.n	80017c8 <__ledf2+0xb0>
 80017dc:	000007ff 	.word	0x000007ff

080017e0 <__aeabi_dmul>:
 80017e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80017e2:	4657      	mov	r7, sl
 80017e4:	464e      	mov	r6, r9
 80017e6:	4645      	mov	r5, r8
 80017e8:	46de      	mov	lr, fp
 80017ea:	b5e0      	push	{r5, r6, r7, lr}
 80017ec:	4698      	mov	r8, r3
 80017ee:	030c      	lsls	r4, r1, #12
 80017f0:	004b      	lsls	r3, r1, #1
 80017f2:	0006      	movs	r6, r0
 80017f4:	4692      	mov	sl, r2
 80017f6:	b087      	sub	sp, #28
 80017f8:	0b24      	lsrs	r4, r4, #12
 80017fa:	0d5b      	lsrs	r3, r3, #21
 80017fc:	0fcf      	lsrs	r7, r1, #31
 80017fe:	2b00      	cmp	r3, #0
 8001800:	d100      	bne.n	8001804 <__aeabi_dmul+0x24>
 8001802:	e15c      	b.n	8001abe <__aeabi_dmul+0x2de>
 8001804:	4ad9      	ldr	r2, [pc, #868]	; (8001b6c <__aeabi_dmul+0x38c>)
 8001806:	4293      	cmp	r3, r2
 8001808:	d100      	bne.n	800180c <__aeabi_dmul+0x2c>
 800180a:	e175      	b.n	8001af8 <__aeabi_dmul+0x318>
 800180c:	0f42      	lsrs	r2, r0, #29
 800180e:	00e4      	lsls	r4, r4, #3
 8001810:	4314      	orrs	r4, r2
 8001812:	2280      	movs	r2, #128	; 0x80
 8001814:	0412      	lsls	r2, r2, #16
 8001816:	4314      	orrs	r4, r2
 8001818:	4ad5      	ldr	r2, [pc, #852]	; (8001b70 <__aeabi_dmul+0x390>)
 800181a:	00c5      	lsls	r5, r0, #3
 800181c:	4694      	mov	ip, r2
 800181e:	4463      	add	r3, ip
 8001820:	9300      	str	r3, [sp, #0]
 8001822:	2300      	movs	r3, #0
 8001824:	4699      	mov	r9, r3
 8001826:	469b      	mov	fp, r3
 8001828:	4643      	mov	r3, r8
 800182a:	4642      	mov	r2, r8
 800182c:	031e      	lsls	r6, r3, #12
 800182e:	0fd2      	lsrs	r2, r2, #31
 8001830:	005b      	lsls	r3, r3, #1
 8001832:	4650      	mov	r0, sl
 8001834:	4690      	mov	r8, r2
 8001836:	0b36      	lsrs	r6, r6, #12
 8001838:	0d5b      	lsrs	r3, r3, #21
 800183a:	d100      	bne.n	800183e <__aeabi_dmul+0x5e>
 800183c:	e120      	b.n	8001a80 <__aeabi_dmul+0x2a0>
 800183e:	4acb      	ldr	r2, [pc, #812]	; (8001b6c <__aeabi_dmul+0x38c>)
 8001840:	4293      	cmp	r3, r2
 8001842:	d100      	bne.n	8001846 <__aeabi_dmul+0x66>
 8001844:	e162      	b.n	8001b0c <__aeabi_dmul+0x32c>
 8001846:	49ca      	ldr	r1, [pc, #808]	; (8001b70 <__aeabi_dmul+0x390>)
 8001848:	0f42      	lsrs	r2, r0, #29
 800184a:	468c      	mov	ip, r1
 800184c:	9900      	ldr	r1, [sp, #0]
 800184e:	4463      	add	r3, ip
 8001850:	00f6      	lsls	r6, r6, #3
 8001852:	468c      	mov	ip, r1
 8001854:	4316      	orrs	r6, r2
 8001856:	2280      	movs	r2, #128	; 0x80
 8001858:	449c      	add	ip, r3
 800185a:	0412      	lsls	r2, r2, #16
 800185c:	4663      	mov	r3, ip
 800185e:	4316      	orrs	r6, r2
 8001860:	00c2      	lsls	r2, r0, #3
 8001862:	2000      	movs	r0, #0
 8001864:	9300      	str	r3, [sp, #0]
 8001866:	9900      	ldr	r1, [sp, #0]
 8001868:	4643      	mov	r3, r8
 800186a:	3101      	adds	r1, #1
 800186c:	468c      	mov	ip, r1
 800186e:	4649      	mov	r1, r9
 8001870:	407b      	eors	r3, r7
 8001872:	9301      	str	r3, [sp, #4]
 8001874:	290f      	cmp	r1, #15
 8001876:	d826      	bhi.n	80018c6 <__aeabi_dmul+0xe6>
 8001878:	4bbe      	ldr	r3, [pc, #760]	; (8001b74 <__aeabi_dmul+0x394>)
 800187a:	0089      	lsls	r1, r1, #2
 800187c:	5859      	ldr	r1, [r3, r1]
 800187e:	468f      	mov	pc, r1
 8001880:	4643      	mov	r3, r8
 8001882:	9301      	str	r3, [sp, #4]
 8001884:	0034      	movs	r4, r6
 8001886:	0015      	movs	r5, r2
 8001888:	4683      	mov	fp, r0
 800188a:	465b      	mov	r3, fp
 800188c:	2b02      	cmp	r3, #2
 800188e:	d016      	beq.n	80018be <__aeabi_dmul+0xde>
 8001890:	2b03      	cmp	r3, #3
 8001892:	d100      	bne.n	8001896 <__aeabi_dmul+0xb6>
 8001894:	e203      	b.n	8001c9e <__aeabi_dmul+0x4be>
 8001896:	2b01      	cmp	r3, #1
 8001898:	d000      	beq.n	800189c <__aeabi_dmul+0xbc>
 800189a:	e0cd      	b.n	8001a38 <__aeabi_dmul+0x258>
 800189c:	2200      	movs	r2, #0
 800189e:	2400      	movs	r4, #0
 80018a0:	2500      	movs	r5, #0
 80018a2:	9b01      	ldr	r3, [sp, #4]
 80018a4:	0512      	lsls	r2, r2, #20
 80018a6:	4322      	orrs	r2, r4
 80018a8:	07db      	lsls	r3, r3, #31
 80018aa:	431a      	orrs	r2, r3
 80018ac:	0028      	movs	r0, r5
 80018ae:	0011      	movs	r1, r2
 80018b0:	b007      	add	sp, #28
 80018b2:	bcf0      	pop	{r4, r5, r6, r7}
 80018b4:	46bb      	mov	fp, r7
 80018b6:	46b2      	mov	sl, r6
 80018b8:	46a9      	mov	r9, r5
 80018ba:	46a0      	mov	r8, r4
 80018bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80018be:	2400      	movs	r4, #0
 80018c0:	2500      	movs	r5, #0
 80018c2:	4aaa      	ldr	r2, [pc, #680]	; (8001b6c <__aeabi_dmul+0x38c>)
 80018c4:	e7ed      	b.n	80018a2 <__aeabi_dmul+0xc2>
 80018c6:	0c28      	lsrs	r0, r5, #16
 80018c8:	042d      	lsls	r5, r5, #16
 80018ca:	0c2d      	lsrs	r5, r5, #16
 80018cc:	002b      	movs	r3, r5
 80018ce:	0c11      	lsrs	r1, r2, #16
 80018d0:	0412      	lsls	r2, r2, #16
 80018d2:	0c12      	lsrs	r2, r2, #16
 80018d4:	4353      	muls	r3, r2
 80018d6:	4698      	mov	r8, r3
 80018d8:	0013      	movs	r3, r2
 80018da:	002f      	movs	r7, r5
 80018dc:	4343      	muls	r3, r0
 80018de:	4699      	mov	r9, r3
 80018e0:	434f      	muls	r7, r1
 80018e2:	444f      	add	r7, r9
 80018e4:	46bb      	mov	fp, r7
 80018e6:	4647      	mov	r7, r8
 80018e8:	000b      	movs	r3, r1
 80018ea:	0c3f      	lsrs	r7, r7, #16
 80018ec:	46ba      	mov	sl, r7
 80018ee:	4343      	muls	r3, r0
 80018f0:	44da      	add	sl, fp
 80018f2:	9302      	str	r3, [sp, #8]
 80018f4:	45d1      	cmp	r9, sl
 80018f6:	d904      	bls.n	8001902 <__aeabi_dmul+0x122>
 80018f8:	2780      	movs	r7, #128	; 0x80
 80018fa:	027f      	lsls	r7, r7, #9
 80018fc:	46b9      	mov	r9, r7
 80018fe:	444b      	add	r3, r9
 8001900:	9302      	str	r3, [sp, #8]
 8001902:	4653      	mov	r3, sl
 8001904:	0c1b      	lsrs	r3, r3, #16
 8001906:	469b      	mov	fp, r3
 8001908:	4653      	mov	r3, sl
 800190a:	041f      	lsls	r7, r3, #16
 800190c:	4643      	mov	r3, r8
 800190e:	041b      	lsls	r3, r3, #16
 8001910:	0c1b      	lsrs	r3, r3, #16
 8001912:	4698      	mov	r8, r3
 8001914:	003b      	movs	r3, r7
 8001916:	4443      	add	r3, r8
 8001918:	9304      	str	r3, [sp, #16]
 800191a:	0c33      	lsrs	r3, r6, #16
 800191c:	0436      	lsls	r6, r6, #16
 800191e:	0c36      	lsrs	r6, r6, #16
 8001920:	4698      	mov	r8, r3
 8001922:	0033      	movs	r3, r6
 8001924:	4343      	muls	r3, r0
 8001926:	4699      	mov	r9, r3
 8001928:	4643      	mov	r3, r8
 800192a:	4343      	muls	r3, r0
 800192c:	002f      	movs	r7, r5
 800192e:	469a      	mov	sl, r3
 8001930:	4643      	mov	r3, r8
 8001932:	4377      	muls	r7, r6
 8001934:	435d      	muls	r5, r3
 8001936:	0c38      	lsrs	r0, r7, #16
 8001938:	444d      	add	r5, r9
 800193a:	1945      	adds	r5, r0, r5
 800193c:	45a9      	cmp	r9, r5
 800193e:	d903      	bls.n	8001948 <__aeabi_dmul+0x168>
 8001940:	2380      	movs	r3, #128	; 0x80
 8001942:	025b      	lsls	r3, r3, #9
 8001944:	4699      	mov	r9, r3
 8001946:	44ca      	add	sl, r9
 8001948:	043f      	lsls	r7, r7, #16
 800194a:	0c28      	lsrs	r0, r5, #16
 800194c:	0c3f      	lsrs	r7, r7, #16
 800194e:	042d      	lsls	r5, r5, #16
 8001950:	19ed      	adds	r5, r5, r7
 8001952:	0c27      	lsrs	r7, r4, #16
 8001954:	0424      	lsls	r4, r4, #16
 8001956:	0c24      	lsrs	r4, r4, #16
 8001958:	0003      	movs	r3, r0
 800195a:	0020      	movs	r0, r4
 800195c:	4350      	muls	r0, r2
 800195e:	437a      	muls	r2, r7
 8001960:	4691      	mov	r9, r2
 8001962:	003a      	movs	r2, r7
 8001964:	4453      	add	r3, sl
 8001966:	9305      	str	r3, [sp, #20]
 8001968:	0c03      	lsrs	r3, r0, #16
 800196a:	469a      	mov	sl, r3
 800196c:	434a      	muls	r2, r1
 800196e:	4361      	muls	r1, r4
 8001970:	4449      	add	r1, r9
 8001972:	4451      	add	r1, sl
 8001974:	44ab      	add	fp, r5
 8001976:	4589      	cmp	r9, r1
 8001978:	d903      	bls.n	8001982 <__aeabi_dmul+0x1a2>
 800197a:	2380      	movs	r3, #128	; 0x80
 800197c:	025b      	lsls	r3, r3, #9
 800197e:	4699      	mov	r9, r3
 8001980:	444a      	add	r2, r9
 8001982:	0400      	lsls	r0, r0, #16
 8001984:	0c0b      	lsrs	r3, r1, #16
 8001986:	0c00      	lsrs	r0, r0, #16
 8001988:	0409      	lsls	r1, r1, #16
 800198a:	1809      	adds	r1, r1, r0
 800198c:	0020      	movs	r0, r4
 800198e:	4699      	mov	r9, r3
 8001990:	4643      	mov	r3, r8
 8001992:	4370      	muls	r0, r6
 8001994:	435c      	muls	r4, r3
 8001996:	437e      	muls	r6, r7
 8001998:	435f      	muls	r7, r3
 800199a:	0c03      	lsrs	r3, r0, #16
 800199c:	4698      	mov	r8, r3
 800199e:	19a4      	adds	r4, r4, r6
 80019a0:	4444      	add	r4, r8
 80019a2:	444a      	add	r2, r9
 80019a4:	9703      	str	r7, [sp, #12]
 80019a6:	42a6      	cmp	r6, r4
 80019a8:	d904      	bls.n	80019b4 <__aeabi_dmul+0x1d4>
 80019aa:	2380      	movs	r3, #128	; 0x80
 80019ac:	025b      	lsls	r3, r3, #9
 80019ae:	4698      	mov	r8, r3
 80019b0:	4447      	add	r7, r8
 80019b2:	9703      	str	r7, [sp, #12]
 80019b4:	0423      	lsls	r3, r4, #16
 80019b6:	9e02      	ldr	r6, [sp, #8]
 80019b8:	469a      	mov	sl, r3
 80019ba:	9b05      	ldr	r3, [sp, #20]
 80019bc:	445e      	add	r6, fp
 80019be:	4698      	mov	r8, r3
 80019c0:	42ae      	cmp	r6, r5
 80019c2:	41ad      	sbcs	r5, r5
 80019c4:	1876      	adds	r6, r6, r1
 80019c6:	428e      	cmp	r6, r1
 80019c8:	4189      	sbcs	r1, r1
 80019ca:	0400      	lsls	r0, r0, #16
 80019cc:	0c00      	lsrs	r0, r0, #16
 80019ce:	4450      	add	r0, sl
 80019d0:	4440      	add	r0, r8
 80019d2:	426d      	negs	r5, r5
 80019d4:	1947      	adds	r7, r0, r5
 80019d6:	46b8      	mov	r8, r7
 80019d8:	4693      	mov	fp, r2
 80019da:	4249      	negs	r1, r1
 80019dc:	4689      	mov	r9, r1
 80019de:	44c3      	add	fp, r8
 80019e0:	44d9      	add	r9, fp
 80019e2:	4298      	cmp	r0, r3
 80019e4:	4180      	sbcs	r0, r0
 80019e6:	45a8      	cmp	r8, r5
 80019e8:	41ad      	sbcs	r5, r5
 80019ea:	4593      	cmp	fp, r2
 80019ec:	4192      	sbcs	r2, r2
 80019ee:	4589      	cmp	r9, r1
 80019f0:	4189      	sbcs	r1, r1
 80019f2:	426d      	negs	r5, r5
 80019f4:	4240      	negs	r0, r0
 80019f6:	4328      	orrs	r0, r5
 80019f8:	0c24      	lsrs	r4, r4, #16
 80019fa:	4252      	negs	r2, r2
 80019fc:	4249      	negs	r1, r1
 80019fe:	430a      	orrs	r2, r1
 8001a00:	9b03      	ldr	r3, [sp, #12]
 8001a02:	1900      	adds	r0, r0, r4
 8001a04:	1880      	adds	r0, r0, r2
 8001a06:	18c7      	adds	r7, r0, r3
 8001a08:	464b      	mov	r3, r9
 8001a0a:	0ddc      	lsrs	r4, r3, #23
 8001a0c:	9b04      	ldr	r3, [sp, #16]
 8001a0e:	0275      	lsls	r5, r6, #9
 8001a10:	431d      	orrs	r5, r3
 8001a12:	1e6a      	subs	r2, r5, #1
 8001a14:	4195      	sbcs	r5, r2
 8001a16:	464b      	mov	r3, r9
 8001a18:	0df6      	lsrs	r6, r6, #23
 8001a1a:	027f      	lsls	r7, r7, #9
 8001a1c:	4335      	orrs	r5, r6
 8001a1e:	025a      	lsls	r2, r3, #9
 8001a20:	433c      	orrs	r4, r7
 8001a22:	4315      	orrs	r5, r2
 8001a24:	01fb      	lsls	r3, r7, #7
 8001a26:	d400      	bmi.n	8001a2a <__aeabi_dmul+0x24a>
 8001a28:	e11c      	b.n	8001c64 <__aeabi_dmul+0x484>
 8001a2a:	2101      	movs	r1, #1
 8001a2c:	086a      	lsrs	r2, r5, #1
 8001a2e:	400d      	ands	r5, r1
 8001a30:	4315      	orrs	r5, r2
 8001a32:	07e2      	lsls	r2, r4, #31
 8001a34:	4315      	orrs	r5, r2
 8001a36:	0864      	lsrs	r4, r4, #1
 8001a38:	494f      	ldr	r1, [pc, #316]	; (8001b78 <__aeabi_dmul+0x398>)
 8001a3a:	4461      	add	r1, ip
 8001a3c:	2900      	cmp	r1, #0
 8001a3e:	dc00      	bgt.n	8001a42 <__aeabi_dmul+0x262>
 8001a40:	e0b0      	b.n	8001ba4 <__aeabi_dmul+0x3c4>
 8001a42:	076b      	lsls	r3, r5, #29
 8001a44:	d009      	beq.n	8001a5a <__aeabi_dmul+0x27a>
 8001a46:	220f      	movs	r2, #15
 8001a48:	402a      	ands	r2, r5
 8001a4a:	2a04      	cmp	r2, #4
 8001a4c:	d005      	beq.n	8001a5a <__aeabi_dmul+0x27a>
 8001a4e:	1d2a      	adds	r2, r5, #4
 8001a50:	42aa      	cmp	r2, r5
 8001a52:	41ad      	sbcs	r5, r5
 8001a54:	426d      	negs	r5, r5
 8001a56:	1964      	adds	r4, r4, r5
 8001a58:	0015      	movs	r5, r2
 8001a5a:	01e3      	lsls	r3, r4, #7
 8001a5c:	d504      	bpl.n	8001a68 <__aeabi_dmul+0x288>
 8001a5e:	2180      	movs	r1, #128	; 0x80
 8001a60:	4a46      	ldr	r2, [pc, #280]	; (8001b7c <__aeabi_dmul+0x39c>)
 8001a62:	00c9      	lsls	r1, r1, #3
 8001a64:	4014      	ands	r4, r2
 8001a66:	4461      	add	r1, ip
 8001a68:	4a45      	ldr	r2, [pc, #276]	; (8001b80 <__aeabi_dmul+0x3a0>)
 8001a6a:	4291      	cmp	r1, r2
 8001a6c:	dd00      	ble.n	8001a70 <__aeabi_dmul+0x290>
 8001a6e:	e726      	b.n	80018be <__aeabi_dmul+0xde>
 8001a70:	0762      	lsls	r2, r4, #29
 8001a72:	08ed      	lsrs	r5, r5, #3
 8001a74:	0264      	lsls	r4, r4, #9
 8001a76:	0549      	lsls	r1, r1, #21
 8001a78:	4315      	orrs	r5, r2
 8001a7a:	0b24      	lsrs	r4, r4, #12
 8001a7c:	0d4a      	lsrs	r2, r1, #21
 8001a7e:	e710      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001a80:	4652      	mov	r2, sl
 8001a82:	4332      	orrs	r2, r6
 8001a84:	d100      	bne.n	8001a88 <__aeabi_dmul+0x2a8>
 8001a86:	e07f      	b.n	8001b88 <__aeabi_dmul+0x3a8>
 8001a88:	2e00      	cmp	r6, #0
 8001a8a:	d100      	bne.n	8001a8e <__aeabi_dmul+0x2ae>
 8001a8c:	e0dc      	b.n	8001c48 <__aeabi_dmul+0x468>
 8001a8e:	0030      	movs	r0, r6
 8001a90:	f000 fd96 	bl	80025c0 <__clzsi2>
 8001a94:	0002      	movs	r2, r0
 8001a96:	3a0b      	subs	r2, #11
 8001a98:	231d      	movs	r3, #29
 8001a9a:	0001      	movs	r1, r0
 8001a9c:	1a9b      	subs	r3, r3, r2
 8001a9e:	4652      	mov	r2, sl
 8001aa0:	3908      	subs	r1, #8
 8001aa2:	40da      	lsrs	r2, r3
 8001aa4:	408e      	lsls	r6, r1
 8001aa6:	4316      	orrs	r6, r2
 8001aa8:	4652      	mov	r2, sl
 8001aaa:	408a      	lsls	r2, r1
 8001aac:	9b00      	ldr	r3, [sp, #0]
 8001aae:	4935      	ldr	r1, [pc, #212]	; (8001b84 <__aeabi_dmul+0x3a4>)
 8001ab0:	1a18      	subs	r0, r3, r0
 8001ab2:	0003      	movs	r3, r0
 8001ab4:	468c      	mov	ip, r1
 8001ab6:	4463      	add	r3, ip
 8001ab8:	2000      	movs	r0, #0
 8001aba:	9300      	str	r3, [sp, #0]
 8001abc:	e6d3      	b.n	8001866 <__aeabi_dmul+0x86>
 8001abe:	0025      	movs	r5, r4
 8001ac0:	4305      	orrs	r5, r0
 8001ac2:	d04a      	beq.n	8001b5a <__aeabi_dmul+0x37a>
 8001ac4:	2c00      	cmp	r4, #0
 8001ac6:	d100      	bne.n	8001aca <__aeabi_dmul+0x2ea>
 8001ac8:	e0b0      	b.n	8001c2c <__aeabi_dmul+0x44c>
 8001aca:	0020      	movs	r0, r4
 8001acc:	f000 fd78 	bl	80025c0 <__clzsi2>
 8001ad0:	0001      	movs	r1, r0
 8001ad2:	0002      	movs	r2, r0
 8001ad4:	390b      	subs	r1, #11
 8001ad6:	231d      	movs	r3, #29
 8001ad8:	0010      	movs	r0, r2
 8001ada:	1a5b      	subs	r3, r3, r1
 8001adc:	0031      	movs	r1, r6
 8001ade:	0035      	movs	r5, r6
 8001ae0:	3808      	subs	r0, #8
 8001ae2:	4084      	lsls	r4, r0
 8001ae4:	40d9      	lsrs	r1, r3
 8001ae6:	4085      	lsls	r5, r0
 8001ae8:	430c      	orrs	r4, r1
 8001aea:	4826      	ldr	r0, [pc, #152]	; (8001b84 <__aeabi_dmul+0x3a4>)
 8001aec:	1a83      	subs	r3, r0, r2
 8001aee:	9300      	str	r3, [sp, #0]
 8001af0:	2300      	movs	r3, #0
 8001af2:	4699      	mov	r9, r3
 8001af4:	469b      	mov	fp, r3
 8001af6:	e697      	b.n	8001828 <__aeabi_dmul+0x48>
 8001af8:	0005      	movs	r5, r0
 8001afa:	4325      	orrs	r5, r4
 8001afc:	d126      	bne.n	8001b4c <__aeabi_dmul+0x36c>
 8001afe:	2208      	movs	r2, #8
 8001b00:	9300      	str	r3, [sp, #0]
 8001b02:	2302      	movs	r3, #2
 8001b04:	2400      	movs	r4, #0
 8001b06:	4691      	mov	r9, r2
 8001b08:	469b      	mov	fp, r3
 8001b0a:	e68d      	b.n	8001828 <__aeabi_dmul+0x48>
 8001b0c:	4652      	mov	r2, sl
 8001b0e:	9b00      	ldr	r3, [sp, #0]
 8001b10:	4332      	orrs	r2, r6
 8001b12:	d110      	bne.n	8001b36 <__aeabi_dmul+0x356>
 8001b14:	4915      	ldr	r1, [pc, #84]	; (8001b6c <__aeabi_dmul+0x38c>)
 8001b16:	2600      	movs	r6, #0
 8001b18:	468c      	mov	ip, r1
 8001b1a:	4463      	add	r3, ip
 8001b1c:	4649      	mov	r1, r9
 8001b1e:	9300      	str	r3, [sp, #0]
 8001b20:	2302      	movs	r3, #2
 8001b22:	4319      	orrs	r1, r3
 8001b24:	4689      	mov	r9, r1
 8001b26:	2002      	movs	r0, #2
 8001b28:	e69d      	b.n	8001866 <__aeabi_dmul+0x86>
 8001b2a:	465b      	mov	r3, fp
 8001b2c:	9701      	str	r7, [sp, #4]
 8001b2e:	2b02      	cmp	r3, #2
 8001b30:	d000      	beq.n	8001b34 <__aeabi_dmul+0x354>
 8001b32:	e6ad      	b.n	8001890 <__aeabi_dmul+0xb0>
 8001b34:	e6c3      	b.n	80018be <__aeabi_dmul+0xde>
 8001b36:	4a0d      	ldr	r2, [pc, #52]	; (8001b6c <__aeabi_dmul+0x38c>)
 8001b38:	2003      	movs	r0, #3
 8001b3a:	4694      	mov	ip, r2
 8001b3c:	4463      	add	r3, ip
 8001b3e:	464a      	mov	r2, r9
 8001b40:	9300      	str	r3, [sp, #0]
 8001b42:	2303      	movs	r3, #3
 8001b44:	431a      	orrs	r2, r3
 8001b46:	4691      	mov	r9, r2
 8001b48:	4652      	mov	r2, sl
 8001b4a:	e68c      	b.n	8001866 <__aeabi_dmul+0x86>
 8001b4c:	220c      	movs	r2, #12
 8001b4e:	9300      	str	r3, [sp, #0]
 8001b50:	2303      	movs	r3, #3
 8001b52:	0005      	movs	r5, r0
 8001b54:	4691      	mov	r9, r2
 8001b56:	469b      	mov	fp, r3
 8001b58:	e666      	b.n	8001828 <__aeabi_dmul+0x48>
 8001b5a:	2304      	movs	r3, #4
 8001b5c:	4699      	mov	r9, r3
 8001b5e:	2300      	movs	r3, #0
 8001b60:	9300      	str	r3, [sp, #0]
 8001b62:	3301      	adds	r3, #1
 8001b64:	2400      	movs	r4, #0
 8001b66:	469b      	mov	fp, r3
 8001b68:	e65e      	b.n	8001828 <__aeabi_dmul+0x48>
 8001b6a:	46c0      	nop			; (mov r8, r8)
 8001b6c:	000007ff 	.word	0x000007ff
 8001b70:	fffffc01 	.word	0xfffffc01
 8001b74:	08008a50 	.word	0x08008a50
 8001b78:	000003ff 	.word	0x000003ff
 8001b7c:	feffffff 	.word	0xfeffffff
 8001b80:	000007fe 	.word	0x000007fe
 8001b84:	fffffc0d 	.word	0xfffffc0d
 8001b88:	4649      	mov	r1, r9
 8001b8a:	2301      	movs	r3, #1
 8001b8c:	4319      	orrs	r1, r3
 8001b8e:	4689      	mov	r9, r1
 8001b90:	2600      	movs	r6, #0
 8001b92:	2001      	movs	r0, #1
 8001b94:	e667      	b.n	8001866 <__aeabi_dmul+0x86>
 8001b96:	2300      	movs	r3, #0
 8001b98:	2480      	movs	r4, #128	; 0x80
 8001b9a:	2500      	movs	r5, #0
 8001b9c:	4a43      	ldr	r2, [pc, #268]	; (8001cac <__aeabi_dmul+0x4cc>)
 8001b9e:	9301      	str	r3, [sp, #4]
 8001ba0:	0324      	lsls	r4, r4, #12
 8001ba2:	e67e      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001ba4:	2001      	movs	r0, #1
 8001ba6:	1a40      	subs	r0, r0, r1
 8001ba8:	2838      	cmp	r0, #56	; 0x38
 8001baa:	dd00      	ble.n	8001bae <__aeabi_dmul+0x3ce>
 8001bac:	e676      	b.n	800189c <__aeabi_dmul+0xbc>
 8001bae:	281f      	cmp	r0, #31
 8001bb0:	dd5b      	ble.n	8001c6a <__aeabi_dmul+0x48a>
 8001bb2:	221f      	movs	r2, #31
 8001bb4:	0023      	movs	r3, r4
 8001bb6:	4252      	negs	r2, r2
 8001bb8:	1a51      	subs	r1, r2, r1
 8001bba:	40cb      	lsrs	r3, r1
 8001bbc:	0019      	movs	r1, r3
 8001bbe:	2820      	cmp	r0, #32
 8001bc0:	d003      	beq.n	8001bca <__aeabi_dmul+0x3ea>
 8001bc2:	4a3b      	ldr	r2, [pc, #236]	; (8001cb0 <__aeabi_dmul+0x4d0>)
 8001bc4:	4462      	add	r2, ip
 8001bc6:	4094      	lsls	r4, r2
 8001bc8:	4325      	orrs	r5, r4
 8001bca:	1e6a      	subs	r2, r5, #1
 8001bcc:	4195      	sbcs	r5, r2
 8001bce:	002a      	movs	r2, r5
 8001bd0:	430a      	orrs	r2, r1
 8001bd2:	2107      	movs	r1, #7
 8001bd4:	000d      	movs	r5, r1
 8001bd6:	2400      	movs	r4, #0
 8001bd8:	4015      	ands	r5, r2
 8001bda:	4211      	tst	r1, r2
 8001bdc:	d05b      	beq.n	8001c96 <__aeabi_dmul+0x4b6>
 8001bde:	210f      	movs	r1, #15
 8001be0:	2400      	movs	r4, #0
 8001be2:	4011      	ands	r1, r2
 8001be4:	2904      	cmp	r1, #4
 8001be6:	d053      	beq.n	8001c90 <__aeabi_dmul+0x4b0>
 8001be8:	1d11      	adds	r1, r2, #4
 8001bea:	4291      	cmp	r1, r2
 8001bec:	4192      	sbcs	r2, r2
 8001bee:	4252      	negs	r2, r2
 8001bf0:	18a4      	adds	r4, r4, r2
 8001bf2:	000a      	movs	r2, r1
 8001bf4:	0223      	lsls	r3, r4, #8
 8001bf6:	d54b      	bpl.n	8001c90 <__aeabi_dmul+0x4b0>
 8001bf8:	2201      	movs	r2, #1
 8001bfa:	2400      	movs	r4, #0
 8001bfc:	2500      	movs	r5, #0
 8001bfe:	e650      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001c00:	2380      	movs	r3, #128	; 0x80
 8001c02:	031b      	lsls	r3, r3, #12
 8001c04:	421c      	tst	r4, r3
 8001c06:	d009      	beq.n	8001c1c <__aeabi_dmul+0x43c>
 8001c08:	421e      	tst	r6, r3
 8001c0a:	d107      	bne.n	8001c1c <__aeabi_dmul+0x43c>
 8001c0c:	4333      	orrs	r3, r6
 8001c0e:	031c      	lsls	r4, r3, #12
 8001c10:	4643      	mov	r3, r8
 8001c12:	0015      	movs	r5, r2
 8001c14:	0b24      	lsrs	r4, r4, #12
 8001c16:	4a25      	ldr	r2, [pc, #148]	; (8001cac <__aeabi_dmul+0x4cc>)
 8001c18:	9301      	str	r3, [sp, #4]
 8001c1a:	e642      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001c1c:	2280      	movs	r2, #128	; 0x80
 8001c1e:	0312      	lsls	r2, r2, #12
 8001c20:	4314      	orrs	r4, r2
 8001c22:	0324      	lsls	r4, r4, #12
 8001c24:	4a21      	ldr	r2, [pc, #132]	; (8001cac <__aeabi_dmul+0x4cc>)
 8001c26:	0b24      	lsrs	r4, r4, #12
 8001c28:	9701      	str	r7, [sp, #4]
 8001c2a:	e63a      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001c2c:	f000 fcc8 	bl	80025c0 <__clzsi2>
 8001c30:	0001      	movs	r1, r0
 8001c32:	0002      	movs	r2, r0
 8001c34:	3115      	adds	r1, #21
 8001c36:	3220      	adds	r2, #32
 8001c38:	291c      	cmp	r1, #28
 8001c3a:	dc00      	bgt.n	8001c3e <__aeabi_dmul+0x45e>
 8001c3c:	e74b      	b.n	8001ad6 <__aeabi_dmul+0x2f6>
 8001c3e:	0034      	movs	r4, r6
 8001c40:	3808      	subs	r0, #8
 8001c42:	2500      	movs	r5, #0
 8001c44:	4084      	lsls	r4, r0
 8001c46:	e750      	b.n	8001aea <__aeabi_dmul+0x30a>
 8001c48:	f000 fcba 	bl	80025c0 <__clzsi2>
 8001c4c:	0003      	movs	r3, r0
 8001c4e:	001a      	movs	r2, r3
 8001c50:	3215      	adds	r2, #21
 8001c52:	3020      	adds	r0, #32
 8001c54:	2a1c      	cmp	r2, #28
 8001c56:	dc00      	bgt.n	8001c5a <__aeabi_dmul+0x47a>
 8001c58:	e71e      	b.n	8001a98 <__aeabi_dmul+0x2b8>
 8001c5a:	4656      	mov	r6, sl
 8001c5c:	3b08      	subs	r3, #8
 8001c5e:	2200      	movs	r2, #0
 8001c60:	409e      	lsls	r6, r3
 8001c62:	e723      	b.n	8001aac <__aeabi_dmul+0x2cc>
 8001c64:	9b00      	ldr	r3, [sp, #0]
 8001c66:	469c      	mov	ip, r3
 8001c68:	e6e6      	b.n	8001a38 <__aeabi_dmul+0x258>
 8001c6a:	4912      	ldr	r1, [pc, #72]	; (8001cb4 <__aeabi_dmul+0x4d4>)
 8001c6c:	0022      	movs	r2, r4
 8001c6e:	4461      	add	r1, ip
 8001c70:	002e      	movs	r6, r5
 8001c72:	408d      	lsls	r5, r1
 8001c74:	408a      	lsls	r2, r1
 8001c76:	40c6      	lsrs	r6, r0
 8001c78:	1e69      	subs	r1, r5, #1
 8001c7a:	418d      	sbcs	r5, r1
 8001c7c:	4332      	orrs	r2, r6
 8001c7e:	432a      	orrs	r2, r5
 8001c80:	40c4      	lsrs	r4, r0
 8001c82:	0753      	lsls	r3, r2, #29
 8001c84:	d0b6      	beq.n	8001bf4 <__aeabi_dmul+0x414>
 8001c86:	210f      	movs	r1, #15
 8001c88:	4011      	ands	r1, r2
 8001c8a:	2904      	cmp	r1, #4
 8001c8c:	d1ac      	bne.n	8001be8 <__aeabi_dmul+0x408>
 8001c8e:	e7b1      	b.n	8001bf4 <__aeabi_dmul+0x414>
 8001c90:	0765      	lsls	r5, r4, #29
 8001c92:	0264      	lsls	r4, r4, #9
 8001c94:	0b24      	lsrs	r4, r4, #12
 8001c96:	08d2      	lsrs	r2, r2, #3
 8001c98:	4315      	orrs	r5, r2
 8001c9a:	2200      	movs	r2, #0
 8001c9c:	e601      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001c9e:	2280      	movs	r2, #128	; 0x80
 8001ca0:	0312      	lsls	r2, r2, #12
 8001ca2:	4314      	orrs	r4, r2
 8001ca4:	0324      	lsls	r4, r4, #12
 8001ca6:	4a01      	ldr	r2, [pc, #4]	; (8001cac <__aeabi_dmul+0x4cc>)
 8001ca8:	0b24      	lsrs	r4, r4, #12
 8001caa:	e5fa      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001cac:	000007ff 	.word	0x000007ff
 8001cb0:	0000043e 	.word	0x0000043e
 8001cb4:	0000041e 	.word	0x0000041e

08001cb8 <__aeabi_dsub>:
 8001cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001cba:	4657      	mov	r7, sl
 8001cbc:	464e      	mov	r6, r9
 8001cbe:	4645      	mov	r5, r8
 8001cc0:	46de      	mov	lr, fp
 8001cc2:	b5e0      	push	{r5, r6, r7, lr}
 8001cc4:	001e      	movs	r6, r3
 8001cc6:	0017      	movs	r7, r2
 8001cc8:	004a      	lsls	r2, r1, #1
 8001cca:	030b      	lsls	r3, r1, #12
 8001ccc:	0d52      	lsrs	r2, r2, #21
 8001cce:	0a5b      	lsrs	r3, r3, #9
 8001cd0:	4690      	mov	r8, r2
 8001cd2:	0f42      	lsrs	r2, r0, #29
 8001cd4:	431a      	orrs	r2, r3
 8001cd6:	0fcd      	lsrs	r5, r1, #31
 8001cd8:	4ccd      	ldr	r4, [pc, #820]	; (8002010 <__aeabi_dsub+0x358>)
 8001cda:	0331      	lsls	r1, r6, #12
 8001cdc:	00c3      	lsls	r3, r0, #3
 8001cde:	4694      	mov	ip, r2
 8001ce0:	0070      	lsls	r0, r6, #1
 8001ce2:	0f7a      	lsrs	r2, r7, #29
 8001ce4:	0a49      	lsrs	r1, r1, #9
 8001ce6:	00ff      	lsls	r7, r7, #3
 8001ce8:	469a      	mov	sl, r3
 8001cea:	46b9      	mov	r9, r7
 8001cec:	0d40      	lsrs	r0, r0, #21
 8001cee:	0ff6      	lsrs	r6, r6, #31
 8001cf0:	4311      	orrs	r1, r2
 8001cf2:	42a0      	cmp	r0, r4
 8001cf4:	d100      	bne.n	8001cf8 <__aeabi_dsub+0x40>
 8001cf6:	e0b1      	b.n	8001e5c <__aeabi_dsub+0x1a4>
 8001cf8:	2201      	movs	r2, #1
 8001cfa:	4056      	eors	r6, r2
 8001cfc:	46b3      	mov	fp, r6
 8001cfe:	42b5      	cmp	r5, r6
 8001d00:	d100      	bne.n	8001d04 <__aeabi_dsub+0x4c>
 8001d02:	e088      	b.n	8001e16 <__aeabi_dsub+0x15e>
 8001d04:	4642      	mov	r2, r8
 8001d06:	1a12      	subs	r2, r2, r0
 8001d08:	2a00      	cmp	r2, #0
 8001d0a:	dc00      	bgt.n	8001d0e <__aeabi_dsub+0x56>
 8001d0c:	e0ae      	b.n	8001e6c <__aeabi_dsub+0x1b4>
 8001d0e:	2800      	cmp	r0, #0
 8001d10:	d100      	bne.n	8001d14 <__aeabi_dsub+0x5c>
 8001d12:	e0c1      	b.n	8001e98 <__aeabi_dsub+0x1e0>
 8001d14:	48be      	ldr	r0, [pc, #760]	; (8002010 <__aeabi_dsub+0x358>)
 8001d16:	4580      	cmp	r8, r0
 8001d18:	d100      	bne.n	8001d1c <__aeabi_dsub+0x64>
 8001d1a:	e151      	b.n	8001fc0 <__aeabi_dsub+0x308>
 8001d1c:	2080      	movs	r0, #128	; 0x80
 8001d1e:	0400      	lsls	r0, r0, #16
 8001d20:	4301      	orrs	r1, r0
 8001d22:	2a38      	cmp	r2, #56	; 0x38
 8001d24:	dd00      	ble.n	8001d28 <__aeabi_dsub+0x70>
 8001d26:	e17b      	b.n	8002020 <__aeabi_dsub+0x368>
 8001d28:	2a1f      	cmp	r2, #31
 8001d2a:	dd00      	ble.n	8001d2e <__aeabi_dsub+0x76>
 8001d2c:	e1ee      	b.n	800210c <__aeabi_dsub+0x454>
 8001d2e:	2020      	movs	r0, #32
 8001d30:	003e      	movs	r6, r7
 8001d32:	1a80      	subs	r0, r0, r2
 8001d34:	000c      	movs	r4, r1
 8001d36:	40d6      	lsrs	r6, r2
 8001d38:	40d1      	lsrs	r1, r2
 8001d3a:	4087      	lsls	r7, r0
 8001d3c:	4662      	mov	r2, ip
 8001d3e:	4084      	lsls	r4, r0
 8001d40:	1a52      	subs	r2, r2, r1
 8001d42:	1e78      	subs	r0, r7, #1
 8001d44:	4187      	sbcs	r7, r0
 8001d46:	4694      	mov	ip, r2
 8001d48:	4334      	orrs	r4, r6
 8001d4a:	4327      	orrs	r7, r4
 8001d4c:	1bdc      	subs	r4, r3, r7
 8001d4e:	42a3      	cmp	r3, r4
 8001d50:	419b      	sbcs	r3, r3
 8001d52:	4662      	mov	r2, ip
 8001d54:	425b      	negs	r3, r3
 8001d56:	1ad3      	subs	r3, r2, r3
 8001d58:	4699      	mov	r9, r3
 8001d5a:	464b      	mov	r3, r9
 8001d5c:	021b      	lsls	r3, r3, #8
 8001d5e:	d400      	bmi.n	8001d62 <__aeabi_dsub+0xaa>
 8001d60:	e118      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 8001d62:	464b      	mov	r3, r9
 8001d64:	0258      	lsls	r0, r3, #9
 8001d66:	0a43      	lsrs	r3, r0, #9
 8001d68:	4699      	mov	r9, r3
 8001d6a:	464b      	mov	r3, r9
 8001d6c:	2b00      	cmp	r3, #0
 8001d6e:	d100      	bne.n	8001d72 <__aeabi_dsub+0xba>
 8001d70:	e137      	b.n	8001fe2 <__aeabi_dsub+0x32a>
 8001d72:	4648      	mov	r0, r9
 8001d74:	f000 fc24 	bl	80025c0 <__clzsi2>
 8001d78:	0001      	movs	r1, r0
 8001d7a:	3908      	subs	r1, #8
 8001d7c:	2320      	movs	r3, #32
 8001d7e:	0022      	movs	r2, r4
 8001d80:	4648      	mov	r0, r9
 8001d82:	1a5b      	subs	r3, r3, r1
 8001d84:	40da      	lsrs	r2, r3
 8001d86:	4088      	lsls	r0, r1
 8001d88:	408c      	lsls	r4, r1
 8001d8a:	4643      	mov	r3, r8
 8001d8c:	4310      	orrs	r0, r2
 8001d8e:	4588      	cmp	r8, r1
 8001d90:	dd00      	ble.n	8001d94 <__aeabi_dsub+0xdc>
 8001d92:	e136      	b.n	8002002 <__aeabi_dsub+0x34a>
 8001d94:	1ac9      	subs	r1, r1, r3
 8001d96:	1c4b      	adds	r3, r1, #1
 8001d98:	2b1f      	cmp	r3, #31
 8001d9a:	dd00      	ble.n	8001d9e <__aeabi_dsub+0xe6>
 8001d9c:	e0ea      	b.n	8001f74 <__aeabi_dsub+0x2bc>
 8001d9e:	2220      	movs	r2, #32
 8001da0:	0026      	movs	r6, r4
 8001da2:	1ad2      	subs	r2, r2, r3
 8001da4:	0001      	movs	r1, r0
 8001da6:	4094      	lsls	r4, r2
 8001da8:	40de      	lsrs	r6, r3
 8001daa:	40d8      	lsrs	r0, r3
 8001dac:	2300      	movs	r3, #0
 8001dae:	4091      	lsls	r1, r2
 8001db0:	1e62      	subs	r2, r4, #1
 8001db2:	4194      	sbcs	r4, r2
 8001db4:	4681      	mov	r9, r0
 8001db6:	4698      	mov	r8, r3
 8001db8:	4331      	orrs	r1, r6
 8001dba:	430c      	orrs	r4, r1
 8001dbc:	0763      	lsls	r3, r4, #29
 8001dbe:	d009      	beq.n	8001dd4 <__aeabi_dsub+0x11c>
 8001dc0:	230f      	movs	r3, #15
 8001dc2:	4023      	ands	r3, r4
 8001dc4:	2b04      	cmp	r3, #4
 8001dc6:	d005      	beq.n	8001dd4 <__aeabi_dsub+0x11c>
 8001dc8:	1d23      	adds	r3, r4, #4
 8001dca:	42a3      	cmp	r3, r4
 8001dcc:	41a4      	sbcs	r4, r4
 8001dce:	4264      	negs	r4, r4
 8001dd0:	44a1      	add	r9, r4
 8001dd2:	001c      	movs	r4, r3
 8001dd4:	464b      	mov	r3, r9
 8001dd6:	021b      	lsls	r3, r3, #8
 8001dd8:	d400      	bmi.n	8001ddc <__aeabi_dsub+0x124>
 8001dda:	e0de      	b.n	8001f9a <__aeabi_dsub+0x2e2>
 8001ddc:	4641      	mov	r1, r8
 8001dde:	4b8c      	ldr	r3, [pc, #560]	; (8002010 <__aeabi_dsub+0x358>)
 8001de0:	3101      	adds	r1, #1
 8001de2:	4299      	cmp	r1, r3
 8001de4:	d100      	bne.n	8001de8 <__aeabi_dsub+0x130>
 8001de6:	e0e7      	b.n	8001fb8 <__aeabi_dsub+0x300>
 8001de8:	464b      	mov	r3, r9
 8001dea:	488a      	ldr	r0, [pc, #552]	; (8002014 <__aeabi_dsub+0x35c>)
 8001dec:	08e4      	lsrs	r4, r4, #3
 8001dee:	4003      	ands	r3, r0
 8001df0:	0018      	movs	r0, r3
 8001df2:	0549      	lsls	r1, r1, #21
 8001df4:	075b      	lsls	r3, r3, #29
 8001df6:	0240      	lsls	r0, r0, #9
 8001df8:	4323      	orrs	r3, r4
 8001dfa:	0d4a      	lsrs	r2, r1, #21
 8001dfc:	0b04      	lsrs	r4, r0, #12
 8001dfe:	0512      	lsls	r2, r2, #20
 8001e00:	07ed      	lsls	r5, r5, #31
 8001e02:	4322      	orrs	r2, r4
 8001e04:	432a      	orrs	r2, r5
 8001e06:	0018      	movs	r0, r3
 8001e08:	0011      	movs	r1, r2
 8001e0a:	bcf0      	pop	{r4, r5, r6, r7}
 8001e0c:	46bb      	mov	fp, r7
 8001e0e:	46b2      	mov	sl, r6
 8001e10:	46a9      	mov	r9, r5
 8001e12:	46a0      	mov	r8, r4
 8001e14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001e16:	4642      	mov	r2, r8
 8001e18:	1a12      	subs	r2, r2, r0
 8001e1a:	2a00      	cmp	r2, #0
 8001e1c:	dd52      	ble.n	8001ec4 <__aeabi_dsub+0x20c>
 8001e1e:	2800      	cmp	r0, #0
 8001e20:	d100      	bne.n	8001e24 <__aeabi_dsub+0x16c>
 8001e22:	e09c      	b.n	8001f5e <__aeabi_dsub+0x2a6>
 8001e24:	45a0      	cmp	r8, r4
 8001e26:	d100      	bne.n	8001e2a <__aeabi_dsub+0x172>
 8001e28:	e0ca      	b.n	8001fc0 <__aeabi_dsub+0x308>
 8001e2a:	2080      	movs	r0, #128	; 0x80
 8001e2c:	0400      	lsls	r0, r0, #16
 8001e2e:	4301      	orrs	r1, r0
 8001e30:	2a38      	cmp	r2, #56	; 0x38
 8001e32:	dd00      	ble.n	8001e36 <__aeabi_dsub+0x17e>
 8001e34:	e149      	b.n	80020ca <__aeabi_dsub+0x412>
 8001e36:	2a1f      	cmp	r2, #31
 8001e38:	dc00      	bgt.n	8001e3c <__aeabi_dsub+0x184>
 8001e3a:	e197      	b.n	800216c <__aeabi_dsub+0x4b4>
 8001e3c:	0010      	movs	r0, r2
 8001e3e:	000e      	movs	r6, r1
 8001e40:	3820      	subs	r0, #32
 8001e42:	40c6      	lsrs	r6, r0
 8001e44:	2a20      	cmp	r2, #32
 8001e46:	d004      	beq.n	8001e52 <__aeabi_dsub+0x19a>
 8001e48:	2040      	movs	r0, #64	; 0x40
 8001e4a:	1a82      	subs	r2, r0, r2
 8001e4c:	4091      	lsls	r1, r2
 8001e4e:	430f      	orrs	r7, r1
 8001e50:	46b9      	mov	r9, r7
 8001e52:	464c      	mov	r4, r9
 8001e54:	1e62      	subs	r2, r4, #1
 8001e56:	4194      	sbcs	r4, r2
 8001e58:	4334      	orrs	r4, r6
 8001e5a:	e13a      	b.n	80020d2 <__aeabi_dsub+0x41a>
 8001e5c:	000a      	movs	r2, r1
 8001e5e:	433a      	orrs	r2, r7
 8001e60:	d028      	beq.n	8001eb4 <__aeabi_dsub+0x1fc>
 8001e62:	46b3      	mov	fp, r6
 8001e64:	42b5      	cmp	r5, r6
 8001e66:	d02b      	beq.n	8001ec0 <__aeabi_dsub+0x208>
 8001e68:	4a6b      	ldr	r2, [pc, #428]	; (8002018 <__aeabi_dsub+0x360>)
 8001e6a:	4442      	add	r2, r8
 8001e6c:	2a00      	cmp	r2, #0
 8001e6e:	d05d      	beq.n	8001f2c <__aeabi_dsub+0x274>
 8001e70:	4642      	mov	r2, r8
 8001e72:	4644      	mov	r4, r8
 8001e74:	1a82      	subs	r2, r0, r2
 8001e76:	2c00      	cmp	r4, #0
 8001e78:	d000      	beq.n	8001e7c <__aeabi_dsub+0x1c4>
 8001e7a:	e0f5      	b.n	8002068 <__aeabi_dsub+0x3b0>
 8001e7c:	4665      	mov	r5, ip
 8001e7e:	431d      	orrs	r5, r3
 8001e80:	d100      	bne.n	8001e84 <__aeabi_dsub+0x1cc>
 8001e82:	e19c      	b.n	80021be <__aeabi_dsub+0x506>
 8001e84:	1e55      	subs	r5, r2, #1
 8001e86:	2a01      	cmp	r2, #1
 8001e88:	d100      	bne.n	8001e8c <__aeabi_dsub+0x1d4>
 8001e8a:	e1fb      	b.n	8002284 <__aeabi_dsub+0x5cc>
 8001e8c:	4c60      	ldr	r4, [pc, #384]	; (8002010 <__aeabi_dsub+0x358>)
 8001e8e:	42a2      	cmp	r2, r4
 8001e90:	d100      	bne.n	8001e94 <__aeabi_dsub+0x1dc>
 8001e92:	e1bd      	b.n	8002210 <__aeabi_dsub+0x558>
 8001e94:	002a      	movs	r2, r5
 8001e96:	e0f0      	b.n	800207a <__aeabi_dsub+0x3c2>
 8001e98:	0008      	movs	r0, r1
 8001e9a:	4338      	orrs	r0, r7
 8001e9c:	d100      	bne.n	8001ea0 <__aeabi_dsub+0x1e8>
 8001e9e:	e0c3      	b.n	8002028 <__aeabi_dsub+0x370>
 8001ea0:	1e50      	subs	r0, r2, #1
 8001ea2:	2a01      	cmp	r2, #1
 8001ea4:	d100      	bne.n	8001ea8 <__aeabi_dsub+0x1f0>
 8001ea6:	e1a8      	b.n	80021fa <__aeabi_dsub+0x542>
 8001ea8:	4c59      	ldr	r4, [pc, #356]	; (8002010 <__aeabi_dsub+0x358>)
 8001eaa:	42a2      	cmp	r2, r4
 8001eac:	d100      	bne.n	8001eb0 <__aeabi_dsub+0x1f8>
 8001eae:	e087      	b.n	8001fc0 <__aeabi_dsub+0x308>
 8001eb0:	0002      	movs	r2, r0
 8001eb2:	e736      	b.n	8001d22 <__aeabi_dsub+0x6a>
 8001eb4:	2201      	movs	r2, #1
 8001eb6:	4056      	eors	r6, r2
 8001eb8:	46b3      	mov	fp, r6
 8001eba:	42b5      	cmp	r5, r6
 8001ebc:	d000      	beq.n	8001ec0 <__aeabi_dsub+0x208>
 8001ebe:	e721      	b.n	8001d04 <__aeabi_dsub+0x4c>
 8001ec0:	4a55      	ldr	r2, [pc, #340]	; (8002018 <__aeabi_dsub+0x360>)
 8001ec2:	4442      	add	r2, r8
 8001ec4:	2a00      	cmp	r2, #0
 8001ec6:	d100      	bne.n	8001eca <__aeabi_dsub+0x212>
 8001ec8:	e0b5      	b.n	8002036 <__aeabi_dsub+0x37e>
 8001eca:	4642      	mov	r2, r8
 8001ecc:	4644      	mov	r4, r8
 8001ece:	1a82      	subs	r2, r0, r2
 8001ed0:	2c00      	cmp	r4, #0
 8001ed2:	d100      	bne.n	8001ed6 <__aeabi_dsub+0x21e>
 8001ed4:	e138      	b.n	8002148 <__aeabi_dsub+0x490>
 8001ed6:	4e4e      	ldr	r6, [pc, #312]	; (8002010 <__aeabi_dsub+0x358>)
 8001ed8:	42b0      	cmp	r0, r6
 8001eda:	d100      	bne.n	8001ede <__aeabi_dsub+0x226>
 8001edc:	e1de      	b.n	800229c <__aeabi_dsub+0x5e4>
 8001ede:	2680      	movs	r6, #128	; 0x80
 8001ee0:	4664      	mov	r4, ip
 8001ee2:	0436      	lsls	r6, r6, #16
 8001ee4:	4334      	orrs	r4, r6
 8001ee6:	46a4      	mov	ip, r4
 8001ee8:	2a38      	cmp	r2, #56	; 0x38
 8001eea:	dd00      	ble.n	8001eee <__aeabi_dsub+0x236>
 8001eec:	e196      	b.n	800221c <__aeabi_dsub+0x564>
 8001eee:	2a1f      	cmp	r2, #31
 8001ef0:	dd00      	ble.n	8001ef4 <__aeabi_dsub+0x23c>
 8001ef2:	e224      	b.n	800233e <__aeabi_dsub+0x686>
 8001ef4:	2620      	movs	r6, #32
 8001ef6:	1ab4      	subs	r4, r6, r2
 8001ef8:	46a2      	mov	sl, r4
 8001efa:	4664      	mov	r4, ip
 8001efc:	4656      	mov	r6, sl
 8001efe:	40b4      	lsls	r4, r6
 8001f00:	46a1      	mov	r9, r4
 8001f02:	001c      	movs	r4, r3
 8001f04:	464e      	mov	r6, r9
 8001f06:	40d4      	lsrs	r4, r2
 8001f08:	4326      	orrs	r6, r4
 8001f0a:	0034      	movs	r4, r6
 8001f0c:	4656      	mov	r6, sl
 8001f0e:	40b3      	lsls	r3, r6
 8001f10:	1e5e      	subs	r6, r3, #1
 8001f12:	41b3      	sbcs	r3, r6
 8001f14:	431c      	orrs	r4, r3
 8001f16:	4663      	mov	r3, ip
 8001f18:	40d3      	lsrs	r3, r2
 8001f1a:	18c9      	adds	r1, r1, r3
 8001f1c:	19e4      	adds	r4, r4, r7
 8001f1e:	42bc      	cmp	r4, r7
 8001f20:	41bf      	sbcs	r7, r7
 8001f22:	427f      	negs	r7, r7
 8001f24:	46b9      	mov	r9, r7
 8001f26:	4680      	mov	r8, r0
 8001f28:	4489      	add	r9, r1
 8001f2a:	e0d8      	b.n	80020de <__aeabi_dsub+0x426>
 8001f2c:	4640      	mov	r0, r8
 8001f2e:	4c3b      	ldr	r4, [pc, #236]	; (800201c <__aeabi_dsub+0x364>)
 8001f30:	3001      	adds	r0, #1
 8001f32:	4220      	tst	r0, r4
 8001f34:	d000      	beq.n	8001f38 <__aeabi_dsub+0x280>
 8001f36:	e0b4      	b.n	80020a2 <__aeabi_dsub+0x3ea>
 8001f38:	4640      	mov	r0, r8
 8001f3a:	2800      	cmp	r0, #0
 8001f3c:	d000      	beq.n	8001f40 <__aeabi_dsub+0x288>
 8001f3e:	e144      	b.n	80021ca <__aeabi_dsub+0x512>
 8001f40:	4660      	mov	r0, ip
 8001f42:	4318      	orrs	r0, r3
 8001f44:	d100      	bne.n	8001f48 <__aeabi_dsub+0x290>
 8001f46:	e190      	b.n	800226a <__aeabi_dsub+0x5b2>
 8001f48:	0008      	movs	r0, r1
 8001f4a:	4338      	orrs	r0, r7
 8001f4c:	d000      	beq.n	8001f50 <__aeabi_dsub+0x298>
 8001f4e:	e1aa      	b.n	80022a6 <__aeabi_dsub+0x5ee>
 8001f50:	4661      	mov	r1, ip
 8001f52:	08db      	lsrs	r3, r3, #3
 8001f54:	0749      	lsls	r1, r1, #29
 8001f56:	430b      	orrs	r3, r1
 8001f58:	4661      	mov	r1, ip
 8001f5a:	08cc      	lsrs	r4, r1, #3
 8001f5c:	e027      	b.n	8001fae <__aeabi_dsub+0x2f6>
 8001f5e:	0008      	movs	r0, r1
 8001f60:	4338      	orrs	r0, r7
 8001f62:	d061      	beq.n	8002028 <__aeabi_dsub+0x370>
 8001f64:	1e50      	subs	r0, r2, #1
 8001f66:	2a01      	cmp	r2, #1
 8001f68:	d100      	bne.n	8001f6c <__aeabi_dsub+0x2b4>
 8001f6a:	e139      	b.n	80021e0 <__aeabi_dsub+0x528>
 8001f6c:	42a2      	cmp	r2, r4
 8001f6e:	d027      	beq.n	8001fc0 <__aeabi_dsub+0x308>
 8001f70:	0002      	movs	r2, r0
 8001f72:	e75d      	b.n	8001e30 <__aeabi_dsub+0x178>
 8001f74:	0002      	movs	r2, r0
 8001f76:	391f      	subs	r1, #31
 8001f78:	40ca      	lsrs	r2, r1
 8001f7a:	0011      	movs	r1, r2
 8001f7c:	2b20      	cmp	r3, #32
 8001f7e:	d003      	beq.n	8001f88 <__aeabi_dsub+0x2d0>
 8001f80:	2240      	movs	r2, #64	; 0x40
 8001f82:	1ad3      	subs	r3, r2, r3
 8001f84:	4098      	lsls	r0, r3
 8001f86:	4304      	orrs	r4, r0
 8001f88:	1e63      	subs	r3, r4, #1
 8001f8a:	419c      	sbcs	r4, r3
 8001f8c:	2300      	movs	r3, #0
 8001f8e:	4699      	mov	r9, r3
 8001f90:	4698      	mov	r8, r3
 8001f92:	430c      	orrs	r4, r1
 8001f94:	0763      	lsls	r3, r4, #29
 8001f96:	d000      	beq.n	8001f9a <__aeabi_dsub+0x2e2>
 8001f98:	e712      	b.n	8001dc0 <__aeabi_dsub+0x108>
 8001f9a:	464b      	mov	r3, r9
 8001f9c:	464a      	mov	r2, r9
 8001f9e:	08e4      	lsrs	r4, r4, #3
 8001fa0:	075b      	lsls	r3, r3, #29
 8001fa2:	4323      	orrs	r3, r4
 8001fa4:	08d4      	lsrs	r4, r2, #3
 8001fa6:	4642      	mov	r2, r8
 8001fa8:	4919      	ldr	r1, [pc, #100]	; (8002010 <__aeabi_dsub+0x358>)
 8001faa:	428a      	cmp	r2, r1
 8001fac:	d00e      	beq.n	8001fcc <__aeabi_dsub+0x314>
 8001fae:	0324      	lsls	r4, r4, #12
 8001fb0:	0552      	lsls	r2, r2, #21
 8001fb2:	0b24      	lsrs	r4, r4, #12
 8001fb4:	0d52      	lsrs	r2, r2, #21
 8001fb6:	e722      	b.n	8001dfe <__aeabi_dsub+0x146>
 8001fb8:	000a      	movs	r2, r1
 8001fba:	2400      	movs	r4, #0
 8001fbc:	2300      	movs	r3, #0
 8001fbe:	e71e      	b.n	8001dfe <__aeabi_dsub+0x146>
 8001fc0:	08db      	lsrs	r3, r3, #3
 8001fc2:	4662      	mov	r2, ip
 8001fc4:	0752      	lsls	r2, r2, #29
 8001fc6:	4313      	orrs	r3, r2
 8001fc8:	4662      	mov	r2, ip
 8001fca:	08d4      	lsrs	r4, r2, #3
 8001fcc:	001a      	movs	r2, r3
 8001fce:	4322      	orrs	r2, r4
 8001fd0:	d100      	bne.n	8001fd4 <__aeabi_dsub+0x31c>
 8001fd2:	e1fc      	b.n	80023ce <__aeabi_dsub+0x716>
 8001fd4:	2280      	movs	r2, #128	; 0x80
 8001fd6:	0312      	lsls	r2, r2, #12
 8001fd8:	4314      	orrs	r4, r2
 8001fda:	0324      	lsls	r4, r4, #12
 8001fdc:	4a0c      	ldr	r2, [pc, #48]	; (8002010 <__aeabi_dsub+0x358>)
 8001fde:	0b24      	lsrs	r4, r4, #12
 8001fe0:	e70d      	b.n	8001dfe <__aeabi_dsub+0x146>
 8001fe2:	0020      	movs	r0, r4
 8001fe4:	f000 faec 	bl	80025c0 <__clzsi2>
 8001fe8:	0001      	movs	r1, r0
 8001fea:	3118      	adds	r1, #24
 8001fec:	291f      	cmp	r1, #31
 8001fee:	dc00      	bgt.n	8001ff2 <__aeabi_dsub+0x33a>
 8001ff0:	e6c4      	b.n	8001d7c <__aeabi_dsub+0xc4>
 8001ff2:	3808      	subs	r0, #8
 8001ff4:	4084      	lsls	r4, r0
 8001ff6:	4643      	mov	r3, r8
 8001ff8:	0020      	movs	r0, r4
 8001ffa:	2400      	movs	r4, #0
 8001ffc:	4588      	cmp	r8, r1
 8001ffe:	dc00      	bgt.n	8002002 <__aeabi_dsub+0x34a>
 8002000:	e6c8      	b.n	8001d94 <__aeabi_dsub+0xdc>
 8002002:	4a04      	ldr	r2, [pc, #16]	; (8002014 <__aeabi_dsub+0x35c>)
 8002004:	1a5b      	subs	r3, r3, r1
 8002006:	4010      	ands	r0, r2
 8002008:	4698      	mov	r8, r3
 800200a:	4681      	mov	r9, r0
 800200c:	e6d6      	b.n	8001dbc <__aeabi_dsub+0x104>
 800200e:	46c0      	nop			; (mov r8, r8)
 8002010:	000007ff 	.word	0x000007ff
 8002014:	ff7fffff 	.word	0xff7fffff
 8002018:	fffff801 	.word	0xfffff801
 800201c:	000007fe 	.word	0x000007fe
 8002020:	430f      	orrs	r7, r1
 8002022:	1e7a      	subs	r2, r7, #1
 8002024:	4197      	sbcs	r7, r2
 8002026:	e691      	b.n	8001d4c <__aeabi_dsub+0x94>
 8002028:	4661      	mov	r1, ip
 800202a:	08db      	lsrs	r3, r3, #3
 800202c:	0749      	lsls	r1, r1, #29
 800202e:	430b      	orrs	r3, r1
 8002030:	4661      	mov	r1, ip
 8002032:	08cc      	lsrs	r4, r1, #3
 8002034:	e7b8      	b.n	8001fa8 <__aeabi_dsub+0x2f0>
 8002036:	4640      	mov	r0, r8
 8002038:	4cd3      	ldr	r4, [pc, #844]	; (8002388 <__aeabi_dsub+0x6d0>)
 800203a:	3001      	adds	r0, #1
 800203c:	4220      	tst	r0, r4
 800203e:	d000      	beq.n	8002042 <__aeabi_dsub+0x38a>
 8002040:	e0a2      	b.n	8002188 <__aeabi_dsub+0x4d0>
 8002042:	4640      	mov	r0, r8
 8002044:	2800      	cmp	r0, #0
 8002046:	d000      	beq.n	800204a <__aeabi_dsub+0x392>
 8002048:	e101      	b.n	800224e <__aeabi_dsub+0x596>
 800204a:	4660      	mov	r0, ip
 800204c:	4318      	orrs	r0, r3
 800204e:	d100      	bne.n	8002052 <__aeabi_dsub+0x39a>
 8002050:	e15e      	b.n	8002310 <__aeabi_dsub+0x658>
 8002052:	0008      	movs	r0, r1
 8002054:	4338      	orrs	r0, r7
 8002056:	d000      	beq.n	800205a <__aeabi_dsub+0x3a2>
 8002058:	e15f      	b.n	800231a <__aeabi_dsub+0x662>
 800205a:	4661      	mov	r1, ip
 800205c:	08db      	lsrs	r3, r3, #3
 800205e:	0749      	lsls	r1, r1, #29
 8002060:	430b      	orrs	r3, r1
 8002062:	4661      	mov	r1, ip
 8002064:	08cc      	lsrs	r4, r1, #3
 8002066:	e7a2      	b.n	8001fae <__aeabi_dsub+0x2f6>
 8002068:	4dc8      	ldr	r5, [pc, #800]	; (800238c <__aeabi_dsub+0x6d4>)
 800206a:	42a8      	cmp	r0, r5
 800206c:	d100      	bne.n	8002070 <__aeabi_dsub+0x3b8>
 800206e:	e0cf      	b.n	8002210 <__aeabi_dsub+0x558>
 8002070:	2580      	movs	r5, #128	; 0x80
 8002072:	4664      	mov	r4, ip
 8002074:	042d      	lsls	r5, r5, #16
 8002076:	432c      	orrs	r4, r5
 8002078:	46a4      	mov	ip, r4
 800207a:	2a38      	cmp	r2, #56	; 0x38
 800207c:	dc56      	bgt.n	800212c <__aeabi_dsub+0x474>
 800207e:	2a1f      	cmp	r2, #31
 8002080:	dd00      	ble.n	8002084 <__aeabi_dsub+0x3cc>
 8002082:	e0d1      	b.n	8002228 <__aeabi_dsub+0x570>
 8002084:	2520      	movs	r5, #32
 8002086:	001e      	movs	r6, r3
 8002088:	1aad      	subs	r5, r5, r2
 800208a:	4664      	mov	r4, ip
 800208c:	40ab      	lsls	r3, r5
 800208e:	40ac      	lsls	r4, r5
 8002090:	40d6      	lsrs	r6, r2
 8002092:	1e5d      	subs	r5, r3, #1
 8002094:	41ab      	sbcs	r3, r5
 8002096:	4334      	orrs	r4, r6
 8002098:	4323      	orrs	r3, r4
 800209a:	4664      	mov	r4, ip
 800209c:	40d4      	lsrs	r4, r2
 800209e:	1b09      	subs	r1, r1, r4
 80020a0:	e049      	b.n	8002136 <__aeabi_dsub+0x47e>
 80020a2:	4660      	mov	r0, ip
 80020a4:	1bdc      	subs	r4, r3, r7
 80020a6:	1a46      	subs	r6, r0, r1
 80020a8:	42a3      	cmp	r3, r4
 80020aa:	4180      	sbcs	r0, r0
 80020ac:	4240      	negs	r0, r0
 80020ae:	4681      	mov	r9, r0
 80020b0:	0030      	movs	r0, r6
 80020b2:	464e      	mov	r6, r9
 80020b4:	1b80      	subs	r0, r0, r6
 80020b6:	4681      	mov	r9, r0
 80020b8:	0200      	lsls	r0, r0, #8
 80020ba:	d476      	bmi.n	80021aa <__aeabi_dsub+0x4f2>
 80020bc:	464b      	mov	r3, r9
 80020be:	4323      	orrs	r3, r4
 80020c0:	d000      	beq.n	80020c4 <__aeabi_dsub+0x40c>
 80020c2:	e652      	b.n	8001d6a <__aeabi_dsub+0xb2>
 80020c4:	2400      	movs	r4, #0
 80020c6:	2500      	movs	r5, #0
 80020c8:	e771      	b.n	8001fae <__aeabi_dsub+0x2f6>
 80020ca:	4339      	orrs	r1, r7
 80020cc:	000c      	movs	r4, r1
 80020ce:	1e62      	subs	r2, r4, #1
 80020d0:	4194      	sbcs	r4, r2
 80020d2:	18e4      	adds	r4, r4, r3
 80020d4:	429c      	cmp	r4, r3
 80020d6:	419b      	sbcs	r3, r3
 80020d8:	425b      	negs	r3, r3
 80020da:	4463      	add	r3, ip
 80020dc:	4699      	mov	r9, r3
 80020de:	464b      	mov	r3, r9
 80020e0:	021b      	lsls	r3, r3, #8
 80020e2:	d400      	bmi.n	80020e6 <__aeabi_dsub+0x42e>
 80020e4:	e756      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 80020e6:	2301      	movs	r3, #1
 80020e8:	469c      	mov	ip, r3
 80020ea:	4ba8      	ldr	r3, [pc, #672]	; (800238c <__aeabi_dsub+0x6d4>)
 80020ec:	44e0      	add	r8, ip
 80020ee:	4598      	cmp	r8, r3
 80020f0:	d038      	beq.n	8002164 <__aeabi_dsub+0x4ac>
 80020f2:	464b      	mov	r3, r9
 80020f4:	48a6      	ldr	r0, [pc, #664]	; (8002390 <__aeabi_dsub+0x6d8>)
 80020f6:	2201      	movs	r2, #1
 80020f8:	4003      	ands	r3, r0
 80020fa:	0018      	movs	r0, r3
 80020fc:	0863      	lsrs	r3, r4, #1
 80020fe:	4014      	ands	r4, r2
 8002100:	431c      	orrs	r4, r3
 8002102:	07c3      	lsls	r3, r0, #31
 8002104:	431c      	orrs	r4, r3
 8002106:	0843      	lsrs	r3, r0, #1
 8002108:	4699      	mov	r9, r3
 800210a:	e657      	b.n	8001dbc <__aeabi_dsub+0x104>
 800210c:	0010      	movs	r0, r2
 800210e:	000e      	movs	r6, r1
 8002110:	3820      	subs	r0, #32
 8002112:	40c6      	lsrs	r6, r0
 8002114:	2a20      	cmp	r2, #32
 8002116:	d004      	beq.n	8002122 <__aeabi_dsub+0x46a>
 8002118:	2040      	movs	r0, #64	; 0x40
 800211a:	1a82      	subs	r2, r0, r2
 800211c:	4091      	lsls	r1, r2
 800211e:	430f      	orrs	r7, r1
 8002120:	46b9      	mov	r9, r7
 8002122:	464f      	mov	r7, r9
 8002124:	1e7a      	subs	r2, r7, #1
 8002126:	4197      	sbcs	r7, r2
 8002128:	4337      	orrs	r7, r6
 800212a:	e60f      	b.n	8001d4c <__aeabi_dsub+0x94>
 800212c:	4662      	mov	r2, ip
 800212e:	431a      	orrs	r2, r3
 8002130:	0013      	movs	r3, r2
 8002132:	1e5a      	subs	r2, r3, #1
 8002134:	4193      	sbcs	r3, r2
 8002136:	1afc      	subs	r4, r7, r3
 8002138:	42a7      	cmp	r7, r4
 800213a:	41bf      	sbcs	r7, r7
 800213c:	427f      	negs	r7, r7
 800213e:	1bcb      	subs	r3, r1, r7
 8002140:	4699      	mov	r9, r3
 8002142:	465d      	mov	r5, fp
 8002144:	4680      	mov	r8, r0
 8002146:	e608      	b.n	8001d5a <__aeabi_dsub+0xa2>
 8002148:	4666      	mov	r6, ip
 800214a:	431e      	orrs	r6, r3
 800214c:	d100      	bne.n	8002150 <__aeabi_dsub+0x498>
 800214e:	e0be      	b.n	80022ce <__aeabi_dsub+0x616>
 8002150:	1e56      	subs	r6, r2, #1
 8002152:	2a01      	cmp	r2, #1
 8002154:	d100      	bne.n	8002158 <__aeabi_dsub+0x4a0>
 8002156:	e109      	b.n	800236c <__aeabi_dsub+0x6b4>
 8002158:	4c8c      	ldr	r4, [pc, #560]	; (800238c <__aeabi_dsub+0x6d4>)
 800215a:	42a2      	cmp	r2, r4
 800215c:	d100      	bne.n	8002160 <__aeabi_dsub+0x4a8>
 800215e:	e119      	b.n	8002394 <__aeabi_dsub+0x6dc>
 8002160:	0032      	movs	r2, r6
 8002162:	e6c1      	b.n	8001ee8 <__aeabi_dsub+0x230>
 8002164:	4642      	mov	r2, r8
 8002166:	2400      	movs	r4, #0
 8002168:	2300      	movs	r3, #0
 800216a:	e648      	b.n	8001dfe <__aeabi_dsub+0x146>
 800216c:	2020      	movs	r0, #32
 800216e:	000c      	movs	r4, r1
 8002170:	1a80      	subs	r0, r0, r2
 8002172:	003e      	movs	r6, r7
 8002174:	4087      	lsls	r7, r0
 8002176:	4084      	lsls	r4, r0
 8002178:	40d6      	lsrs	r6, r2
 800217a:	1e78      	subs	r0, r7, #1
 800217c:	4187      	sbcs	r7, r0
 800217e:	40d1      	lsrs	r1, r2
 8002180:	4334      	orrs	r4, r6
 8002182:	433c      	orrs	r4, r7
 8002184:	448c      	add	ip, r1
 8002186:	e7a4      	b.n	80020d2 <__aeabi_dsub+0x41a>
 8002188:	4a80      	ldr	r2, [pc, #512]	; (800238c <__aeabi_dsub+0x6d4>)
 800218a:	4290      	cmp	r0, r2
 800218c:	d100      	bne.n	8002190 <__aeabi_dsub+0x4d8>
 800218e:	e0e9      	b.n	8002364 <__aeabi_dsub+0x6ac>
 8002190:	19df      	adds	r7, r3, r7
 8002192:	429f      	cmp	r7, r3
 8002194:	419b      	sbcs	r3, r3
 8002196:	4461      	add	r1, ip
 8002198:	425b      	negs	r3, r3
 800219a:	18c9      	adds	r1, r1, r3
 800219c:	07cc      	lsls	r4, r1, #31
 800219e:	087f      	lsrs	r7, r7, #1
 80021a0:	084b      	lsrs	r3, r1, #1
 80021a2:	4699      	mov	r9, r3
 80021a4:	4680      	mov	r8, r0
 80021a6:	433c      	orrs	r4, r7
 80021a8:	e6f4      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 80021aa:	1afc      	subs	r4, r7, r3
 80021ac:	42a7      	cmp	r7, r4
 80021ae:	41bf      	sbcs	r7, r7
 80021b0:	4663      	mov	r3, ip
 80021b2:	427f      	negs	r7, r7
 80021b4:	1ac9      	subs	r1, r1, r3
 80021b6:	1bcb      	subs	r3, r1, r7
 80021b8:	4699      	mov	r9, r3
 80021ba:	465d      	mov	r5, fp
 80021bc:	e5d5      	b.n	8001d6a <__aeabi_dsub+0xb2>
 80021be:	08ff      	lsrs	r7, r7, #3
 80021c0:	074b      	lsls	r3, r1, #29
 80021c2:	465d      	mov	r5, fp
 80021c4:	433b      	orrs	r3, r7
 80021c6:	08cc      	lsrs	r4, r1, #3
 80021c8:	e6ee      	b.n	8001fa8 <__aeabi_dsub+0x2f0>
 80021ca:	4662      	mov	r2, ip
 80021cc:	431a      	orrs	r2, r3
 80021ce:	d000      	beq.n	80021d2 <__aeabi_dsub+0x51a>
 80021d0:	e082      	b.n	80022d8 <__aeabi_dsub+0x620>
 80021d2:	000b      	movs	r3, r1
 80021d4:	433b      	orrs	r3, r7
 80021d6:	d11b      	bne.n	8002210 <__aeabi_dsub+0x558>
 80021d8:	2480      	movs	r4, #128	; 0x80
 80021da:	2500      	movs	r5, #0
 80021dc:	0324      	lsls	r4, r4, #12
 80021de:	e6f9      	b.n	8001fd4 <__aeabi_dsub+0x31c>
 80021e0:	19dc      	adds	r4, r3, r7
 80021e2:	429c      	cmp	r4, r3
 80021e4:	419b      	sbcs	r3, r3
 80021e6:	4461      	add	r1, ip
 80021e8:	4689      	mov	r9, r1
 80021ea:	425b      	negs	r3, r3
 80021ec:	4499      	add	r9, r3
 80021ee:	464b      	mov	r3, r9
 80021f0:	021b      	lsls	r3, r3, #8
 80021f2:	d444      	bmi.n	800227e <__aeabi_dsub+0x5c6>
 80021f4:	2301      	movs	r3, #1
 80021f6:	4698      	mov	r8, r3
 80021f8:	e6cc      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 80021fa:	1bdc      	subs	r4, r3, r7
 80021fc:	4662      	mov	r2, ip
 80021fe:	42a3      	cmp	r3, r4
 8002200:	419b      	sbcs	r3, r3
 8002202:	1a51      	subs	r1, r2, r1
 8002204:	425b      	negs	r3, r3
 8002206:	1acb      	subs	r3, r1, r3
 8002208:	4699      	mov	r9, r3
 800220a:	2301      	movs	r3, #1
 800220c:	4698      	mov	r8, r3
 800220e:	e5a4      	b.n	8001d5a <__aeabi_dsub+0xa2>
 8002210:	08ff      	lsrs	r7, r7, #3
 8002212:	074b      	lsls	r3, r1, #29
 8002214:	465d      	mov	r5, fp
 8002216:	433b      	orrs	r3, r7
 8002218:	08cc      	lsrs	r4, r1, #3
 800221a:	e6d7      	b.n	8001fcc <__aeabi_dsub+0x314>
 800221c:	4662      	mov	r2, ip
 800221e:	431a      	orrs	r2, r3
 8002220:	0014      	movs	r4, r2
 8002222:	1e63      	subs	r3, r4, #1
 8002224:	419c      	sbcs	r4, r3
 8002226:	e679      	b.n	8001f1c <__aeabi_dsub+0x264>
 8002228:	0015      	movs	r5, r2
 800222a:	4664      	mov	r4, ip
 800222c:	3d20      	subs	r5, #32
 800222e:	40ec      	lsrs	r4, r5
 8002230:	46a0      	mov	r8, r4
 8002232:	2a20      	cmp	r2, #32
 8002234:	d005      	beq.n	8002242 <__aeabi_dsub+0x58a>
 8002236:	2540      	movs	r5, #64	; 0x40
 8002238:	4664      	mov	r4, ip
 800223a:	1aaa      	subs	r2, r5, r2
 800223c:	4094      	lsls	r4, r2
 800223e:	4323      	orrs	r3, r4
 8002240:	469a      	mov	sl, r3
 8002242:	4654      	mov	r4, sl
 8002244:	1e63      	subs	r3, r4, #1
 8002246:	419c      	sbcs	r4, r3
 8002248:	4643      	mov	r3, r8
 800224a:	4323      	orrs	r3, r4
 800224c:	e773      	b.n	8002136 <__aeabi_dsub+0x47e>
 800224e:	4662      	mov	r2, ip
 8002250:	431a      	orrs	r2, r3
 8002252:	d023      	beq.n	800229c <__aeabi_dsub+0x5e4>
 8002254:	000a      	movs	r2, r1
 8002256:	433a      	orrs	r2, r7
 8002258:	d000      	beq.n	800225c <__aeabi_dsub+0x5a4>
 800225a:	e0a0      	b.n	800239e <__aeabi_dsub+0x6e6>
 800225c:	4662      	mov	r2, ip
 800225e:	08db      	lsrs	r3, r3, #3
 8002260:	0752      	lsls	r2, r2, #29
 8002262:	4313      	orrs	r3, r2
 8002264:	4662      	mov	r2, ip
 8002266:	08d4      	lsrs	r4, r2, #3
 8002268:	e6b0      	b.n	8001fcc <__aeabi_dsub+0x314>
 800226a:	000b      	movs	r3, r1
 800226c:	433b      	orrs	r3, r7
 800226e:	d100      	bne.n	8002272 <__aeabi_dsub+0x5ba>
 8002270:	e728      	b.n	80020c4 <__aeabi_dsub+0x40c>
 8002272:	08ff      	lsrs	r7, r7, #3
 8002274:	074b      	lsls	r3, r1, #29
 8002276:	465d      	mov	r5, fp
 8002278:	433b      	orrs	r3, r7
 800227a:	08cc      	lsrs	r4, r1, #3
 800227c:	e697      	b.n	8001fae <__aeabi_dsub+0x2f6>
 800227e:	2302      	movs	r3, #2
 8002280:	4698      	mov	r8, r3
 8002282:	e736      	b.n	80020f2 <__aeabi_dsub+0x43a>
 8002284:	1afc      	subs	r4, r7, r3
 8002286:	42a7      	cmp	r7, r4
 8002288:	41bf      	sbcs	r7, r7
 800228a:	4663      	mov	r3, ip
 800228c:	427f      	negs	r7, r7
 800228e:	1ac9      	subs	r1, r1, r3
 8002290:	1bcb      	subs	r3, r1, r7
 8002292:	4699      	mov	r9, r3
 8002294:	2301      	movs	r3, #1
 8002296:	465d      	mov	r5, fp
 8002298:	4698      	mov	r8, r3
 800229a:	e55e      	b.n	8001d5a <__aeabi_dsub+0xa2>
 800229c:	074b      	lsls	r3, r1, #29
 800229e:	08ff      	lsrs	r7, r7, #3
 80022a0:	433b      	orrs	r3, r7
 80022a2:	08cc      	lsrs	r4, r1, #3
 80022a4:	e692      	b.n	8001fcc <__aeabi_dsub+0x314>
 80022a6:	1bdc      	subs	r4, r3, r7
 80022a8:	4660      	mov	r0, ip
 80022aa:	42a3      	cmp	r3, r4
 80022ac:	41b6      	sbcs	r6, r6
 80022ae:	1a40      	subs	r0, r0, r1
 80022b0:	4276      	negs	r6, r6
 80022b2:	1b80      	subs	r0, r0, r6
 80022b4:	4681      	mov	r9, r0
 80022b6:	0200      	lsls	r0, r0, #8
 80022b8:	d560      	bpl.n	800237c <__aeabi_dsub+0x6c4>
 80022ba:	1afc      	subs	r4, r7, r3
 80022bc:	42a7      	cmp	r7, r4
 80022be:	41bf      	sbcs	r7, r7
 80022c0:	4663      	mov	r3, ip
 80022c2:	427f      	negs	r7, r7
 80022c4:	1ac9      	subs	r1, r1, r3
 80022c6:	1bcb      	subs	r3, r1, r7
 80022c8:	4699      	mov	r9, r3
 80022ca:	465d      	mov	r5, fp
 80022cc:	e576      	b.n	8001dbc <__aeabi_dsub+0x104>
 80022ce:	08ff      	lsrs	r7, r7, #3
 80022d0:	074b      	lsls	r3, r1, #29
 80022d2:	433b      	orrs	r3, r7
 80022d4:	08cc      	lsrs	r4, r1, #3
 80022d6:	e667      	b.n	8001fa8 <__aeabi_dsub+0x2f0>
 80022d8:	000a      	movs	r2, r1
 80022da:	08db      	lsrs	r3, r3, #3
 80022dc:	433a      	orrs	r2, r7
 80022de:	d100      	bne.n	80022e2 <__aeabi_dsub+0x62a>
 80022e0:	e66f      	b.n	8001fc2 <__aeabi_dsub+0x30a>
 80022e2:	4662      	mov	r2, ip
 80022e4:	0752      	lsls	r2, r2, #29
 80022e6:	4313      	orrs	r3, r2
 80022e8:	4662      	mov	r2, ip
 80022ea:	08d4      	lsrs	r4, r2, #3
 80022ec:	2280      	movs	r2, #128	; 0x80
 80022ee:	0312      	lsls	r2, r2, #12
 80022f0:	4214      	tst	r4, r2
 80022f2:	d007      	beq.n	8002304 <__aeabi_dsub+0x64c>
 80022f4:	08c8      	lsrs	r0, r1, #3
 80022f6:	4210      	tst	r0, r2
 80022f8:	d104      	bne.n	8002304 <__aeabi_dsub+0x64c>
 80022fa:	465d      	mov	r5, fp
 80022fc:	0004      	movs	r4, r0
 80022fe:	08fb      	lsrs	r3, r7, #3
 8002300:	0749      	lsls	r1, r1, #29
 8002302:	430b      	orrs	r3, r1
 8002304:	0f5a      	lsrs	r2, r3, #29
 8002306:	00db      	lsls	r3, r3, #3
 8002308:	08db      	lsrs	r3, r3, #3
 800230a:	0752      	lsls	r2, r2, #29
 800230c:	4313      	orrs	r3, r2
 800230e:	e65d      	b.n	8001fcc <__aeabi_dsub+0x314>
 8002310:	074b      	lsls	r3, r1, #29
 8002312:	08ff      	lsrs	r7, r7, #3
 8002314:	433b      	orrs	r3, r7
 8002316:	08cc      	lsrs	r4, r1, #3
 8002318:	e649      	b.n	8001fae <__aeabi_dsub+0x2f6>
 800231a:	19dc      	adds	r4, r3, r7
 800231c:	429c      	cmp	r4, r3
 800231e:	419b      	sbcs	r3, r3
 8002320:	4461      	add	r1, ip
 8002322:	4689      	mov	r9, r1
 8002324:	425b      	negs	r3, r3
 8002326:	4499      	add	r9, r3
 8002328:	464b      	mov	r3, r9
 800232a:	021b      	lsls	r3, r3, #8
 800232c:	d400      	bmi.n	8002330 <__aeabi_dsub+0x678>
 800232e:	e631      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 8002330:	464a      	mov	r2, r9
 8002332:	4b17      	ldr	r3, [pc, #92]	; (8002390 <__aeabi_dsub+0x6d8>)
 8002334:	401a      	ands	r2, r3
 8002336:	2301      	movs	r3, #1
 8002338:	4691      	mov	r9, r2
 800233a:	4698      	mov	r8, r3
 800233c:	e62a      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 800233e:	0016      	movs	r6, r2
 8002340:	4664      	mov	r4, ip
 8002342:	3e20      	subs	r6, #32
 8002344:	40f4      	lsrs	r4, r6
 8002346:	46a0      	mov	r8, r4
 8002348:	2a20      	cmp	r2, #32
 800234a:	d005      	beq.n	8002358 <__aeabi_dsub+0x6a0>
 800234c:	2640      	movs	r6, #64	; 0x40
 800234e:	4664      	mov	r4, ip
 8002350:	1ab2      	subs	r2, r6, r2
 8002352:	4094      	lsls	r4, r2
 8002354:	4323      	orrs	r3, r4
 8002356:	469a      	mov	sl, r3
 8002358:	4654      	mov	r4, sl
 800235a:	1e63      	subs	r3, r4, #1
 800235c:	419c      	sbcs	r4, r3
 800235e:	4643      	mov	r3, r8
 8002360:	431c      	orrs	r4, r3
 8002362:	e5db      	b.n	8001f1c <__aeabi_dsub+0x264>
 8002364:	0002      	movs	r2, r0
 8002366:	2400      	movs	r4, #0
 8002368:	2300      	movs	r3, #0
 800236a:	e548      	b.n	8001dfe <__aeabi_dsub+0x146>
 800236c:	19dc      	adds	r4, r3, r7
 800236e:	42bc      	cmp	r4, r7
 8002370:	41bf      	sbcs	r7, r7
 8002372:	4461      	add	r1, ip
 8002374:	4689      	mov	r9, r1
 8002376:	427f      	negs	r7, r7
 8002378:	44b9      	add	r9, r7
 800237a:	e738      	b.n	80021ee <__aeabi_dsub+0x536>
 800237c:	464b      	mov	r3, r9
 800237e:	4323      	orrs	r3, r4
 8002380:	d100      	bne.n	8002384 <__aeabi_dsub+0x6cc>
 8002382:	e69f      	b.n	80020c4 <__aeabi_dsub+0x40c>
 8002384:	e606      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 8002386:	46c0      	nop			; (mov r8, r8)
 8002388:	000007fe 	.word	0x000007fe
 800238c:	000007ff 	.word	0x000007ff
 8002390:	ff7fffff 	.word	0xff7fffff
 8002394:	08ff      	lsrs	r7, r7, #3
 8002396:	074b      	lsls	r3, r1, #29
 8002398:	433b      	orrs	r3, r7
 800239a:	08cc      	lsrs	r4, r1, #3
 800239c:	e616      	b.n	8001fcc <__aeabi_dsub+0x314>
 800239e:	4662      	mov	r2, ip
 80023a0:	08db      	lsrs	r3, r3, #3
 80023a2:	0752      	lsls	r2, r2, #29
 80023a4:	4313      	orrs	r3, r2
 80023a6:	4662      	mov	r2, ip
 80023a8:	08d4      	lsrs	r4, r2, #3
 80023aa:	2280      	movs	r2, #128	; 0x80
 80023ac:	0312      	lsls	r2, r2, #12
 80023ae:	4214      	tst	r4, r2
 80023b0:	d007      	beq.n	80023c2 <__aeabi_dsub+0x70a>
 80023b2:	08c8      	lsrs	r0, r1, #3
 80023b4:	4210      	tst	r0, r2
 80023b6:	d104      	bne.n	80023c2 <__aeabi_dsub+0x70a>
 80023b8:	465d      	mov	r5, fp
 80023ba:	0004      	movs	r4, r0
 80023bc:	08fb      	lsrs	r3, r7, #3
 80023be:	0749      	lsls	r1, r1, #29
 80023c0:	430b      	orrs	r3, r1
 80023c2:	0f5a      	lsrs	r2, r3, #29
 80023c4:	00db      	lsls	r3, r3, #3
 80023c6:	0752      	lsls	r2, r2, #29
 80023c8:	08db      	lsrs	r3, r3, #3
 80023ca:	4313      	orrs	r3, r2
 80023cc:	e5fe      	b.n	8001fcc <__aeabi_dsub+0x314>
 80023ce:	2300      	movs	r3, #0
 80023d0:	4a01      	ldr	r2, [pc, #4]	; (80023d8 <__aeabi_dsub+0x720>)
 80023d2:	001c      	movs	r4, r3
 80023d4:	e513      	b.n	8001dfe <__aeabi_dsub+0x146>
 80023d6:	46c0      	nop			; (mov r8, r8)
 80023d8:	000007ff 	.word	0x000007ff

080023dc <__aeabi_dcmpun>:
 80023dc:	b570      	push	{r4, r5, r6, lr}
 80023de:	0005      	movs	r5, r0
 80023e0:	480c      	ldr	r0, [pc, #48]	; (8002414 <__aeabi_dcmpun+0x38>)
 80023e2:	031c      	lsls	r4, r3, #12
 80023e4:	0016      	movs	r6, r2
 80023e6:	005b      	lsls	r3, r3, #1
 80023e8:	030a      	lsls	r2, r1, #12
 80023ea:	0049      	lsls	r1, r1, #1
 80023ec:	0b12      	lsrs	r2, r2, #12
 80023ee:	0d49      	lsrs	r1, r1, #21
 80023f0:	0b24      	lsrs	r4, r4, #12
 80023f2:	0d5b      	lsrs	r3, r3, #21
 80023f4:	4281      	cmp	r1, r0
 80023f6:	d008      	beq.n	800240a <__aeabi_dcmpun+0x2e>
 80023f8:	4a06      	ldr	r2, [pc, #24]	; (8002414 <__aeabi_dcmpun+0x38>)
 80023fa:	2000      	movs	r0, #0
 80023fc:	4293      	cmp	r3, r2
 80023fe:	d103      	bne.n	8002408 <__aeabi_dcmpun+0x2c>
 8002400:	0020      	movs	r0, r4
 8002402:	4330      	orrs	r0, r6
 8002404:	1e43      	subs	r3, r0, #1
 8002406:	4198      	sbcs	r0, r3
 8002408:	bd70      	pop	{r4, r5, r6, pc}
 800240a:	2001      	movs	r0, #1
 800240c:	432a      	orrs	r2, r5
 800240e:	d1fb      	bne.n	8002408 <__aeabi_dcmpun+0x2c>
 8002410:	e7f2      	b.n	80023f8 <__aeabi_dcmpun+0x1c>
 8002412:	46c0      	nop			; (mov r8, r8)
 8002414:	000007ff 	.word	0x000007ff

08002418 <__aeabi_d2iz>:
 8002418:	000a      	movs	r2, r1
 800241a:	b530      	push	{r4, r5, lr}
 800241c:	4c13      	ldr	r4, [pc, #76]	; (800246c <__aeabi_d2iz+0x54>)
 800241e:	0053      	lsls	r3, r2, #1
 8002420:	0309      	lsls	r1, r1, #12
 8002422:	0005      	movs	r5, r0
 8002424:	0b09      	lsrs	r1, r1, #12
 8002426:	2000      	movs	r0, #0
 8002428:	0d5b      	lsrs	r3, r3, #21
 800242a:	0fd2      	lsrs	r2, r2, #31
 800242c:	42a3      	cmp	r3, r4
 800242e:	dd04      	ble.n	800243a <__aeabi_d2iz+0x22>
 8002430:	480f      	ldr	r0, [pc, #60]	; (8002470 <__aeabi_d2iz+0x58>)
 8002432:	4283      	cmp	r3, r0
 8002434:	dd02      	ble.n	800243c <__aeabi_d2iz+0x24>
 8002436:	4b0f      	ldr	r3, [pc, #60]	; (8002474 <__aeabi_d2iz+0x5c>)
 8002438:	18d0      	adds	r0, r2, r3
 800243a:	bd30      	pop	{r4, r5, pc}
 800243c:	2080      	movs	r0, #128	; 0x80
 800243e:	0340      	lsls	r0, r0, #13
 8002440:	4301      	orrs	r1, r0
 8002442:	480d      	ldr	r0, [pc, #52]	; (8002478 <__aeabi_d2iz+0x60>)
 8002444:	1ac0      	subs	r0, r0, r3
 8002446:	281f      	cmp	r0, #31
 8002448:	dd08      	ble.n	800245c <__aeabi_d2iz+0x44>
 800244a:	480c      	ldr	r0, [pc, #48]	; (800247c <__aeabi_d2iz+0x64>)
 800244c:	1ac3      	subs	r3, r0, r3
 800244e:	40d9      	lsrs	r1, r3
 8002450:	000b      	movs	r3, r1
 8002452:	4258      	negs	r0, r3
 8002454:	2a00      	cmp	r2, #0
 8002456:	d1f0      	bne.n	800243a <__aeabi_d2iz+0x22>
 8002458:	0018      	movs	r0, r3
 800245a:	e7ee      	b.n	800243a <__aeabi_d2iz+0x22>
 800245c:	4c08      	ldr	r4, [pc, #32]	; (8002480 <__aeabi_d2iz+0x68>)
 800245e:	40c5      	lsrs	r5, r0
 8002460:	46a4      	mov	ip, r4
 8002462:	4463      	add	r3, ip
 8002464:	4099      	lsls	r1, r3
 8002466:	000b      	movs	r3, r1
 8002468:	432b      	orrs	r3, r5
 800246a:	e7f2      	b.n	8002452 <__aeabi_d2iz+0x3a>
 800246c:	000003fe 	.word	0x000003fe
 8002470:	0000041d 	.word	0x0000041d
 8002474:	7fffffff 	.word	0x7fffffff
 8002478:	00000433 	.word	0x00000433
 800247c:	00000413 	.word	0x00000413
 8002480:	fffffbed 	.word	0xfffffbed

08002484 <__aeabi_i2d>:
 8002484:	b570      	push	{r4, r5, r6, lr}
 8002486:	2800      	cmp	r0, #0
 8002488:	d016      	beq.n	80024b8 <__aeabi_i2d+0x34>
 800248a:	17c3      	asrs	r3, r0, #31
 800248c:	18c5      	adds	r5, r0, r3
 800248e:	405d      	eors	r5, r3
 8002490:	0fc4      	lsrs	r4, r0, #31
 8002492:	0028      	movs	r0, r5
 8002494:	f000 f894 	bl	80025c0 <__clzsi2>
 8002498:	4a11      	ldr	r2, [pc, #68]	; (80024e0 <__aeabi_i2d+0x5c>)
 800249a:	1a12      	subs	r2, r2, r0
 800249c:	280a      	cmp	r0, #10
 800249e:	dc16      	bgt.n	80024ce <__aeabi_i2d+0x4a>
 80024a0:	0003      	movs	r3, r0
 80024a2:	002e      	movs	r6, r5
 80024a4:	3315      	adds	r3, #21
 80024a6:	409e      	lsls	r6, r3
 80024a8:	230b      	movs	r3, #11
 80024aa:	1a18      	subs	r0, r3, r0
 80024ac:	40c5      	lsrs	r5, r0
 80024ae:	0552      	lsls	r2, r2, #21
 80024b0:	032d      	lsls	r5, r5, #12
 80024b2:	0b2d      	lsrs	r5, r5, #12
 80024b4:	0d53      	lsrs	r3, r2, #21
 80024b6:	e003      	b.n	80024c0 <__aeabi_i2d+0x3c>
 80024b8:	2400      	movs	r4, #0
 80024ba:	2300      	movs	r3, #0
 80024bc:	2500      	movs	r5, #0
 80024be:	2600      	movs	r6, #0
 80024c0:	051b      	lsls	r3, r3, #20
 80024c2:	432b      	orrs	r3, r5
 80024c4:	07e4      	lsls	r4, r4, #31
 80024c6:	4323      	orrs	r3, r4
 80024c8:	0030      	movs	r0, r6
 80024ca:	0019      	movs	r1, r3
 80024cc:	bd70      	pop	{r4, r5, r6, pc}
 80024ce:	380b      	subs	r0, #11
 80024d0:	4085      	lsls	r5, r0
 80024d2:	0552      	lsls	r2, r2, #21
 80024d4:	032d      	lsls	r5, r5, #12
 80024d6:	2600      	movs	r6, #0
 80024d8:	0b2d      	lsrs	r5, r5, #12
 80024da:	0d53      	lsrs	r3, r2, #21
 80024dc:	e7f0      	b.n	80024c0 <__aeabi_i2d+0x3c>
 80024de:	46c0      	nop			; (mov r8, r8)
 80024e0:	0000041e 	.word	0x0000041e

080024e4 <__aeabi_ui2d>:
 80024e4:	b510      	push	{r4, lr}
 80024e6:	1e04      	subs	r4, r0, #0
 80024e8:	d010      	beq.n	800250c <__aeabi_ui2d+0x28>
 80024ea:	f000 f869 	bl	80025c0 <__clzsi2>
 80024ee:	4b0f      	ldr	r3, [pc, #60]	; (800252c <__aeabi_ui2d+0x48>)
 80024f0:	1a1b      	subs	r3, r3, r0
 80024f2:	280a      	cmp	r0, #10
 80024f4:	dc11      	bgt.n	800251a <__aeabi_ui2d+0x36>
 80024f6:	220b      	movs	r2, #11
 80024f8:	0021      	movs	r1, r4
 80024fa:	1a12      	subs	r2, r2, r0
 80024fc:	40d1      	lsrs	r1, r2
 80024fe:	3015      	adds	r0, #21
 8002500:	030a      	lsls	r2, r1, #12
 8002502:	055b      	lsls	r3, r3, #21
 8002504:	4084      	lsls	r4, r0
 8002506:	0b12      	lsrs	r2, r2, #12
 8002508:	0d5b      	lsrs	r3, r3, #21
 800250a:	e001      	b.n	8002510 <__aeabi_ui2d+0x2c>
 800250c:	2300      	movs	r3, #0
 800250e:	2200      	movs	r2, #0
 8002510:	051b      	lsls	r3, r3, #20
 8002512:	4313      	orrs	r3, r2
 8002514:	0020      	movs	r0, r4
 8002516:	0019      	movs	r1, r3
 8002518:	bd10      	pop	{r4, pc}
 800251a:	0022      	movs	r2, r4
 800251c:	380b      	subs	r0, #11
 800251e:	4082      	lsls	r2, r0
 8002520:	055b      	lsls	r3, r3, #21
 8002522:	0312      	lsls	r2, r2, #12
 8002524:	2400      	movs	r4, #0
 8002526:	0b12      	lsrs	r2, r2, #12
 8002528:	0d5b      	lsrs	r3, r3, #21
 800252a:	e7f1      	b.n	8002510 <__aeabi_ui2d+0x2c>
 800252c:	0000041e 	.word	0x0000041e

08002530 <__aeabi_f2d>:
 8002530:	b570      	push	{r4, r5, r6, lr}
 8002532:	0043      	lsls	r3, r0, #1
 8002534:	0246      	lsls	r6, r0, #9
 8002536:	0fc4      	lsrs	r4, r0, #31
 8002538:	20fe      	movs	r0, #254	; 0xfe
 800253a:	0e1b      	lsrs	r3, r3, #24
 800253c:	1c59      	adds	r1, r3, #1
 800253e:	0a75      	lsrs	r5, r6, #9
 8002540:	4208      	tst	r0, r1
 8002542:	d00c      	beq.n	800255e <__aeabi_f2d+0x2e>
 8002544:	22e0      	movs	r2, #224	; 0xe0
 8002546:	0092      	lsls	r2, r2, #2
 8002548:	4694      	mov	ip, r2
 800254a:	076d      	lsls	r5, r5, #29
 800254c:	0b36      	lsrs	r6, r6, #12
 800254e:	4463      	add	r3, ip
 8002550:	051b      	lsls	r3, r3, #20
 8002552:	4333      	orrs	r3, r6
 8002554:	07e4      	lsls	r4, r4, #31
 8002556:	4323      	orrs	r3, r4
 8002558:	0028      	movs	r0, r5
 800255a:	0019      	movs	r1, r3
 800255c:	bd70      	pop	{r4, r5, r6, pc}
 800255e:	2b00      	cmp	r3, #0
 8002560:	d114      	bne.n	800258c <__aeabi_f2d+0x5c>
 8002562:	2d00      	cmp	r5, #0
 8002564:	d01b      	beq.n	800259e <__aeabi_f2d+0x6e>
 8002566:	0028      	movs	r0, r5
 8002568:	f000 f82a 	bl	80025c0 <__clzsi2>
 800256c:	280a      	cmp	r0, #10
 800256e:	dc1c      	bgt.n	80025aa <__aeabi_f2d+0x7a>
 8002570:	230b      	movs	r3, #11
 8002572:	002e      	movs	r6, r5
 8002574:	1a1b      	subs	r3, r3, r0
 8002576:	40de      	lsrs	r6, r3
 8002578:	0003      	movs	r3, r0
 800257a:	3315      	adds	r3, #21
 800257c:	409d      	lsls	r5, r3
 800257e:	4a0e      	ldr	r2, [pc, #56]	; (80025b8 <__aeabi_f2d+0x88>)
 8002580:	0336      	lsls	r6, r6, #12
 8002582:	1a12      	subs	r2, r2, r0
 8002584:	0552      	lsls	r2, r2, #21
 8002586:	0b36      	lsrs	r6, r6, #12
 8002588:	0d53      	lsrs	r3, r2, #21
 800258a:	e7e1      	b.n	8002550 <__aeabi_f2d+0x20>
 800258c:	2d00      	cmp	r5, #0
 800258e:	d009      	beq.n	80025a4 <__aeabi_f2d+0x74>
 8002590:	2280      	movs	r2, #128	; 0x80
 8002592:	0b36      	lsrs	r6, r6, #12
 8002594:	0312      	lsls	r2, r2, #12
 8002596:	4b09      	ldr	r3, [pc, #36]	; (80025bc <__aeabi_f2d+0x8c>)
 8002598:	076d      	lsls	r5, r5, #29
 800259a:	4316      	orrs	r6, r2
 800259c:	e7d8      	b.n	8002550 <__aeabi_f2d+0x20>
 800259e:	2300      	movs	r3, #0
 80025a0:	2600      	movs	r6, #0
 80025a2:	e7d5      	b.n	8002550 <__aeabi_f2d+0x20>
 80025a4:	2600      	movs	r6, #0
 80025a6:	4b05      	ldr	r3, [pc, #20]	; (80025bc <__aeabi_f2d+0x8c>)
 80025a8:	e7d2      	b.n	8002550 <__aeabi_f2d+0x20>
 80025aa:	0003      	movs	r3, r0
 80025ac:	3b0b      	subs	r3, #11
 80025ae:	409d      	lsls	r5, r3
 80025b0:	002e      	movs	r6, r5
 80025b2:	2500      	movs	r5, #0
 80025b4:	e7e3      	b.n	800257e <__aeabi_f2d+0x4e>
 80025b6:	46c0      	nop			; (mov r8, r8)
 80025b8:	00000389 	.word	0x00000389
 80025bc:	000007ff 	.word	0x000007ff

080025c0 <__clzsi2>:
 80025c0:	211c      	movs	r1, #28
 80025c2:	2301      	movs	r3, #1
 80025c4:	041b      	lsls	r3, r3, #16
 80025c6:	4298      	cmp	r0, r3
 80025c8:	d301      	bcc.n	80025ce <__clzsi2+0xe>
 80025ca:	0c00      	lsrs	r0, r0, #16
 80025cc:	3910      	subs	r1, #16
 80025ce:	0a1b      	lsrs	r3, r3, #8
 80025d0:	4298      	cmp	r0, r3
 80025d2:	d301      	bcc.n	80025d8 <__clzsi2+0x18>
 80025d4:	0a00      	lsrs	r0, r0, #8
 80025d6:	3908      	subs	r1, #8
 80025d8:	091b      	lsrs	r3, r3, #4
 80025da:	4298      	cmp	r0, r3
 80025dc:	d301      	bcc.n	80025e2 <__clzsi2+0x22>
 80025de:	0900      	lsrs	r0, r0, #4
 80025e0:	3904      	subs	r1, #4
 80025e2:	a202      	add	r2, pc, #8	; (adr r2, 80025ec <__clzsi2+0x2c>)
 80025e4:	5c10      	ldrb	r0, [r2, r0]
 80025e6:	1840      	adds	r0, r0, r1
 80025e8:	4770      	bx	lr
 80025ea:	46c0      	nop			; (mov r8, r8)
 80025ec:	02020304 	.word	0x02020304
 80025f0:	01010101 	.word	0x01010101
	...

080025fc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80025fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80025fe:	4cfe      	ldr	r4, [pc, #1016]	; (80029f8 <main+0x3fc>)
 8002600:	44a5      	add	sp, r4
 8002602:	af0e      	add	r7, sp, #56	; 0x38
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002604:	f001 febe 	bl	8004384 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002608:	f001 fc3a 	bl	8003e80 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800260c:	f001 fcb2 	bl	8003f74 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8002610:	f001 fc80 	bl	8003f14 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  //HAL_UART_Receive_IT(&huart2, rxdata,4);

  // data is used to imitate the data that will be gathered from the sense HAT in future.
  float data[][13]={{0.093999997,12,-0.0018,-0.0024,4.488900185,-0.061000001,-0.061000001,0,30.37709999},
 8002614:	4bf9      	ldr	r3, [pc, #996]	; (80029fc <main+0x400>)
 8002616:	4cfa      	ldr	r4, [pc, #1000]	; (8002a00 <main+0x404>)
 8002618:	191b      	adds	r3, r3, r4
 800261a:	2228      	movs	r2, #40	; 0x28
 800261c:	4694      	mov	ip, r2
 800261e:	44bc      	add	ip, r7
 8002620:	4463      	add	r3, ip
 8002622:	0018      	movs	r0, r3
 8002624:	4bf7      	ldr	r3, [pc, #988]	; (8002a04 <main+0x408>)
 8002626:	001a      	movs	r2, r3
 8002628:	2100      	movs	r1, #0
 800262a:	f003 f9e5 	bl	80059f8 <memset>
 800262e:	4bf3      	ldr	r3, [pc, #972]	; (80029fc <main+0x400>)
 8002630:	0020      	movs	r0, r4
 8002632:	181b      	adds	r3, r3, r0
 8002634:	2228      	movs	r2, #40	; 0x28
 8002636:	4694      	mov	ip, r2
 8002638:	44bc      	add	ip, r7
 800263a:	4463      	add	r3, ip
 800263c:	4af2      	ldr	r2, [pc, #968]	; (8002a08 <main+0x40c>)
 800263e:	601a      	str	r2, [r3, #0]
 8002640:	4bee      	ldr	r3, [pc, #952]	; (80029fc <main+0x400>)
 8002642:	181b      	adds	r3, r3, r0
 8002644:	2228      	movs	r2, #40	; 0x28
 8002646:	4694      	mov	ip, r2
 8002648:	44bc      	add	ip, r7
 800264a:	4463      	add	r3, ip
 800264c:	4aef      	ldr	r2, [pc, #956]	; (8002a0c <main+0x410>)
 800264e:	605a      	str	r2, [r3, #4]
 8002650:	4bea      	ldr	r3, [pc, #936]	; (80029fc <main+0x400>)
 8002652:	181b      	adds	r3, r3, r0
 8002654:	2228      	movs	r2, #40	; 0x28
 8002656:	4694      	mov	ip, r2
 8002658:	44bc      	add	ip, r7
 800265a:	4463      	add	r3, ip
 800265c:	4aec      	ldr	r2, [pc, #944]	; (8002a10 <main+0x414>)
 800265e:	609a      	str	r2, [r3, #8]
 8002660:	4be6      	ldr	r3, [pc, #920]	; (80029fc <main+0x400>)
 8002662:	181b      	adds	r3, r3, r0
 8002664:	2228      	movs	r2, #40	; 0x28
 8002666:	4694      	mov	ip, r2
 8002668:	44bc      	add	ip, r7
 800266a:	4463      	add	r3, ip
 800266c:	4ae9      	ldr	r2, [pc, #932]	; (8002a14 <main+0x418>)
 800266e:	60da      	str	r2, [r3, #12]
 8002670:	4be2      	ldr	r3, [pc, #904]	; (80029fc <main+0x400>)
 8002672:	181b      	adds	r3, r3, r0
 8002674:	2228      	movs	r2, #40	; 0x28
 8002676:	4694      	mov	ip, r2
 8002678:	44bc      	add	ip, r7
 800267a:	4463      	add	r3, ip
 800267c:	4ae6      	ldr	r2, [pc, #920]	; (8002a18 <main+0x41c>)
 800267e:	611a      	str	r2, [r3, #16]
 8002680:	4bde      	ldr	r3, [pc, #888]	; (80029fc <main+0x400>)
 8002682:	181b      	adds	r3, r3, r0
 8002684:	2228      	movs	r2, #40	; 0x28
 8002686:	4694      	mov	ip, r2
 8002688:	44bc      	add	ip, r7
 800268a:	4463      	add	r3, ip
 800268c:	4ae3      	ldr	r2, [pc, #908]	; (8002a1c <main+0x420>)
 800268e:	615a      	str	r2, [r3, #20]
 8002690:	4bda      	ldr	r3, [pc, #872]	; (80029fc <main+0x400>)
 8002692:	181b      	adds	r3, r3, r0
 8002694:	2228      	movs	r2, #40	; 0x28
 8002696:	4694      	mov	ip, r2
 8002698:	44bc      	add	ip, r7
 800269a:	4463      	add	r3, ip
 800269c:	4adf      	ldr	r2, [pc, #892]	; (8002a1c <main+0x420>)
 800269e:	619a      	str	r2, [r3, #24]
 80026a0:	4bd6      	ldr	r3, [pc, #856]	; (80029fc <main+0x400>)
 80026a2:	181b      	adds	r3, r3, r0
 80026a4:	2228      	movs	r2, #40	; 0x28
 80026a6:	4694      	mov	ip, r2
 80026a8:	44bc      	add	ip, r7
 80026aa:	4463      	add	r3, ip
 80026ac:	4adc      	ldr	r2, [pc, #880]	; (8002a20 <main+0x424>)
 80026ae:	621a      	str	r2, [r3, #32]
 80026b0:	4bd2      	ldr	r3, [pc, #840]	; (80029fc <main+0x400>)
 80026b2:	181b      	adds	r3, r3, r0
 80026b4:	2228      	movs	r2, #40	; 0x28
 80026b6:	4694      	mov	ip, r2
 80026b8:	44bc      	add	ip, r7
 80026ba:	4463      	add	r3, ip
 80026bc:	4ad9      	ldr	r2, [pc, #868]	; (8002a24 <main+0x428>)
 80026be:	635a      	str	r2, [r3, #52]	; 0x34
 80026c0:	4bce      	ldr	r3, [pc, #824]	; (80029fc <main+0x400>)
 80026c2:	181b      	adds	r3, r3, r0
 80026c4:	2228      	movs	r2, #40	; 0x28
 80026c6:	4694      	mov	ip, r2
 80026c8:	44bc      	add	ip, r7
 80026ca:	4463      	add	r3, ip
 80026cc:	4ad6      	ldr	r2, [pc, #856]	; (8002a28 <main+0x42c>)
 80026ce:	639a      	str	r2, [r3, #56]	; 0x38
 80026d0:	4bca      	ldr	r3, [pc, #808]	; (80029fc <main+0x400>)
 80026d2:	181b      	adds	r3, r3, r0
 80026d4:	2228      	movs	r2, #40	; 0x28
 80026d6:	4694      	mov	ip, r2
 80026d8:	44bc      	add	ip, r7
 80026da:	4463      	add	r3, ip
 80026dc:	4ad3      	ldr	r2, [pc, #844]	; (8002a2c <main+0x430>)
 80026de:	63da      	str	r2, [r3, #60]	; 0x3c
 80026e0:	4bc6      	ldr	r3, [pc, #792]	; (80029fc <main+0x400>)
 80026e2:	181b      	adds	r3, r3, r0
 80026e4:	2228      	movs	r2, #40	; 0x28
 80026e6:	4694      	mov	ip, r2
 80026e8:	44bc      	add	ip, r7
 80026ea:	4463      	add	r3, ip
 80026ec:	4ad0      	ldr	r2, [pc, #832]	; (8002a30 <main+0x434>)
 80026ee:	641a      	str	r2, [r3, #64]	; 0x40
 80026f0:	4bc2      	ldr	r3, [pc, #776]	; (80029fc <main+0x400>)
 80026f2:	181b      	adds	r3, r3, r0
 80026f4:	2228      	movs	r2, #40	; 0x28
 80026f6:	4694      	mov	ip, r2
 80026f8:	44bc      	add	ip, r7
 80026fa:	4463      	add	r3, ip
 80026fc:	4acd      	ldr	r2, [pc, #820]	; (8002a34 <main+0x438>)
 80026fe:	645a      	str	r2, [r3, #68]	; 0x44
 8002700:	4bbe      	ldr	r3, [pc, #760]	; (80029fc <main+0x400>)
 8002702:	181b      	adds	r3, r3, r0
 8002704:	2228      	movs	r2, #40	; 0x28
 8002706:	4694      	mov	ip, r2
 8002708:	44bc      	add	ip, r7
 800270a:	4463      	add	r3, ip
 800270c:	4ac3      	ldr	r2, [pc, #780]	; (8002a1c <main+0x420>)
 800270e:	64da      	str	r2, [r3, #76]	; 0x4c
 8002710:	4bba      	ldr	r3, [pc, #744]	; (80029fc <main+0x400>)
 8002712:	181b      	adds	r3, r3, r0
 8002714:	2228      	movs	r2, #40	; 0x28
 8002716:	4694      	mov	ip, r2
 8002718:	44bc      	add	ip, r7
 800271a:	4463      	add	r3, ip
 800271c:	4abf      	ldr	r2, [pc, #764]	; (8002a1c <main+0x420>)
 800271e:	651a      	str	r2, [r3, #80]	; 0x50
 8002720:	4bb6      	ldr	r3, [pc, #728]	; (80029fc <main+0x400>)
 8002722:	181b      	adds	r3, r3, r0
 8002724:	2228      	movs	r2, #40	; 0x28
 8002726:	4694      	mov	ip, r2
 8002728:	44bc      	add	ip, r7
 800272a:	4463      	add	r3, ip
 800272c:	4ac2      	ldr	r2, [pc, #776]	; (8002a38 <main+0x43c>)
 800272e:	655a      	str	r2, [r3, #84]	; 0x54
 8002730:	4bb2      	ldr	r3, [pc, #712]	; (80029fc <main+0x400>)
 8002732:	181b      	adds	r3, r3, r0
 8002734:	2228      	movs	r2, #40	; 0x28
 8002736:	4694      	mov	ip, r2
 8002738:	44bc      	add	ip, r7
 800273a:	4463      	add	r3, ip
 800273c:	4abf      	ldr	r2, [pc, #764]	; (8002a3c <main+0x440>)
 800273e:	669a      	str	r2, [r3, #104]	; 0x68
 8002740:	4bae      	ldr	r3, [pc, #696]	; (80029fc <main+0x400>)
 8002742:	181b      	adds	r3, r3, r0
 8002744:	2228      	movs	r2, #40	; 0x28
 8002746:	4694      	mov	ip, r2
 8002748:	44bc      	add	ip, r7
 800274a:	4463      	add	r3, ip
 800274c:	2283      	movs	r2, #131	; 0x83
 800274e:	05d2      	lsls	r2, r2, #23
 8002750:	66da      	str	r2, [r3, #108]	; 0x6c
 8002752:	4baa      	ldr	r3, [pc, #680]	; (80029fc <main+0x400>)
 8002754:	181b      	adds	r3, r3, r0
 8002756:	2228      	movs	r2, #40	; 0x28
 8002758:	4694      	mov	ip, r2
 800275a:	44bc      	add	ip, r7
 800275c:	4463      	add	r3, ip
 800275e:	4ab8      	ldr	r2, [pc, #736]	; (8002a40 <main+0x444>)
 8002760:	671a      	str	r2, [r3, #112]	; 0x70
 8002762:	4ba6      	ldr	r3, [pc, #664]	; (80029fc <main+0x400>)
 8002764:	181b      	adds	r3, r3, r0
 8002766:	2228      	movs	r2, #40	; 0x28
 8002768:	4694      	mov	ip, r2
 800276a:	44bc      	add	ip, r7
 800276c:	4463      	add	r3, ip
 800276e:	4ab5      	ldr	r2, [pc, #724]	; (8002a44 <main+0x448>)
 8002770:	675a      	str	r2, [r3, #116]	; 0x74
 8002772:	4ba2      	ldr	r3, [pc, #648]	; (80029fc <main+0x400>)
 8002774:	181b      	adds	r3, r3, r0
 8002776:	2228      	movs	r2, #40	; 0x28
 8002778:	4694      	mov	ip, r2
 800277a:	44bc      	add	ip, r7
 800277c:	4463      	add	r3, ip
 800277e:	4ab2      	ldr	r2, [pc, #712]	; (8002a48 <main+0x44c>)
 8002780:	679a      	str	r2, [r3, #120]	; 0x78
 8002782:	4b9e      	ldr	r3, [pc, #632]	; (80029fc <main+0x400>)
 8002784:	181b      	adds	r3, r3, r0
 8002786:	2228      	movs	r2, #40	; 0x28
 8002788:	4694      	mov	ip, r2
 800278a:	44bc      	add	ip, r7
 800278c:	4463      	add	r3, ip
 800278e:	4aa3      	ldr	r2, [pc, #652]	; (8002a1c <main+0x420>)
 8002790:	67da      	str	r2, [r3, #124]	; 0x7c
 8002792:	4b9a      	ldr	r3, [pc, #616]	; (80029fc <main+0x400>)
 8002794:	181b      	adds	r3, r3, r0
 8002796:	2228      	movs	r2, #40	; 0x28
 8002798:	4694      	mov	ip, r2
 800279a:	44bc      	add	ip, r7
 800279c:	4463      	add	r3, ip
 800279e:	2280      	movs	r2, #128	; 0x80
 80027a0:	499e      	ldr	r1, [pc, #632]	; (8002a1c <main+0x420>)
 80027a2:	5099      	str	r1, [r3, r2]
 80027a4:	4b95      	ldr	r3, [pc, #596]	; (80029fc <main+0x400>)
 80027a6:	181b      	adds	r3, r3, r0
 80027a8:	2228      	movs	r2, #40	; 0x28
 80027aa:	4694      	mov	ip, r2
 80027ac:	44bc      	add	ip, r7
 80027ae:	4463      	add	r3, ip
 80027b0:	2288      	movs	r2, #136	; 0x88
 80027b2:	49a6      	ldr	r1, [pc, #664]	; (8002a4c <main+0x450>)
 80027b4:	5099      	str	r1, [r3, r2]
 80027b6:	4b91      	ldr	r3, [pc, #580]	; (80029fc <main+0x400>)
 80027b8:	181b      	adds	r3, r3, r0
 80027ba:	2228      	movs	r2, #40	; 0x28
 80027bc:	4694      	mov	ip, r2
 80027be:	44bc      	add	ip, r7
 80027c0:	4463      	add	r3, ip
 80027c2:	229c      	movs	r2, #156	; 0x9c
 80027c4:	49a2      	ldr	r1, [pc, #648]	; (8002a50 <main+0x454>)
 80027c6:	5099      	str	r1, [r3, r2]
 80027c8:	4b8c      	ldr	r3, [pc, #560]	; (80029fc <main+0x400>)
 80027ca:	181b      	adds	r3, r3, r0
 80027cc:	2228      	movs	r2, #40	; 0x28
 80027ce:	4694      	mov	ip, r2
 80027d0:	44bc      	add	ip, r7
 80027d2:	4463      	add	r3, ip
 80027d4:	22a0      	movs	r2, #160	; 0xa0
 80027d6:	499f      	ldr	r1, [pc, #636]	; (8002a54 <main+0x458>)
 80027d8:	5099      	str	r1, [r3, r2]
 80027da:	4b88      	ldr	r3, [pc, #544]	; (80029fc <main+0x400>)
 80027dc:	181b      	adds	r3, r3, r0
 80027de:	2228      	movs	r2, #40	; 0x28
 80027e0:	4694      	mov	ip, r2
 80027e2:	44bc      	add	ip, r7
 80027e4:	4463      	add	r3, ip
 80027e6:	22a4      	movs	r2, #164	; 0xa4
 80027e8:	4995      	ldr	r1, [pc, #596]	; (8002a40 <main+0x444>)
 80027ea:	5099      	str	r1, [r3, r2]
 80027ec:	4b83      	ldr	r3, [pc, #524]	; (80029fc <main+0x400>)
 80027ee:	181b      	adds	r3, r3, r0
 80027f0:	2228      	movs	r2, #40	; 0x28
 80027f2:	4694      	mov	ip, r2
 80027f4:	44bc      	add	ip, r7
 80027f6:	4463      	add	r3, ip
 80027f8:	22a8      	movs	r2, #168	; 0xa8
 80027fa:	4992      	ldr	r1, [pc, #584]	; (8002a44 <main+0x448>)
 80027fc:	5099      	str	r1, [r3, r2]
 80027fe:	4b7f      	ldr	r3, [pc, #508]	; (80029fc <main+0x400>)
 8002800:	181b      	adds	r3, r3, r0
 8002802:	2228      	movs	r2, #40	; 0x28
 8002804:	4694      	mov	ip, r2
 8002806:	44bc      	add	ip, r7
 8002808:	4463      	add	r3, ip
 800280a:	22ac      	movs	r2, #172	; 0xac
 800280c:	498e      	ldr	r1, [pc, #568]	; (8002a48 <main+0x44c>)
 800280e:	5099      	str	r1, [r3, r2]
 8002810:	4b7a      	ldr	r3, [pc, #488]	; (80029fc <main+0x400>)
 8002812:	181b      	adds	r3, r3, r0
 8002814:	2228      	movs	r2, #40	; 0x28
 8002816:	4694      	mov	ip, r2
 8002818:	44bc      	add	ip, r7
 800281a:	4463      	add	r3, ip
 800281c:	22b0      	movs	r2, #176	; 0xb0
 800281e:	497f      	ldr	r1, [pc, #508]	; (8002a1c <main+0x420>)
 8002820:	5099      	str	r1, [r3, r2]
 8002822:	4b76      	ldr	r3, [pc, #472]	; (80029fc <main+0x400>)
 8002824:	181b      	adds	r3, r3, r0
 8002826:	2228      	movs	r2, #40	; 0x28
 8002828:	4694      	mov	ip, r2
 800282a:	44bc      	add	ip, r7
 800282c:	4463      	add	r3, ip
 800282e:	22b4      	movs	r2, #180	; 0xb4
 8002830:	497a      	ldr	r1, [pc, #488]	; (8002a1c <main+0x420>)
 8002832:	5099      	str	r1, [r3, r2]
 8002834:	4b71      	ldr	r3, [pc, #452]	; (80029fc <main+0x400>)
 8002836:	181b      	adds	r3, r3, r0
 8002838:	2228      	movs	r2, #40	; 0x28
 800283a:	4694      	mov	ip, r2
 800283c:	44bc      	add	ip, r7
 800283e:	4463      	add	r3, ip
 8002840:	22bc      	movs	r2, #188	; 0xbc
 8002842:	4982      	ldr	r1, [pc, #520]	; (8002a4c <main+0x450>)
 8002844:	5099      	str	r1, [r3, r2]
 8002846:	4b6d      	ldr	r3, [pc, #436]	; (80029fc <main+0x400>)
 8002848:	181b      	adds	r3, r3, r0
 800284a:	2228      	movs	r2, #40	; 0x28
 800284c:	4694      	mov	ip, r2
 800284e:	44bc      	add	ip, r7
 8002850:	4463      	add	r3, ip
 8002852:	22d0      	movs	r2, #208	; 0xd0
 8002854:	4980      	ldr	r1, [pc, #512]	; (8002a58 <main+0x45c>)
 8002856:	5099      	str	r1, [r3, r2]
 8002858:	4b68      	ldr	r3, [pc, #416]	; (80029fc <main+0x400>)
 800285a:	181b      	adds	r3, r3, r0
 800285c:	2228      	movs	r2, #40	; 0x28
 800285e:	4694      	mov	ip, r2
 8002860:	44bc      	add	ip, r7
 8002862:	4463      	add	r3, ip
 8002864:	22d4      	movs	r2, #212	; 0xd4
 8002866:	497d      	ldr	r1, [pc, #500]	; (8002a5c <main+0x460>)
 8002868:	5099      	str	r1, [r3, r2]
 800286a:	4b64      	ldr	r3, [pc, #400]	; (80029fc <main+0x400>)
 800286c:	181b      	adds	r3, r3, r0
 800286e:	2228      	movs	r2, #40	; 0x28
 8002870:	4694      	mov	ip, r2
 8002872:	44bc      	add	ip, r7
 8002874:	4463      	add	r3, ip
 8002876:	22d8      	movs	r2, #216	; 0xd8
 8002878:	4971      	ldr	r1, [pc, #452]	; (8002a40 <main+0x444>)
 800287a:	5099      	str	r1, [r3, r2]
 800287c:	4b5f      	ldr	r3, [pc, #380]	; (80029fc <main+0x400>)
 800287e:	181b      	adds	r3, r3, r0
 8002880:	2228      	movs	r2, #40	; 0x28
 8002882:	4694      	mov	ip, r2
 8002884:	44bc      	add	ip, r7
 8002886:	4463      	add	r3, ip
 8002888:	22dc      	movs	r2, #220	; 0xdc
 800288a:	496e      	ldr	r1, [pc, #440]	; (8002a44 <main+0x448>)
 800288c:	5099      	str	r1, [r3, r2]
 800288e:	4b5b      	ldr	r3, [pc, #364]	; (80029fc <main+0x400>)
 8002890:	181b      	adds	r3, r3, r0
 8002892:	2228      	movs	r2, #40	; 0x28
 8002894:	4694      	mov	ip, r2
 8002896:	44bc      	add	ip, r7
 8002898:	4463      	add	r3, ip
 800289a:	22e0      	movs	r2, #224	; 0xe0
 800289c:	496a      	ldr	r1, [pc, #424]	; (8002a48 <main+0x44c>)
 800289e:	5099      	str	r1, [r3, r2]
 80028a0:	4b56      	ldr	r3, [pc, #344]	; (80029fc <main+0x400>)
 80028a2:	181b      	adds	r3, r3, r0
 80028a4:	2228      	movs	r2, #40	; 0x28
 80028a6:	4694      	mov	ip, r2
 80028a8:	44bc      	add	ip, r7
 80028aa:	4463      	add	r3, ip
 80028ac:	22e4      	movs	r2, #228	; 0xe4
 80028ae:	495b      	ldr	r1, [pc, #364]	; (8002a1c <main+0x420>)
 80028b0:	5099      	str	r1, [r3, r2]
 80028b2:	4b52      	ldr	r3, [pc, #328]	; (80029fc <main+0x400>)
 80028b4:	181b      	adds	r3, r3, r0
 80028b6:	2228      	movs	r2, #40	; 0x28
 80028b8:	4694      	mov	ip, r2
 80028ba:	44bc      	add	ip, r7
 80028bc:	4463      	add	r3, ip
 80028be:	22e8      	movs	r2, #232	; 0xe8
 80028c0:	4956      	ldr	r1, [pc, #344]	; (8002a1c <main+0x420>)
 80028c2:	5099      	str	r1, [r3, r2]
 80028c4:	4b4d      	ldr	r3, [pc, #308]	; (80029fc <main+0x400>)
 80028c6:	181b      	adds	r3, r3, r0
 80028c8:	2228      	movs	r2, #40	; 0x28
 80028ca:	4694      	mov	ip, r2
 80028cc:	44bc      	add	ip, r7
 80028ce:	4463      	add	r3, ip
 80028d0:	22f0      	movs	r2, #240	; 0xf0
 80028d2:	495e      	ldr	r1, [pc, #376]	; (8002a4c <main+0x450>)
 80028d4:	5099      	str	r1, [r3, r2]
 80028d6:	4b49      	ldr	r3, [pc, #292]	; (80029fc <main+0x400>)
 80028d8:	181b      	adds	r3, r3, r0
 80028da:	2428      	movs	r4, #40	; 0x28
 80028dc:	193a      	adds	r2, r7, r4
 80028de:	189a      	adds	r2, r3, r2
 80028e0:	2382      	movs	r3, #130	; 0x82
 80028e2:	005b      	lsls	r3, r3, #1
 80028e4:	495e      	ldr	r1, [pc, #376]	; (8002a60 <main+0x464>)
 80028e6:	50d1      	str	r1, [r2, r3]
 80028e8:	4b44      	ldr	r3, [pc, #272]	; (80029fc <main+0x400>)
 80028ea:	181b      	adds	r3, r3, r0
 80028ec:	193a      	adds	r2, r7, r4
 80028ee:	189a      	adds	r2, r3, r2
 80028f0:	2384      	movs	r3, #132	; 0x84
 80028f2:	005b      	lsls	r3, r3, #1
 80028f4:	495b      	ldr	r1, [pc, #364]	; (8002a64 <main+0x468>)
 80028f6:	50d1      	str	r1, [r2, r3]
 80028f8:	4b40      	ldr	r3, [pc, #256]	; (80029fc <main+0x400>)
 80028fa:	181b      	adds	r3, r3, r0
 80028fc:	193a      	adds	r2, r7, r4
 80028fe:	189a      	adds	r2, r3, r2
 8002900:	2386      	movs	r3, #134	; 0x86
 8002902:	005b      	lsls	r3, r3, #1
 8002904:	494e      	ldr	r1, [pc, #312]	; (8002a40 <main+0x444>)
 8002906:	50d1      	str	r1, [r2, r3]
 8002908:	4b3c      	ldr	r3, [pc, #240]	; (80029fc <main+0x400>)
 800290a:	181b      	adds	r3, r3, r0
 800290c:	193a      	adds	r2, r7, r4
 800290e:	189a      	adds	r2, r3, r2
 8002910:	2388      	movs	r3, #136	; 0x88
 8002912:	005b      	lsls	r3, r3, #1
 8002914:	494b      	ldr	r1, [pc, #300]	; (8002a44 <main+0x448>)
 8002916:	50d1      	str	r1, [r2, r3]
 8002918:	4b38      	ldr	r3, [pc, #224]	; (80029fc <main+0x400>)
 800291a:	181b      	adds	r3, r3, r0
 800291c:	193a      	adds	r2, r7, r4
 800291e:	189a      	adds	r2, r3, r2
 8002920:	238a      	movs	r3, #138	; 0x8a
 8002922:	005b      	lsls	r3, r3, #1
 8002924:	4948      	ldr	r1, [pc, #288]	; (8002a48 <main+0x44c>)
 8002926:	50d1      	str	r1, [r2, r3]
 8002928:	4b34      	ldr	r3, [pc, #208]	; (80029fc <main+0x400>)
 800292a:	181b      	adds	r3, r3, r0
 800292c:	193a      	adds	r2, r7, r4
 800292e:	189a      	adds	r2, r3, r2
 8002930:	238c      	movs	r3, #140	; 0x8c
 8002932:	005b      	lsls	r3, r3, #1
 8002934:	4939      	ldr	r1, [pc, #228]	; (8002a1c <main+0x420>)
 8002936:	50d1      	str	r1, [r2, r3]
 8002938:	4b30      	ldr	r3, [pc, #192]	; (80029fc <main+0x400>)
 800293a:	181b      	adds	r3, r3, r0
 800293c:	193a      	adds	r2, r7, r4
 800293e:	189a      	adds	r2, r3, r2
 8002940:	238e      	movs	r3, #142	; 0x8e
 8002942:	005b      	lsls	r3, r3, #1
 8002944:	4935      	ldr	r1, [pc, #212]	; (8002a1c <main+0x420>)
 8002946:	50d1      	str	r1, [r2, r3]
 8002948:	4b2c      	ldr	r3, [pc, #176]	; (80029fc <main+0x400>)
 800294a:	181b      	adds	r3, r3, r0
 800294c:	193a      	adds	r2, r7, r4
 800294e:	189a      	adds	r2, r3, r2
 8002950:	2392      	movs	r3, #146	; 0x92
 8002952:	005b      	lsls	r3, r3, #1
 8002954:	493d      	ldr	r1, [pc, #244]	; (8002a4c <main+0x450>)
 8002956:	50d1      	str	r1, [r2, r3]
 8002958:	4b28      	ldr	r3, [pc, #160]	; (80029fc <main+0x400>)
 800295a:	181b      	adds	r3, r3, r0
 800295c:	193a      	adds	r2, r7, r4
 800295e:	189a      	adds	r2, r3, r2
 8002960:	239c      	movs	r3, #156	; 0x9c
 8002962:	005b      	lsls	r3, r3, #1
 8002964:	4940      	ldr	r1, [pc, #256]	; (8002a68 <main+0x46c>)
 8002966:	50d1      	str	r1, [r2, r3]
 8002968:	4b24      	ldr	r3, [pc, #144]	; (80029fc <main+0x400>)
 800296a:	181b      	adds	r3, r3, r0
 800296c:	193a      	adds	r2, r7, r4
 800296e:	189a      	adds	r2, r3, r2
 8002970:	239e      	movs	r3, #158	; 0x9e
 8002972:	005b      	lsls	r3, r3, #1
 8002974:	493d      	ldr	r1, [pc, #244]	; (8002a6c <main+0x470>)
 8002976:	50d1      	str	r1, [r2, r3]
 8002978:	4b20      	ldr	r3, [pc, #128]	; (80029fc <main+0x400>)
 800297a:	181b      	adds	r3, r3, r0
 800297c:	193a      	adds	r2, r7, r4
 800297e:	189a      	adds	r2, r3, r2
 8002980:	23a0      	movs	r3, #160	; 0xa0
 8002982:	005b      	lsls	r3, r3, #1
 8002984:	493a      	ldr	r1, [pc, #232]	; (8002a70 <main+0x474>)
 8002986:	50d1      	str	r1, [r2, r3]
 8002988:	4b1c      	ldr	r3, [pc, #112]	; (80029fc <main+0x400>)
 800298a:	181b      	adds	r3, r3, r0
 800298c:	193a      	adds	r2, r7, r4
 800298e:	189a      	adds	r2, r3, r2
 8002990:	23a2      	movs	r3, #162	; 0xa2
 8002992:	005b      	lsls	r3, r3, #1
 8002994:	4937      	ldr	r1, [pc, #220]	; (8002a74 <main+0x478>)
 8002996:	50d1      	str	r1, [r2, r3]
 8002998:	4b18      	ldr	r3, [pc, #96]	; (80029fc <main+0x400>)
 800299a:	181b      	adds	r3, r3, r0
 800299c:	193a      	adds	r2, r7, r4
 800299e:	189a      	adds	r2, r3, r2
 80029a0:	23a4      	movs	r3, #164	; 0xa4
 80029a2:	005b      	lsls	r3, r3, #1
 80029a4:	4934      	ldr	r1, [pc, #208]	; (8002a78 <main+0x47c>)
 80029a6:	50d1      	str	r1, [r2, r3]
 80029a8:	4b14      	ldr	r3, [pc, #80]	; (80029fc <main+0x400>)
 80029aa:	181b      	adds	r3, r3, r0
 80029ac:	193a      	adds	r2, r7, r4
 80029ae:	189a      	adds	r2, r3, r2
 80029b0:	23a6      	movs	r3, #166	; 0xa6
 80029b2:	005b      	lsls	r3, r3, #1
 80029b4:	4919      	ldr	r1, [pc, #100]	; (8002a1c <main+0x420>)
 80029b6:	50d1      	str	r1, [r2, r3]
 80029b8:	4b10      	ldr	r3, [pc, #64]	; (80029fc <main+0x400>)
 80029ba:	181b      	adds	r3, r3, r0
 80029bc:	193a      	adds	r2, r7, r4
 80029be:	189a      	adds	r2, r3, r2
 80029c0:	23a8      	movs	r3, #168	; 0xa8
 80029c2:	005b      	lsls	r3, r3, #1
 80029c4:	4915      	ldr	r1, [pc, #84]	; (8002a1c <main+0x420>)
 80029c6:	50d1      	str	r1, [r2, r3]
 80029c8:	4b0c      	ldr	r3, [pc, #48]	; (80029fc <main+0x400>)
 80029ca:	181b      	adds	r3, r3, r0
 80029cc:	193a      	adds	r2, r7, r4
 80029ce:	189a      	adds	r2, r3, r2
 80029d0:	23ac      	movs	r3, #172	; 0xac
 80029d2:	005b      	lsls	r3, r3, #1
 80029d4:	4929      	ldr	r1, [pc, #164]	; (8002a7c <main+0x480>)
 80029d6:	50d1      	str	r1, [r2, r3]
 80029d8:	4b08      	ldr	r3, [pc, #32]	; (80029fc <main+0x400>)
 80029da:	181b      	adds	r3, r3, r0
 80029dc:	193a      	adds	r2, r7, r4
 80029de:	189a      	adds	r2, r3, r2
 80029e0:	23b6      	movs	r3, #182	; 0xb6
 80029e2:	005b      	lsls	r3, r3, #1
 80029e4:	4926      	ldr	r1, [pc, #152]	; (8002a80 <main+0x484>)
 80029e6:	50d1      	str	r1, [r2, r3]
 80029e8:	4b04      	ldr	r3, [pc, #16]	; (80029fc <main+0x400>)
 80029ea:	181b      	adds	r3, r3, r0
 80029ec:	193a      	adds	r2, r7, r4
 80029ee:	189a      	adds	r2, r3, r2
 80029f0:	23b8      	movs	r3, #184	; 0xb8
 80029f2:	005b      	lsls	r3, r3, #1
 80029f4:	e046      	b.n	8002a84 <main+0x488>
 80029f6:	46c0      	nop			; (mov r8, r8)
 80029f8:	fffff774 	.word	0xfffff774
 80029fc:	fffff874 	.word	0xfffff874
 8002a00:	00000828 	.word	0x00000828
 8002a04:	00000784 	.word	0x00000784
 8002a08:	3dc08312 	.word	0x3dc08312
 8002a0c:	41400000 	.word	0x41400000
 8002a10:	baebedfa 	.word	0xbaebedfa
 8002a14:	bb1d4952 	.word	0xbb1d4952
 8002a18:	408fa512 	.word	0x408fa512
 8002a1c:	bd79db23 	.word	0xbd79db23
 8002a20:	41f3044d 	.word	0x41f3044d
 8002a24:	3dfdf3b6 	.word	0x3dfdf3b6
 8002a28:	41700000 	.word	0x41700000
 8002a2c:	bb89a027 	.word	0xbb89a027
 8002a30:	bc09a027 	.word	0xbc09a027
 8002a34:	40966cf4 	.word	0x40966cf4
 8002a38:	41f32858 	.word	0x41f32858
 8002a3c:	3e09374c 	.word	0x3e09374c
 8002a40:	bb6bedfa 	.word	0xbb6bedfa
 8002a44:	bc30f27c 	.word	0xbc30f27c
 8002a48:	4099bda5 	.word	0x4099bda5
 8002a4c:	41f31c43 	.word	0x41f31c43
 8002a50:	3e0d4fdf 	.word	0x3e0d4fdf
 8002a54:	41880000 	.word	0x41880000
 8002a58:	3e158106 	.word	0x3e158106
 8002a5c:	41900000 	.word	0x41900000
 8002a60:	3e19999a 	.word	0x3e19999a
 8002a64:	41980000 	.word	0x41980000
 8002a68:	3e25e354 	.word	0x3e25e354
 8002a6c:	41a00000 	.word	0x41a00000
 8002a70:	bb449ba6 	.word	0xbb449ba6
 8002a74:	bc271de7 	.word	0xbc271de7
 8002a78:	409b8fc5 	.word	0x409b8fc5
 8002a7c:	41f3102e 	.word	0x41f3102e
 8002a80:	3e29fbe7 	.word	0x3e29fbe7
 8002a84:	49fd      	ldr	r1, [pc, #1012]	; (8002e7c <main+0x880>)
 8002a86:	50d1      	str	r1, [r2, r3]
 8002a88:	4bfd      	ldr	r3, [pc, #1012]	; (8002e80 <main+0x884>)
 8002a8a:	181b      	adds	r3, r3, r0
 8002a8c:	193a      	adds	r2, r7, r4
 8002a8e:	189a      	adds	r2, r3, r2
 8002a90:	23ba      	movs	r3, #186	; 0xba
 8002a92:	005b      	lsls	r3, r3, #1
 8002a94:	49fb      	ldr	r1, [pc, #1004]	; (8002e84 <main+0x888>)
 8002a96:	50d1      	str	r1, [r2, r3]
 8002a98:	4bf9      	ldr	r3, [pc, #996]	; (8002e80 <main+0x884>)
 8002a9a:	181b      	adds	r3, r3, r0
 8002a9c:	193a      	adds	r2, r7, r4
 8002a9e:	189a      	adds	r2, r3, r2
 8002aa0:	23bc      	movs	r3, #188	; 0xbc
 8002aa2:	005b      	lsls	r3, r3, #1
 8002aa4:	49f8      	ldr	r1, [pc, #992]	; (8002e88 <main+0x88c>)
 8002aa6:	50d1      	str	r1, [r2, r3]
 8002aa8:	4bf5      	ldr	r3, [pc, #980]	; (8002e80 <main+0x884>)
 8002aaa:	181b      	adds	r3, r3, r0
 8002aac:	193a      	adds	r2, r7, r4
 8002aae:	189a      	adds	r2, r3, r2
 8002ab0:	23be      	movs	r3, #190	; 0xbe
 8002ab2:	005b      	lsls	r3, r3, #1
 8002ab4:	49f5      	ldr	r1, [pc, #980]	; (8002e8c <main+0x890>)
 8002ab6:	50d1      	str	r1, [r2, r3]
 8002ab8:	4bf1      	ldr	r3, [pc, #964]	; (8002e80 <main+0x884>)
 8002aba:	181b      	adds	r3, r3, r0
 8002abc:	193a      	adds	r2, r7, r4
 8002abe:	189a      	adds	r2, r3, r2
 8002ac0:	23c0      	movs	r3, #192	; 0xc0
 8002ac2:	005b      	lsls	r3, r3, #1
 8002ac4:	49f2      	ldr	r1, [pc, #968]	; (8002e90 <main+0x894>)
 8002ac6:	50d1      	str	r1, [r2, r3]
 8002ac8:	4bed      	ldr	r3, [pc, #948]	; (8002e80 <main+0x884>)
 8002aca:	181b      	adds	r3, r3, r0
 8002acc:	193a      	adds	r2, r7, r4
 8002ace:	189a      	adds	r2, r3, r2
 8002ad0:	23c2      	movs	r3, #194	; 0xc2
 8002ad2:	005b      	lsls	r3, r3, #1
 8002ad4:	49ee      	ldr	r1, [pc, #952]	; (8002e90 <main+0x894>)
 8002ad6:	50d1      	str	r1, [r2, r3]
 8002ad8:	4be9      	ldr	r3, [pc, #932]	; (8002e80 <main+0x884>)
 8002ada:	181b      	adds	r3, r3, r0
 8002adc:	193a      	adds	r2, r7, r4
 8002ade:	189a      	adds	r2, r3, r2
 8002ae0:	23c6      	movs	r3, #198	; 0xc6
 8002ae2:	005b      	lsls	r3, r3, #1
 8002ae4:	49eb      	ldr	r1, [pc, #940]	; (8002e94 <main+0x898>)
 8002ae6:	50d1      	str	r1, [r2, r3]
 8002ae8:	4be5      	ldr	r3, [pc, #916]	; (8002e80 <main+0x884>)
 8002aea:	181b      	adds	r3, r3, r0
 8002aec:	193a      	adds	r2, r7, r4
 8002aee:	189a      	adds	r2, r3, r2
 8002af0:	23d0      	movs	r3, #208	; 0xd0
 8002af2:	005b      	lsls	r3, r3, #1
 8002af4:	49e8      	ldr	r1, [pc, #928]	; (8002e98 <main+0x89c>)
 8002af6:	50d1      	str	r1, [r2, r3]
 8002af8:	4be1      	ldr	r3, [pc, #900]	; (8002e80 <main+0x884>)
 8002afa:	181b      	adds	r3, r3, r0
 8002afc:	193a      	adds	r2, r7, r4
 8002afe:	189a      	adds	r2, r3, r2
 8002b00:	23d2      	movs	r3, #210	; 0xd2
 8002b02:	005b      	lsls	r3, r3, #1
 8002b04:	49e5      	ldr	r1, [pc, #916]	; (8002e9c <main+0x8a0>)
 8002b06:	50d1      	str	r1, [r2, r3]
 8002b08:	4bdd      	ldr	r3, [pc, #884]	; (8002e80 <main+0x884>)
 8002b0a:	181b      	adds	r3, r3, r0
 8002b0c:	193a      	adds	r2, r7, r4
 8002b0e:	189a      	adds	r2, r3, r2
 8002b10:	23d4      	movs	r3, #212	; 0xd4
 8002b12:	005b      	lsls	r3, r3, #1
 8002b14:	49db      	ldr	r1, [pc, #876]	; (8002e84 <main+0x888>)
 8002b16:	50d1      	str	r1, [r2, r3]
 8002b18:	4bd9      	ldr	r3, [pc, #868]	; (8002e80 <main+0x884>)
 8002b1a:	181b      	adds	r3, r3, r0
 8002b1c:	193a      	adds	r2, r7, r4
 8002b1e:	189a      	adds	r2, r3, r2
 8002b20:	23d6      	movs	r3, #214	; 0xd6
 8002b22:	005b      	lsls	r3, r3, #1
 8002b24:	49d8      	ldr	r1, [pc, #864]	; (8002e88 <main+0x88c>)
 8002b26:	50d1      	str	r1, [r2, r3]
 8002b28:	4bd5      	ldr	r3, [pc, #852]	; (8002e80 <main+0x884>)
 8002b2a:	181b      	adds	r3, r3, r0
 8002b2c:	193a      	adds	r2, r7, r4
 8002b2e:	189a      	adds	r2, r3, r2
 8002b30:	23d8      	movs	r3, #216	; 0xd8
 8002b32:	005b      	lsls	r3, r3, #1
 8002b34:	49d5      	ldr	r1, [pc, #852]	; (8002e8c <main+0x890>)
 8002b36:	50d1      	str	r1, [r2, r3]
 8002b38:	4bd1      	ldr	r3, [pc, #836]	; (8002e80 <main+0x884>)
 8002b3a:	181b      	adds	r3, r3, r0
 8002b3c:	193a      	adds	r2, r7, r4
 8002b3e:	189a      	adds	r2, r3, r2
 8002b40:	23da      	movs	r3, #218	; 0xda
 8002b42:	005b      	lsls	r3, r3, #1
 8002b44:	49d2      	ldr	r1, [pc, #840]	; (8002e90 <main+0x894>)
 8002b46:	50d1      	str	r1, [r2, r3]
 8002b48:	4bcd      	ldr	r3, [pc, #820]	; (8002e80 <main+0x884>)
 8002b4a:	181b      	adds	r3, r3, r0
 8002b4c:	193a      	adds	r2, r7, r4
 8002b4e:	189a      	adds	r2, r3, r2
 8002b50:	23dc      	movs	r3, #220	; 0xdc
 8002b52:	005b      	lsls	r3, r3, #1
 8002b54:	49ce      	ldr	r1, [pc, #824]	; (8002e90 <main+0x894>)
 8002b56:	50d1      	str	r1, [r2, r3]
 8002b58:	4bc9      	ldr	r3, [pc, #804]	; (8002e80 <main+0x884>)
 8002b5a:	181b      	adds	r3, r3, r0
 8002b5c:	193a      	adds	r2, r7, r4
 8002b5e:	189a      	adds	r2, r3, r2
 8002b60:	23e0      	movs	r3, #224	; 0xe0
 8002b62:	005b      	lsls	r3, r3, #1
 8002b64:	49cb      	ldr	r1, [pc, #812]	; (8002e94 <main+0x898>)
 8002b66:	50d1      	str	r1, [r2, r3]
 8002b68:	4bc5      	ldr	r3, [pc, #788]	; (8002e80 <main+0x884>)
 8002b6a:	181b      	adds	r3, r3, r0
 8002b6c:	193a      	adds	r2, r7, r4
 8002b6e:	189a      	adds	r2, r3, r2
 8002b70:	23ea      	movs	r3, #234	; 0xea
 8002b72:	005b      	lsls	r3, r3, #1
 8002b74:	49ca      	ldr	r1, [pc, #808]	; (8002ea0 <main+0x8a4>)
 8002b76:	50d1      	str	r1, [r2, r3]
 8002b78:	4bc1      	ldr	r3, [pc, #772]	; (8002e80 <main+0x884>)
 8002b7a:	181b      	adds	r3, r3, r0
 8002b7c:	193a      	adds	r2, r7, r4
 8002b7e:	189a      	adds	r2, r3, r2
 8002b80:	23ec      	movs	r3, #236	; 0xec
 8002b82:	005b      	lsls	r3, r3, #1
 8002b84:	49c7      	ldr	r1, [pc, #796]	; (8002ea4 <main+0x8a8>)
 8002b86:	50d1      	str	r1, [r2, r3]
 8002b88:	4bbd      	ldr	r3, [pc, #756]	; (8002e80 <main+0x884>)
 8002b8a:	181b      	adds	r3, r3, r0
 8002b8c:	193a      	adds	r2, r7, r4
 8002b8e:	189a      	adds	r2, r3, r2
 8002b90:	23f0      	movs	r3, #240	; 0xf0
 8002b92:	005b      	lsls	r3, r3, #1
 8002b94:	49c4      	ldr	r1, [pc, #784]	; (8002ea8 <main+0x8ac>)
 8002b96:	50d1      	str	r1, [r2, r3]
 8002b98:	4bb9      	ldr	r3, [pc, #740]	; (8002e80 <main+0x884>)
 8002b9a:	181b      	adds	r3, r3, r0
 8002b9c:	193a      	adds	r2, r7, r4
 8002b9e:	189a      	adds	r2, r3, r2
 8002ba0:	23f2      	movs	r3, #242	; 0xf2
 8002ba2:	005b      	lsls	r3, r3, #1
 8002ba4:	49c1      	ldr	r1, [pc, #772]	; (8002eac <main+0x8b0>)
 8002ba6:	50d1      	str	r1, [r2, r3]
 8002ba8:	4bb5      	ldr	r3, [pc, #724]	; (8002e80 <main+0x884>)
 8002baa:	181b      	adds	r3, r3, r0
 8002bac:	193a      	adds	r2, r7, r4
 8002bae:	189a      	adds	r2, r3, r2
 8002bb0:	23f4      	movs	r3, #244	; 0xf4
 8002bb2:	005b      	lsls	r3, r3, #1
 8002bb4:	49b6      	ldr	r1, [pc, #728]	; (8002e90 <main+0x894>)
 8002bb6:	50d1      	str	r1, [r2, r3]
 8002bb8:	4bb1      	ldr	r3, [pc, #708]	; (8002e80 <main+0x884>)
 8002bba:	181b      	adds	r3, r3, r0
 8002bbc:	193a      	adds	r2, r7, r4
 8002bbe:	189a      	adds	r2, r3, r2
 8002bc0:	23f6      	movs	r3, #246	; 0xf6
 8002bc2:	005b      	lsls	r3, r3, #1
 8002bc4:	49b2      	ldr	r1, [pc, #712]	; (8002e90 <main+0x894>)
 8002bc6:	50d1      	str	r1, [r2, r3]
 8002bc8:	4bad      	ldr	r3, [pc, #692]	; (8002e80 <main+0x884>)
 8002bca:	181b      	adds	r3, r3, r0
 8002bcc:	193a      	adds	r2, r7, r4
 8002bce:	189a      	adds	r2, r3, r2
 8002bd0:	23fa      	movs	r3, #250	; 0xfa
 8002bd2:	005b      	lsls	r3, r3, #1
 8002bd4:	49b6      	ldr	r1, [pc, #728]	; (8002eb0 <main+0x8b4>)
 8002bd6:	50d1      	str	r1, [r2, r3]
 8002bd8:	4ba9      	ldr	r3, [pc, #676]	; (8002e80 <main+0x884>)
 8002bda:	181b      	adds	r3, r3, r0
 8002bdc:	193a      	adds	r2, r7, r4
 8002bde:	189a      	adds	r2, r3, r2
 8002be0:	2382      	movs	r3, #130	; 0x82
 8002be2:	009b      	lsls	r3, r3, #2
 8002be4:	49b3      	ldr	r1, [pc, #716]	; (8002eb4 <main+0x8b8>)
 8002be6:	50d1      	str	r1, [r2, r3]
 8002be8:	4ba5      	ldr	r3, [pc, #660]	; (8002e80 <main+0x884>)
 8002bea:	181b      	adds	r3, r3, r0
 8002bec:	193a      	adds	r2, r7, r4
 8002bee:	189a      	adds	r2, r3, r2
 8002bf0:	2383      	movs	r3, #131	; 0x83
 8002bf2:	009b      	lsls	r3, r3, #2
 8002bf4:	49b0      	ldr	r1, [pc, #704]	; (8002eb8 <main+0x8bc>)
 8002bf6:	50d1      	str	r1, [r2, r3]
 8002bf8:	4ba1      	ldr	r3, [pc, #644]	; (8002e80 <main+0x884>)
 8002bfa:	181b      	adds	r3, r3, r0
 8002bfc:	193a      	adds	r2, r7, r4
 8002bfe:	189a      	adds	r2, r3, r2
 8002c00:	2385      	movs	r3, #133	; 0x85
 8002c02:	009b      	lsls	r3, r3, #2
 8002c04:	49a8      	ldr	r1, [pc, #672]	; (8002ea8 <main+0x8ac>)
 8002c06:	50d1      	str	r1, [r2, r3]
 8002c08:	4b9d      	ldr	r3, [pc, #628]	; (8002e80 <main+0x884>)
 8002c0a:	181b      	adds	r3, r3, r0
 8002c0c:	193a      	adds	r2, r7, r4
 8002c0e:	189a      	adds	r2, r3, r2
 8002c10:	2386      	movs	r3, #134	; 0x86
 8002c12:	009b      	lsls	r3, r3, #2
 8002c14:	49a5      	ldr	r1, [pc, #660]	; (8002eac <main+0x8b0>)
 8002c16:	50d1      	str	r1, [r2, r3]
 8002c18:	4b99      	ldr	r3, [pc, #612]	; (8002e80 <main+0x884>)
 8002c1a:	181b      	adds	r3, r3, r0
 8002c1c:	193a      	adds	r2, r7, r4
 8002c1e:	189a      	adds	r2, r3, r2
 8002c20:	2387      	movs	r3, #135	; 0x87
 8002c22:	009b      	lsls	r3, r3, #2
 8002c24:	499a      	ldr	r1, [pc, #616]	; (8002e90 <main+0x894>)
 8002c26:	50d1      	str	r1, [r2, r3]
 8002c28:	4b95      	ldr	r3, [pc, #596]	; (8002e80 <main+0x884>)
 8002c2a:	181b      	adds	r3, r3, r0
 8002c2c:	193a      	adds	r2, r7, r4
 8002c2e:	189a      	adds	r2, r3, r2
 8002c30:	2388      	movs	r3, #136	; 0x88
 8002c32:	009b      	lsls	r3, r3, #2
 8002c34:	4996      	ldr	r1, [pc, #600]	; (8002e90 <main+0x894>)
 8002c36:	50d1      	str	r1, [r2, r3]
 8002c38:	4b91      	ldr	r3, [pc, #580]	; (8002e80 <main+0x884>)
 8002c3a:	181b      	adds	r3, r3, r0
 8002c3c:	193a      	adds	r2, r7, r4
 8002c3e:	189a      	adds	r2, r3, r2
 8002c40:	238a      	movs	r3, #138	; 0x8a
 8002c42:	009b      	lsls	r3, r3, #2
 8002c44:	499a      	ldr	r1, [pc, #616]	; (8002eb0 <main+0x8b4>)
 8002c46:	50d1      	str	r1, [r2, r3]
 8002c48:	4b8d      	ldr	r3, [pc, #564]	; (8002e80 <main+0x884>)
 8002c4a:	181b      	adds	r3, r3, r0
 8002c4c:	193a      	adds	r2, r7, r4
 8002c4e:	189a      	adds	r2, r3, r2
 8002c50:	238f      	movs	r3, #143	; 0x8f
 8002c52:	009b      	lsls	r3, r3, #2
 8002c54:	4999      	ldr	r1, [pc, #612]	; (8002ebc <main+0x8c0>)
 8002c56:	50d1      	str	r1, [r2, r3]
 8002c58:	4b89      	ldr	r3, [pc, #548]	; (8002e80 <main+0x884>)
 8002c5a:	181b      	adds	r3, r3, r0
 8002c5c:	193a      	adds	r2, r7, r4
 8002c5e:	189a      	adds	r2, r3, r2
 8002c60:	2390      	movs	r3, #144	; 0x90
 8002c62:	009b      	lsls	r3, r3, #2
 8002c64:	4996      	ldr	r1, [pc, #600]	; (8002ec0 <main+0x8c4>)
 8002c66:	50d1      	str	r1, [r2, r3]
 8002c68:	4b85      	ldr	r3, [pc, #532]	; (8002e80 <main+0x884>)
 8002c6a:	181b      	adds	r3, r3, r0
 8002c6c:	193a      	adds	r2, r7, r4
 8002c6e:	189a      	adds	r2, r3, r2
 8002c70:	2392      	movs	r3, #146	; 0x92
 8002c72:	009b      	lsls	r3, r3, #2
 8002c74:	498c      	ldr	r1, [pc, #560]	; (8002ea8 <main+0x8ac>)
 8002c76:	50d1      	str	r1, [r2, r3]
 8002c78:	4b81      	ldr	r3, [pc, #516]	; (8002e80 <main+0x884>)
 8002c7a:	181b      	adds	r3, r3, r0
 8002c7c:	193a      	adds	r2, r7, r4
 8002c7e:	189a      	adds	r2, r3, r2
 8002c80:	2393      	movs	r3, #147	; 0x93
 8002c82:	009b      	lsls	r3, r3, #2
 8002c84:	4989      	ldr	r1, [pc, #548]	; (8002eac <main+0x8b0>)
 8002c86:	50d1      	str	r1, [r2, r3]
 8002c88:	4b7d      	ldr	r3, [pc, #500]	; (8002e80 <main+0x884>)
 8002c8a:	181b      	adds	r3, r3, r0
 8002c8c:	193a      	adds	r2, r7, r4
 8002c8e:	189a      	adds	r2, r3, r2
 8002c90:	2394      	movs	r3, #148	; 0x94
 8002c92:	009b      	lsls	r3, r3, #2
 8002c94:	497e      	ldr	r1, [pc, #504]	; (8002e90 <main+0x894>)
 8002c96:	50d1      	str	r1, [r2, r3]
 8002c98:	4b79      	ldr	r3, [pc, #484]	; (8002e80 <main+0x884>)
 8002c9a:	181b      	adds	r3, r3, r0
 8002c9c:	193a      	adds	r2, r7, r4
 8002c9e:	189a      	adds	r2, r3, r2
 8002ca0:	2395      	movs	r3, #149	; 0x95
 8002ca2:	009b      	lsls	r3, r3, #2
 8002ca4:	497a      	ldr	r1, [pc, #488]	; (8002e90 <main+0x894>)
 8002ca6:	50d1      	str	r1, [r2, r3]
 8002ca8:	4b75      	ldr	r3, [pc, #468]	; (8002e80 <main+0x884>)
 8002caa:	181b      	adds	r3, r3, r0
 8002cac:	193a      	adds	r2, r7, r4
 8002cae:	189a      	adds	r2, r3, r2
 8002cb0:	2397      	movs	r3, #151	; 0x97
 8002cb2:	009b      	lsls	r3, r3, #2
 8002cb4:	497e      	ldr	r1, [pc, #504]	; (8002eb0 <main+0x8b4>)
 8002cb6:	50d1      	str	r1, [r2, r3]
 8002cb8:	4b71      	ldr	r3, [pc, #452]	; (8002e80 <main+0x884>)
 8002cba:	181b      	adds	r3, r3, r0
 8002cbc:	193a      	adds	r2, r7, r4
 8002cbe:	189a      	adds	r2, r3, r2
 8002cc0:	239c      	movs	r3, #156	; 0x9c
 8002cc2:	009b      	lsls	r3, r3, #2
 8002cc4:	497f      	ldr	r1, [pc, #508]	; (8002ec4 <main+0x8c8>)
 8002cc6:	50d1      	str	r1, [r2, r3]
 8002cc8:	4b6d      	ldr	r3, [pc, #436]	; (8002e80 <main+0x884>)
 8002cca:	181b      	adds	r3, r3, r0
 8002ccc:	193a      	adds	r2, r7, r4
 8002cce:	189a      	adds	r2, r3, r2
 8002cd0:	239d      	movs	r3, #157	; 0x9d
 8002cd2:	009b      	lsls	r3, r3, #2
 8002cd4:	497c      	ldr	r1, [pc, #496]	; (8002ec8 <main+0x8cc>)
 8002cd6:	50d1      	str	r1, [r2, r3]
 8002cd8:	4b69      	ldr	r3, [pc, #420]	; (8002e80 <main+0x884>)
 8002cda:	181b      	adds	r3, r3, r0
 8002cdc:	193a      	adds	r2, r7, r4
 8002cde:	189a      	adds	r2, r3, r2
 8002ce0:	239f      	movs	r3, #159	; 0x9f
 8002ce2:	009b      	lsls	r3, r3, #2
 8002ce4:	4979      	ldr	r1, [pc, #484]	; (8002ecc <main+0x8d0>)
 8002ce6:	50d1      	str	r1, [r2, r3]
 8002ce8:	4b65      	ldr	r3, [pc, #404]	; (8002e80 <main+0x884>)
 8002cea:	181b      	adds	r3, r3, r0
 8002cec:	193a      	adds	r2, r7, r4
 8002cee:	189a      	adds	r2, r3, r2
 8002cf0:	23a0      	movs	r3, #160	; 0xa0
 8002cf2:	009b      	lsls	r3, r3, #2
 8002cf4:	4976      	ldr	r1, [pc, #472]	; (8002ed0 <main+0x8d4>)
 8002cf6:	50d1      	str	r1, [r2, r3]
 8002cf8:	4b61      	ldr	r3, [pc, #388]	; (8002e80 <main+0x884>)
 8002cfa:	181b      	adds	r3, r3, r0
 8002cfc:	193a      	adds	r2, r7, r4
 8002cfe:	189a      	adds	r2, r3, r2
 8002d00:	23a1      	movs	r3, #161	; 0xa1
 8002d02:	009b      	lsls	r3, r3, #2
 8002d04:	4962      	ldr	r1, [pc, #392]	; (8002e90 <main+0x894>)
 8002d06:	50d1      	str	r1, [r2, r3]
 8002d08:	4b5d      	ldr	r3, [pc, #372]	; (8002e80 <main+0x884>)
 8002d0a:	181b      	adds	r3, r3, r0
 8002d0c:	193a      	adds	r2, r7, r4
 8002d0e:	189a      	adds	r2, r3, r2
 8002d10:	23a2      	movs	r3, #162	; 0xa2
 8002d12:	009b      	lsls	r3, r3, #2
 8002d14:	495e      	ldr	r1, [pc, #376]	; (8002e90 <main+0x894>)
 8002d16:	50d1      	str	r1, [r2, r3]
 8002d18:	4b59      	ldr	r3, [pc, #356]	; (8002e80 <main+0x884>)
 8002d1a:	181b      	adds	r3, r3, r0
 8002d1c:	193a      	adds	r2, r7, r4
 8002d1e:	189a      	adds	r2, r3, r2
 8002d20:	23a4      	movs	r3, #164	; 0xa4
 8002d22:	009b      	lsls	r3, r3, #2
 8002d24:	496b      	ldr	r1, [pc, #428]	; (8002ed4 <main+0x8d8>)
 8002d26:	50d1      	str	r1, [r2, r3]
 8002d28:	4b55      	ldr	r3, [pc, #340]	; (8002e80 <main+0x884>)
 8002d2a:	181b      	adds	r3, r3, r0
 8002d2c:	193a      	adds	r2, r7, r4
 8002d2e:	189a      	adds	r2, r3, r2
 8002d30:	23a9      	movs	r3, #169	; 0xa9
 8002d32:	009b      	lsls	r3, r3, #2
 8002d34:	4968      	ldr	r1, [pc, #416]	; (8002ed8 <main+0x8dc>)
 8002d36:	50d1      	str	r1, [r2, r3]
 8002d38:	4b51      	ldr	r3, [pc, #324]	; (8002e80 <main+0x884>)
 8002d3a:	181b      	adds	r3, r3, r0
 8002d3c:	193a      	adds	r2, r7, r4
 8002d3e:	189a      	adds	r2, r3, r2
 8002d40:	23aa      	movs	r3, #170	; 0xaa
 8002d42:	009b      	lsls	r3, r3, #2
 8002d44:	4965      	ldr	r1, [pc, #404]	; (8002edc <main+0x8e0>)
 8002d46:	50d1      	str	r1, [r2, r3]
 8002d48:	4b4d      	ldr	r3, [pc, #308]	; (8002e80 <main+0x884>)
 8002d4a:	181b      	adds	r3, r3, r0
 8002d4c:	193a      	adds	r2, r7, r4
 8002d4e:	189a      	adds	r2, r3, r2
 8002d50:	23ac      	movs	r3, #172	; 0xac
 8002d52:	009b      	lsls	r3, r3, #2
 8002d54:	495d      	ldr	r1, [pc, #372]	; (8002ecc <main+0x8d0>)
 8002d56:	50d1      	str	r1, [r2, r3]
 8002d58:	4b49      	ldr	r3, [pc, #292]	; (8002e80 <main+0x884>)
 8002d5a:	181b      	adds	r3, r3, r0
 8002d5c:	193a      	adds	r2, r7, r4
 8002d5e:	189a      	adds	r2, r3, r2
 8002d60:	23ad      	movs	r3, #173	; 0xad
 8002d62:	009b      	lsls	r3, r3, #2
 8002d64:	495a      	ldr	r1, [pc, #360]	; (8002ed0 <main+0x8d4>)
 8002d66:	50d1      	str	r1, [r2, r3]
 8002d68:	4b45      	ldr	r3, [pc, #276]	; (8002e80 <main+0x884>)
 8002d6a:	181b      	adds	r3, r3, r0
 8002d6c:	193a      	adds	r2, r7, r4
 8002d6e:	189a      	adds	r2, r3, r2
 8002d70:	23ae      	movs	r3, #174	; 0xae
 8002d72:	009b      	lsls	r3, r3, #2
 8002d74:	4946      	ldr	r1, [pc, #280]	; (8002e90 <main+0x894>)
 8002d76:	50d1      	str	r1, [r2, r3]
 8002d78:	4b41      	ldr	r3, [pc, #260]	; (8002e80 <main+0x884>)
 8002d7a:	181b      	adds	r3, r3, r0
 8002d7c:	193a      	adds	r2, r7, r4
 8002d7e:	189a      	adds	r2, r3, r2
 8002d80:	23af      	movs	r3, #175	; 0xaf
 8002d82:	009b      	lsls	r3, r3, #2
 8002d84:	4942      	ldr	r1, [pc, #264]	; (8002e90 <main+0x894>)
 8002d86:	50d1      	str	r1, [r2, r3]
 8002d88:	4b3d      	ldr	r3, [pc, #244]	; (8002e80 <main+0x884>)
 8002d8a:	181b      	adds	r3, r3, r0
 8002d8c:	193a      	adds	r2, r7, r4
 8002d8e:	189a      	adds	r2, r3, r2
 8002d90:	23b1      	movs	r3, #177	; 0xb1
 8002d92:	009b      	lsls	r3, r3, #2
 8002d94:	494f      	ldr	r1, [pc, #316]	; (8002ed4 <main+0x8d8>)
 8002d96:	50d1      	str	r1, [r2, r3]
 8002d98:	4b39      	ldr	r3, [pc, #228]	; (8002e80 <main+0x884>)
 8002d9a:	181b      	adds	r3, r3, r0
 8002d9c:	193a      	adds	r2, r7, r4
 8002d9e:	189a      	adds	r2, r3, r2
 8002da0:	23b6      	movs	r3, #182	; 0xb6
 8002da2:	009b      	lsls	r3, r3, #2
 8002da4:	494e      	ldr	r1, [pc, #312]	; (8002ee0 <main+0x8e4>)
 8002da6:	50d1      	str	r1, [r2, r3]
 8002da8:	4b35      	ldr	r3, [pc, #212]	; (8002e80 <main+0x884>)
 8002daa:	181b      	adds	r3, r3, r0
 8002dac:	193a      	adds	r2, r7, r4
 8002dae:	189a      	adds	r2, r3, r2
 8002db0:	23b7      	movs	r3, #183	; 0xb7
 8002db2:	009b      	lsls	r3, r3, #2
 8002db4:	494b      	ldr	r1, [pc, #300]	; (8002ee4 <main+0x8e8>)
 8002db6:	50d1      	str	r1, [r2, r3]
 8002db8:	4b31      	ldr	r3, [pc, #196]	; (8002e80 <main+0x884>)
 8002dba:	181b      	adds	r3, r3, r0
 8002dbc:	193a      	adds	r2, r7, r4
 8002dbe:	189a      	adds	r2, r3, r2
 8002dc0:	23b9      	movs	r3, #185	; 0xb9
 8002dc2:	009b      	lsls	r3, r3, #2
 8002dc4:	4941      	ldr	r1, [pc, #260]	; (8002ecc <main+0x8d0>)
 8002dc6:	50d1      	str	r1, [r2, r3]
 8002dc8:	4b2d      	ldr	r3, [pc, #180]	; (8002e80 <main+0x884>)
 8002dca:	181b      	adds	r3, r3, r0
 8002dcc:	193a      	adds	r2, r7, r4
 8002dce:	189a      	adds	r2, r3, r2
 8002dd0:	23ba      	movs	r3, #186	; 0xba
 8002dd2:	009b      	lsls	r3, r3, #2
 8002dd4:	493e      	ldr	r1, [pc, #248]	; (8002ed0 <main+0x8d4>)
 8002dd6:	50d1      	str	r1, [r2, r3]
 8002dd8:	4b29      	ldr	r3, [pc, #164]	; (8002e80 <main+0x884>)
 8002dda:	181b      	adds	r3, r3, r0
 8002ddc:	193a      	adds	r2, r7, r4
 8002dde:	189a      	adds	r2, r3, r2
 8002de0:	23bb      	movs	r3, #187	; 0xbb
 8002de2:	009b      	lsls	r3, r3, #2
 8002de4:	492a      	ldr	r1, [pc, #168]	; (8002e90 <main+0x894>)
 8002de6:	50d1      	str	r1, [r2, r3]
 8002de8:	4b25      	ldr	r3, [pc, #148]	; (8002e80 <main+0x884>)
 8002dea:	181b      	adds	r3, r3, r0
 8002dec:	193a      	adds	r2, r7, r4
 8002dee:	189a      	adds	r2, r3, r2
 8002df0:	23bc      	movs	r3, #188	; 0xbc
 8002df2:	009b      	lsls	r3, r3, #2
 8002df4:	4926      	ldr	r1, [pc, #152]	; (8002e90 <main+0x894>)
 8002df6:	50d1      	str	r1, [r2, r3]
 8002df8:	4b21      	ldr	r3, [pc, #132]	; (8002e80 <main+0x884>)
 8002dfa:	181b      	adds	r3, r3, r0
 8002dfc:	193a      	adds	r2, r7, r4
 8002dfe:	189a      	adds	r2, r3, r2
 8002e00:	23be      	movs	r3, #190	; 0xbe
 8002e02:	009b      	lsls	r3, r3, #2
 8002e04:	4933      	ldr	r1, [pc, #204]	; (8002ed4 <main+0x8d8>)
 8002e06:	50d1      	str	r1, [r2, r3]
 8002e08:	4b1d      	ldr	r3, [pc, #116]	; (8002e80 <main+0x884>)
 8002e0a:	181b      	adds	r3, r3, r0
 8002e0c:	193a      	adds	r2, r7, r4
 8002e0e:	189a      	adds	r2, r3, r2
 8002e10:	23c3      	movs	r3, #195	; 0xc3
 8002e12:	009b      	lsls	r3, r3, #2
 8002e14:	4934      	ldr	r1, [pc, #208]	; (8002ee8 <main+0x8ec>)
 8002e16:	50d1      	str	r1, [r2, r3]
 8002e18:	4b19      	ldr	r3, [pc, #100]	; (8002e80 <main+0x884>)
 8002e1a:	181b      	adds	r3, r3, r0
 8002e1c:	193a      	adds	r2, r7, r4
 8002e1e:	189a      	adds	r2, r3, r2
 8002e20:	23c4      	movs	r3, #196	; 0xc4
 8002e22:	009b      	lsls	r3, r3, #2
 8002e24:	4931      	ldr	r1, [pc, #196]	; (8002eec <main+0x8f0>)
 8002e26:	50d1      	str	r1, [r2, r3]
 8002e28:	4b15      	ldr	r3, [pc, #84]	; (8002e80 <main+0x884>)
 8002e2a:	181b      	adds	r3, r3, r0
 8002e2c:	193a      	adds	r2, r7, r4
 8002e2e:	189a      	adds	r2, r3, r2
 8002e30:	23c5      	movs	r3, #197	; 0xc5
 8002e32:	009b      	lsls	r3, r3, #2
 8002e34:	492e      	ldr	r1, [pc, #184]	; (8002ef0 <main+0x8f4>)
 8002e36:	50d1      	str	r1, [r2, r3]
 8002e38:	4b11      	ldr	r3, [pc, #68]	; (8002e80 <main+0x884>)
 8002e3a:	181b      	adds	r3, r3, r0
 8002e3c:	193a      	adds	r2, r7, r4
 8002e3e:	189a      	adds	r2, r3, r2
 8002e40:	23c6      	movs	r3, #198	; 0xc6
 8002e42:	009b      	lsls	r3, r3, #2
 8002e44:	492b      	ldr	r1, [pc, #172]	; (8002ef4 <main+0x8f8>)
 8002e46:	50d1      	str	r1, [r2, r3]
 8002e48:	4b0d      	ldr	r3, [pc, #52]	; (8002e80 <main+0x884>)
 8002e4a:	181b      	adds	r3, r3, r0
 8002e4c:	193a      	adds	r2, r7, r4
 8002e4e:	189a      	adds	r2, r3, r2
 8002e50:	23c7      	movs	r3, #199	; 0xc7
 8002e52:	009b      	lsls	r3, r3, #2
 8002e54:	4928      	ldr	r1, [pc, #160]	; (8002ef8 <main+0x8fc>)
 8002e56:	50d1      	str	r1, [r2, r3]
 8002e58:	4b09      	ldr	r3, [pc, #36]	; (8002e80 <main+0x884>)
 8002e5a:	181b      	adds	r3, r3, r0
 8002e5c:	193a      	adds	r2, r7, r4
 8002e5e:	189a      	adds	r2, r3, r2
 8002e60:	23c8      	movs	r3, #200	; 0xc8
 8002e62:	009b      	lsls	r3, r3, #2
 8002e64:	490a      	ldr	r1, [pc, #40]	; (8002e90 <main+0x894>)
 8002e66:	50d1      	str	r1, [r2, r3]
 8002e68:	4b05      	ldr	r3, [pc, #20]	; (8002e80 <main+0x884>)
 8002e6a:	181b      	adds	r3, r3, r0
 8002e6c:	193a      	adds	r2, r7, r4
 8002e6e:	189a      	adds	r2, r3, r2
 8002e70:	23c9      	movs	r3, #201	; 0xc9
 8002e72:	009b      	lsls	r3, r3, #2
 8002e74:	4906      	ldr	r1, [pc, #24]	; (8002e90 <main+0x894>)
 8002e76:	50d1      	str	r1, [r2, r3]
 8002e78:	e040      	b.n	8002efc <main+0x900>
 8002e7a:	46c0      	nop			; (mov r8, r8)
 8002e7c:	41a80000 	.word	0x41a80000
 8002e80:	fffff874 	.word	0xfffff874
 8002e84:	bb449ba6 	.word	0xbb449ba6
 8002e88:	bc271de7 	.word	0xbc271de7
 8002e8c:	409b8fc5 	.word	0x409b8fc5
 8002e90:	bd79db23 	.word	0xbd79db23
 8002e94:	41f3102e 	.word	0x41f3102e
 8002e98:	3e343958 	.word	0x3e343958
 8002e9c:	41b00000 	.word	0x41b00000
 8002ea0:	3e3d70a4 	.word	0x3e3d70a4
 8002ea4:	41b80000 	.word	0x41b80000
 8002ea8:	bb89a027 	.word	0xbb89a027
 8002eac:	409c8e8a 	.word	0x409c8e8a
 8002eb0:	41f2f838 	.word	0x41f2f838
 8002eb4:	3e418937 	.word	0x3e418937
 8002eb8:	41c00000 	.word	0x41c00000
 8002ebc:	3e52f1aa 	.word	0x3e52f1aa
 8002ec0:	41c80000 	.word	0x41c80000
 8002ec4:	3e5b22d1 	.word	0x3e5b22d1
 8002ec8:	41d00000 	.word	0x41d00000
 8002ecc:	bbc49ba6 	.word	0xbbc49ba6
 8002ed0:	409cf0d8 	.word	0x409cf0d8
 8002ed4:	41f3044d 	.word	0x41f3044d
 8002ed8:	3e5e353f 	.word	0x3e5e353f
 8002edc:	41d80000 	.word	0x41d80000
 8002ee0:	3e645a1d 	.word	0x3e645a1d
 8002ee4:	41e00000 	.word	0x41e00000
 8002ee8:	3e77ced9 	.word	0x3e77ced9
 8002eec:	41e80000 	.word	0x41e80000
 8002ef0:	ba1d4952 	.word	0xba1d4952
 8002ef4:	bbebedfa 	.word	0xbbebedfa
 8002ef8:	409c985f 	.word	0x409c985f
 8002efc:	4bfe      	ldr	r3, [pc, #1016]	; (80032f8 <main+0xcfc>)
 8002efe:	181b      	adds	r3, r3, r0
 8002f00:	193a      	adds	r2, r7, r4
 8002f02:	189a      	adds	r2, r3, r2
 8002f04:	23cb      	movs	r3, #203	; 0xcb
 8002f06:	009b      	lsls	r3, r3, #2
 8002f08:	49fc      	ldr	r1, [pc, #1008]	; (80032fc <main+0xd00>)
 8002f0a:	50d1      	str	r1, [r2, r3]
 8002f0c:	4bfa      	ldr	r3, [pc, #1000]	; (80032f8 <main+0xcfc>)
 8002f0e:	181b      	adds	r3, r3, r0
 8002f10:	193a      	adds	r2, r7, r4
 8002f12:	189a      	adds	r2, r3, r2
 8002f14:	23d0      	movs	r3, #208	; 0xd0
 8002f16:	009b      	lsls	r3, r3, #2
 8002f18:	49f9      	ldr	r1, [pc, #996]	; (8003300 <main+0xd04>)
 8002f1a:	50d1      	str	r1, [r2, r3]
 8002f1c:	4bf6      	ldr	r3, [pc, #984]	; (80032f8 <main+0xcfc>)
 8002f1e:	181b      	adds	r3, r3, r0
 8002f20:	193a      	adds	r2, r7, r4
 8002f22:	189a      	adds	r2, r3, r2
 8002f24:	23d1      	movs	r3, #209	; 0xd1
 8002f26:	009b      	lsls	r3, r3, #2
 8002f28:	49f6      	ldr	r1, [pc, #984]	; (8003304 <main+0xd08>)
 8002f2a:	50d1      	str	r1, [r2, r3]
 8002f2c:	4bf2      	ldr	r3, [pc, #968]	; (80032f8 <main+0xcfc>)
 8002f2e:	181b      	adds	r3, r3, r0
 8002f30:	193a      	adds	r2, r7, r4
 8002f32:	189a      	adds	r2, r3, r2
 8002f34:	23d2      	movs	r3, #210	; 0xd2
 8002f36:	009b      	lsls	r3, r3, #2
 8002f38:	49f3      	ldr	r1, [pc, #972]	; (8003308 <main+0xd0c>)
 8002f3a:	50d1      	str	r1, [r2, r3]
 8002f3c:	4bee      	ldr	r3, [pc, #952]	; (80032f8 <main+0xcfc>)
 8002f3e:	181b      	adds	r3, r3, r0
 8002f40:	193a      	adds	r2, r7, r4
 8002f42:	189a      	adds	r2, r3, r2
 8002f44:	23d3      	movs	r3, #211	; 0xd3
 8002f46:	009b      	lsls	r3, r3, #2
 8002f48:	49f0      	ldr	r1, [pc, #960]	; (800330c <main+0xd10>)
 8002f4a:	50d1      	str	r1, [r2, r3]
 8002f4c:	4bea      	ldr	r3, [pc, #936]	; (80032f8 <main+0xcfc>)
 8002f4e:	181b      	adds	r3, r3, r0
 8002f50:	193a      	adds	r2, r7, r4
 8002f52:	189a      	adds	r2, r3, r2
 8002f54:	23d4      	movs	r3, #212	; 0xd4
 8002f56:	009b      	lsls	r3, r3, #2
 8002f58:	49ed      	ldr	r1, [pc, #948]	; (8003310 <main+0xd14>)
 8002f5a:	50d1      	str	r1, [r2, r3]
 8002f5c:	4be6      	ldr	r3, [pc, #920]	; (80032f8 <main+0xcfc>)
 8002f5e:	181b      	adds	r3, r3, r0
 8002f60:	193a      	adds	r2, r7, r4
 8002f62:	189a      	adds	r2, r3, r2
 8002f64:	23d5      	movs	r3, #213	; 0xd5
 8002f66:	009b      	lsls	r3, r3, #2
 8002f68:	49ea      	ldr	r1, [pc, #936]	; (8003314 <main+0xd18>)
 8002f6a:	50d1      	str	r1, [r2, r3]
 8002f6c:	4be2      	ldr	r3, [pc, #904]	; (80032f8 <main+0xcfc>)
 8002f6e:	181b      	adds	r3, r3, r0
 8002f70:	193a      	adds	r2, r7, r4
 8002f72:	189a      	adds	r2, r3, r2
 8002f74:	23d6      	movs	r3, #214	; 0xd6
 8002f76:	009b      	lsls	r3, r3, #2
 8002f78:	49e6      	ldr	r1, [pc, #920]	; (8003314 <main+0xd18>)
 8002f7a:	50d1      	str	r1, [r2, r3]
 8002f7c:	4bde      	ldr	r3, [pc, #888]	; (80032f8 <main+0xcfc>)
 8002f7e:	181b      	adds	r3, r3, r0
 8002f80:	193a      	adds	r2, r7, r4
 8002f82:	189a      	adds	r2, r3, r2
 8002f84:	23d8      	movs	r3, #216	; 0xd8
 8002f86:	009b      	lsls	r3, r3, #2
 8002f88:	49dc      	ldr	r1, [pc, #880]	; (80032fc <main+0xd00>)
 8002f8a:	50d1      	str	r1, [r2, r3]
 8002f8c:	4bda      	ldr	r3, [pc, #872]	; (80032f8 <main+0xcfc>)
 8002f8e:	181b      	adds	r3, r3, r0
 8002f90:	193a      	adds	r2, r7, r4
 8002f92:	189a      	adds	r2, r3, r2
 8002f94:	23dd      	movs	r3, #221	; 0xdd
 8002f96:	009b      	lsls	r3, r3, #2
 8002f98:	49df      	ldr	r1, [pc, #892]	; (8003318 <main+0xd1c>)
 8002f9a:	50d1      	str	r1, [r2, r3]
 8002f9c:	4bd6      	ldr	r3, [pc, #856]	; (80032f8 <main+0xcfc>)
 8002f9e:	181b      	adds	r3, r3, r0
 8002fa0:	193a      	adds	r2, r7, r4
 8002fa2:	189a      	adds	r2, r3, r2
 8002fa4:	23de      	movs	r3, #222	; 0xde
 8002fa6:	009b      	lsls	r3, r3, #2
 8002fa8:	49dc      	ldr	r1, [pc, #880]	; (800331c <main+0xd20>)
 8002faa:	50d1      	str	r1, [r2, r3]
 8002fac:	4bd2      	ldr	r3, [pc, #840]	; (80032f8 <main+0xcfc>)
 8002fae:	181b      	adds	r3, r3, r0
 8002fb0:	193a      	adds	r2, r7, r4
 8002fb2:	189a      	adds	r2, r3, r2
 8002fb4:	23df      	movs	r3, #223	; 0xdf
 8002fb6:	009b      	lsls	r3, r3, #2
 8002fb8:	49d3      	ldr	r1, [pc, #844]	; (8003308 <main+0xd0c>)
 8002fba:	50d1      	str	r1, [r2, r3]
 8002fbc:	4bce      	ldr	r3, [pc, #824]	; (80032f8 <main+0xcfc>)
 8002fbe:	181b      	adds	r3, r3, r0
 8002fc0:	193a      	adds	r2, r7, r4
 8002fc2:	189a      	adds	r2, r3, r2
 8002fc4:	23e0      	movs	r3, #224	; 0xe0
 8002fc6:	009b      	lsls	r3, r3, #2
 8002fc8:	49d0      	ldr	r1, [pc, #832]	; (800330c <main+0xd10>)
 8002fca:	50d1      	str	r1, [r2, r3]
 8002fcc:	4bca      	ldr	r3, [pc, #808]	; (80032f8 <main+0xcfc>)
 8002fce:	181b      	adds	r3, r3, r0
 8002fd0:	193a      	adds	r2, r7, r4
 8002fd2:	189a      	adds	r2, r3, r2
 8002fd4:	23e1      	movs	r3, #225	; 0xe1
 8002fd6:	009b      	lsls	r3, r3, #2
 8002fd8:	49cd      	ldr	r1, [pc, #820]	; (8003310 <main+0xd14>)
 8002fda:	50d1      	str	r1, [r2, r3]
 8002fdc:	4bc6      	ldr	r3, [pc, #792]	; (80032f8 <main+0xcfc>)
 8002fde:	181b      	adds	r3, r3, r0
 8002fe0:	193a      	adds	r2, r7, r4
 8002fe2:	189a      	adds	r2, r3, r2
 8002fe4:	23e2      	movs	r3, #226	; 0xe2
 8002fe6:	009b      	lsls	r3, r3, #2
 8002fe8:	49ca      	ldr	r1, [pc, #808]	; (8003314 <main+0xd18>)
 8002fea:	50d1      	str	r1, [r2, r3]
 8002fec:	4bc2      	ldr	r3, [pc, #776]	; (80032f8 <main+0xcfc>)
 8002fee:	181b      	adds	r3, r3, r0
 8002ff0:	193a      	adds	r2, r7, r4
 8002ff2:	189a      	adds	r2, r3, r2
 8002ff4:	23e3      	movs	r3, #227	; 0xe3
 8002ff6:	009b      	lsls	r3, r3, #2
 8002ff8:	49c6      	ldr	r1, [pc, #792]	; (8003314 <main+0xd18>)
 8002ffa:	50d1      	str	r1, [r2, r3]
 8002ffc:	4bbe      	ldr	r3, [pc, #760]	; (80032f8 <main+0xcfc>)
 8002ffe:	181b      	adds	r3, r3, r0
 8003000:	193a      	adds	r2, r7, r4
 8003002:	189a      	adds	r2, r3, r2
 8003004:	23e5      	movs	r3, #229	; 0xe5
 8003006:	009b      	lsls	r3, r3, #2
 8003008:	49bc      	ldr	r1, [pc, #752]	; (80032fc <main+0xd00>)
 800300a:	50d1      	str	r1, [r2, r3]
 800300c:	4bba      	ldr	r3, [pc, #744]	; (80032f8 <main+0xcfc>)
 800300e:	181b      	adds	r3, r3, r0
 8003010:	193a      	adds	r2, r7, r4
 8003012:	189a      	adds	r2, r3, r2
 8003014:	23ea      	movs	r3, #234	; 0xea
 8003016:	009b      	lsls	r3, r3, #2
 8003018:	49c1      	ldr	r1, [pc, #772]	; (8003320 <main+0xd24>)
 800301a:	50d1      	str	r1, [r2, r3]
 800301c:	4bb6      	ldr	r3, [pc, #728]	; (80032f8 <main+0xcfc>)
 800301e:	181b      	adds	r3, r3, r0
 8003020:	193a      	adds	r2, r7, r4
 8003022:	189a      	adds	r2, r3, r2
 8003024:	23eb      	movs	r3, #235	; 0xeb
 8003026:	009b      	lsls	r3, r3, #2
 8003028:	2184      	movs	r1, #132	; 0x84
 800302a:	05c9      	lsls	r1, r1, #23
 800302c:	50d1      	str	r1, [r2, r3]
 800302e:	4bb2      	ldr	r3, [pc, #712]	; (80032f8 <main+0xcfc>)
 8003030:	181b      	adds	r3, r3, r0
 8003032:	193a      	adds	r2, r7, r4
 8003034:	189a      	adds	r2, r3, r2
 8003036:	23ec      	movs	r3, #236	; 0xec
 8003038:	009b      	lsls	r3, r3, #2
 800303a:	49ba      	ldr	r1, [pc, #744]	; (8003324 <main+0xd28>)
 800303c:	50d1      	str	r1, [r2, r3]
 800303e:	4bae      	ldr	r3, [pc, #696]	; (80032f8 <main+0xcfc>)
 8003040:	181b      	adds	r3, r3, r0
 8003042:	193a      	adds	r2, r7, r4
 8003044:	189a      	adds	r2, r3, r2
 8003046:	23ed      	movs	r3, #237	; 0xed
 8003048:	009b      	lsls	r3, r3, #2
 800304a:	49b7      	ldr	r1, [pc, #732]	; (8003328 <main+0xd2c>)
 800304c:	50d1      	str	r1, [r2, r3]
 800304e:	4baa      	ldr	r3, [pc, #680]	; (80032f8 <main+0xcfc>)
 8003050:	181b      	adds	r3, r3, r0
 8003052:	193a      	adds	r2, r7, r4
 8003054:	189a      	adds	r2, r3, r2
 8003056:	23ee      	movs	r3, #238	; 0xee
 8003058:	009b      	lsls	r3, r3, #2
 800305a:	49b4      	ldr	r1, [pc, #720]	; (800332c <main+0xd30>)
 800305c:	50d1      	str	r1, [r2, r3]
 800305e:	4ba6      	ldr	r3, [pc, #664]	; (80032f8 <main+0xcfc>)
 8003060:	181b      	adds	r3, r3, r0
 8003062:	193a      	adds	r2, r7, r4
 8003064:	189a      	adds	r2, r3, r2
 8003066:	23f0      	movs	r3, #240	; 0xf0
 8003068:	009b      	lsls	r3, r3, #2
 800306a:	49aa      	ldr	r1, [pc, #680]	; (8003314 <main+0xd18>)
 800306c:	50d1      	str	r1, [r2, r3]
 800306e:	4ba2      	ldr	r3, [pc, #648]	; (80032f8 <main+0xcfc>)
 8003070:	181b      	adds	r3, r3, r0
 8003072:	193a      	adds	r2, r7, r4
 8003074:	189a      	adds	r2, r3, r2
 8003076:	23f2      	movs	r3, #242	; 0xf2
 8003078:	009b      	lsls	r3, r3, #2
 800307a:	49a0      	ldr	r1, [pc, #640]	; (80032fc <main+0xd00>)
 800307c:	50d1      	str	r1, [r2, r3]
 800307e:	4b9e      	ldr	r3, [pc, #632]	; (80032f8 <main+0xcfc>)
 8003080:	181b      	adds	r3, r3, r0
 8003082:	193a      	adds	r2, r7, r4
 8003084:	189a      	adds	r2, r3, r2
 8003086:	23f7      	movs	r3, #247	; 0xf7
 8003088:	009b      	lsls	r3, r3, #2
 800308a:	49a9      	ldr	r1, [pc, #676]	; (8003330 <main+0xd34>)
 800308c:	50d1      	str	r1, [r2, r3]
 800308e:	4b9a      	ldr	r3, [pc, #616]	; (80032f8 <main+0xcfc>)
 8003090:	181b      	adds	r3, r3, r0
 8003092:	193a      	adds	r2, r7, r4
 8003094:	189a      	adds	r2, r3, r2
 8003096:	23f8      	movs	r3, #248	; 0xf8
 8003098:	009b      	lsls	r3, r3, #2
 800309a:	49a6      	ldr	r1, [pc, #664]	; (8003334 <main+0xd38>)
 800309c:	50d1      	str	r1, [r2, r3]
 800309e:	4b96      	ldr	r3, [pc, #600]	; (80032f8 <main+0xcfc>)
 80030a0:	181b      	adds	r3, r3, r0
 80030a2:	193a      	adds	r2, r7, r4
 80030a4:	189a      	adds	r2, r3, r2
 80030a6:	23f9      	movs	r3, #249	; 0xf9
 80030a8:	009b      	lsls	r3, r3, #2
 80030aa:	499e      	ldr	r1, [pc, #632]	; (8003324 <main+0xd28>)
 80030ac:	50d1      	str	r1, [r2, r3]
 80030ae:	4b92      	ldr	r3, [pc, #584]	; (80032f8 <main+0xcfc>)
 80030b0:	181b      	adds	r3, r3, r0
 80030b2:	193a      	adds	r2, r7, r4
 80030b4:	189a      	adds	r2, r3, r2
 80030b6:	23fa      	movs	r3, #250	; 0xfa
 80030b8:	009b      	lsls	r3, r3, #2
 80030ba:	499b      	ldr	r1, [pc, #620]	; (8003328 <main+0xd2c>)
 80030bc:	50d1      	str	r1, [r2, r3]
 80030be:	4b8e      	ldr	r3, [pc, #568]	; (80032f8 <main+0xcfc>)
 80030c0:	181b      	adds	r3, r3, r0
 80030c2:	193a      	adds	r2, r7, r4
 80030c4:	189a      	adds	r2, r3, r2
 80030c6:	23fb      	movs	r3, #251	; 0xfb
 80030c8:	009b      	lsls	r3, r3, #2
 80030ca:	4998      	ldr	r1, [pc, #608]	; (800332c <main+0xd30>)
 80030cc:	50d1      	str	r1, [r2, r3]
 80030ce:	4b8a      	ldr	r3, [pc, #552]	; (80032f8 <main+0xcfc>)
 80030d0:	181b      	adds	r3, r3, r0
 80030d2:	193a      	adds	r2, r7, r4
 80030d4:	189a      	adds	r2, r3, r2
 80030d6:	23fd      	movs	r3, #253	; 0xfd
 80030d8:	009b      	lsls	r3, r3, #2
 80030da:	498e      	ldr	r1, [pc, #568]	; (8003314 <main+0xd18>)
 80030dc:	50d1      	str	r1, [r2, r3]
 80030de:	4b86      	ldr	r3, [pc, #536]	; (80032f8 <main+0xcfc>)
 80030e0:	181b      	adds	r3, r3, r0
 80030e2:	193a      	adds	r2, r7, r4
 80030e4:	189a      	adds	r2, r3, r2
 80030e6:	23ff      	movs	r3, #255	; 0xff
 80030e8:	009b      	lsls	r3, r3, #2
 80030ea:	4984      	ldr	r1, [pc, #528]	; (80032fc <main+0xd00>)
 80030ec:	50d1      	str	r1, [r2, r3]
 80030ee:	4b82      	ldr	r3, [pc, #520]	; (80032f8 <main+0xcfc>)
 80030f0:	181b      	adds	r3, r3, r0
 80030f2:	193a      	adds	r2, r7, r4
 80030f4:	189a      	adds	r2, r3, r2
 80030f6:	2382      	movs	r3, #130	; 0x82
 80030f8:	00db      	lsls	r3, r3, #3
 80030fa:	498f      	ldr	r1, [pc, #572]	; (8003338 <main+0xd3c>)
 80030fc:	50d1      	str	r1, [r2, r3]
 80030fe:	4b7e      	ldr	r3, [pc, #504]	; (80032f8 <main+0xcfc>)
 8003100:	181b      	adds	r3, r3, r0
 8003102:	2228      	movs	r2, #40	; 0x28
 8003104:	4694      	mov	ip, r2
 8003106:	44bc      	add	ip, r7
 8003108:	4463      	add	r3, ip
 800310a:	4a8c      	ldr	r2, [pc, #560]	; (800333c <main+0xd40>)
 800310c:	498c      	ldr	r1, [pc, #560]	; (8003340 <main+0xd44>)
 800310e:	5099      	str	r1, [r3, r2]
 8003110:	4b79      	ldr	r3, [pc, #484]	; (80032f8 <main+0xcfc>)
 8003112:	181b      	adds	r3, r3, r0
 8003114:	193a      	adds	r2, r7, r4
 8003116:	189a      	adds	r2, r3, r2
 8003118:	2383      	movs	r3, #131	; 0x83
 800311a:	00db      	lsls	r3, r3, #3
 800311c:	4981      	ldr	r1, [pc, #516]	; (8003324 <main+0xd28>)
 800311e:	50d1      	str	r1, [r2, r3]
 8003120:	4b75      	ldr	r3, [pc, #468]	; (80032f8 <main+0xcfc>)
 8003122:	181b      	adds	r3, r3, r0
 8003124:	2228      	movs	r2, #40	; 0x28
 8003126:	4694      	mov	ip, r2
 8003128:	44bc      	add	ip, r7
 800312a:	4463      	add	r3, ip
 800312c:	4a85      	ldr	r2, [pc, #532]	; (8003344 <main+0xd48>)
 800312e:	497e      	ldr	r1, [pc, #504]	; (8003328 <main+0xd2c>)
 8003130:	5099      	str	r1, [r3, r2]
 8003132:	4b71      	ldr	r3, [pc, #452]	; (80032f8 <main+0xcfc>)
 8003134:	181b      	adds	r3, r3, r0
 8003136:	193a      	adds	r2, r7, r4
 8003138:	189a      	adds	r2, r3, r2
 800313a:	2384      	movs	r3, #132	; 0x84
 800313c:	00db      	lsls	r3, r3, #3
 800313e:	497b      	ldr	r1, [pc, #492]	; (800332c <main+0xd30>)
 8003140:	50d1      	str	r1, [r2, r3]
 8003142:	4b6d      	ldr	r3, [pc, #436]	; (80032f8 <main+0xcfc>)
 8003144:	181b      	adds	r3, r3, r0
 8003146:	193a      	adds	r2, r7, r4
 8003148:	189a      	adds	r2, r3, r2
 800314a:	2385      	movs	r3, #133	; 0x85
 800314c:	00db      	lsls	r3, r3, #3
 800314e:	4971      	ldr	r1, [pc, #452]	; (8003314 <main+0xd18>)
 8003150:	50d1      	str	r1, [r2, r3]
 8003152:	4b69      	ldr	r3, [pc, #420]	; (80032f8 <main+0xcfc>)
 8003154:	181b      	adds	r3, r3, r0
 8003156:	193a      	adds	r2, r7, r4
 8003158:	189a      	adds	r2, r3, r2
 800315a:	2386      	movs	r3, #134	; 0x86
 800315c:	00db      	lsls	r3, r3, #3
 800315e:	4967      	ldr	r1, [pc, #412]	; (80032fc <main+0xd00>)
 8003160:	50d1      	str	r1, [r2, r3]
 8003162:	4b65      	ldr	r3, [pc, #404]	; (80032f8 <main+0xcfc>)
 8003164:	181b      	adds	r3, r3, r0
 8003166:	2228      	movs	r2, #40	; 0x28
 8003168:	4694      	mov	ip, r2
 800316a:	44bc      	add	ip, r7
 800316c:	4463      	add	r3, ip
 800316e:	4a76      	ldr	r2, [pc, #472]	; (8003348 <main+0xd4c>)
 8003170:	4976      	ldr	r1, [pc, #472]	; (800334c <main+0xd50>)
 8003172:	5099      	str	r1, [r3, r2]
 8003174:	4b60      	ldr	r3, [pc, #384]	; (80032f8 <main+0xcfc>)
 8003176:	181b      	adds	r3, r3, r0
 8003178:	193a      	adds	r2, r7, r4
 800317a:	189a      	adds	r2, r3, r2
 800317c:	2389      	movs	r3, #137	; 0x89
 800317e:	00db      	lsls	r3, r3, #3
 8003180:	4973      	ldr	r1, [pc, #460]	; (8003350 <main+0xd54>)
 8003182:	50d1      	str	r1, [r2, r3]
 8003184:	4b5c      	ldr	r3, [pc, #368]	; (80032f8 <main+0xcfc>)
 8003186:	181b      	adds	r3, r3, r0
 8003188:	2228      	movs	r2, #40	; 0x28
 800318a:	4694      	mov	ip, r2
 800318c:	44bc      	add	ip, r7
 800318e:	4463      	add	r3, ip
 8003190:	4a70      	ldr	r2, [pc, #448]	; (8003354 <main+0xd58>)
 8003192:	4971      	ldr	r1, [pc, #452]	; (8003358 <main+0xd5c>)
 8003194:	5099      	str	r1, [r3, r2]
 8003196:	4b58      	ldr	r3, [pc, #352]	; (80032f8 <main+0xcfc>)
 8003198:	181b      	adds	r3, r3, r0
 800319a:	193a      	adds	r2, r7, r4
 800319c:	189a      	adds	r2, r3, r2
 800319e:	238a      	movs	r3, #138	; 0x8a
 80031a0:	00db      	lsls	r3, r3, #3
 80031a2:	496e      	ldr	r1, [pc, #440]	; (800335c <main+0xd60>)
 80031a4:	50d1      	str	r1, [r2, r3]
 80031a6:	4b54      	ldr	r3, [pc, #336]	; (80032f8 <main+0xcfc>)
 80031a8:	181b      	adds	r3, r3, r0
 80031aa:	2228      	movs	r2, #40	; 0x28
 80031ac:	4694      	mov	ip, r2
 80031ae:	44bc      	add	ip, r7
 80031b0:	4463      	add	r3, ip
 80031b2:	4a6b      	ldr	r2, [pc, #428]	; (8003360 <main+0xd64>)
 80031b4:	496b      	ldr	r1, [pc, #428]	; (8003364 <main+0xd68>)
 80031b6:	5099      	str	r1, [r3, r2]
 80031b8:	4b4f      	ldr	r3, [pc, #316]	; (80032f8 <main+0xcfc>)
 80031ba:	181b      	adds	r3, r3, r0
 80031bc:	193a      	adds	r2, r7, r4
 80031be:	189a      	adds	r2, r3, r2
 80031c0:	238b      	movs	r3, #139	; 0x8b
 80031c2:	00db      	lsls	r3, r3, #3
 80031c4:	4953      	ldr	r1, [pc, #332]	; (8003314 <main+0xd18>)
 80031c6:	50d1      	str	r1, [r2, r3]
 80031c8:	4b4b      	ldr	r3, [pc, #300]	; (80032f8 <main+0xcfc>)
 80031ca:	181b      	adds	r3, r3, r0
 80031cc:	2228      	movs	r2, #40	; 0x28
 80031ce:	4694      	mov	ip, r2
 80031d0:	44bc      	add	ip, r7
 80031d2:	4463      	add	r3, ip
 80031d4:	4a64      	ldr	r2, [pc, #400]	; (8003368 <main+0xd6c>)
 80031d6:	494f      	ldr	r1, [pc, #316]	; (8003314 <main+0xd18>)
 80031d8:	5099      	str	r1, [r3, r2]
 80031da:	4b47      	ldr	r3, [pc, #284]	; (80032f8 <main+0xcfc>)
 80031dc:	181b      	adds	r3, r3, r0
 80031de:	193a      	adds	r2, r7, r4
 80031e0:	189a      	adds	r2, r3, r2
 80031e2:	238c      	movs	r3, #140	; 0x8c
 80031e4:	00db      	lsls	r3, r3, #3
 80031e6:	494b      	ldr	r1, [pc, #300]	; (8003314 <main+0xd18>)
 80031e8:	50d1      	str	r1, [r2, r3]
 80031ea:	4b43      	ldr	r3, [pc, #268]	; (80032f8 <main+0xcfc>)
 80031ec:	181b      	adds	r3, r3, r0
 80031ee:	2228      	movs	r2, #40	; 0x28
 80031f0:	4694      	mov	ip, r2
 80031f2:	44bc      	add	ip, r7
 80031f4:	4463      	add	r3, ip
 80031f6:	4a5d      	ldr	r2, [pc, #372]	; (800336c <main+0xd70>)
 80031f8:	495d      	ldr	r1, [pc, #372]	; (8003370 <main+0xd74>)
 80031fa:	5099      	str	r1, [r3, r2]
 80031fc:	4b3e      	ldr	r3, [pc, #248]	; (80032f8 <main+0xcfc>)
 80031fe:	181b      	adds	r3, r3, r0
 8003200:	193a      	adds	r2, r7, r4
 8003202:	189a      	adds	r2, r3, r2
 8003204:	238f      	movs	r3, #143	; 0x8f
 8003206:	00db      	lsls	r3, r3, #3
 8003208:	495a      	ldr	r1, [pc, #360]	; (8003374 <main+0xd78>)
 800320a:	50d1      	str	r1, [r2, r3]
 800320c:	4b3a      	ldr	r3, [pc, #232]	; (80032f8 <main+0xcfc>)
 800320e:	181b      	adds	r3, r3, r0
 8003210:	2228      	movs	r2, #40	; 0x28
 8003212:	4694      	mov	ip, r2
 8003214:	44bc      	add	ip, r7
 8003216:	4463      	add	r3, ip
 8003218:	4a57      	ldr	r2, [pc, #348]	; (8003378 <main+0xd7c>)
 800321a:	4958      	ldr	r1, [pc, #352]	; (800337c <main+0xd80>)
 800321c:	5099      	str	r1, [r3, r2]
 800321e:	4b36      	ldr	r3, [pc, #216]	; (80032f8 <main+0xcfc>)
 8003220:	181b      	adds	r3, r3, r0
 8003222:	193a      	adds	r2, r7, r4
 8003224:	189a      	adds	r2, r3, r2
 8003226:	2390      	movs	r3, #144	; 0x90
 8003228:	00db      	lsls	r3, r3, #3
 800322a:	494b      	ldr	r1, [pc, #300]	; (8003358 <main+0xd5c>)
 800322c:	50d1      	str	r1, [r2, r3]
 800322e:	4b32      	ldr	r3, [pc, #200]	; (80032f8 <main+0xcfc>)
 8003230:	181b      	adds	r3, r3, r0
 8003232:	2228      	movs	r2, #40	; 0x28
 8003234:	4694      	mov	ip, r2
 8003236:	44bc      	add	ip, r7
 8003238:	4463      	add	r3, ip
 800323a:	4a51      	ldr	r2, [pc, #324]	; (8003380 <main+0xd84>)
 800323c:	4947      	ldr	r1, [pc, #284]	; (800335c <main+0xd60>)
 800323e:	5099      	str	r1, [r3, r2]
 8003240:	4b2d      	ldr	r3, [pc, #180]	; (80032f8 <main+0xcfc>)
 8003242:	181b      	adds	r3, r3, r0
 8003244:	193a      	adds	r2, r7, r4
 8003246:	189a      	adds	r2, r3, r2
 8003248:	2391      	movs	r3, #145	; 0x91
 800324a:	00db      	lsls	r3, r3, #3
 800324c:	4945      	ldr	r1, [pc, #276]	; (8003364 <main+0xd68>)
 800324e:	50d1      	str	r1, [r2, r3]
 8003250:	4b29      	ldr	r3, [pc, #164]	; (80032f8 <main+0xcfc>)
 8003252:	181b      	adds	r3, r3, r0
 8003254:	2228      	movs	r2, #40	; 0x28
 8003256:	4694      	mov	ip, r2
 8003258:	44bc      	add	ip, r7
 800325a:	4463      	add	r3, ip
 800325c:	4a49      	ldr	r2, [pc, #292]	; (8003384 <main+0xd88>)
 800325e:	492d      	ldr	r1, [pc, #180]	; (8003314 <main+0xd18>)
 8003260:	5099      	str	r1, [r3, r2]
 8003262:	4b25      	ldr	r3, [pc, #148]	; (80032f8 <main+0xcfc>)
 8003264:	181b      	adds	r3, r3, r0
 8003266:	193a      	adds	r2, r7, r4
 8003268:	189a      	adds	r2, r3, r2
 800326a:	2392      	movs	r3, #146	; 0x92
 800326c:	00db      	lsls	r3, r3, #3
 800326e:	4929      	ldr	r1, [pc, #164]	; (8003314 <main+0xd18>)
 8003270:	50d1      	str	r1, [r2, r3]
 8003272:	4b21      	ldr	r3, [pc, #132]	; (80032f8 <main+0xcfc>)
 8003274:	181b      	adds	r3, r3, r0
 8003276:	2228      	movs	r2, #40	; 0x28
 8003278:	4694      	mov	ip, r2
 800327a:	44bc      	add	ip, r7
 800327c:	4463      	add	r3, ip
 800327e:	4a42      	ldr	r2, [pc, #264]	; (8003388 <main+0xd8c>)
 8003280:	4924      	ldr	r1, [pc, #144]	; (8003314 <main+0xd18>)
 8003282:	5099      	str	r1, [r3, r2]
 8003284:	4b1c      	ldr	r3, [pc, #112]	; (80032f8 <main+0xcfc>)
 8003286:	181b      	adds	r3, r3, r0
 8003288:	193a      	adds	r2, r7, r4
 800328a:	189a      	adds	r2, r3, r2
 800328c:	2393      	movs	r3, #147	; 0x93
 800328e:	00db      	lsls	r3, r3, #3
 8003290:	4937      	ldr	r1, [pc, #220]	; (8003370 <main+0xd74>)
 8003292:	50d1      	str	r1, [r2, r3]
 8003294:	4b18      	ldr	r3, [pc, #96]	; (80032f8 <main+0xcfc>)
 8003296:	181b      	adds	r3, r3, r0
 8003298:	2228      	movs	r2, #40	; 0x28
 800329a:	4694      	mov	ip, r2
 800329c:	44bc      	add	ip, r7
 800329e:	4463      	add	r3, ip
 80032a0:	4a3a      	ldr	r2, [pc, #232]	; (800338c <main+0xd90>)
 80032a2:	493b      	ldr	r1, [pc, #236]	; (8003390 <main+0xd94>)
 80032a4:	5099      	str	r1, [r3, r2]
 80032a6:	4b14      	ldr	r3, [pc, #80]	; (80032f8 <main+0xcfc>)
 80032a8:	181b      	adds	r3, r3, r0
 80032aa:	193a      	adds	r2, r7, r4
 80032ac:	189a      	adds	r2, r3, r2
 80032ae:	2396      	movs	r3, #150	; 0x96
 80032b0:	00db      	lsls	r3, r3, #3
 80032b2:	4938      	ldr	r1, [pc, #224]	; (8003394 <main+0xd98>)
 80032b4:	50d1      	str	r1, [r2, r3]
 80032b6:	4b10      	ldr	r3, [pc, #64]	; (80032f8 <main+0xcfc>)
 80032b8:	181b      	adds	r3, r3, r0
 80032ba:	2228      	movs	r2, #40	; 0x28
 80032bc:	4694      	mov	ip, r2
 80032be:	44bc      	add	ip, r7
 80032c0:	4463      	add	r3, ip
 80032c2:	4a35      	ldr	r2, [pc, #212]	; (8003398 <main+0xd9c>)
 80032c4:	4924      	ldr	r1, [pc, #144]	; (8003358 <main+0xd5c>)
 80032c6:	5099      	str	r1, [r3, r2]
 80032c8:	4b0b      	ldr	r3, [pc, #44]	; (80032f8 <main+0xcfc>)
 80032ca:	181b      	adds	r3, r3, r0
 80032cc:	193a      	adds	r2, r7, r4
 80032ce:	189a      	adds	r2, r3, r2
 80032d0:	2397      	movs	r3, #151	; 0x97
 80032d2:	00db      	lsls	r3, r3, #3
 80032d4:	4921      	ldr	r1, [pc, #132]	; (800335c <main+0xd60>)
 80032d6:	50d1      	str	r1, [r2, r3]
 80032d8:	4b07      	ldr	r3, [pc, #28]	; (80032f8 <main+0xcfc>)
 80032da:	181b      	adds	r3, r3, r0
 80032dc:	2228      	movs	r2, #40	; 0x28
 80032de:	4694      	mov	ip, r2
 80032e0:	44bc      	add	ip, r7
 80032e2:	4463      	add	r3, ip
 80032e4:	4a2d      	ldr	r2, [pc, #180]	; (800339c <main+0xda0>)
 80032e6:	491f      	ldr	r1, [pc, #124]	; (8003364 <main+0xd68>)
 80032e8:	5099      	str	r1, [r3, r2]
 80032ea:	4b03      	ldr	r3, [pc, #12]	; (80032f8 <main+0xcfc>)
 80032ec:	181b      	adds	r3, r3, r0
 80032ee:	193a      	adds	r2, r7, r4
 80032f0:	189a      	adds	r2, r3, r2
 80032f2:	2398      	movs	r3, #152	; 0x98
 80032f4:	e054      	b.n	80033a0 <main+0xda4>
 80032f6:	46c0      	nop			; (mov r8, r8)
 80032f8:	fffff874 	.word	0xfffff874
 80032fc:	41f2ec22 	.word	0x41f2ec22
 8003300:	3e7be76d 	.word	0x3e7be76d
 8003304:	41f00000 	.word	0x41f00000
 8003308:	ba1d4952 	.word	0xba1d4952
 800330c:	bbebedfa 	.word	0xbbebedfa
 8003310:	409c985f 	.word	0x409c985f
 8003314:	bd79db23 	.word	0xbd79db23
 8003318:	3e83126f 	.word	0x3e83126f
 800331c:	41f80000 	.word	0x41f80000
 8003320:	3e872b02 	.word	0x3e872b02
 8003324:	3a9d4952 	.word	0x3a9d4952
 8003328:	bbd844d0 	.word	0xbbd844d0
 800332c:	409c8e8a 	.word	0x409c8e8a
 8003330:	3e88b439 	.word	0x3e88b439
 8003334:	42040000 	.word	0x42040000
 8003338:	3e8c49ba 	.word	0x3e8c49ba
 800333c:	00000414 	.word	0x00000414
 8003340:	42080000 	.word	0x42080000
 8003344:	0000041c 	.word	0x0000041c
 8003348:	00000444 	.word	0x00000444
 800334c:	3e958106 	.word	0x3e958106
 8003350:	420c0000 	.word	0x420c0000
 8003354:	0000044c 	.word	0x0000044c
 8003358:	3b6bedfa 	.word	0x3b6bedfa
 800335c:	bb449ba6 	.word	0xbb449ba6
 8003360:	00000454 	.word	0x00000454
 8003364:	409d096c 	.word	0x409d096c
 8003368:	0000045c 	.word	0x0000045c
 800336c:	00000464 	.word	0x00000464
 8003370:	41f2f838 	.word	0x41f2f838
 8003374:	3e978d50 	.word	0x3e978d50
 8003378:	0000047c 	.word	0x0000047c
 800337c:	42100000 	.word	0x42100000
 8003380:	00000484 	.word	0x00000484
 8003384:	0000048c 	.word	0x0000048c
 8003388:	00000494 	.word	0x00000494
 800338c:	000004ac 	.word	0x000004ac
 8003390:	3e9cac08 	.word	0x3e9cac08
 8003394:	42140000 	.word	0x42140000
 8003398:	000004b4 	.word	0x000004b4
 800339c:	000004bc 	.word	0x000004bc
 80033a0:	00db      	lsls	r3, r3, #3
 80033a2:	49fe      	ldr	r1, [pc, #1016]	; (800379c <main+0x11a0>)
 80033a4:	50d1      	str	r1, [r2, r3]
 80033a6:	4bfe      	ldr	r3, [pc, #1016]	; (80037a0 <main+0x11a4>)
 80033a8:	181b      	adds	r3, r3, r0
 80033aa:	2228      	movs	r2, #40	; 0x28
 80033ac:	4694      	mov	ip, r2
 80033ae:	44bc      	add	ip, r7
 80033b0:	4463      	add	r3, ip
 80033b2:	4afc      	ldr	r2, [pc, #1008]	; (80037a4 <main+0x11a8>)
 80033b4:	49f9      	ldr	r1, [pc, #996]	; (800379c <main+0x11a0>)
 80033b6:	5099      	str	r1, [r3, r2]
 80033b8:	4bf9      	ldr	r3, [pc, #996]	; (80037a0 <main+0x11a4>)
 80033ba:	181b      	adds	r3, r3, r0
 80033bc:	193a      	adds	r2, r7, r4
 80033be:	189a      	adds	r2, r3, r2
 80033c0:	2399      	movs	r3, #153	; 0x99
 80033c2:	00db      	lsls	r3, r3, #3
 80033c4:	49f5      	ldr	r1, [pc, #980]	; (800379c <main+0x11a0>)
 80033c6:	50d1      	str	r1, [r2, r3]
 80033c8:	4bf5      	ldr	r3, [pc, #980]	; (80037a0 <main+0x11a4>)
 80033ca:	181b      	adds	r3, r3, r0
 80033cc:	2228      	movs	r2, #40	; 0x28
 80033ce:	4694      	mov	ip, r2
 80033d0:	44bc      	add	ip, r7
 80033d2:	4463      	add	r3, ip
 80033d4:	4af4      	ldr	r2, [pc, #976]	; (80037a8 <main+0x11ac>)
 80033d6:	49f5      	ldr	r1, [pc, #980]	; (80037ac <main+0x11b0>)
 80033d8:	5099      	str	r1, [r3, r2]
 80033da:	4bf1      	ldr	r3, [pc, #964]	; (80037a0 <main+0x11a4>)
 80033dc:	181b      	adds	r3, r3, r0
 80033de:	193a      	adds	r2, r7, r4
 80033e0:	189a      	adds	r2, r3, r2
 80033e2:	239c      	movs	r3, #156	; 0x9c
 80033e4:	00db      	lsls	r3, r3, #3
 80033e6:	49f2      	ldr	r1, [pc, #968]	; (80037b0 <main+0x11b4>)
 80033e8:	50d1      	str	r1, [r2, r3]
 80033ea:	4bed      	ldr	r3, [pc, #948]	; (80037a0 <main+0x11a4>)
 80033ec:	181b      	adds	r3, r3, r0
 80033ee:	2228      	movs	r2, #40	; 0x28
 80033f0:	4694      	mov	ip, r2
 80033f2:	44bc      	add	ip, r7
 80033f4:	4463      	add	r3, ip
 80033f6:	4aef      	ldr	r2, [pc, #956]	; (80037b4 <main+0x11b8>)
 80033f8:	49ef      	ldr	r1, [pc, #956]	; (80037b8 <main+0x11bc>)
 80033fa:	5099      	str	r1, [r3, r2]
 80033fc:	4be8      	ldr	r3, [pc, #928]	; (80037a0 <main+0x11a4>)
 80033fe:	181b      	adds	r3, r3, r0
 8003400:	193a      	adds	r2, r7, r4
 8003402:	189a      	adds	r2, r3, r2
 8003404:	239d      	movs	r3, #157	; 0x9d
 8003406:	00db      	lsls	r3, r3, #3
 8003408:	49ec      	ldr	r1, [pc, #944]	; (80037bc <main+0x11c0>)
 800340a:	50d1      	str	r1, [r2, r3]
 800340c:	4be4      	ldr	r3, [pc, #912]	; (80037a0 <main+0x11a4>)
 800340e:	181b      	adds	r3, r3, r0
 8003410:	2228      	movs	r2, #40	; 0x28
 8003412:	4694      	mov	ip, r2
 8003414:	44bc      	add	ip, r7
 8003416:	4463      	add	r3, ip
 8003418:	4ae9      	ldr	r2, [pc, #932]	; (80037c0 <main+0x11c4>)
 800341a:	49ea      	ldr	r1, [pc, #936]	; (80037c4 <main+0x11c8>)
 800341c:	5099      	str	r1, [r3, r2]
 800341e:	4be0      	ldr	r3, [pc, #896]	; (80037a0 <main+0x11a4>)
 8003420:	181b      	adds	r3, r3, r0
 8003422:	193a      	adds	r2, r7, r4
 8003424:	189a      	adds	r2, r3, r2
 8003426:	239e      	movs	r3, #158	; 0x9e
 8003428:	00db      	lsls	r3, r3, #3
 800342a:	49e7      	ldr	r1, [pc, #924]	; (80037c8 <main+0x11cc>)
 800342c:	50d1      	str	r1, [r2, r3]
 800342e:	4bdc      	ldr	r3, [pc, #880]	; (80037a0 <main+0x11a4>)
 8003430:	181b      	adds	r3, r3, r0
 8003432:	2228      	movs	r2, #40	; 0x28
 8003434:	4694      	mov	ip, r2
 8003436:	44bc      	add	ip, r7
 8003438:	4463      	add	r3, ip
 800343a:	4ae4      	ldr	r2, [pc, #912]	; (80037cc <main+0x11d0>)
 800343c:	49d7      	ldr	r1, [pc, #860]	; (800379c <main+0x11a0>)
 800343e:	5099      	str	r1, [r3, r2]
 8003440:	4bd7      	ldr	r3, [pc, #860]	; (80037a0 <main+0x11a4>)
 8003442:	181b      	adds	r3, r3, r0
 8003444:	193a      	adds	r2, r7, r4
 8003446:	189a      	adds	r2, r3, r2
 8003448:	239f      	movs	r3, #159	; 0x9f
 800344a:	00db      	lsls	r3, r3, #3
 800344c:	49d3      	ldr	r1, [pc, #844]	; (800379c <main+0x11a0>)
 800344e:	50d1      	str	r1, [r2, r3]
 8003450:	4bd3      	ldr	r3, [pc, #844]	; (80037a0 <main+0x11a4>)
 8003452:	181b      	adds	r3, r3, r0
 8003454:	193a      	adds	r2, r7, r4
 8003456:	189a      	adds	r2, r3, r2
 8003458:	23a0      	movs	r3, #160	; 0xa0
 800345a:	00db      	lsls	r3, r3, #3
 800345c:	49dc      	ldr	r1, [pc, #880]	; (80037d0 <main+0x11d4>)
 800345e:	50d1      	str	r1, [r2, r3]
 8003460:	4bcf      	ldr	r3, [pc, #828]	; (80037a0 <main+0x11a4>)
 8003462:	181b      	adds	r3, r3, r0
 8003464:	2228      	movs	r2, #40	; 0x28
 8003466:	4694      	mov	ip, r2
 8003468:	44bc      	add	ip, r7
 800346a:	4463      	add	r3, ip
 800346c:	4ad9      	ldr	r2, [pc, #868]	; (80037d4 <main+0x11d8>)
 800346e:	49da      	ldr	r1, [pc, #872]	; (80037d8 <main+0x11dc>)
 8003470:	5099      	str	r1, [r3, r2]
 8003472:	4bcb      	ldr	r3, [pc, #812]	; (80037a0 <main+0x11a4>)
 8003474:	181b      	adds	r3, r3, r0
 8003476:	193a      	adds	r2, r7, r4
 8003478:	189a      	adds	r2, r3, r2
 800347a:	23a3      	movs	r3, #163	; 0xa3
 800347c:	00db      	lsls	r3, r3, #3
 800347e:	49d7      	ldr	r1, [pc, #860]	; (80037dc <main+0x11e0>)
 8003480:	50d1      	str	r1, [r2, r3]
 8003482:	4bc7      	ldr	r3, [pc, #796]	; (80037a0 <main+0x11a4>)
 8003484:	181b      	adds	r3, r3, r0
 8003486:	2228      	movs	r2, #40	; 0x28
 8003488:	4694      	mov	ip, r2
 800348a:	44bc      	add	ip, r7
 800348c:	4463      	add	r3, ip
 800348e:	4ad4      	ldr	r2, [pc, #848]	; (80037e0 <main+0x11e4>)
 8003490:	49ca      	ldr	r1, [pc, #808]	; (80037bc <main+0x11c0>)
 8003492:	5099      	str	r1, [r3, r2]
 8003494:	4bc2      	ldr	r3, [pc, #776]	; (80037a0 <main+0x11a4>)
 8003496:	181b      	adds	r3, r3, r0
 8003498:	193a      	adds	r2, r7, r4
 800349a:	189a      	adds	r2, r3, r2
 800349c:	23a4      	movs	r3, #164	; 0xa4
 800349e:	00db      	lsls	r3, r3, #3
 80034a0:	49c8      	ldr	r1, [pc, #800]	; (80037c4 <main+0x11c8>)
 80034a2:	50d1      	str	r1, [r2, r3]
 80034a4:	4bbe      	ldr	r3, [pc, #760]	; (80037a0 <main+0x11a4>)
 80034a6:	181b      	adds	r3, r3, r0
 80034a8:	2228      	movs	r2, #40	; 0x28
 80034aa:	4694      	mov	ip, r2
 80034ac:	44bc      	add	ip, r7
 80034ae:	4463      	add	r3, ip
 80034b0:	4acc      	ldr	r2, [pc, #816]	; (80037e4 <main+0x11e8>)
 80034b2:	49c5      	ldr	r1, [pc, #788]	; (80037c8 <main+0x11cc>)
 80034b4:	5099      	str	r1, [r3, r2]
 80034b6:	4bba      	ldr	r3, [pc, #744]	; (80037a0 <main+0x11a4>)
 80034b8:	181b      	adds	r3, r3, r0
 80034ba:	193a      	adds	r2, r7, r4
 80034bc:	189a      	adds	r2, r3, r2
 80034be:	23a5      	movs	r3, #165	; 0xa5
 80034c0:	00db      	lsls	r3, r3, #3
 80034c2:	49b6      	ldr	r1, [pc, #728]	; (800379c <main+0x11a0>)
 80034c4:	50d1      	str	r1, [r2, r3]
 80034c6:	4bb6      	ldr	r3, [pc, #728]	; (80037a0 <main+0x11a4>)
 80034c8:	181b      	adds	r3, r3, r0
 80034ca:	2228      	movs	r2, #40	; 0x28
 80034cc:	4694      	mov	ip, r2
 80034ce:	44bc      	add	ip, r7
 80034d0:	4463      	add	r3, ip
 80034d2:	4ac5      	ldr	r2, [pc, #788]	; (80037e8 <main+0x11ec>)
 80034d4:	49b1      	ldr	r1, [pc, #708]	; (800379c <main+0x11a0>)
 80034d6:	5099      	str	r1, [r3, r2]
 80034d8:	4bb1      	ldr	r3, [pc, #708]	; (80037a0 <main+0x11a4>)
 80034da:	181b      	adds	r3, r3, r0
 80034dc:	2228      	movs	r2, #40	; 0x28
 80034de:	4694      	mov	ip, r2
 80034e0:	44bc      	add	ip, r7
 80034e2:	4463      	add	r3, ip
 80034e4:	4ac1      	ldr	r2, [pc, #772]	; (80037ec <main+0x11f0>)
 80034e6:	49ba      	ldr	r1, [pc, #744]	; (80037d0 <main+0x11d4>)
 80034e8:	5099      	str	r1, [r3, r2]
 80034ea:	4bad      	ldr	r3, [pc, #692]	; (80037a0 <main+0x11a4>)
 80034ec:	181b      	adds	r3, r3, r0
 80034ee:	193a      	adds	r2, r7, r4
 80034f0:	189a      	adds	r2, r3, r2
 80034f2:	23a9      	movs	r3, #169	; 0xa9
 80034f4:	00db      	lsls	r3, r3, #3
 80034f6:	49be      	ldr	r1, [pc, #760]	; (80037f0 <main+0x11f4>)
 80034f8:	50d1      	str	r1, [r2, r3]
 80034fa:	4ba9      	ldr	r3, [pc, #676]	; (80037a0 <main+0x11a4>)
 80034fc:	181b      	adds	r3, r3, r0
 80034fe:	2228      	movs	r2, #40	; 0x28
 8003500:	4694      	mov	ip, r2
 8003502:	44bc      	add	ip, r7
 8003504:	4463      	add	r3, ip
 8003506:	4abb      	ldr	r2, [pc, #748]	; (80037f4 <main+0x11f8>)
 8003508:	49bb      	ldr	r1, [pc, #748]	; (80037f8 <main+0x11fc>)
 800350a:	5099      	str	r1, [r3, r2]
 800350c:	4ba4      	ldr	r3, [pc, #656]	; (80037a0 <main+0x11a4>)
 800350e:	181b      	adds	r3, r3, r0
 8003510:	193a      	adds	r2, r7, r4
 8003512:	189a      	adds	r2, r3, r2
 8003514:	23aa      	movs	r3, #170	; 0xaa
 8003516:	00db      	lsls	r3, r3, #3
 8003518:	49a8      	ldr	r1, [pc, #672]	; (80037bc <main+0x11c0>)
 800351a:	50d1      	str	r1, [r2, r3]
 800351c:	4ba0      	ldr	r3, [pc, #640]	; (80037a0 <main+0x11a4>)
 800351e:	181b      	adds	r3, r3, r0
 8003520:	2228      	movs	r2, #40	; 0x28
 8003522:	4694      	mov	ip, r2
 8003524:	44bc      	add	ip, r7
 8003526:	4463      	add	r3, ip
 8003528:	4ab4      	ldr	r2, [pc, #720]	; (80037fc <main+0x1200>)
 800352a:	49a6      	ldr	r1, [pc, #664]	; (80037c4 <main+0x11c8>)
 800352c:	5099      	str	r1, [r3, r2]
 800352e:	4b9c      	ldr	r3, [pc, #624]	; (80037a0 <main+0x11a4>)
 8003530:	181b      	adds	r3, r3, r0
 8003532:	193a      	adds	r2, r7, r4
 8003534:	189a      	adds	r2, r3, r2
 8003536:	23ab      	movs	r3, #171	; 0xab
 8003538:	00db      	lsls	r3, r3, #3
 800353a:	49a3      	ldr	r1, [pc, #652]	; (80037c8 <main+0x11cc>)
 800353c:	50d1      	str	r1, [r2, r3]
 800353e:	4b98      	ldr	r3, [pc, #608]	; (80037a0 <main+0x11a4>)
 8003540:	181b      	adds	r3, r3, r0
 8003542:	2228      	movs	r2, #40	; 0x28
 8003544:	4694      	mov	ip, r2
 8003546:	44bc      	add	ip, r7
 8003548:	4463      	add	r3, ip
 800354a:	4aad      	ldr	r2, [pc, #692]	; (8003800 <main+0x1204>)
 800354c:	4993      	ldr	r1, [pc, #588]	; (800379c <main+0x11a0>)
 800354e:	5099      	str	r1, [r3, r2]
 8003550:	4b93      	ldr	r3, [pc, #588]	; (80037a0 <main+0x11a4>)
 8003552:	181b      	adds	r3, r3, r0
 8003554:	193a      	adds	r2, r7, r4
 8003556:	189a      	adds	r2, r3, r2
 8003558:	23ac      	movs	r3, #172	; 0xac
 800355a:	00db      	lsls	r3, r3, #3
 800355c:	498f      	ldr	r1, [pc, #572]	; (800379c <main+0x11a0>)
 800355e:	50d1      	str	r1, [r2, r3]
 8003560:	4b8f      	ldr	r3, [pc, #572]	; (80037a0 <main+0x11a4>)
 8003562:	181b      	adds	r3, r3, r0
 8003564:	193a      	adds	r2, r7, r4
 8003566:	189a      	adds	r2, r3, r2
 8003568:	23ad      	movs	r3, #173	; 0xad
 800356a:	00db      	lsls	r3, r3, #3
 800356c:	4998      	ldr	r1, [pc, #608]	; (80037d0 <main+0x11d4>)
 800356e:	50d1      	str	r1, [r2, r3]
 8003570:	4b8b      	ldr	r3, [pc, #556]	; (80037a0 <main+0x11a4>)
 8003572:	181b      	adds	r3, r3, r0
 8003574:	2228      	movs	r2, #40	; 0x28
 8003576:	4694      	mov	ip, r2
 8003578:	44bc      	add	ip, r7
 800357a:	4463      	add	r3, ip
 800357c:	4aa1      	ldr	r2, [pc, #644]	; (8003804 <main+0x1208>)
 800357e:	49a2      	ldr	r1, [pc, #648]	; (8003808 <main+0x120c>)
 8003580:	5099      	str	r1, [r3, r2]
 8003582:	4b87      	ldr	r3, [pc, #540]	; (80037a0 <main+0x11a4>)
 8003584:	181b      	adds	r3, r3, r0
 8003586:	193a      	adds	r2, r7, r4
 8003588:	189a      	adds	r2, r3, r2
 800358a:	23b0      	movs	r3, #176	; 0xb0
 800358c:	00db      	lsls	r3, r3, #3
 800358e:	499f      	ldr	r1, [pc, #636]	; (800380c <main+0x1210>)
 8003590:	50d1      	str	r1, [r2, r3]
 8003592:	4b83      	ldr	r3, [pc, #524]	; (80037a0 <main+0x11a4>)
 8003594:	181b      	adds	r3, r3, r0
 8003596:	2228      	movs	r2, #40	; 0x28
 8003598:	4694      	mov	ip, r2
 800359a:	44bc      	add	ip, r7
 800359c:	4463      	add	r3, ip
 800359e:	4a9c      	ldr	r2, [pc, #624]	; (8003810 <main+0x1214>)
 80035a0:	499c      	ldr	r1, [pc, #624]	; (8003814 <main+0x1218>)
 80035a2:	5099      	str	r1, [r3, r2]
 80035a4:	4b7e      	ldr	r3, [pc, #504]	; (80037a0 <main+0x11a4>)
 80035a6:	181b      	adds	r3, r3, r0
 80035a8:	193a      	adds	r2, r7, r4
 80035aa:	189a      	adds	r2, r3, r2
 80035ac:	23b1      	movs	r3, #177	; 0xb1
 80035ae:	00db      	lsls	r3, r3, #3
 80035b0:	4999      	ldr	r1, [pc, #612]	; (8003818 <main+0x121c>)
 80035b2:	50d1      	str	r1, [r2, r3]
 80035b4:	4b7a      	ldr	r3, [pc, #488]	; (80037a0 <main+0x11a4>)
 80035b6:	181b      	adds	r3, r3, r0
 80035b8:	2228      	movs	r2, #40	; 0x28
 80035ba:	4694      	mov	ip, r2
 80035bc:	44bc      	add	ip, r7
 80035be:	4463      	add	r3, ip
 80035c0:	4a96      	ldr	r2, [pc, #600]	; (800381c <main+0x1220>)
 80035c2:	4997      	ldr	r1, [pc, #604]	; (8003820 <main+0x1224>)
 80035c4:	5099      	str	r1, [r3, r2]
 80035c6:	4b76      	ldr	r3, [pc, #472]	; (80037a0 <main+0x11a4>)
 80035c8:	181b      	adds	r3, r3, r0
 80035ca:	2228      	movs	r2, #40	; 0x28
 80035cc:	4694      	mov	ip, r2
 80035ce:	44bc      	add	ip, r7
 80035d0:	4463      	add	r3, ip
 80035d2:	4a94      	ldr	r2, [pc, #592]	; (8003824 <main+0x1228>)
 80035d4:	4971      	ldr	r1, [pc, #452]	; (800379c <main+0x11a0>)
 80035d6:	5099      	str	r1, [r3, r2]
 80035d8:	4b71      	ldr	r3, [pc, #452]	; (80037a0 <main+0x11a4>)
 80035da:	181b      	adds	r3, r3, r0
 80035dc:	193a      	adds	r2, r7, r4
 80035de:	189a      	adds	r2, r3, r2
 80035e0:	23b3      	movs	r3, #179	; 0xb3
 80035e2:	00db      	lsls	r3, r3, #3
 80035e4:	496d      	ldr	r1, [pc, #436]	; (800379c <main+0x11a0>)
 80035e6:	50d1      	str	r1, [r2, r3]
 80035e8:	4b6d      	ldr	r3, [pc, #436]	; (80037a0 <main+0x11a4>)
 80035ea:	181b      	adds	r3, r3, r0
 80035ec:	2228      	movs	r2, #40	; 0x28
 80035ee:	4694      	mov	ip, r2
 80035f0:	44bc      	add	ip, r7
 80035f2:	4463      	add	r3, ip
 80035f4:	4a8c      	ldr	r2, [pc, #560]	; (8003828 <main+0x122c>)
 80035f6:	498d      	ldr	r1, [pc, #564]	; (800382c <main+0x1230>)
 80035f8:	5099      	str	r1, [r3, r2]
 80035fa:	4b69      	ldr	r3, [pc, #420]	; (80037a0 <main+0x11a4>)
 80035fc:	181b      	adds	r3, r3, r0
 80035fe:	193a      	adds	r2, r7, r4
 8003600:	189a      	adds	r2, r3, r2
 8003602:	23b6      	movs	r3, #182	; 0xb6
 8003604:	00db      	lsls	r3, r3, #3
 8003606:	498a      	ldr	r1, [pc, #552]	; (8003830 <main+0x1234>)
 8003608:	50d1      	str	r1, [r2, r3]
 800360a:	4b65      	ldr	r3, [pc, #404]	; (80037a0 <main+0x11a4>)
 800360c:	181b      	adds	r3, r3, r0
 800360e:	2228      	movs	r2, #40	; 0x28
 8003610:	4694      	mov	ip, r2
 8003612:	44bc      	add	ip, r7
 8003614:	4463      	add	r3, ip
 8003616:	4a87      	ldr	r2, [pc, #540]	; (8003834 <main+0x1238>)
 8003618:	4987      	ldr	r1, [pc, #540]	; (8003838 <main+0x123c>)
 800361a:	5099      	str	r1, [r3, r2]
 800361c:	4b60      	ldr	r3, [pc, #384]	; (80037a0 <main+0x11a4>)
 800361e:	181b      	adds	r3, r3, r0
 8003620:	193a      	adds	r2, r7, r4
 8003622:	189a      	adds	r2, r3, r2
 8003624:	23b7      	movs	r3, #183	; 0xb7
 8003626:	00db      	lsls	r3, r3, #3
 8003628:	497a      	ldr	r1, [pc, #488]	; (8003814 <main+0x1218>)
 800362a:	50d1      	str	r1, [r2, r3]
 800362c:	4b5c      	ldr	r3, [pc, #368]	; (80037a0 <main+0x11a4>)
 800362e:	181b      	adds	r3, r3, r0
 8003630:	2228      	movs	r2, #40	; 0x28
 8003632:	4694      	mov	ip, r2
 8003634:	44bc      	add	ip, r7
 8003636:	4463      	add	r3, ip
 8003638:	4a80      	ldr	r2, [pc, #512]	; (800383c <main+0x1240>)
 800363a:	4977      	ldr	r1, [pc, #476]	; (8003818 <main+0x121c>)
 800363c:	5099      	str	r1, [r3, r2]
 800363e:	4b58      	ldr	r3, [pc, #352]	; (80037a0 <main+0x11a4>)
 8003640:	181b      	adds	r3, r3, r0
 8003642:	193a      	adds	r2, r7, r4
 8003644:	189a      	adds	r2, r3, r2
 8003646:	23b8      	movs	r3, #184	; 0xb8
 8003648:	00db      	lsls	r3, r3, #3
 800364a:	4975      	ldr	r1, [pc, #468]	; (8003820 <main+0x1224>)
 800364c:	50d1      	str	r1, [r2, r3]
 800364e:	4b54      	ldr	r3, [pc, #336]	; (80037a0 <main+0x11a4>)
 8003650:	181b      	adds	r3, r3, r0
 8003652:	193a      	adds	r2, r7, r4
 8003654:	189a      	adds	r2, r3, r2
 8003656:	23b9      	movs	r3, #185	; 0xb9
 8003658:	00db      	lsls	r3, r3, #3
 800365a:	4950      	ldr	r1, [pc, #320]	; (800379c <main+0x11a0>)
 800365c:	50d1      	str	r1, [r2, r3]
 800365e:	4b50      	ldr	r3, [pc, #320]	; (80037a0 <main+0x11a4>)
 8003660:	181b      	adds	r3, r3, r0
 8003662:	2228      	movs	r2, #40	; 0x28
 8003664:	4694      	mov	ip, r2
 8003666:	44bc      	add	ip, r7
 8003668:	4463      	add	r3, ip
 800366a:	4a75      	ldr	r2, [pc, #468]	; (8003840 <main+0x1244>)
 800366c:	494b      	ldr	r1, [pc, #300]	; (800379c <main+0x11a0>)
 800366e:	5099      	str	r1, [r3, r2]
 8003670:	4b4b      	ldr	r3, [pc, #300]	; (80037a0 <main+0x11a4>)
 8003672:	181b      	adds	r3, r3, r0
 8003674:	193a      	adds	r2, r7, r4
 8003676:	189a      	adds	r2, r3, r2
 8003678:	23ba      	movs	r3, #186	; 0xba
 800367a:	00db      	lsls	r3, r3, #3
 800367c:	496b      	ldr	r1, [pc, #428]	; (800382c <main+0x1230>)
 800367e:	50d1      	str	r1, [r2, r3]
 8003680:	4b47      	ldr	r3, [pc, #284]	; (80037a0 <main+0x11a4>)
 8003682:	181b      	adds	r3, r3, r0
 8003684:	2228      	movs	r2, #40	; 0x28
 8003686:	4694      	mov	ip, r2
 8003688:	44bc      	add	ip, r7
 800368a:	4463      	add	r3, ip
 800368c:	4a6d      	ldr	r2, [pc, #436]	; (8003844 <main+0x1248>)
 800368e:	496e      	ldr	r1, [pc, #440]	; (8003848 <main+0x124c>)
 8003690:	5099      	str	r1, [r3, r2]
 8003692:	4b43      	ldr	r3, [pc, #268]	; (80037a0 <main+0x11a4>)
 8003694:	181b      	adds	r3, r3, r0
 8003696:	193a      	adds	r2, r7, r4
 8003698:	189a      	adds	r2, r3, r2
 800369a:	23bd      	movs	r3, #189	; 0xbd
 800369c:	00db      	lsls	r3, r3, #3
 800369e:	496b      	ldr	r1, [pc, #428]	; (800384c <main+0x1250>)
 80036a0:	50d1      	str	r1, [r2, r3]
 80036a2:	4b3f      	ldr	r3, [pc, #252]	; (80037a0 <main+0x11a4>)
 80036a4:	181b      	adds	r3, r3, r0
 80036a6:	2228      	movs	r2, #40	; 0x28
 80036a8:	4694      	mov	ip, r2
 80036aa:	44bc      	add	ip, r7
 80036ac:	4463      	add	r3, ip
 80036ae:	4a68      	ldr	r2, [pc, #416]	; (8003850 <main+0x1254>)
 80036b0:	4958      	ldr	r1, [pc, #352]	; (8003814 <main+0x1218>)
 80036b2:	5099      	str	r1, [r3, r2]
 80036b4:	4b3a      	ldr	r3, [pc, #232]	; (80037a0 <main+0x11a4>)
 80036b6:	181b      	adds	r3, r3, r0
 80036b8:	193a      	adds	r2, r7, r4
 80036ba:	189a      	adds	r2, r3, r2
 80036bc:	23be      	movs	r3, #190	; 0xbe
 80036be:	00db      	lsls	r3, r3, #3
 80036c0:	4955      	ldr	r1, [pc, #340]	; (8003818 <main+0x121c>)
 80036c2:	50d1      	str	r1, [r2, r3]
 80036c4:	4b36      	ldr	r3, [pc, #216]	; (80037a0 <main+0x11a4>)
 80036c6:	181b      	adds	r3, r3, r0
 80036c8:	2228      	movs	r2, #40	; 0x28
 80036ca:	4694      	mov	ip, r2
 80036cc:	44bc      	add	ip, r7
 80036ce:	4463      	add	r3, ip
 80036d0:	4a60      	ldr	r2, [pc, #384]	; (8003854 <main+0x1258>)
 80036d2:	4953      	ldr	r1, [pc, #332]	; (8003820 <main+0x1224>)
 80036d4:	5099      	str	r1, [r3, r2]
 80036d6:	4b32      	ldr	r3, [pc, #200]	; (80037a0 <main+0x11a4>)
 80036d8:	181b      	adds	r3, r3, r0
 80036da:	2228      	movs	r2, #40	; 0x28
 80036dc:	4694      	mov	ip, r2
 80036de:	44bc      	add	ip, r7
 80036e0:	4463      	add	r3, ip
 80036e2:	4a5d      	ldr	r2, [pc, #372]	; (8003858 <main+0x125c>)
 80036e4:	492d      	ldr	r1, [pc, #180]	; (800379c <main+0x11a0>)
 80036e6:	5099      	str	r1, [r3, r2]
 80036e8:	4b2d      	ldr	r3, [pc, #180]	; (80037a0 <main+0x11a4>)
 80036ea:	181b      	adds	r3, r3, r0
 80036ec:	193a      	adds	r2, r7, r4
 80036ee:	189a      	adds	r2, r3, r2
 80036f0:	23c0      	movs	r3, #192	; 0xc0
 80036f2:	00db      	lsls	r3, r3, #3
 80036f4:	4929      	ldr	r1, [pc, #164]	; (800379c <main+0x11a0>)
 80036f6:	50d1      	str	r1, [r2, r3]
 80036f8:	4b29      	ldr	r3, [pc, #164]	; (80037a0 <main+0x11a4>)
 80036fa:	181b      	adds	r3, r3, r0
 80036fc:	2228      	movs	r2, #40	; 0x28
 80036fe:	4694      	mov	ip, r2
 8003700:	44bc      	add	ip, r7
 8003702:	4463      	add	r3, ip
 8003704:	4a55      	ldr	r2, [pc, #340]	; (800385c <main+0x1260>)
 8003706:	4949      	ldr	r1, [pc, #292]	; (800382c <main+0x1230>)
 8003708:	5099      	str	r1, [r3, r2]
 800370a:	4b25      	ldr	r3, [pc, #148]	; (80037a0 <main+0x11a4>)
 800370c:	181b      	adds	r3, r3, r0
 800370e:	193a      	adds	r2, r7, r4
 8003710:	189a      	adds	r2, r3, r2
 8003712:	23c3      	movs	r3, #195	; 0xc3
 8003714:	00db      	lsls	r3, r3, #3
 8003716:	4952      	ldr	r1, [pc, #328]	; (8003860 <main+0x1264>)
 8003718:	50d1      	str	r1, [r2, r3]
 800371a:	4b21      	ldr	r3, [pc, #132]	; (80037a0 <main+0x11a4>)
 800371c:	181b      	adds	r3, r3, r0
 800371e:	2228      	movs	r2, #40	; 0x28
 8003720:	4694      	mov	ip, r2
 8003722:	44bc      	add	ip, r7
 8003724:	4463      	add	r3, ip
 8003726:	4a4f      	ldr	r2, [pc, #316]	; (8003864 <main+0x1268>)
 8003728:	494f      	ldr	r1, [pc, #316]	; (8003868 <main+0x126c>)
 800372a:	5099      	str	r1, [r3, r2]
 800372c:	4b1c      	ldr	r3, [pc, #112]	; (80037a0 <main+0x11a4>)
 800372e:	181b      	adds	r3, r3, r0
 8003730:	193a      	adds	r2, r7, r4
 8003732:	189a      	adds	r2, r3, r2
 8003734:	23c4      	movs	r3, #196	; 0xc4
 8003736:	00db      	lsls	r3, r3, #3
 8003738:	4936      	ldr	r1, [pc, #216]	; (8003814 <main+0x1218>)
 800373a:	50d1      	str	r1, [r2, r3]
 800373c:	4b18      	ldr	r3, [pc, #96]	; (80037a0 <main+0x11a4>)
 800373e:	181b      	adds	r3, r3, r0
 8003740:	2228      	movs	r2, #40	; 0x28
 8003742:	4694      	mov	ip, r2
 8003744:	44bc      	add	ip, r7
 8003746:	4463      	add	r3, ip
 8003748:	4a48      	ldr	r2, [pc, #288]	; (800386c <main+0x1270>)
 800374a:	4933      	ldr	r1, [pc, #204]	; (8003818 <main+0x121c>)
 800374c:	5099      	str	r1, [r3, r2]
 800374e:	4b14      	ldr	r3, [pc, #80]	; (80037a0 <main+0x11a4>)
 8003750:	181b      	adds	r3, r3, r0
 8003752:	193a      	adds	r2, r7, r4
 8003754:	189a      	adds	r2, r3, r2
 8003756:	23c5      	movs	r3, #197	; 0xc5
 8003758:	00db      	lsls	r3, r3, #3
 800375a:	4931      	ldr	r1, [pc, #196]	; (8003820 <main+0x1224>)
 800375c:	50d1      	str	r1, [r2, r3]
 800375e:	4b10      	ldr	r3, [pc, #64]	; (80037a0 <main+0x11a4>)
 8003760:	181b      	adds	r3, r3, r0
 8003762:	193a      	adds	r2, r7, r4
 8003764:	189a      	adds	r2, r3, r2
 8003766:	23c6      	movs	r3, #198	; 0xc6
 8003768:	00db      	lsls	r3, r3, #3
 800376a:	490c      	ldr	r1, [pc, #48]	; (800379c <main+0x11a0>)
 800376c:	50d1      	str	r1, [r2, r3]
 800376e:	4b0c      	ldr	r3, [pc, #48]	; (80037a0 <main+0x11a4>)
 8003770:	181b      	adds	r3, r3, r0
 8003772:	2228      	movs	r2, #40	; 0x28
 8003774:	4694      	mov	ip, r2
 8003776:	44bc      	add	ip, r7
 8003778:	4463      	add	r3, ip
 800377a:	4a3d      	ldr	r2, [pc, #244]	; (8003870 <main+0x1274>)
 800377c:	4907      	ldr	r1, [pc, #28]	; (800379c <main+0x11a0>)
 800377e:	5099      	str	r1, [r3, r2]
 8003780:	4b07      	ldr	r3, [pc, #28]	; (80037a0 <main+0x11a4>)
 8003782:	181b      	adds	r3, r3, r0
 8003784:	193a      	adds	r2, r7, r4
 8003786:	189a      	adds	r2, r3, r2
 8003788:	23c7      	movs	r3, #199	; 0xc7
 800378a:	00db      	lsls	r3, r3, #3
 800378c:	4927      	ldr	r1, [pc, #156]	; (800382c <main+0x1230>)
 800378e:	50d1      	str	r1, [r2, r3]
 8003790:	4b03      	ldr	r3, [pc, #12]	; (80037a0 <main+0x11a4>)
 8003792:	181b      	adds	r3, r3, r0
 8003794:	2228      	movs	r2, #40	; 0x28
 8003796:	4694      	mov	ip, r2
 8003798:	44bc      	add	ip, r7
 800379a:	e06b      	b.n	8003874 <main+0x1278>
 800379c:	bd79db23 	.word	0xbd79db23
 80037a0:	fffff874 	.word	0xfffff874
 80037a4:	000004c4 	.word	0x000004c4
 80037a8:	000004cc 	.word	0x000004cc
 80037ac:	41f2f838 	.word	0x41f2f838
 80037b0:	3ea0c49c 	.word	0x3ea0c49c
 80037b4:	000004e4 	.word	0x000004e4
 80037b8:	42180000 	.word	0x42180000
 80037bc:	3b9d4952 	.word	0x3b9d4952
 80037c0:	000004ec 	.word	0x000004ec
 80037c4:	baebedfa 	.word	0xbaebedfa
 80037c8:	409d3f7d 	.word	0x409d3f7d
 80037cc:	000004f4 	.word	0x000004f4
 80037d0:	41f2e00d 	.word	0x41f2e00d
 80037d4:	00000514 	.word	0x00000514
 80037d8:	3ea2d0e5 	.word	0x3ea2d0e5
 80037dc:	421c0000 	.word	0x421c0000
 80037e0:	0000051c 	.word	0x0000051c
 80037e4:	00000524 	.word	0x00000524
 80037e8:	0000052c 	.word	0x0000052c
 80037ec:	00000534 	.word	0x00000534
 80037f0:	3ea6e979 	.word	0x3ea6e979
 80037f4:	0000054c 	.word	0x0000054c
 80037f8:	42200000 	.word	0x42200000
 80037fc:	00000554 	.word	0x00000554
 8003800:	0000055c 	.word	0x0000055c
 8003804:	0000057c 	.word	0x0000057c
 8003808:	3eab851f 	.word	0x3eab851f
 800380c:	42240000 	.word	0x42240000
 8003810:	00000584 	.word	0x00000584
 8003814:	3b89a027 	.word	0x3b89a027
 8003818:	bbd844d0 	.word	0xbbd844d0
 800381c:	0000058c 	.word	0x0000058c
 8003820:	409ce219 	.word	0x409ce219
 8003824:	00000594 	.word	0x00000594
 8003828:	0000059c 	.word	0x0000059c
 800382c:	41f2c7e3 	.word	0x41f2c7e3
 8003830:	3ead0e56 	.word	0x3ead0e56
 8003834:	000005b4 	.word	0x000005b4
 8003838:	42280000 	.word	0x42280000
 800383c:	000005bc 	.word	0x000005bc
 8003840:	000005cc 	.word	0x000005cc
 8003844:	000005e4 	.word	0x000005e4
 8003848:	3eb126e9 	.word	0x3eb126e9
 800384c:	422c0000 	.word	0x422c0000
 8003850:	000005ec 	.word	0x000005ec
 8003854:	000005f4 	.word	0x000005f4
 8003858:	000005fc 	.word	0x000005fc
 800385c:	00000604 	.word	0x00000604
 8003860:	3eb33333 	.word	0x3eb33333
 8003864:	0000061c 	.word	0x0000061c
 8003868:	42300000 	.word	0x42300000
 800386c:	00000624 	.word	0x00000624
 8003870:	00000634 	.word	0x00000634
 8003874:	4463      	add	r3, ip
 8003876:	4ad8      	ldr	r2, [pc, #864]	; (8003bd8 <main+0x15dc>)
 8003878:	49d8      	ldr	r1, [pc, #864]	; (8003bdc <main+0x15e0>)
 800387a:	5099      	str	r1, [r3, r2]
 800387c:	4bd8      	ldr	r3, [pc, #864]	; (8003be0 <main+0x15e4>)
 800387e:	181b      	adds	r3, r3, r0
 8003880:	193a      	adds	r2, r7, r4
 8003882:	189a      	adds	r2, r3, r2
 8003884:	23ca      	movs	r3, #202	; 0xca
 8003886:	00db      	lsls	r3, r3, #3
 8003888:	49d6      	ldr	r1, [pc, #856]	; (8003be4 <main+0x15e8>)
 800388a:	50d1      	str	r1, [r2, r3]
 800388c:	4bd4      	ldr	r3, [pc, #848]	; (8003be0 <main+0x15e4>)
 800388e:	181b      	adds	r3, r3, r0
 8003890:	2228      	movs	r2, #40	; 0x28
 8003892:	4694      	mov	ip, r2
 8003894:	44bc      	add	ip, r7
 8003896:	4463      	add	r3, ip
 8003898:	4ad3      	ldr	r2, [pc, #844]	; (8003be8 <main+0x15ec>)
 800389a:	49d4      	ldr	r1, [pc, #848]	; (8003bec <main+0x15f0>)
 800389c:	5099      	str	r1, [r3, r2]
 800389e:	4bd0      	ldr	r3, [pc, #832]	; (8003be0 <main+0x15e4>)
 80038a0:	181b      	adds	r3, r3, r0
 80038a2:	193a      	adds	r2, r7, r4
 80038a4:	189a      	adds	r2, r3, r2
 80038a6:	23cb      	movs	r3, #203	; 0xcb
 80038a8:	00db      	lsls	r3, r3, #3
 80038aa:	49d1      	ldr	r1, [pc, #836]	; (8003bf0 <main+0x15f4>)
 80038ac:	50d1      	str	r1, [r2, r3]
 80038ae:	4bcc      	ldr	r3, [pc, #816]	; (8003be0 <main+0x15e4>)
 80038b0:	181b      	adds	r3, r3, r0
 80038b2:	2228      	movs	r2, #40	; 0x28
 80038b4:	4694      	mov	ip, r2
 80038b6:	44bc      	add	ip, r7
 80038b8:	4463      	add	r3, ip
 80038ba:	4ace      	ldr	r2, [pc, #824]	; (8003bf4 <main+0x15f8>)
 80038bc:	49ce      	ldr	r1, [pc, #824]	; (8003bf8 <main+0x15fc>)
 80038be:	5099      	str	r1, [r3, r2]
 80038c0:	4bc7      	ldr	r3, [pc, #796]	; (8003be0 <main+0x15e4>)
 80038c2:	181b      	adds	r3, r3, r0
 80038c4:	2228      	movs	r2, #40	; 0x28
 80038c6:	4694      	mov	ip, r2
 80038c8:	44bc      	add	ip, r7
 80038ca:	4463      	add	r3, ip
 80038cc:	4acb      	ldr	r2, [pc, #812]	; (8003bfc <main+0x1600>)
 80038ce:	49cc      	ldr	r1, [pc, #816]	; (8003c00 <main+0x1604>)
 80038d0:	5099      	str	r1, [r3, r2]
 80038d2:	4bc3      	ldr	r3, [pc, #780]	; (8003be0 <main+0x15e4>)
 80038d4:	181b      	adds	r3, r3, r0
 80038d6:	2228      	movs	r2, #40	; 0x28
 80038d8:	4694      	mov	ip, r2
 80038da:	44bc      	add	ip, r7
 80038dc:	4463      	add	r3, ip
 80038de:	4ac9      	ldr	r2, [pc, #804]	; (8003c04 <main+0x1608>)
 80038e0:	49c9      	ldr	r1, [pc, #804]	; (8003c08 <main+0x160c>)
 80038e2:	5099      	str	r1, [r3, r2]
 80038e4:	4bbe      	ldr	r3, [pc, #760]	; (8003be0 <main+0x15e4>)
 80038e6:	181b      	adds	r3, r3, r0
 80038e8:	193a      	adds	r2, r7, r4
 80038ea:	189a      	adds	r2, r3, r2
 80038ec:	23d0      	movs	r3, #208	; 0xd0
 80038ee:	00db      	lsls	r3, r3, #3
 80038f0:	49c6      	ldr	r1, [pc, #792]	; (8003c0c <main+0x1610>)
 80038f2:	50d1      	str	r1, [r2, r3]
 80038f4:	4bba      	ldr	r3, [pc, #744]	; (8003be0 <main+0x15e4>)
 80038f6:	181b      	adds	r3, r3, r0
 80038f8:	2228      	movs	r2, #40	; 0x28
 80038fa:	4694      	mov	ip, r2
 80038fc:	44bc      	add	ip, r7
 80038fe:	4463      	add	r3, ip
 8003900:	4ac3      	ldr	r2, [pc, #780]	; (8003c10 <main+0x1614>)
 8003902:	49c4      	ldr	r1, [pc, #784]	; (8003c14 <main+0x1618>)
 8003904:	5099      	str	r1, [r3, r2]
 8003906:	4bb6      	ldr	r3, [pc, #728]	; (8003be0 <main+0x15e4>)
 8003908:	181b      	adds	r3, r3, r0
 800390a:	193a      	adds	r2, r7, r4
 800390c:	189a      	adds	r2, r3, r2
 800390e:	23d1      	movs	r3, #209	; 0xd1
 8003910:	00db      	lsls	r3, r3, #3
 8003912:	49b6      	ldr	r1, [pc, #728]	; (8003bec <main+0x15f0>)
 8003914:	50d1      	str	r1, [r2, r3]
 8003916:	4bb2      	ldr	r3, [pc, #712]	; (8003be0 <main+0x15e4>)
 8003918:	181b      	adds	r3, r3, r0
 800391a:	2228      	movs	r2, #40	; 0x28
 800391c:	4694      	mov	ip, r2
 800391e:	44bc      	add	ip, r7
 8003920:	4463      	add	r3, ip
 8003922:	4abd      	ldr	r2, [pc, #756]	; (8003c18 <main+0x161c>)
 8003924:	49b2      	ldr	r1, [pc, #712]	; (8003bf0 <main+0x15f4>)
 8003926:	5099      	str	r1, [r3, r2]
 8003928:	4bad      	ldr	r3, [pc, #692]	; (8003be0 <main+0x15e4>)
 800392a:	181b      	adds	r3, r3, r0
 800392c:	193a      	adds	r2, r7, r4
 800392e:	189a      	adds	r2, r3, r2
 8003930:	23d2      	movs	r3, #210	; 0xd2
 8003932:	00db      	lsls	r3, r3, #3
 8003934:	49b0      	ldr	r1, [pc, #704]	; (8003bf8 <main+0x15fc>)
 8003936:	50d1      	str	r1, [r2, r3]
 8003938:	4ba9      	ldr	r3, [pc, #676]	; (8003be0 <main+0x15e4>)
 800393a:	181b      	adds	r3, r3, r0
 800393c:	193a      	adds	r2, r7, r4
 800393e:	189a      	adds	r2, r3, r2
 8003940:	23d3      	movs	r3, #211	; 0xd3
 8003942:	00db      	lsls	r3, r3, #3
 8003944:	49ae      	ldr	r1, [pc, #696]	; (8003c00 <main+0x1604>)
 8003946:	50d1      	str	r1, [r2, r3]
 8003948:	4ba5      	ldr	r3, [pc, #660]	; (8003be0 <main+0x15e4>)
 800394a:	181b      	adds	r3, r3, r0
 800394c:	193a      	adds	r2, r7, r4
 800394e:	189a      	adds	r2, r3, r2
 8003950:	23d4      	movs	r3, #212	; 0xd4
 8003952:	00db      	lsls	r3, r3, #3
 8003954:	49ac      	ldr	r1, [pc, #688]	; (8003c08 <main+0x160c>)
 8003956:	50d1      	str	r1, [r2, r3]
 8003958:	4ba1      	ldr	r3, [pc, #644]	; (8003be0 <main+0x15e4>)
 800395a:	181b      	adds	r3, r3, r0
 800395c:	2228      	movs	r2, #40	; 0x28
 800395e:	4694      	mov	ip, r2
 8003960:	44bc      	add	ip, r7
 8003962:	4463      	add	r3, ip
 8003964:	4aad      	ldr	r2, [pc, #692]	; (8003c1c <main+0x1620>)
 8003966:	49ae      	ldr	r1, [pc, #696]	; (8003c20 <main+0x1624>)
 8003968:	5099      	str	r1, [r3, r2]
 800396a:	4b9d      	ldr	r3, [pc, #628]	; (8003be0 <main+0x15e4>)
 800396c:	181b      	adds	r3, r3, r0
 800396e:	193a      	adds	r2, r7, r4
 8003970:	189a      	adds	r2, r3, r2
 8003972:	23d7      	movs	r3, #215	; 0xd7
 8003974:	00db      	lsls	r3, r3, #3
 8003976:	49ab      	ldr	r1, [pc, #684]	; (8003c24 <main+0x1628>)
 8003978:	50d1      	str	r1, [r2, r3]
 800397a:	4b99      	ldr	r3, [pc, #612]	; (8003be0 <main+0x15e4>)
 800397c:	181b      	adds	r3, r3, r0
 800397e:	2228      	movs	r2, #40	; 0x28
 8003980:	4694      	mov	ip, r2
 8003982:	44bc      	add	ip, r7
 8003984:	4463      	add	r3, ip
 8003986:	4aa8      	ldr	r2, [pc, #672]	; (8003c28 <main+0x162c>)
 8003988:	49a8      	ldr	r1, [pc, #672]	; (8003c2c <main+0x1630>)
 800398a:	5099      	str	r1, [r3, r2]
 800398c:	4b94      	ldr	r3, [pc, #592]	; (8003be0 <main+0x15e4>)
 800398e:	181b      	adds	r3, r3, r0
 8003990:	193a      	adds	r2, r7, r4
 8003992:	189a      	adds	r2, r3, r2
 8003994:	23d8      	movs	r3, #216	; 0xd8
 8003996:	00db      	lsls	r3, r3, #3
 8003998:	49a5      	ldr	r1, [pc, #660]	; (8003c30 <main+0x1634>)
 800399a:	50d1      	str	r1, [r2, r3]
 800399c:	4b90      	ldr	r3, [pc, #576]	; (8003be0 <main+0x15e4>)
 800399e:	181b      	adds	r3, r3, r0
 80039a0:	2228      	movs	r2, #40	; 0x28
 80039a2:	4694      	mov	ip, r2
 80039a4:	44bc      	add	ip, r7
 80039a6:	4463      	add	r3, ip
 80039a8:	4aa2      	ldr	r2, [pc, #648]	; (8003c34 <main+0x1638>)
 80039aa:	49a3      	ldr	r1, [pc, #652]	; (8003c38 <main+0x163c>)
 80039ac:	5099      	str	r1, [r3, r2]
 80039ae:	4b8c      	ldr	r3, [pc, #560]	; (8003be0 <main+0x15e4>)
 80039b0:	181b      	adds	r3, r3, r0
 80039b2:	193a      	adds	r2, r7, r4
 80039b4:	189a      	adds	r2, r3, r2
 80039b6:	23d9      	movs	r3, #217	; 0xd9
 80039b8:	00db      	lsls	r3, r3, #3
 80039ba:	4991      	ldr	r1, [pc, #580]	; (8003c00 <main+0x1604>)
 80039bc:	50d1      	str	r1, [r2, r3]
 80039be:	4b88      	ldr	r3, [pc, #544]	; (8003be0 <main+0x15e4>)
 80039c0:	181b      	adds	r3, r3, r0
 80039c2:	2228      	movs	r2, #40	; 0x28
 80039c4:	4694      	mov	ip, r2
 80039c6:	44bc      	add	ip, r7
 80039c8:	4463      	add	r3, ip
 80039ca:	4a9c      	ldr	r2, [pc, #624]	; (8003c3c <main+0x1640>)
 80039cc:	498c      	ldr	r1, [pc, #560]	; (8003c00 <main+0x1604>)
 80039ce:	5099      	str	r1, [r3, r2]
 80039d0:	4b83      	ldr	r3, [pc, #524]	; (8003be0 <main+0x15e4>)
 80039d2:	181b      	adds	r3, r3, r0
 80039d4:	193a      	adds	r2, r7, r4
 80039d6:	189a      	adds	r2, r3, r2
 80039d8:	23da      	movs	r3, #218	; 0xda
 80039da:	00db      	lsls	r3, r3, #3
 80039dc:	4988      	ldr	r1, [pc, #544]	; (8003c00 <main+0x1604>)
 80039de:	50d1      	str	r1, [r2, r3]
 80039e0:	4b7f      	ldr	r3, [pc, #508]	; (8003be0 <main+0x15e4>)
 80039e2:	181b      	adds	r3, r3, r0
 80039e4:	2228      	movs	r2, #40	; 0x28
 80039e6:	4694      	mov	ip, r2
 80039e8:	44bc      	add	ip, r7
 80039ea:	4463      	add	r3, ip
 80039ec:	4a94      	ldr	r2, [pc, #592]	; (8003c40 <main+0x1644>)
 80039ee:	4986      	ldr	r1, [pc, #536]	; (8003c08 <main+0x160c>)
 80039f0:	5099      	str	r1, [r3, r2]
 80039f2:	4b7b      	ldr	r3, [pc, #492]	; (8003be0 <main+0x15e4>)
 80039f4:	181b      	adds	r3, r3, r0
 80039f6:	193a      	adds	r2, r7, r4
 80039f8:	189a      	adds	r2, r3, r2
 80039fa:	23dd      	movs	r3, #221	; 0xdd
 80039fc:	00db      	lsls	r3, r3, #3
 80039fe:	4991      	ldr	r1, [pc, #580]	; (8003c44 <main+0x1648>)
 8003a00:	50d1      	str	r1, [r2, r3]
 8003a02:	4b77      	ldr	r3, [pc, #476]	; (8003be0 <main+0x15e4>)
 8003a04:	181b      	adds	r3, r3, r0
 8003a06:	2228      	movs	r2, #40	; 0x28
 8003a08:	4694      	mov	ip, r2
 8003a0a:	44bc      	add	ip, r7
 8003a0c:	4463      	add	r3, ip
 8003a0e:	4a8e      	ldr	r2, [pc, #568]	; (8003c48 <main+0x164c>)
 8003a10:	498e      	ldr	r1, [pc, #568]	; (8003c4c <main+0x1650>)
 8003a12:	5099      	str	r1, [r3, r2]
 8003a14:	4b72      	ldr	r3, [pc, #456]	; (8003be0 <main+0x15e4>)
 8003a16:	181b      	adds	r3, r3, r0
 8003a18:	193a      	adds	r2, r7, r4
 8003a1a:	189a      	adds	r2, r3, r2
 8003a1c:	23de      	movs	r3, #222	; 0xde
 8003a1e:	00db      	lsls	r3, r3, #3
 8003a20:	4982      	ldr	r1, [pc, #520]	; (8003c2c <main+0x1630>)
 8003a22:	50d1      	str	r1, [r2, r3]
 8003a24:	4b6e      	ldr	r3, [pc, #440]	; (8003be0 <main+0x15e4>)
 8003a26:	181b      	adds	r3, r3, r0
 8003a28:	2228      	movs	r2, #40	; 0x28
 8003a2a:	4694      	mov	ip, r2
 8003a2c:	44bc      	add	ip, r7
 8003a2e:	4463      	add	r3, ip
 8003a30:	4a87      	ldr	r2, [pc, #540]	; (8003c50 <main+0x1654>)
 8003a32:	497f      	ldr	r1, [pc, #508]	; (8003c30 <main+0x1634>)
 8003a34:	5099      	str	r1, [r3, r2]
 8003a36:	4b6a      	ldr	r3, [pc, #424]	; (8003be0 <main+0x15e4>)
 8003a38:	181b      	adds	r3, r3, r0
 8003a3a:	193a      	adds	r2, r7, r4
 8003a3c:	189a      	adds	r2, r3, r2
 8003a3e:	23df      	movs	r3, #223	; 0xdf
 8003a40:	00db      	lsls	r3, r3, #3
 8003a42:	497d      	ldr	r1, [pc, #500]	; (8003c38 <main+0x163c>)
 8003a44:	50d1      	str	r1, [r2, r3]
 8003a46:	4b66      	ldr	r3, [pc, #408]	; (8003be0 <main+0x15e4>)
 8003a48:	181b      	adds	r3, r3, r0
 8003a4a:	2228      	movs	r2, #40	; 0x28
 8003a4c:	4694      	mov	ip, r2
 8003a4e:	44bc      	add	ip, r7
 8003a50:	4463      	add	r3, ip
 8003a52:	4a80      	ldr	r2, [pc, #512]	; (8003c54 <main+0x1658>)
 8003a54:	496a      	ldr	r1, [pc, #424]	; (8003c00 <main+0x1604>)
 8003a56:	5099      	str	r1, [r3, r2]
 8003a58:	4b61      	ldr	r3, [pc, #388]	; (8003be0 <main+0x15e4>)
 8003a5a:	181b      	adds	r3, r3, r0
 8003a5c:	193a      	adds	r2, r7, r4
 8003a5e:	189a      	adds	r2, r3, r2
 8003a60:	23e0      	movs	r3, #224	; 0xe0
 8003a62:	00db      	lsls	r3, r3, #3
 8003a64:	4966      	ldr	r1, [pc, #408]	; (8003c00 <main+0x1604>)
 8003a66:	50d1      	str	r1, [r2, r3]
 8003a68:	4b5d      	ldr	r3, [pc, #372]	; (8003be0 <main+0x15e4>)
 8003a6a:	181b      	adds	r3, r3, r0
 8003a6c:	2228      	movs	r2, #40	; 0x28
 8003a6e:	4694      	mov	ip, r2
 8003a70:	44bc      	add	ip, r7
 8003a72:	4463      	add	r3, ip
 8003a74:	4a78      	ldr	r2, [pc, #480]	; (8003c58 <main+0x165c>)
 8003a76:	4962      	ldr	r1, [pc, #392]	; (8003c00 <main+0x1604>)
 8003a78:	5099      	str	r1, [r3, r2]
 8003a7a:	4b59      	ldr	r3, [pc, #356]	; (8003be0 <main+0x15e4>)
 8003a7c:	181b      	adds	r3, r3, r0
 8003a7e:	193a      	adds	r2, r7, r4
 8003a80:	189a      	adds	r2, r3, r2
 8003a82:	23e1      	movs	r3, #225	; 0xe1
 8003a84:	00db      	lsls	r3, r3, #3
 8003a86:	4960      	ldr	r1, [pc, #384]	; (8003c08 <main+0x160c>)
 8003a88:	50d1      	str	r1, [r2, r3]
 8003a8a:	4b55      	ldr	r3, [pc, #340]	; (8003be0 <main+0x15e4>)
 8003a8c:	181b      	adds	r3, r3, r0
 8003a8e:	2228      	movs	r2, #40	; 0x28
 8003a90:	4694      	mov	ip, r2
 8003a92:	44bc      	add	ip, r7
 8003a94:	4463      	add	r3, ip
 8003a96:	4a71      	ldr	r2, [pc, #452]	; (8003c5c <main+0x1660>)
 8003a98:	4971      	ldr	r1, [pc, #452]	; (8003c60 <main+0x1664>)
 8003a9a:	5099      	str	r1, [r3, r2]
 8003a9c:	4b50      	ldr	r3, [pc, #320]	; (8003be0 <main+0x15e4>)
 8003a9e:	181b      	adds	r3, r3, r0
 8003aa0:	193a      	adds	r2, r7, r4
 8003aa2:	189a      	adds	r2, r3, r2
 8003aa4:	23e4      	movs	r3, #228	; 0xe4
 8003aa6:	00db      	lsls	r3, r3, #3
 8003aa8:	496e      	ldr	r1, [pc, #440]	; (8003c64 <main+0x1668>)
 8003aaa:	50d1      	str	r1, [r2, r3]
 8003aac:	4b4c      	ldr	r3, [pc, #304]	; (8003be0 <main+0x15e4>)
 8003aae:	181b      	adds	r3, r3, r0
 8003ab0:	2228      	movs	r2, #40	; 0x28
 8003ab2:	4694      	mov	ip, r2
 8003ab4:	44bc      	add	ip, r7
 8003ab6:	4463      	add	r3, ip
 8003ab8:	4a6b      	ldr	r2, [pc, #428]	; (8003c68 <main+0x166c>)
 8003aba:	496c      	ldr	r1, [pc, #432]	; (8003c6c <main+0x1670>)
 8003abc:	5099      	str	r1, [r3, r2]
 8003abe:	4b48      	ldr	r3, [pc, #288]	; (8003be0 <main+0x15e4>)
 8003ac0:	181b      	adds	r3, r3, r0
 8003ac2:	193a      	adds	r2, r7, r4
 8003ac4:	189a      	adds	r2, r3, r2
 8003ac6:	23e5      	movs	r3, #229	; 0xe5
 8003ac8:	00db      	lsls	r3, r3, #3
 8003aca:	4969      	ldr	r1, [pc, #420]	; (8003c70 <main+0x1674>)
 8003acc:	50d1      	str	r1, [r2, r3]
 8003ace:	4b44      	ldr	r3, [pc, #272]	; (8003be0 <main+0x15e4>)
 8003ad0:	181b      	adds	r3, r3, r0
 8003ad2:	2228      	movs	r2, #40	; 0x28
 8003ad4:	4694      	mov	ip, r2
 8003ad6:	44bc      	add	ip, r7
 8003ad8:	4463      	add	r3, ip
 8003ada:	4a66      	ldr	r2, [pc, #408]	; (8003c74 <main+0x1678>)
 8003adc:	4966      	ldr	r1, [pc, #408]	; (8003c78 <main+0x167c>)
 8003ade:	5099      	str	r1, [r3, r2]
 8003ae0:	4b3f      	ldr	r3, [pc, #252]	; (8003be0 <main+0x15e4>)
 8003ae2:	181b      	adds	r3, r3, r0
 8003ae4:	193a      	adds	r2, r7, r4
 8003ae6:	189a      	adds	r2, r3, r2
 8003ae8:	23e6      	movs	r3, #230	; 0xe6
 8003aea:	00db      	lsls	r3, r3, #3
 8003aec:	4944      	ldr	r1, [pc, #272]	; (8003c00 <main+0x1604>)
 8003aee:	50d1      	str	r1, [r2, r3]
 8003af0:	4b3b      	ldr	r3, [pc, #236]	; (8003be0 <main+0x15e4>)
 8003af2:	181b      	adds	r3, r3, r0
 8003af4:	2228      	movs	r2, #40	; 0x28
 8003af6:	4694      	mov	ip, r2
 8003af8:	44bc      	add	ip, r7
 8003afa:	4463      	add	r3, ip
 8003afc:	4a5f      	ldr	r2, [pc, #380]	; (8003c7c <main+0x1680>)
 8003afe:	4940      	ldr	r1, [pc, #256]	; (8003c00 <main+0x1604>)
 8003b00:	5099      	str	r1, [r3, r2]
 8003b02:	4b37      	ldr	r3, [pc, #220]	; (8003be0 <main+0x15e4>)
 8003b04:	181b      	adds	r3, r3, r0
 8003b06:	2228      	movs	r2, #40	; 0x28
 8003b08:	4694      	mov	ip, r2
 8003b0a:	44bc      	add	ip, r7
 8003b0c:	4463      	add	r3, ip
 8003b0e:	4a5c      	ldr	r2, [pc, #368]	; (8003c80 <main+0x1684>)
 8003b10:	495c      	ldr	r1, [pc, #368]	; (8003c84 <main+0x1688>)
 8003b12:	5099      	str	r1, [r3, r2]
 8003b14:	4b32      	ldr	r3, [pc, #200]	; (8003be0 <main+0x15e4>)
 8003b16:	181b      	adds	r3, r3, r0
 8003b18:	193a      	adds	r2, r7, r4
 8003b1a:	189a      	adds	r2, r3, r2
 8003b1c:	23ea      	movs	r3, #234	; 0xea
 8003b1e:	00db      	lsls	r3, r3, #3
 8003b20:	4959      	ldr	r1, [pc, #356]	; (8003c88 <main+0x168c>)
 8003b22:	50d1      	str	r1, [r2, r3]
 8003b24:	4b2e      	ldr	r3, [pc, #184]	; (8003be0 <main+0x15e4>)
 8003b26:	181b      	adds	r3, r3, r0
 8003b28:	2228      	movs	r2, #40	; 0x28
 8003b2a:	4694      	mov	ip, r2
 8003b2c:	44bc      	add	ip, r7
 8003b2e:	4463      	add	r3, ip
 8003b30:	4a56      	ldr	r2, [pc, #344]	; (8003c8c <main+0x1690>)
 8003b32:	4957      	ldr	r1, [pc, #348]	; (8003c90 <main+0x1694>)
 8003b34:	5099      	str	r1, [r3, r2]
 8003b36:	4b2a      	ldr	r3, [pc, #168]	; (8003be0 <main+0x15e4>)
 8003b38:	181b      	adds	r3, r3, r0
 8003b3a:	193a      	adds	r2, r7, r4
 8003b3c:	189a      	adds	r2, r3, r2
 8003b3e:	23eb      	movs	r3, #235	; 0xeb
 8003b40:	00db      	lsls	r3, r3, #3
 8003b42:	494a      	ldr	r1, [pc, #296]	; (8003c6c <main+0x1670>)
 8003b44:	50d1      	str	r1, [r2, r3]
 8003b46:	4b26      	ldr	r3, [pc, #152]	; (8003be0 <main+0x15e4>)
 8003b48:	181b      	adds	r3, r3, r0
 8003b4a:	2228      	movs	r2, #40	; 0x28
 8003b4c:	4694      	mov	ip, r2
 8003b4e:	44bc      	add	ip, r7
 8003b50:	4463      	add	r3, ip
 8003b52:	4a50      	ldr	r2, [pc, #320]	; (8003c94 <main+0x1698>)
 8003b54:	4946      	ldr	r1, [pc, #280]	; (8003c70 <main+0x1674>)
 8003b56:	5099      	str	r1, [r3, r2]
 8003b58:	4b21      	ldr	r3, [pc, #132]	; (8003be0 <main+0x15e4>)
 8003b5a:	181b      	adds	r3, r3, r0
 8003b5c:	193a      	adds	r2, r7, r4
 8003b5e:	189a      	adds	r2, r3, r2
 8003b60:	23ec      	movs	r3, #236	; 0xec
 8003b62:	00db      	lsls	r3, r3, #3
 8003b64:	4944      	ldr	r1, [pc, #272]	; (8003c78 <main+0x167c>)
 8003b66:	50d1      	str	r1, [r2, r3]
 8003b68:	4b1d      	ldr	r3, [pc, #116]	; (8003be0 <main+0x15e4>)
 8003b6a:	181b      	adds	r3, r3, r0
 8003b6c:	2228      	movs	r2, #40	; 0x28
 8003b6e:	4694      	mov	ip, r2
 8003b70:	44bc      	add	ip, r7
 8003b72:	4463      	add	r3, ip
 8003b74:	4a48      	ldr	r2, [pc, #288]	; (8003c98 <main+0x169c>)
 8003b76:	4922      	ldr	r1, [pc, #136]	; (8003c00 <main+0x1604>)
 8003b78:	5099      	str	r1, [r3, r2]
 8003b7a:	4b19      	ldr	r3, [pc, #100]	; (8003be0 <main+0x15e4>)
 8003b7c:	181b      	adds	r3, r3, r0
 8003b7e:	193a      	adds	r2, r7, r4
 8003b80:	189a      	adds	r2, r3, r2
 8003b82:	23ed      	movs	r3, #237	; 0xed
 8003b84:	00db      	lsls	r3, r3, #3
 8003b86:	491e      	ldr	r1, [pc, #120]	; (8003c00 <main+0x1604>)
 8003b88:	50d1      	str	r1, [r2, r3]
 8003b8a:	4b15      	ldr	r3, [pc, #84]	; (8003be0 <main+0x15e4>)
 8003b8c:	181b      	adds	r3, r3, r0
 8003b8e:	0025      	movs	r5, r4
 8003b90:	193a      	adds	r2, r7, r4
 8003b92:	189a      	adds	r2, r3, r2
 8003b94:	23ee      	movs	r3, #238	; 0xee
 8003b96:	00db      	lsls	r3, r3, #3
 8003b98:	493a      	ldr	r1, [pc, #232]	; (8003c84 <main+0x1688>)
 8003b9a:	50d1      	str	r1, [r2, r3]
		  {0.409000009,49,-0.0018,-0.003,4.910399914,-0.061000001,-0.061000001,0,30.33589935},
		  {0.412999988,50,-0.0018,-0.003,4.910399914,-0.061000001,-0.061000001,0,30.33589935}};

  //This displays the header which explains the formating of the data outputted.
  uint8_t header[32];
  sprintf(header, "\r\ncount,AX,AY,AZ,GX,GY,GZ,temp\r\n");
 8003b9c:	4a3f      	ldr	r2, [pc, #252]	; (8003c9c <main+0x16a0>)
 8003b9e:	247c      	movs	r4, #124	; 0x7c
 8003ba0:	1963      	adds	r3, r4, r5
 8003ba2:	19db      	adds	r3, r3, r7
 8003ba4:	0011      	movs	r1, r2
 8003ba6:	0018      	movs	r0, r3
 8003ba8:	f002 fb9c 	bl	80062e4 <siprintf>
  HAL_UART_Transmit(&huart2, header, sizeof(header), 1000);
 8003bac:	23fa      	movs	r3, #250	; 0xfa
 8003bae:	009b      	lsls	r3, r3, #2
 8003bb0:	1962      	adds	r2, r4, r5
 8003bb2:	19d1      	adds	r1, r2, r7
 8003bb4:	483a      	ldr	r0, [pc, #232]	; (8003ca0 <main+0x16a4>)
 8003bb6:	2220      	movs	r2, #32
 8003bb8:	f001 fb4a 	bl	8005250 <HAL_UART_Transmit>
    /* USER CODE BEGIN 3 */
	 float accel[3];
	 float gyro[3];
	 float temp;

	 while(numRecordings<(sizeof(data)/sizeof(data[0]))){
 8003bbc:	e149      	b.n	8003e52 <main+0x1856>
		 pause_sec(2);
 8003bbe:	2380      	movs	r3, #128	; 0x80
 8003bc0:	05db      	lsls	r3, r3, #23
 8003bc2:	1c18      	adds	r0, r3, #0
 8003bc4:	f000 fa32 	bl	800402c <pause_sec>
		 for(int i =0; i<3;i++){
 8003bc8:	2300      	movs	r3, #0
 8003bca:	4a36      	ldr	r2, [pc, #216]	; (8003ca4 <main+0x16a8>)
 8003bcc:	2128      	movs	r1, #40	; 0x28
 8003bce:	1852      	adds	r2, r2, r1
 8003bd0:	19d2      	adds	r2, r2, r7
 8003bd2:	6013      	str	r3, [r2, #0]
 8003bd4:	e0ac      	b.n	8003d30 <main+0x1734>
 8003bd6:	46c0      	nop			; (mov r8, r8)
 8003bd8:	0000064c 	.word	0x0000064c
 8003bdc:	3ebe76c9 	.word	0x3ebe76c9
 8003be0:	fffff874 	.word	0xfffff874
 8003be4:	42340000 	.word	0x42340000
 8003be8:	00000654 	.word	0x00000654
 8003bec:	3b6bedfa 	.word	0x3b6bedfa
 8003bf0:	bc09a027 	.word	0xbc09a027
 8003bf4:	0000065c 	.word	0x0000065c
 8003bf8:	409c985f 	.word	0x409c985f
 8003bfc:	00000664 	.word	0x00000664
 8003c00:	bd79db23 	.word	0xbd79db23
 8003c04:	0000066c 	.word	0x0000066c
 8003c08:	41f2d3f8 	.word	0x41f2d3f8
 8003c0c:	3ec08312 	.word	0x3ec08312
 8003c10:	00000684 	.word	0x00000684
 8003c14:	42380000 	.word	0x42380000
 8003c18:	0000068c 	.word	0x0000068c
 8003c1c:	000006b4 	.word	0x000006b4
 8003c20:	3ec8b439 	.word	0x3ec8b439
 8003c24:	423c0000 	.word	0x423c0000
 8003c28:	000006bc 	.word	0x000006bc
 8003c2c:	bb6bedfa 	.word	0xbb6bedfa
 8003c30:	bbb0f27c 	.word	0xbbb0f27c
 8003c34:	000006c4 	.word	0x000006c4
 8003c38:	409cd845 	.word	0x409cd845
 8003c3c:	000006cc 	.word	0x000006cc
 8003c40:	000006d4 	.word	0x000006d4
 8003c44:	3ecac083 	.word	0x3ecac083
 8003c48:	000006ec 	.word	0x000006ec
 8003c4c:	42400000 	.word	0x42400000
 8003c50:	000006f4 	.word	0x000006f4
 8003c54:	000006fc 	.word	0x000006fc
 8003c58:	00000704 	.word	0x00000704
 8003c5c:	0000071c 	.word	0x0000071c
 8003c60:	3ed16873 	.word	0x3ed16873
 8003c64:	42440000 	.word	0x42440000
 8003c68:	00000724 	.word	0x00000724
 8003c6c:	baebedfa 	.word	0xbaebedfa
 8003c70:	bb449ba6 	.word	0xbb449ba6
 8003c74:	0000072c 	.word	0x0000072c
 8003c78:	409d21ff 	.word	0x409d21ff
 8003c7c:	00000734 	.word	0x00000734
 8003c80:	0000073c 	.word	0x0000073c
 8003c84:	41f2afec 	.word	0x41f2afec
 8003c88:	3ed374bc 	.word	0x3ed374bc
 8003c8c:	00000754 	.word	0x00000754
 8003c90:	42480000 	.word	0x42480000
 8003c94:	0000075c 	.word	0x0000075c
 8003c98:	00000764 	.word	0x00000764
 8003c9c:	08008958 	.word	0x08008958
 8003ca0:	200001f8 	.word	0x200001f8
 8003ca4:	00000824 	.word	0x00000824
		 		 accel[i]=data[numRecordings][i+2];
 8003ca8:	4b6d      	ldr	r3, [pc, #436]	; (8003e60 <main+0x1864>)
 8003caa:	681a      	ldr	r2, [r3, #0]
 8003cac:	4c6d      	ldr	r4, [pc, #436]	; (8003e64 <main+0x1868>)
 8003cae:	2628      	movs	r6, #40	; 0x28
 8003cb0:	19a3      	adds	r3, r4, r6
 8003cb2:	19db      	adds	r3, r3, r7
 8003cb4:	681b      	ldr	r3, [r3, #0]
 8003cb6:	1c98      	adds	r0, r3, #2
 8003cb8:	4b6b      	ldr	r3, [pc, #428]	; (8003e68 <main+0x186c>)
 8003cba:	4d6c      	ldr	r5, [pc, #432]	; (8003e6c <main+0x1870>)
 8003cbc:	195b      	adds	r3, r3, r5
 8003cbe:	19b9      	adds	r1, r7, r6
 8003cc0:	1859      	adds	r1, r3, r1
 8003cc2:	0013      	movs	r3, r2
 8003cc4:	005b      	lsls	r3, r3, #1
 8003cc6:	189b      	adds	r3, r3, r2
 8003cc8:	009b      	lsls	r3, r3, #2
 8003cca:	189b      	adds	r3, r3, r2
 8003ccc:	181b      	adds	r3, r3, r0
 8003cce:	009b      	lsls	r3, r3, #2
 8003cd0:	5859      	ldr	r1, [r3, r1]
 8003cd2:	4b67      	ldr	r3, [pc, #412]	; (8003e70 <main+0x1874>)
 8003cd4:	195b      	adds	r3, r3, r5
 8003cd6:	2228      	movs	r2, #40	; 0x28
 8003cd8:	4694      	mov	ip, r2
 8003cda:	44bc      	add	ip, r7
 8003cdc:	4463      	add	r3, ip
 8003cde:	19a2      	adds	r2, r4, r6
 8003ce0:	19d2      	adds	r2, r2, r7
 8003ce2:	6812      	ldr	r2, [r2, #0]
 8003ce4:	0092      	lsls	r2, r2, #2
 8003ce6:	50d1      	str	r1, [r2, r3]
		 		 gyro[i]=data[numRecordings][i+5];
 8003ce8:	4b5d      	ldr	r3, [pc, #372]	; (8003e60 <main+0x1864>)
 8003cea:	681a      	ldr	r2, [r3, #0]
 8003cec:	19a3      	adds	r3, r4, r6
 8003cee:	19db      	adds	r3, r3, r7
 8003cf0:	681b      	ldr	r3, [r3, #0]
 8003cf2:	1d58      	adds	r0, r3, #5
 8003cf4:	4b5c      	ldr	r3, [pc, #368]	; (8003e68 <main+0x186c>)
 8003cf6:	195b      	adds	r3, r3, r5
 8003cf8:	19b9      	adds	r1, r7, r6
 8003cfa:	1859      	adds	r1, r3, r1
 8003cfc:	0013      	movs	r3, r2
 8003cfe:	005b      	lsls	r3, r3, #1
 8003d00:	189b      	adds	r3, r3, r2
 8003d02:	009b      	lsls	r3, r3, #2
 8003d04:	189b      	adds	r3, r3, r2
 8003d06:	181b      	adds	r3, r3, r0
 8003d08:	009b      	lsls	r3, r3, #2
 8003d0a:	5859      	ldr	r1, [r3, r1]
 8003d0c:	4b59      	ldr	r3, [pc, #356]	; (8003e74 <main+0x1878>)
 8003d0e:	195b      	adds	r3, r3, r5
 8003d10:	2228      	movs	r2, #40	; 0x28
 8003d12:	4694      	mov	ip, r2
 8003d14:	44bc      	add	ip, r7
 8003d16:	4463      	add	r3, ip
 8003d18:	19a2      	adds	r2, r4, r6
 8003d1a:	19d2      	adds	r2, r2, r7
 8003d1c:	6812      	ldr	r2, [r2, #0]
 8003d1e:	0092      	lsls	r2, r2, #2
 8003d20:	50d1      	str	r1, [r2, r3]
		 for(int i =0; i<3;i++){
 8003d22:	19a3      	adds	r3, r4, r6
 8003d24:	19db      	adds	r3, r3, r7
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	3301      	adds	r3, #1
 8003d2a:	19a2      	adds	r2, r4, r6
 8003d2c:	19d2      	adds	r2, r2, r7
 8003d2e:	6013      	str	r3, [r2, #0]
 8003d30:	4b4c      	ldr	r3, [pc, #304]	; (8003e64 <main+0x1868>)
 8003d32:	2528      	movs	r5, #40	; 0x28
 8003d34:	195b      	adds	r3, r3, r5
 8003d36:	19db      	adds	r3, r3, r7
 8003d38:	681b      	ldr	r3, [r3, #0]
 8003d3a:	2b02      	cmp	r3, #2
 8003d3c:	ddb4      	ble.n	8003ca8 <main+0x16ac>
		 	 }
		 temp=data[numRecordings][8];
 8003d3e:	4b48      	ldr	r3, [pc, #288]	; (8003e60 <main+0x1864>)
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	4a49      	ldr	r2, [pc, #292]	; (8003e68 <main+0x186c>)
 8003d44:	4849      	ldr	r0, [pc, #292]	; (8003e6c <main+0x1870>)
 8003d46:	1812      	adds	r2, r2, r0
 8003d48:	2128      	movs	r1, #40	; 0x28
 8003d4a:	468c      	mov	ip, r1
 8003d4c:	44bc      	add	ip, r7
 8003d4e:	4462      	add	r2, ip
 8003d50:	2134      	movs	r1, #52	; 0x34
 8003d52:	434b      	muls	r3, r1
 8003d54:	18d3      	adds	r3, r2, r3
 8003d56:	3320      	adds	r3, #32
 8003d58:	681b      	ldr	r3, [r3, #0]
 8003d5a:	2282      	movs	r2, #130	; 0x82
 8003d5c:	0112      	lsls	r2, r2, #4
 8003d5e:	1952      	adds	r2, r2, r5
 8003d60:	19d1      	adds	r1, r2, r7
 8003d62:	600b      	str	r3, [r1, #0]
	      * FORMATTING BREAK DOWN:
	      * 0: the reading number (k-value)
	      *
	      * 94-100: spaces added at the end as buffer in case additional characters (like negative signs) appear
	      */
	     sprintf(msg, "\r\n%d,%.9f,%.9f,%.9f,%.9f,%.9f,%.9f,%.9f         ",(numRecordings+1),accel[0],accel[1],accel[2],gyro[0],gyro[1],gyro[2],temp);
 8003d64:	4b3e      	ldr	r3, [pc, #248]	; (8003e60 <main+0x1864>)
 8003d66:	681b      	ldr	r3, [r3, #0]
 8003d68:	1c5e      	adds	r6, r3, #1
 8003d6a:	4b41      	ldr	r3, [pc, #260]	; (8003e70 <main+0x1874>)
 8003d6c:	0004      	movs	r4, r0
 8003d6e:	191b      	adds	r3, r3, r4
 8003d70:	2228      	movs	r2, #40	; 0x28
 8003d72:	4694      	mov	ip, r2
 8003d74:	44bc      	add	ip, r7
 8003d76:	4463      	add	r3, ip
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	1c18      	adds	r0, r3, #0
 8003d7c:	f7fe fbd8 	bl	8002530 <__aeabi_f2d>
 8003d80:	6238      	str	r0, [r7, #32]
 8003d82:	6279      	str	r1, [r7, #36]	; 0x24
 8003d84:	4b3a      	ldr	r3, [pc, #232]	; (8003e70 <main+0x1874>)
 8003d86:	1919      	adds	r1, r3, r4
 8003d88:	197b      	adds	r3, r7, r5
 8003d8a:	18cb      	adds	r3, r1, r3
 8003d8c:	685b      	ldr	r3, [r3, #4]
 8003d8e:	1c18      	adds	r0, r3, #0
 8003d90:	f7fe fbce 	bl	8002530 <__aeabi_f2d>
 8003d94:	61b8      	str	r0, [r7, #24]
 8003d96:	61f9      	str	r1, [r7, #28]
 8003d98:	4b35      	ldr	r3, [pc, #212]	; (8003e70 <main+0x1874>)
 8003d9a:	1919      	adds	r1, r3, r4
 8003d9c:	197b      	adds	r3, r7, r5
 8003d9e:	18cb      	adds	r3, r1, r3
 8003da0:	689b      	ldr	r3, [r3, #8]
 8003da2:	1c18      	adds	r0, r3, #0
 8003da4:	f7fe fbc4 	bl	8002530 <__aeabi_f2d>
 8003da8:	6138      	str	r0, [r7, #16]
 8003daa:	6179      	str	r1, [r7, #20]
 8003dac:	4b31      	ldr	r3, [pc, #196]	; (8003e74 <main+0x1878>)
 8003dae:	1919      	adds	r1, r3, r4
 8003db0:	197b      	adds	r3, r7, r5
 8003db2:	18cb      	adds	r3, r1, r3
 8003db4:	681b      	ldr	r3, [r3, #0]
 8003db6:	1c18      	adds	r0, r3, #0
 8003db8:	f7fe fbba 	bl	8002530 <__aeabi_f2d>
 8003dbc:	60b8      	str	r0, [r7, #8]
 8003dbe:	60f9      	str	r1, [r7, #12]
 8003dc0:	4b2c      	ldr	r3, [pc, #176]	; (8003e74 <main+0x1878>)
 8003dc2:	1919      	adds	r1, r3, r4
 8003dc4:	197b      	adds	r3, r7, r5
 8003dc6:	18cb      	adds	r3, r1, r3
 8003dc8:	685b      	ldr	r3, [r3, #4]
 8003dca:	1c18      	adds	r0, r3, #0
 8003dcc:	f7fe fbb0 	bl	8002530 <__aeabi_f2d>
 8003dd0:	6038      	str	r0, [r7, #0]
 8003dd2:	6079      	str	r1, [r7, #4]
 8003dd4:	4b27      	ldr	r3, [pc, #156]	; (8003e74 <main+0x1878>)
 8003dd6:	1919      	adds	r1, r3, r4
 8003dd8:	197a      	adds	r2, r7, r5
 8003dda:	188b      	adds	r3, r1, r2
 8003ddc:	689b      	ldr	r3, [r3, #8]
 8003dde:	1c18      	adds	r0, r3, #0
 8003de0:	f7fe fba6 	bl	8002530 <__aeabi_f2d>
 8003de4:	0004      	movs	r4, r0
 8003de6:	000d      	movs	r5, r1
 8003de8:	2282      	movs	r2, #130	; 0x82
 8003dea:	0112      	lsls	r2, r2, #4
 8003dec:	2328      	movs	r3, #40	; 0x28
 8003dee:	18d2      	adds	r2, r2, r3
 8003df0:	19d2      	adds	r2, r2, r7
 8003df2:	6810      	ldr	r0, [r2, #0]
 8003df4:	f7fe fb9c 	bl	8002530 <__aeabi_f2d>
 8003df8:	0002      	movs	r2, r0
 8003dfa:	000b      	movs	r3, r1
 8003dfc:	491e      	ldr	r1, [pc, #120]	; (8003e78 <main+0x187c>)
 8003dfe:	2028      	movs	r0, #40	; 0x28
 8003e00:	1838      	adds	r0, r7, r0
 8003e02:	920c      	str	r2, [sp, #48]	; 0x30
 8003e04:	930d      	str	r3, [sp, #52]	; 0x34
 8003e06:	940a      	str	r4, [sp, #40]	; 0x28
 8003e08:	950b      	str	r5, [sp, #44]	; 0x2c
 8003e0a:	683b      	ldr	r3, [r7, #0]
 8003e0c:	687c      	ldr	r4, [r7, #4]
 8003e0e:	9308      	str	r3, [sp, #32]
 8003e10:	9409      	str	r4, [sp, #36]	; 0x24
 8003e12:	68bb      	ldr	r3, [r7, #8]
 8003e14:	68fc      	ldr	r4, [r7, #12]
 8003e16:	9306      	str	r3, [sp, #24]
 8003e18:	9407      	str	r4, [sp, #28]
 8003e1a:	693b      	ldr	r3, [r7, #16]
 8003e1c:	697c      	ldr	r4, [r7, #20]
 8003e1e:	9304      	str	r3, [sp, #16]
 8003e20:	9405      	str	r4, [sp, #20]
 8003e22:	69bb      	ldr	r3, [r7, #24]
 8003e24:	69fc      	ldr	r4, [r7, #28]
 8003e26:	9302      	str	r3, [sp, #8]
 8003e28:	9403      	str	r4, [sp, #12]
 8003e2a:	6a3b      	ldr	r3, [r7, #32]
 8003e2c:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8003e2e:	9300      	str	r3, [sp, #0]
 8003e30:	9401      	str	r4, [sp, #4]
 8003e32:	0032      	movs	r2, r6
 8003e34:	f002 fa56 	bl	80062e4 <siprintf>
	     HAL_UART_Transmit(&huart2, msg, sizeof(msg), 1000);
 8003e38:	23fa      	movs	r3, #250	; 0xfa
 8003e3a:	009b      	lsls	r3, r3, #2
 8003e3c:	2228      	movs	r2, #40	; 0x28
 8003e3e:	18b9      	adds	r1, r7, r2
 8003e40:	480e      	ldr	r0, [pc, #56]	; (8003e7c <main+0x1880>)
 8003e42:	2264      	movs	r2, #100	; 0x64
 8003e44:	f001 fa04 	bl	8005250 <HAL_UART_Transmit>

	     numRecordings++;
 8003e48:	4b05      	ldr	r3, [pc, #20]	; (8003e60 <main+0x1864>)
 8003e4a:	681b      	ldr	r3, [r3, #0]
 8003e4c:	1c5a      	adds	r2, r3, #1
 8003e4e:	4b04      	ldr	r3, [pc, #16]	; (8003e60 <main+0x1864>)
 8003e50:	601a      	str	r2, [r3, #0]
	 while(numRecordings<(sizeof(data)/sizeof(data[0]))){
 8003e52:	4b03      	ldr	r3, [pc, #12]	; (8003e60 <main+0x1864>)
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	2b24      	cmp	r3, #36	; 0x24
 8003e58:	d800      	bhi.n	8003e5c <main+0x1860>
 8003e5a:	e6b0      	b.n	8003bbe <main+0x15c2>
  {
 8003e5c:	e6ae      	b.n	8003bbc <main+0x15c0>
 8003e5e:	46c0      	nop			; (mov r8, r8)
 8003e60:	2000027c 	.word	0x2000027c
 8003e64:	00000824 	.word	0x00000824
 8003e68:	fffff874 	.word	0xfffff874
 8003e6c:	00000828 	.word	0x00000828
 8003e70:	fffff848 	.word	0xfffff848
 8003e74:	fffff83c 	.word	0xfffff83c
 8003e78:	0800897c 	.word	0x0800897c
 8003e7c:	200001f8 	.word	0x200001f8

08003e80 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003e80:	b590      	push	{r4, r7, lr}
 8003e82:	b091      	sub	sp, #68	; 0x44
 8003e84:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003e86:	2410      	movs	r4, #16
 8003e88:	193b      	adds	r3, r7, r4
 8003e8a:	0018      	movs	r0, r3
 8003e8c:	2330      	movs	r3, #48	; 0x30
 8003e8e:	001a      	movs	r2, r3
 8003e90:	2100      	movs	r1, #0
 8003e92:	f001 fdb1 	bl	80059f8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003e96:	003b      	movs	r3, r7
 8003e98:	0018      	movs	r0, r3
 8003e9a:	2310      	movs	r3, #16
 8003e9c:	001a      	movs	r2, r3
 8003e9e:	2100      	movs	r1, #0
 8003ea0:	f001 fdaa 	bl	80059f8 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8003ea4:	0021      	movs	r1, r4
 8003ea6:	187b      	adds	r3, r7, r1
 8003ea8:	2202      	movs	r2, #2
 8003eaa:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8003eac:	187b      	adds	r3, r7, r1
 8003eae:	2201      	movs	r2, #1
 8003eb0:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8003eb2:	187b      	adds	r3, r7, r1
 8003eb4:	2210      	movs	r2, #16
 8003eb6:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003eb8:	187b      	adds	r3, r7, r1
 8003eba:	2202      	movs	r2, #2
 8003ebc:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8003ebe:	187b      	adds	r3, r7, r1
 8003ec0:	2200      	movs	r2, #0
 8003ec2:	625a      	str	r2, [r3, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 8003ec4:	187b      	adds	r3, r7, r1
 8003ec6:	22a0      	movs	r2, #160	; 0xa0
 8003ec8:	0392      	lsls	r2, r2, #14
 8003eca:	629a      	str	r2, [r3, #40]	; 0x28
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 8003ecc:	187b      	adds	r3, r7, r1
 8003ece:	2200      	movs	r2, #0
 8003ed0:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003ed2:	187b      	adds	r3, r7, r1
 8003ed4:	0018      	movs	r0, r3
 8003ed6:	f000 fcfb 	bl	80048d0 <HAL_RCC_OscConfig>
 8003eda:	1e03      	subs	r3, r0, #0
 8003edc:	d001      	beq.n	8003ee2 <SystemClock_Config+0x62>
  {
    Error_Handler();
 8003ede:	f000 f8d7 	bl	8004090 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003ee2:	003b      	movs	r3, r7
 8003ee4:	2207      	movs	r2, #7
 8003ee6:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003ee8:	003b      	movs	r3, r7
 8003eea:	2202      	movs	r2, #2
 8003eec:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003eee:	003b      	movs	r3, r7
 8003ef0:	2200      	movs	r2, #0
 8003ef2:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8003ef4:	003b      	movs	r3, r7
 8003ef6:	2200      	movs	r2, #0
 8003ef8:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8003efa:	003b      	movs	r3, r7
 8003efc:	2101      	movs	r1, #1
 8003efe:	0018      	movs	r0, r3
 8003f00:	f001 f800 	bl	8004f04 <HAL_RCC_ClockConfig>
 8003f04:	1e03      	subs	r3, r0, #0
 8003f06:	d001      	beq.n	8003f0c <SystemClock_Config+0x8c>
  {
    Error_Handler();
 8003f08:	f000 f8c2 	bl	8004090 <Error_Handler>
  }
}
 8003f0c:	46c0      	nop			; (mov r8, r8)
 8003f0e:	46bd      	mov	sp, r7
 8003f10:	b011      	add	sp, #68	; 0x44
 8003f12:	bd90      	pop	{r4, r7, pc}

08003f14 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8003f14:	b580      	push	{r7, lr}
 8003f16:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8003f18:	4b14      	ldr	r3, [pc, #80]	; (8003f6c <MX_USART2_UART_Init+0x58>)
 8003f1a:	4a15      	ldr	r2, [pc, #84]	; (8003f70 <MX_USART2_UART_Init+0x5c>)
 8003f1c:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 8003f1e:	4b13      	ldr	r3, [pc, #76]	; (8003f6c <MX_USART2_UART_Init+0x58>)
 8003f20:	2296      	movs	r2, #150	; 0x96
 8003f22:	0192      	lsls	r2, r2, #6
 8003f24:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8003f26:	4b11      	ldr	r3, [pc, #68]	; (8003f6c <MX_USART2_UART_Init+0x58>)
 8003f28:	2200      	movs	r2, #0
 8003f2a:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8003f2c:	4b0f      	ldr	r3, [pc, #60]	; (8003f6c <MX_USART2_UART_Init+0x58>)
 8003f2e:	2200      	movs	r2, #0
 8003f30:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8003f32:	4b0e      	ldr	r3, [pc, #56]	; (8003f6c <MX_USART2_UART_Init+0x58>)
 8003f34:	2200      	movs	r2, #0
 8003f36:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8003f38:	4b0c      	ldr	r3, [pc, #48]	; (8003f6c <MX_USART2_UART_Init+0x58>)
 8003f3a:	220c      	movs	r2, #12
 8003f3c:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003f3e:	4b0b      	ldr	r3, [pc, #44]	; (8003f6c <MX_USART2_UART_Init+0x58>)
 8003f40:	2200      	movs	r2, #0
 8003f42:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8003f44:	4b09      	ldr	r3, [pc, #36]	; (8003f6c <MX_USART2_UART_Init+0x58>)
 8003f46:	2200      	movs	r2, #0
 8003f48:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8003f4a:	4b08      	ldr	r3, [pc, #32]	; (8003f6c <MX_USART2_UART_Init+0x58>)
 8003f4c:	2200      	movs	r2, #0
 8003f4e:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8003f50:	4b06      	ldr	r3, [pc, #24]	; (8003f6c <MX_USART2_UART_Init+0x58>)
 8003f52:	2200      	movs	r2, #0
 8003f54:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8003f56:	4b05      	ldr	r3, [pc, #20]	; (8003f6c <MX_USART2_UART_Init+0x58>)
 8003f58:	0018      	movs	r0, r3
 8003f5a:	f001 f925 	bl	80051a8 <HAL_UART_Init>
 8003f5e:	1e03      	subs	r3, r0, #0
 8003f60:	d001      	beq.n	8003f66 <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 8003f62:	f000 f895 	bl	8004090 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8003f66:	46c0      	nop			; (mov r8, r8)
 8003f68:	46bd      	mov	sp, r7
 8003f6a:	bd80      	pop	{r7, pc}
 8003f6c:	200001f8 	.word	0x200001f8
 8003f70:	40004400 	.word	0x40004400

08003f74 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8003f74:	b590      	push	{r4, r7, lr}
 8003f76:	b089      	sub	sp, #36	; 0x24
 8003f78:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003f7a:	240c      	movs	r4, #12
 8003f7c:	193b      	adds	r3, r7, r4
 8003f7e:	0018      	movs	r0, r3
 8003f80:	2314      	movs	r3, #20
 8003f82:	001a      	movs	r2, r3
 8003f84:	2100      	movs	r1, #0
 8003f86:	f001 fd37 	bl	80059f8 <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003f8a:	4b26      	ldr	r3, [pc, #152]	; (8004024 <MX_GPIO_Init+0xb0>)
 8003f8c:	695a      	ldr	r2, [r3, #20]
 8003f8e:	4b25      	ldr	r3, [pc, #148]	; (8004024 <MX_GPIO_Init+0xb0>)
 8003f90:	2180      	movs	r1, #128	; 0x80
 8003f92:	0289      	lsls	r1, r1, #10
 8003f94:	430a      	orrs	r2, r1
 8003f96:	615a      	str	r2, [r3, #20]
 8003f98:	4b22      	ldr	r3, [pc, #136]	; (8004024 <MX_GPIO_Init+0xb0>)
 8003f9a:	695a      	ldr	r2, [r3, #20]
 8003f9c:	2380      	movs	r3, #128	; 0x80
 8003f9e:	029b      	lsls	r3, r3, #10
 8003fa0:	4013      	ands	r3, r2
 8003fa2:	60bb      	str	r3, [r7, #8]
 8003fa4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8003fa6:	4b1f      	ldr	r3, [pc, #124]	; (8004024 <MX_GPIO_Init+0xb0>)
 8003fa8:	695a      	ldr	r2, [r3, #20]
 8003faa:	4b1e      	ldr	r3, [pc, #120]	; (8004024 <MX_GPIO_Init+0xb0>)
 8003fac:	2180      	movs	r1, #128	; 0x80
 8003fae:	0309      	lsls	r1, r1, #12
 8003fb0:	430a      	orrs	r2, r1
 8003fb2:	615a      	str	r2, [r3, #20]
 8003fb4:	4b1b      	ldr	r3, [pc, #108]	; (8004024 <MX_GPIO_Init+0xb0>)
 8003fb6:	695a      	ldr	r2, [r3, #20]
 8003fb8:	2380      	movs	r3, #128	; 0x80
 8003fba:	031b      	lsls	r3, r3, #12
 8003fbc:	4013      	ands	r3, r2
 8003fbe:	607b      	str	r3, [r7, #4]
 8003fc0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LD4_Pin|LD3_Pin, GPIO_PIN_RESET);
 8003fc2:	23c0      	movs	r3, #192	; 0xc0
 8003fc4:	009b      	lsls	r3, r3, #2
 8003fc6:	4818      	ldr	r0, [pc, #96]	; (8004028 <MX_GPIO_Init+0xb4>)
 8003fc8:	2200      	movs	r2, #0
 8003fca:	0019      	movs	r1, r3
 8003fcc:	f000 fc62 	bl	8004894 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8003fd0:	193b      	adds	r3, r7, r4
 8003fd2:	2201      	movs	r2, #1
 8003fd4:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8003fd6:	193b      	adds	r3, r7, r4
 8003fd8:	2290      	movs	r2, #144	; 0x90
 8003fda:	0352      	lsls	r2, r2, #13
 8003fdc:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003fde:	193b      	adds	r3, r7, r4
 8003fe0:	2200      	movs	r2, #0
 8003fe2:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8003fe4:	193a      	adds	r2, r7, r4
 8003fe6:	2390      	movs	r3, #144	; 0x90
 8003fe8:	05db      	lsls	r3, r3, #23
 8003fea:	0011      	movs	r1, r2
 8003fec:	0018      	movs	r0, r3
 8003fee:	f000 fae1 	bl	80045b4 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD4_Pin LD3_Pin */
  GPIO_InitStruct.Pin = LD4_Pin|LD3_Pin;
 8003ff2:	0021      	movs	r1, r4
 8003ff4:	187b      	adds	r3, r7, r1
 8003ff6:	22c0      	movs	r2, #192	; 0xc0
 8003ff8:	0092      	lsls	r2, r2, #2
 8003ffa:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003ffc:	187b      	adds	r3, r7, r1
 8003ffe:	2201      	movs	r2, #1
 8004000:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004002:	187b      	adds	r3, r7, r1
 8004004:	2200      	movs	r2, #0
 8004006:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004008:	187b      	adds	r3, r7, r1
 800400a:	2200      	movs	r2, #0
 800400c:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800400e:	187b      	adds	r3, r7, r1
 8004010:	4a05      	ldr	r2, [pc, #20]	; (8004028 <MX_GPIO_Init+0xb4>)
 8004012:	0019      	movs	r1, r3
 8004014:	0010      	movs	r0, r2
 8004016:	f000 facd 	bl	80045b4 <HAL_GPIO_Init>

}
 800401a:	46c0      	nop			; (mov r8, r8)
 800401c:	46bd      	mov	sp, r7
 800401e:	b009      	add	sp, #36	; 0x24
 8004020:	bd90      	pop	{r4, r7, pc}
 8004022:	46c0      	nop			; (mov r8, r8)
 8004024:	40021000 	.word	0x40021000
 8004028:	48000800 	.word	0x48000800

0800402c <pause_sec>:

/* USER CODE BEGIN 4 */
void pause_sec(float x)
{
 800402c:	b590      	push	{r4, r7, lr}
 800402e:	b087      	sub	sp, #28
 8004030:	af00      	add	r7, sp, #0
 8004032:	6078      	str	r0, [r7, #4]
	/* Delay program execution for x seconds */
	//TASK 2

	//declare loop variables
	int i, j, k= 0;
 8004034:	2300      	movs	r3, #0
 8004036:	60fb      	str	r3, [r7, #12]
	/*
	 * run through 2 for loops incrementing counter to ensure loop runs (no actual impact on code)
	 * Delay 1 * Delay 2 delays for 1 second.
	 * Multiplying by x gives the delay for x seconds
	 */
	for (i = 0; i < 630; i++) {
 8004038:	2300      	movs	r3, #0
 800403a:	617b      	str	r3, [r7, #20]
 800403c:	e01a      	b.n	8004074 <pause_sec+0x48>
		for(j = 0; j < 110*x; j++) { //
 800403e:	2300      	movs	r3, #0
 8004040:	613b      	str	r3, [r7, #16]
 8004042:	e005      	b.n	8004050 <pause_sec+0x24>
			k++; // this is added to ensure that the loop does run
 8004044:	68fb      	ldr	r3, [r7, #12]
 8004046:	3301      	adds	r3, #1
 8004048:	60fb      	str	r3, [r7, #12]
		for(j = 0; j < 110*x; j++) { //
 800404a:	693b      	ldr	r3, [r7, #16]
 800404c:	3301      	adds	r3, #1
 800404e:	613b      	str	r3, [r7, #16]
 8004050:	6938      	ldr	r0, [r7, #16]
 8004052:	f7fc fc39 	bl	80008c8 <__aeabi_i2f>
 8004056:	1c04      	adds	r4, r0, #0
 8004058:	490b      	ldr	r1, [pc, #44]	; (8004088 <pause_sec+0x5c>)
 800405a:	6878      	ldr	r0, [r7, #4]
 800405c:	f7fc fb0e 	bl	800067c <__aeabi_fmul>
 8004060:	1c03      	adds	r3, r0, #0
 8004062:	1c19      	adds	r1, r3, #0
 8004064:	1c20      	adds	r0, r4, #0
 8004066:	f7fc fa31 	bl	80004cc <__aeabi_fcmplt>
 800406a:	1e03      	subs	r3, r0, #0
 800406c:	d1ea      	bne.n	8004044 <pause_sec+0x18>
	for (i = 0; i < 630; i++) {
 800406e:	697b      	ldr	r3, [r7, #20]
 8004070:	3301      	adds	r3, #1
 8004072:	617b      	str	r3, [r7, #20]
 8004074:	697b      	ldr	r3, [r7, #20]
 8004076:	4a05      	ldr	r2, [pc, #20]	; (800408c <pause_sec+0x60>)
 8004078:	4293      	cmp	r3, r2
 800407a:	dde0      	ble.n	800403e <pause_sec+0x12>
		}
	}
}
 800407c:	46c0      	nop			; (mov r8, r8)
 800407e:	46c0      	nop			; (mov r8, r8)
 8004080:	46bd      	mov	sp, r7
 8004082:	b007      	add	sp, #28
 8004084:	bd90      	pop	{r4, r7, pc}
 8004086:	46c0      	nop			; (mov r8, r8)
 8004088:	42dc0000 	.word	0x42dc0000
 800408c:	00000275 	.word	0x00000275

08004090 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8004090:	b580      	push	{r7, lr}
 8004092:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8004094:	b672      	cpsid	i
}
 8004096:	46c0      	nop			; (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8004098:	e7fe      	b.n	8004098 <Error_Handler+0x8>
	...

0800409c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800409c:	b580      	push	{r7, lr}
 800409e:	b082      	sub	sp, #8
 80040a0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80040a2:	4b0f      	ldr	r3, [pc, #60]	; (80040e0 <HAL_MspInit+0x44>)
 80040a4:	699a      	ldr	r2, [r3, #24]
 80040a6:	4b0e      	ldr	r3, [pc, #56]	; (80040e0 <HAL_MspInit+0x44>)
 80040a8:	2101      	movs	r1, #1
 80040aa:	430a      	orrs	r2, r1
 80040ac:	619a      	str	r2, [r3, #24]
 80040ae:	4b0c      	ldr	r3, [pc, #48]	; (80040e0 <HAL_MspInit+0x44>)
 80040b0:	699b      	ldr	r3, [r3, #24]
 80040b2:	2201      	movs	r2, #1
 80040b4:	4013      	ands	r3, r2
 80040b6:	607b      	str	r3, [r7, #4]
 80040b8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80040ba:	4b09      	ldr	r3, [pc, #36]	; (80040e0 <HAL_MspInit+0x44>)
 80040bc:	69da      	ldr	r2, [r3, #28]
 80040be:	4b08      	ldr	r3, [pc, #32]	; (80040e0 <HAL_MspInit+0x44>)
 80040c0:	2180      	movs	r1, #128	; 0x80
 80040c2:	0549      	lsls	r1, r1, #21
 80040c4:	430a      	orrs	r2, r1
 80040c6:	61da      	str	r2, [r3, #28]
 80040c8:	4b05      	ldr	r3, [pc, #20]	; (80040e0 <HAL_MspInit+0x44>)
 80040ca:	69da      	ldr	r2, [r3, #28]
 80040cc:	2380      	movs	r3, #128	; 0x80
 80040ce:	055b      	lsls	r3, r3, #21
 80040d0:	4013      	ands	r3, r2
 80040d2:	603b      	str	r3, [r7, #0]
 80040d4:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80040d6:	46c0      	nop			; (mov r8, r8)
 80040d8:	46bd      	mov	sp, r7
 80040da:	b002      	add	sp, #8
 80040dc:	bd80      	pop	{r7, pc}
 80040de:	46c0      	nop			; (mov r8, r8)
 80040e0:	40021000 	.word	0x40021000

080040e4 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80040e4:	b590      	push	{r4, r7, lr}
 80040e6:	b08b      	sub	sp, #44	; 0x2c
 80040e8:	af00      	add	r7, sp, #0
 80040ea:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80040ec:	2414      	movs	r4, #20
 80040ee:	193b      	adds	r3, r7, r4
 80040f0:	0018      	movs	r0, r3
 80040f2:	2314      	movs	r3, #20
 80040f4:	001a      	movs	r2, r3
 80040f6:	2100      	movs	r1, #0
 80040f8:	f001 fc7e 	bl	80059f8 <memset>
  if(huart->Instance==USART2)
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	4a1c      	ldr	r2, [pc, #112]	; (8004174 <HAL_UART_MspInit+0x90>)
 8004102:	4293      	cmp	r3, r2
 8004104:	d132      	bne.n	800416c <HAL_UART_MspInit+0x88>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8004106:	4b1c      	ldr	r3, [pc, #112]	; (8004178 <HAL_UART_MspInit+0x94>)
 8004108:	69da      	ldr	r2, [r3, #28]
 800410a:	4b1b      	ldr	r3, [pc, #108]	; (8004178 <HAL_UART_MspInit+0x94>)
 800410c:	2180      	movs	r1, #128	; 0x80
 800410e:	0289      	lsls	r1, r1, #10
 8004110:	430a      	orrs	r2, r1
 8004112:	61da      	str	r2, [r3, #28]
 8004114:	4b18      	ldr	r3, [pc, #96]	; (8004178 <HAL_UART_MspInit+0x94>)
 8004116:	69da      	ldr	r2, [r3, #28]
 8004118:	2380      	movs	r3, #128	; 0x80
 800411a:	029b      	lsls	r3, r3, #10
 800411c:	4013      	ands	r3, r2
 800411e:	613b      	str	r3, [r7, #16]
 8004120:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004122:	4b15      	ldr	r3, [pc, #84]	; (8004178 <HAL_UART_MspInit+0x94>)
 8004124:	695a      	ldr	r2, [r3, #20]
 8004126:	4b14      	ldr	r3, [pc, #80]	; (8004178 <HAL_UART_MspInit+0x94>)
 8004128:	2180      	movs	r1, #128	; 0x80
 800412a:	0289      	lsls	r1, r1, #10
 800412c:	430a      	orrs	r2, r1
 800412e:	615a      	str	r2, [r3, #20]
 8004130:	4b11      	ldr	r3, [pc, #68]	; (8004178 <HAL_UART_MspInit+0x94>)
 8004132:	695a      	ldr	r2, [r3, #20]
 8004134:	2380      	movs	r3, #128	; 0x80
 8004136:	029b      	lsls	r3, r3, #10
 8004138:	4013      	ands	r3, r2
 800413a:	60fb      	str	r3, [r7, #12]
 800413c:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 800413e:	0021      	movs	r1, r4
 8004140:	187b      	adds	r3, r7, r1
 8004142:	220c      	movs	r2, #12
 8004144:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004146:	187b      	adds	r3, r7, r1
 8004148:	2202      	movs	r2, #2
 800414a:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800414c:	187b      	adds	r3, r7, r1
 800414e:	2200      	movs	r2, #0
 8004150:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8004152:	187b      	adds	r3, r7, r1
 8004154:	2203      	movs	r2, #3
 8004156:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 8004158:	187b      	adds	r3, r7, r1
 800415a:	2201      	movs	r2, #1
 800415c:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800415e:	187a      	adds	r2, r7, r1
 8004160:	2390      	movs	r3, #144	; 0x90
 8004162:	05db      	lsls	r3, r3, #23
 8004164:	0011      	movs	r1, r2
 8004166:	0018      	movs	r0, r3
 8004168:	f000 fa24 	bl	80045b4 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800416c:	46c0      	nop			; (mov r8, r8)
 800416e:	46bd      	mov	sp, r7
 8004170:	b00b      	add	sp, #44	; 0x2c
 8004172:	bd90      	pop	{r4, r7, pc}
 8004174:	40004400 	.word	0x40004400
 8004178:	40021000 	.word	0x40021000

0800417c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800417c:	b580      	push	{r7, lr}
 800417e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8004180:	e7fe      	b.n	8004180 <NMI_Handler+0x4>

08004182 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004182:	b580      	push	{r7, lr}
 8004184:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8004186:	e7fe      	b.n	8004186 <HardFault_Handler+0x4>

08004188 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8004188:	b580      	push	{r7, lr}
 800418a:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 800418c:	46c0      	nop			; (mov r8, r8)
 800418e:	46bd      	mov	sp, r7
 8004190:	bd80      	pop	{r7, pc}

08004192 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8004192:	b580      	push	{r7, lr}
 8004194:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8004196:	46c0      	nop			; (mov r8, r8)
 8004198:	46bd      	mov	sp, r7
 800419a:	bd80      	pop	{r7, pc}

0800419c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800419c:	b580      	push	{r7, lr}
 800419e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80041a0:	f000 f938 	bl	8004414 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80041a4:	46c0      	nop			; (mov r8, r8)
 80041a6:	46bd      	mov	sp, r7
 80041a8:	bd80      	pop	{r7, pc}

080041aa <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80041aa:	b580      	push	{r7, lr}
 80041ac:	af00      	add	r7, sp, #0
	return 1;
 80041ae:	2301      	movs	r3, #1
}
 80041b0:	0018      	movs	r0, r3
 80041b2:	46bd      	mov	sp, r7
 80041b4:	bd80      	pop	{r7, pc}

080041b6 <_kill>:

int _kill(int pid, int sig)
{
 80041b6:	b580      	push	{r7, lr}
 80041b8:	b082      	sub	sp, #8
 80041ba:	af00      	add	r7, sp, #0
 80041bc:	6078      	str	r0, [r7, #4]
 80041be:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80041c0:	f001 fbf0 	bl	80059a4 <__errno>
 80041c4:	0003      	movs	r3, r0
 80041c6:	2216      	movs	r2, #22
 80041c8:	601a      	str	r2, [r3, #0]
	return -1;
 80041ca:	2301      	movs	r3, #1
 80041cc:	425b      	negs	r3, r3
}
 80041ce:	0018      	movs	r0, r3
 80041d0:	46bd      	mov	sp, r7
 80041d2:	b002      	add	sp, #8
 80041d4:	bd80      	pop	{r7, pc}

080041d6 <_exit>:

void _exit (int status)
{
 80041d6:	b580      	push	{r7, lr}
 80041d8:	b082      	sub	sp, #8
 80041da:	af00      	add	r7, sp, #0
 80041dc:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 80041de:	2301      	movs	r3, #1
 80041e0:	425a      	negs	r2, r3
 80041e2:	687b      	ldr	r3, [r7, #4]
 80041e4:	0011      	movs	r1, r2
 80041e6:	0018      	movs	r0, r3
 80041e8:	f7ff ffe5 	bl	80041b6 <_kill>
	while (1) {}		/* Make sure we hang here */
 80041ec:	e7fe      	b.n	80041ec <_exit+0x16>

080041ee <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80041ee:	b580      	push	{r7, lr}
 80041f0:	b086      	sub	sp, #24
 80041f2:	af00      	add	r7, sp, #0
 80041f4:	60f8      	str	r0, [r7, #12]
 80041f6:	60b9      	str	r1, [r7, #8]
 80041f8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80041fa:	2300      	movs	r3, #0
 80041fc:	617b      	str	r3, [r7, #20]
 80041fe:	e00a      	b.n	8004216 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8004200:	e000      	b.n	8004204 <_read+0x16>
 8004202:	bf00      	nop
 8004204:	0001      	movs	r1, r0
 8004206:	68bb      	ldr	r3, [r7, #8]
 8004208:	1c5a      	adds	r2, r3, #1
 800420a:	60ba      	str	r2, [r7, #8]
 800420c:	b2ca      	uxtb	r2, r1
 800420e:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004210:	697b      	ldr	r3, [r7, #20]
 8004212:	3301      	adds	r3, #1
 8004214:	617b      	str	r3, [r7, #20]
 8004216:	697a      	ldr	r2, [r7, #20]
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	429a      	cmp	r2, r3
 800421c:	dbf0      	blt.n	8004200 <_read+0x12>
	}

return len;
 800421e:	687b      	ldr	r3, [r7, #4]
}
 8004220:	0018      	movs	r0, r3
 8004222:	46bd      	mov	sp, r7
 8004224:	b006      	add	sp, #24
 8004226:	bd80      	pop	{r7, pc}

08004228 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8004228:	b580      	push	{r7, lr}
 800422a:	b086      	sub	sp, #24
 800422c:	af00      	add	r7, sp, #0
 800422e:	60f8      	str	r0, [r7, #12]
 8004230:	60b9      	str	r1, [r7, #8]
 8004232:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004234:	2300      	movs	r3, #0
 8004236:	617b      	str	r3, [r7, #20]
 8004238:	e009      	b.n	800424e <_write+0x26>
	{
		__io_putchar(*ptr++);
 800423a:	68bb      	ldr	r3, [r7, #8]
 800423c:	1c5a      	adds	r2, r3, #1
 800423e:	60ba      	str	r2, [r7, #8]
 8004240:	781b      	ldrb	r3, [r3, #0]
 8004242:	0018      	movs	r0, r3
 8004244:	e000      	b.n	8004248 <_write+0x20>
 8004246:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004248:	697b      	ldr	r3, [r7, #20]
 800424a:	3301      	adds	r3, #1
 800424c:	617b      	str	r3, [r7, #20]
 800424e:	697a      	ldr	r2, [r7, #20]
 8004250:	687b      	ldr	r3, [r7, #4]
 8004252:	429a      	cmp	r2, r3
 8004254:	dbf1      	blt.n	800423a <_write+0x12>
	}
	return len;
 8004256:	687b      	ldr	r3, [r7, #4]
}
 8004258:	0018      	movs	r0, r3
 800425a:	46bd      	mov	sp, r7
 800425c:	b006      	add	sp, #24
 800425e:	bd80      	pop	{r7, pc}

08004260 <_close>:

int _close(int file)
{
 8004260:	b580      	push	{r7, lr}
 8004262:	b082      	sub	sp, #8
 8004264:	af00      	add	r7, sp, #0
 8004266:	6078      	str	r0, [r7, #4]
	return -1;
 8004268:	2301      	movs	r3, #1
 800426a:	425b      	negs	r3, r3
}
 800426c:	0018      	movs	r0, r3
 800426e:	46bd      	mov	sp, r7
 8004270:	b002      	add	sp, #8
 8004272:	bd80      	pop	{r7, pc}

08004274 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8004274:	b580      	push	{r7, lr}
 8004276:	b082      	sub	sp, #8
 8004278:	af00      	add	r7, sp, #0
 800427a:	6078      	str	r0, [r7, #4]
 800427c:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800427e:	683b      	ldr	r3, [r7, #0]
 8004280:	2280      	movs	r2, #128	; 0x80
 8004282:	0192      	lsls	r2, r2, #6
 8004284:	605a      	str	r2, [r3, #4]
	return 0;
 8004286:	2300      	movs	r3, #0
}
 8004288:	0018      	movs	r0, r3
 800428a:	46bd      	mov	sp, r7
 800428c:	b002      	add	sp, #8
 800428e:	bd80      	pop	{r7, pc}

08004290 <_isatty>:

int _isatty(int file)
{
 8004290:	b580      	push	{r7, lr}
 8004292:	b082      	sub	sp, #8
 8004294:	af00      	add	r7, sp, #0
 8004296:	6078      	str	r0, [r7, #4]
	return 1;
 8004298:	2301      	movs	r3, #1
}
 800429a:	0018      	movs	r0, r3
 800429c:	46bd      	mov	sp, r7
 800429e:	b002      	add	sp, #8
 80042a0:	bd80      	pop	{r7, pc}

080042a2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80042a2:	b580      	push	{r7, lr}
 80042a4:	b084      	sub	sp, #16
 80042a6:	af00      	add	r7, sp, #0
 80042a8:	60f8      	str	r0, [r7, #12]
 80042aa:	60b9      	str	r1, [r7, #8]
 80042ac:	607a      	str	r2, [r7, #4]
	return 0;
 80042ae:	2300      	movs	r3, #0
}
 80042b0:	0018      	movs	r0, r3
 80042b2:	46bd      	mov	sp, r7
 80042b4:	b004      	add	sp, #16
 80042b6:	bd80      	pop	{r7, pc}

080042b8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80042b8:	b580      	push	{r7, lr}
 80042ba:	b086      	sub	sp, #24
 80042bc:	af00      	add	r7, sp, #0
 80042be:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80042c0:	4a14      	ldr	r2, [pc, #80]	; (8004314 <_sbrk+0x5c>)
 80042c2:	4b15      	ldr	r3, [pc, #84]	; (8004318 <_sbrk+0x60>)
 80042c4:	1ad3      	subs	r3, r2, r3
 80042c6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80042c8:	697b      	ldr	r3, [r7, #20]
 80042ca:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80042cc:	4b13      	ldr	r3, [pc, #76]	; (800431c <_sbrk+0x64>)
 80042ce:	681b      	ldr	r3, [r3, #0]
 80042d0:	2b00      	cmp	r3, #0
 80042d2:	d102      	bne.n	80042da <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80042d4:	4b11      	ldr	r3, [pc, #68]	; (800431c <_sbrk+0x64>)
 80042d6:	4a12      	ldr	r2, [pc, #72]	; (8004320 <_sbrk+0x68>)
 80042d8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80042da:	4b10      	ldr	r3, [pc, #64]	; (800431c <_sbrk+0x64>)
 80042dc:	681a      	ldr	r2, [r3, #0]
 80042de:	687b      	ldr	r3, [r7, #4]
 80042e0:	18d3      	adds	r3, r2, r3
 80042e2:	693a      	ldr	r2, [r7, #16]
 80042e4:	429a      	cmp	r2, r3
 80042e6:	d207      	bcs.n	80042f8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80042e8:	f001 fb5c 	bl	80059a4 <__errno>
 80042ec:	0003      	movs	r3, r0
 80042ee:	220c      	movs	r2, #12
 80042f0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80042f2:	2301      	movs	r3, #1
 80042f4:	425b      	negs	r3, r3
 80042f6:	e009      	b.n	800430c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80042f8:	4b08      	ldr	r3, [pc, #32]	; (800431c <_sbrk+0x64>)
 80042fa:	681b      	ldr	r3, [r3, #0]
 80042fc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80042fe:	4b07      	ldr	r3, [pc, #28]	; (800431c <_sbrk+0x64>)
 8004300:	681a      	ldr	r2, [r3, #0]
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	18d2      	adds	r2, r2, r3
 8004306:	4b05      	ldr	r3, [pc, #20]	; (800431c <_sbrk+0x64>)
 8004308:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 800430a:	68fb      	ldr	r3, [r7, #12]
}
 800430c:	0018      	movs	r0, r3
 800430e:	46bd      	mov	sp, r7
 8004310:	b006      	add	sp, #24
 8004312:	bd80      	pop	{r7, pc}
 8004314:	20002000 	.word	0x20002000
 8004318:	00000400 	.word	0x00000400
 800431c:	20000280 	.word	0x20000280
 8004320:	20000298 	.word	0x20000298

08004324 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8004324:	b580      	push	{r7, lr}
 8004326:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8004328:	46c0      	nop			; (mov r8, r8)
 800432a:	46bd      	mov	sp, r7
 800432c:	bd80      	pop	{r7, pc}
	...

08004330 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8004330:	480d      	ldr	r0, [pc, #52]	; (8004368 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8004332:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8004334:	480d      	ldr	r0, [pc, #52]	; (800436c <LoopForever+0x6>)
  ldr r1, =_edata
 8004336:	490e      	ldr	r1, [pc, #56]	; (8004370 <LoopForever+0xa>)
  ldr r2, =_sidata
 8004338:	4a0e      	ldr	r2, [pc, #56]	; (8004374 <LoopForever+0xe>)
  movs r3, #0
 800433a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800433c:	e002      	b.n	8004344 <LoopCopyDataInit>

0800433e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800433e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8004340:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8004342:	3304      	adds	r3, #4

08004344 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8004344:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8004346:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8004348:	d3f9      	bcc.n	800433e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800434a:	4a0b      	ldr	r2, [pc, #44]	; (8004378 <LoopForever+0x12>)
  ldr r4, =_ebss
 800434c:	4c0b      	ldr	r4, [pc, #44]	; (800437c <LoopForever+0x16>)
  movs r3, #0
 800434e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8004350:	e001      	b.n	8004356 <LoopFillZerobss>

08004352 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8004352:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8004354:	3204      	adds	r2, #4

08004356 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8004356:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8004358:	d3fb      	bcc.n	8004352 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800435a:	f7ff ffe3 	bl	8004324 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 800435e:	f001 fb27 	bl	80059b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8004362:	f7fe f94b 	bl	80025fc <main>

08004366 <LoopForever>:

LoopForever:
    b LoopForever
 8004366:	e7fe      	b.n	8004366 <LoopForever>
  ldr   r0, =_estack
 8004368:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 800436c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8004370:	200001dc 	.word	0x200001dc
  ldr r2, =_sidata
 8004374:	08008e8c 	.word	0x08008e8c
  ldr r2, =_sbss
 8004378:	200001dc 	.word	0x200001dc
  ldr r4, =_ebss
 800437c:	20000298 	.word	0x20000298

08004380 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8004380:	e7fe      	b.n	8004380 <ADC1_COMP_IRQHandler>
	...

08004384 <HAL_Init>:
  *       In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004384:	b580      	push	{r7, lr}
 8004386:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */ 
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004388:	4b07      	ldr	r3, [pc, #28]	; (80043a8 <HAL_Init+0x24>)
 800438a:	681a      	ldr	r2, [r3, #0]
 800438c:	4b06      	ldr	r3, [pc, #24]	; (80043a8 <HAL_Init+0x24>)
 800438e:	2110      	movs	r1, #16
 8004390:	430a      	orrs	r2, r1
 8004392:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */

  HAL_InitTick(TICK_INT_PRIORITY);
 8004394:	2000      	movs	r0, #0
 8004396:	f000 f809 	bl	80043ac <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800439a:	f7ff fe7f 	bl	800409c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 800439e:	2300      	movs	r3, #0
}
 80043a0:	0018      	movs	r0, r3
 80043a2:	46bd      	mov	sp, r7
 80043a4:	bd80      	pop	{r7, pc}
 80043a6:	46c0      	nop			; (mov r8, r8)
 80043a8:	40022000 	.word	0x40022000

080043ac <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80043ac:	b590      	push	{r4, r7, lr}
 80043ae:	b083      	sub	sp, #12
 80043b0:	af00      	add	r7, sp, #0
 80043b2:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80043b4:	4b14      	ldr	r3, [pc, #80]	; (8004408 <HAL_InitTick+0x5c>)
 80043b6:	681c      	ldr	r4, [r3, #0]
 80043b8:	4b14      	ldr	r3, [pc, #80]	; (800440c <HAL_InitTick+0x60>)
 80043ba:	781b      	ldrb	r3, [r3, #0]
 80043bc:	0019      	movs	r1, r3
 80043be:	23fa      	movs	r3, #250	; 0xfa
 80043c0:	0098      	lsls	r0, r3, #2
 80043c2:	f7fb febd 	bl	8000140 <__udivsi3>
 80043c6:	0003      	movs	r3, r0
 80043c8:	0019      	movs	r1, r3
 80043ca:	0020      	movs	r0, r4
 80043cc:	f7fb feb8 	bl	8000140 <__udivsi3>
 80043d0:	0003      	movs	r3, r0
 80043d2:	0018      	movs	r0, r3
 80043d4:	f000 f8e1 	bl	800459a <HAL_SYSTICK_Config>
 80043d8:	1e03      	subs	r3, r0, #0
 80043da:	d001      	beq.n	80043e0 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 80043dc:	2301      	movs	r3, #1
 80043de:	e00f      	b.n	8004400 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80043e0:	687b      	ldr	r3, [r7, #4]
 80043e2:	2b03      	cmp	r3, #3
 80043e4:	d80b      	bhi.n	80043fe <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80043e6:	6879      	ldr	r1, [r7, #4]
 80043e8:	2301      	movs	r3, #1
 80043ea:	425b      	negs	r3, r3
 80043ec:	2200      	movs	r2, #0
 80043ee:	0018      	movs	r0, r3
 80043f0:	f000 f8be 	bl	8004570 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80043f4:	4b06      	ldr	r3, [pc, #24]	; (8004410 <HAL_InitTick+0x64>)
 80043f6:	687a      	ldr	r2, [r7, #4]
 80043f8:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 80043fa:	2300      	movs	r3, #0
 80043fc:	e000      	b.n	8004400 <HAL_InitTick+0x54>
    return HAL_ERROR;
 80043fe:	2301      	movs	r3, #1
}
 8004400:	0018      	movs	r0, r3
 8004402:	46bd      	mov	sp, r7
 8004404:	b003      	add	sp, #12
 8004406:	bd90      	pop	{r4, r7, pc}
 8004408:	20000000 	.word	0x20000000
 800440c:	20000008 	.word	0x20000008
 8004410:	20000004 	.word	0x20000004

08004414 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8004414:	b580      	push	{r7, lr}
 8004416:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8004418:	4b05      	ldr	r3, [pc, #20]	; (8004430 <HAL_IncTick+0x1c>)
 800441a:	781b      	ldrb	r3, [r3, #0]
 800441c:	001a      	movs	r2, r3
 800441e:	4b05      	ldr	r3, [pc, #20]	; (8004434 <HAL_IncTick+0x20>)
 8004420:	681b      	ldr	r3, [r3, #0]
 8004422:	18d2      	adds	r2, r2, r3
 8004424:	4b03      	ldr	r3, [pc, #12]	; (8004434 <HAL_IncTick+0x20>)
 8004426:	601a      	str	r2, [r3, #0]
}
 8004428:	46c0      	nop			; (mov r8, r8)
 800442a:	46bd      	mov	sp, r7
 800442c:	bd80      	pop	{r7, pc}
 800442e:	46c0      	nop			; (mov r8, r8)
 8004430:	20000008 	.word	0x20000008
 8004434:	20000284 	.word	0x20000284

08004438 <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8004438:	b580      	push	{r7, lr}
 800443a:	af00      	add	r7, sp, #0
  return uwTick;
 800443c:	4b02      	ldr	r3, [pc, #8]	; (8004448 <HAL_GetTick+0x10>)
 800443e:	681b      	ldr	r3, [r3, #0]
}
 8004440:	0018      	movs	r0, r3
 8004442:	46bd      	mov	sp, r7
 8004444:	bd80      	pop	{r7, pc}
 8004446:	46c0      	nop			; (mov r8, r8)
 8004448:	20000284 	.word	0x20000284

0800444c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800444c:	b590      	push	{r4, r7, lr}
 800444e:	b083      	sub	sp, #12
 8004450:	af00      	add	r7, sp, #0
 8004452:	0002      	movs	r2, r0
 8004454:	6039      	str	r1, [r7, #0]
 8004456:	1dfb      	adds	r3, r7, #7
 8004458:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800445a:	1dfb      	adds	r3, r7, #7
 800445c:	781b      	ldrb	r3, [r3, #0]
 800445e:	2b7f      	cmp	r3, #127	; 0x7f
 8004460:	d828      	bhi.n	80044b4 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004462:	4a2f      	ldr	r2, [pc, #188]	; (8004520 <__NVIC_SetPriority+0xd4>)
 8004464:	1dfb      	adds	r3, r7, #7
 8004466:	781b      	ldrb	r3, [r3, #0]
 8004468:	b25b      	sxtb	r3, r3
 800446a:	089b      	lsrs	r3, r3, #2
 800446c:	33c0      	adds	r3, #192	; 0xc0
 800446e:	009b      	lsls	r3, r3, #2
 8004470:	589b      	ldr	r3, [r3, r2]
 8004472:	1dfa      	adds	r2, r7, #7
 8004474:	7812      	ldrb	r2, [r2, #0]
 8004476:	0011      	movs	r1, r2
 8004478:	2203      	movs	r2, #3
 800447a:	400a      	ands	r2, r1
 800447c:	00d2      	lsls	r2, r2, #3
 800447e:	21ff      	movs	r1, #255	; 0xff
 8004480:	4091      	lsls	r1, r2
 8004482:	000a      	movs	r2, r1
 8004484:	43d2      	mvns	r2, r2
 8004486:	401a      	ands	r2, r3
 8004488:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800448a:	683b      	ldr	r3, [r7, #0]
 800448c:	019b      	lsls	r3, r3, #6
 800448e:	22ff      	movs	r2, #255	; 0xff
 8004490:	401a      	ands	r2, r3
 8004492:	1dfb      	adds	r3, r7, #7
 8004494:	781b      	ldrb	r3, [r3, #0]
 8004496:	0018      	movs	r0, r3
 8004498:	2303      	movs	r3, #3
 800449a:	4003      	ands	r3, r0
 800449c:	00db      	lsls	r3, r3, #3
 800449e:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80044a0:	481f      	ldr	r0, [pc, #124]	; (8004520 <__NVIC_SetPriority+0xd4>)
 80044a2:	1dfb      	adds	r3, r7, #7
 80044a4:	781b      	ldrb	r3, [r3, #0]
 80044a6:	b25b      	sxtb	r3, r3
 80044a8:	089b      	lsrs	r3, r3, #2
 80044aa:	430a      	orrs	r2, r1
 80044ac:	33c0      	adds	r3, #192	; 0xc0
 80044ae:	009b      	lsls	r3, r3, #2
 80044b0:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 80044b2:	e031      	b.n	8004518 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80044b4:	4a1b      	ldr	r2, [pc, #108]	; (8004524 <__NVIC_SetPriority+0xd8>)
 80044b6:	1dfb      	adds	r3, r7, #7
 80044b8:	781b      	ldrb	r3, [r3, #0]
 80044ba:	0019      	movs	r1, r3
 80044bc:	230f      	movs	r3, #15
 80044be:	400b      	ands	r3, r1
 80044c0:	3b08      	subs	r3, #8
 80044c2:	089b      	lsrs	r3, r3, #2
 80044c4:	3306      	adds	r3, #6
 80044c6:	009b      	lsls	r3, r3, #2
 80044c8:	18d3      	adds	r3, r2, r3
 80044ca:	3304      	adds	r3, #4
 80044cc:	681b      	ldr	r3, [r3, #0]
 80044ce:	1dfa      	adds	r2, r7, #7
 80044d0:	7812      	ldrb	r2, [r2, #0]
 80044d2:	0011      	movs	r1, r2
 80044d4:	2203      	movs	r2, #3
 80044d6:	400a      	ands	r2, r1
 80044d8:	00d2      	lsls	r2, r2, #3
 80044da:	21ff      	movs	r1, #255	; 0xff
 80044dc:	4091      	lsls	r1, r2
 80044de:	000a      	movs	r2, r1
 80044e0:	43d2      	mvns	r2, r2
 80044e2:	401a      	ands	r2, r3
 80044e4:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80044e6:	683b      	ldr	r3, [r7, #0]
 80044e8:	019b      	lsls	r3, r3, #6
 80044ea:	22ff      	movs	r2, #255	; 0xff
 80044ec:	401a      	ands	r2, r3
 80044ee:	1dfb      	adds	r3, r7, #7
 80044f0:	781b      	ldrb	r3, [r3, #0]
 80044f2:	0018      	movs	r0, r3
 80044f4:	2303      	movs	r3, #3
 80044f6:	4003      	ands	r3, r0
 80044f8:	00db      	lsls	r3, r3, #3
 80044fa:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80044fc:	4809      	ldr	r0, [pc, #36]	; (8004524 <__NVIC_SetPriority+0xd8>)
 80044fe:	1dfb      	adds	r3, r7, #7
 8004500:	781b      	ldrb	r3, [r3, #0]
 8004502:	001c      	movs	r4, r3
 8004504:	230f      	movs	r3, #15
 8004506:	4023      	ands	r3, r4
 8004508:	3b08      	subs	r3, #8
 800450a:	089b      	lsrs	r3, r3, #2
 800450c:	430a      	orrs	r2, r1
 800450e:	3306      	adds	r3, #6
 8004510:	009b      	lsls	r3, r3, #2
 8004512:	18c3      	adds	r3, r0, r3
 8004514:	3304      	adds	r3, #4
 8004516:	601a      	str	r2, [r3, #0]
}
 8004518:	46c0      	nop			; (mov r8, r8)
 800451a:	46bd      	mov	sp, r7
 800451c:	b003      	add	sp, #12
 800451e:	bd90      	pop	{r4, r7, pc}
 8004520:	e000e100 	.word	0xe000e100
 8004524:	e000ed00 	.word	0xe000ed00

08004528 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8004528:	b580      	push	{r7, lr}
 800452a:	b082      	sub	sp, #8
 800452c:	af00      	add	r7, sp, #0
 800452e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	1e5a      	subs	r2, r3, #1
 8004534:	2380      	movs	r3, #128	; 0x80
 8004536:	045b      	lsls	r3, r3, #17
 8004538:	429a      	cmp	r2, r3
 800453a:	d301      	bcc.n	8004540 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 800453c:	2301      	movs	r3, #1
 800453e:	e010      	b.n	8004562 <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8004540:	4b0a      	ldr	r3, [pc, #40]	; (800456c <SysTick_Config+0x44>)
 8004542:	687a      	ldr	r2, [r7, #4]
 8004544:	3a01      	subs	r2, #1
 8004546:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8004548:	2301      	movs	r3, #1
 800454a:	425b      	negs	r3, r3
 800454c:	2103      	movs	r1, #3
 800454e:	0018      	movs	r0, r3
 8004550:	f7ff ff7c 	bl	800444c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8004554:	4b05      	ldr	r3, [pc, #20]	; (800456c <SysTick_Config+0x44>)
 8004556:	2200      	movs	r2, #0
 8004558:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800455a:	4b04      	ldr	r3, [pc, #16]	; (800456c <SysTick_Config+0x44>)
 800455c:	2207      	movs	r2, #7
 800455e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8004560:	2300      	movs	r3, #0
}
 8004562:	0018      	movs	r0, r3
 8004564:	46bd      	mov	sp, r7
 8004566:	b002      	add	sp, #8
 8004568:	bd80      	pop	{r7, pc}
 800456a:	46c0      	nop			; (mov r8, r8)
 800456c:	e000e010 	.word	0xe000e010

08004570 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004570:	b580      	push	{r7, lr}
 8004572:	b084      	sub	sp, #16
 8004574:	af00      	add	r7, sp, #0
 8004576:	60b9      	str	r1, [r7, #8]
 8004578:	607a      	str	r2, [r7, #4]
 800457a:	210f      	movs	r1, #15
 800457c:	187b      	adds	r3, r7, r1
 800457e:	1c02      	adds	r2, r0, #0
 8004580:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8004582:	68ba      	ldr	r2, [r7, #8]
 8004584:	187b      	adds	r3, r7, r1
 8004586:	781b      	ldrb	r3, [r3, #0]
 8004588:	b25b      	sxtb	r3, r3
 800458a:	0011      	movs	r1, r2
 800458c:	0018      	movs	r0, r3
 800458e:	f7ff ff5d 	bl	800444c <__NVIC_SetPriority>
}
 8004592:	46c0      	nop			; (mov r8, r8)
 8004594:	46bd      	mov	sp, r7
 8004596:	b004      	add	sp, #16
 8004598:	bd80      	pop	{r7, pc}

0800459a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800459a:	b580      	push	{r7, lr}
 800459c:	b082      	sub	sp, #8
 800459e:	af00      	add	r7, sp, #0
 80045a0:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	0018      	movs	r0, r3
 80045a6:	f7ff ffbf 	bl	8004528 <SysTick_Config>
 80045aa:	0003      	movs	r3, r0
}
 80045ac:	0018      	movs	r0, r3
 80045ae:	46bd      	mov	sp, r7
 80045b0:	b002      	add	sp, #8
 80045b2:	bd80      	pop	{r7, pc}

080045b4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80045b4:	b580      	push	{r7, lr}
 80045b6:	b086      	sub	sp, #24
 80045b8:	af00      	add	r7, sp, #0
 80045ba:	6078      	str	r0, [r7, #4]
 80045bc:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 80045be:	2300      	movs	r3, #0
 80045c0:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80045c2:	e14f      	b.n	8004864 <HAL_GPIO_Init+0x2b0>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 80045c4:	683b      	ldr	r3, [r7, #0]
 80045c6:	681b      	ldr	r3, [r3, #0]
 80045c8:	2101      	movs	r1, #1
 80045ca:	697a      	ldr	r2, [r7, #20]
 80045cc:	4091      	lsls	r1, r2
 80045ce:	000a      	movs	r2, r1
 80045d0:	4013      	ands	r3, r2
 80045d2:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 80045d4:	68fb      	ldr	r3, [r7, #12]
 80045d6:	2b00      	cmp	r3, #0
 80045d8:	d100      	bne.n	80045dc <HAL_GPIO_Init+0x28>
 80045da:	e140      	b.n	800485e <HAL_GPIO_Init+0x2aa>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 80045dc:	683b      	ldr	r3, [r7, #0]
 80045de:	685b      	ldr	r3, [r3, #4]
 80045e0:	2203      	movs	r2, #3
 80045e2:	4013      	ands	r3, r2
 80045e4:	2b01      	cmp	r3, #1
 80045e6:	d005      	beq.n	80045f4 <HAL_GPIO_Init+0x40>
         ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80045e8:	683b      	ldr	r3, [r7, #0]
 80045ea:	685b      	ldr	r3, [r3, #4]
 80045ec:	2203      	movs	r2, #3
 80045ee:	4013      	ands	r3, r2
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 80045f0:	2b02      	cmp	r3, #2
 80045f2:	d130      	bne.n	8004656 <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	689b      	ldr	r3, [r3, #8]
 80045f8:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 80045fa:	697b      	ldr	r3, [r7, #20]
 80045fc:	005b      	lsls	r3, r3, #1
 80045fe:	2203      	movs	r2, #3
 8004600:	409a      	lsls	r2, r3
 8004602:	0013      	movs	r3, r2
 8004604:	43da      	mvns	r2, r3
 8004606:	693b      	ldr	r3, [r7, #16]
 8004608:	4013      	ands	r3, r2
 800460a:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 800460c:	683b      	ldr	r3, [r7, #0]
 800460e:	68da      	ldr	r2, [r3, #12]
 8004610:	697b      	ldr	r3, [r7, #20]
 8004612:	005b      	lsls	r3, r3, #1
 8004614:	409a      	lsls	r2, r3
 8004616:	0013      	movs	r3, r2
 8004618:	693a      	ldr	r2, [r7, #16]
 800461a:	4313      	orrs	r3, r2
 800461c:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	693a      	ldr	r2, [r7, #16]
 8004622:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8004624:	687b      	ldr	r3, [r7, #4]
 8004626:	685b      	ldr	r3, [r3, #4]
 8004628:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800462a:	2201      	movs	r2, #1
 800462c:	697b      	ldr	r3, [r7, #20]
 800462e:	409a      	lsls	r2, r3
 8004630:	0013      	movs	r3, r2
 8004632:	43da      	mvns	r2, r3
 8004634:	693b      	ldr	r3, [r7, #16]
 8004636:	4013      	ands	r3, r2
 8004638:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800463a:	683b      	ldr	r3, [r7, #0]
 800463c:	685b      	ldr	r3, [r3, #4]
 800463e:	091b      	lsrs	r3, r3, #4
 8004640:	2201      	movs	r2, #1
 8004642:	401a      	ands	r2, r3
 8004644:	697b      	ldr	r3, [r7, #20]
 8004646:	409a      	lsls	r2, r3
 8004648:	0013      	movs	r3, r2
 800464a:	693a      	ldr	r2, [r7, #16]
 800464c:	4313      	orrs	r3, r2
 800464e:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	693a      	ldr	r2, [r7, #16]
 8004654:	605a      	str	r2, [r3, #4]
      }
      
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004656:	683b      	ldr	r3, [r7, #0]
 8004658:	685b      	ldr	r3, [r3, #4]
 800465a:	2203      	movs	r2, #3
 800465c:	4013      	ands	r3, r2
 800465e:	2b03      	cmp	r3, #3
 8004660:	d017      	beq.n	8004692 <HAL_GPIO_Init+0xde>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	68db      	ldr	r3, [r3, #12]
 8004666:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8004668:	697b      	ldr	r3, [r7, #20]
 800466a:	005b      	lsls	r3, r3, #1
 800466c:	2203      	movs	r2, #3
 800466e:	409a      	lsls	r2, r3
 8004670:	0013      	movs	r3, r2
 8004672:	43da      	mvns	r2, r3
 8004674:	693b      	ldr	r3, [r7, #16]
 8004676:	4013      	ands	r3, r2
 8004678:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 800467a:	683b      	ldr	r3, [r7, #0]
 800467c:	689a      	ldr	r2, [r3, #8]
 800467e:	697b      	ldr	r3, [r7, #20]
 8004680:	005b      	lsls	r3, r3, #1
 8004682:	409a      	lsls	r2, r3
 8004684:	0013      	movs	r3, r2
 8004686:	693a      	ldr	r2, [r7, #16]
 8004688:	4313      	orrs	r3, r2
 800468a:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	693a      	ldr	r2, [r7, #16]
 8004690:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004692:	683b      	ldr	r3, [r7, #0]
 8004694:	685b      	ldr	r3, [r3, #4]
 8004696:	2203      	movs	r2, #3
 8004698:	4013      	ands	r3, r2
 800469a:	2b02      	cmp	r3, #2
 800469c:	d123      	bne.n	80046e6 <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 800469e:	697b      	ldr	r3, [r7, #20]
 80046a0:	08da      	lsrs	r2, r3, #3
 80046a2:	687b      	ldr	r3, [r7, #4]
 80046a4:	3208      	adds	r2, #8
 80046a6:	0092      	lsls	r2, r2, #2
 80046a8:	58d3      	ldr	r3, [r2, r3]
 80046aa:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 80046ac:	697b      	ldr	r3, [r7, #20]
 80046ae:	2207      	movs	r2, #7
 80046b0:	4013      	ands	r3, r2
 80046b2:	009b      	lsls	r3, r3, #2
 80046b4:	220f      	movs	r2, #15
 80046b6:	409a      	lsls	r2, r3
 80046b8:	0013      	movs	r3, r2
 80046ba:	43da      	mvns	r2, r3
 80046bc:	693b      	ldr	r3, [r7, #16]
 80046be:	4013      	ands	r3, r2
 80046c0:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 80046c2:	683b      	ldr	r3, [r7, #0]
 80046c4:	691a      	ldr	r2, [r3, #16]
 80046c6:	697b      	ldr	r3, [r7, #20]
 80046c8:	2107      	movs	r1, #7
 80046ca:	400b      	ands	r3, r1
 80046cc:	009b      	lsls	r3, r3, #2
 80046ce:	409a      	lsls	r2, r3
 80046d0:	0013      	movs	r3, r2
 80046d2:	693a      	ldr	r2, [r7, #16]
 80046d4:	4313      	orrs	r3, r2
 80046d6:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 80046d8:	697b      	ldr	r3, [r7, #20]
 80046da:	08da      	lsrs	r2, r3, #3
 80046dc:	687b      	ldr	r3, [r7, #4]
 80046de:	3208      	adds	r2, #8
 80046e0:	0092      	lsls	r2, r2, #2
 80046e2:	6939      	ldr	r1, [r7, #16]
 80046e4:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80046e6:	687b      	ldr	r3, [r7, #4]
 80046e8:	681b      	ldr	r3, [r3, #0]
 80046ea:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 80046ec:	697b      	ldr	r3, [r7, #20]
 80046ee:	005b      	lsls	r3, r3, #1
 80046f0:	2203      	movs	r2, #3
 80046f2:	409a      	lsls	r2, r3
 80046f4:	0013      	movs	r3, r2
 80046f6:	43da      	mvns	r2, r3
 80046f8:	693b      	ldr	r3, [r7, #16]
 80046fa:	4013      	ands	r3, r2
 80046fc:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 80046fe:	683b      	ldr	r3, [r7, #0]
 8004700:	685b      	ldr	r3, [r3, #4]
 8004702:	2203      	movs	r2, #3
 8004704:	401a      	ands	r2, r3
 8004706:	697b      	ldr	r3, [r7, #20]
 8004708:	005b      	lsls	r3, r3, #1
 800470a:	409a      	lsls	r2, r3
 800470c:	0013      	movs	r3, r2
 800470e:	693a      	ldr	r2, [r7, #16]
 8004710:	4313      	orrs	r3, r2
 8004712:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	693a      	ldr	r2, [r7, #16]
 8004718:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 800471a:	683b      	ldr	r3, [r7, #0]
 800471c:	685a      	ldr	r2, [r3, #4]
 800471e:	23c0      	movs	r3, #192	; 0xc0
 8004720:	029b      	lsls	r3, r3, #10
 8004722:	4013      	ands	r3, r2
 8004724:	d100      	bne.n	8004728 <HAL_GPIO_Init+0x174>
 8004726:	e09a      	b.n	800485e <HAL_GPIO_Init+0x2aa>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004728:	4b54      	ldr	r3, [pc, #336]	; (800487c <HAL_GPIO_Init+0x2c8>)
 800472a:	699a      	ldr	r2, [r3, #24]
 800472c:	4b53      	ldr	r3, [pc, #332]	; (800487c <HAL_GPIO_Init+0x2c8>)
 800472e:	2101      	movs	r1, #1
 8004730:	430a      	orrs	r2, r1
 8004732:	619a      	str	r2, [r3, #24]
 8004734:	4b51      	ldr	r3, [pc, #324]	; (800487c <HAL_GPIO_Init+0x2c8>)
 8004736:	699b      	ldr	r3, [r3, #24]
 8004738:	2201      	movs	r2, #1
 800473a:	4013      	ands	r3, r2
 800473c:	60bb      	str	r3, [r7, #8]
 800473e:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8004740:	4a4f      	ldr	r2, [pc, #316]	; (8004880 <HAL_GPIO_Init+0x2cc>)
 8004742:	697b      	ldr	r3, [r7, #20]
 8004744:	089b      	lsrs	r3, r3, #2
 8004746:	3302      	adds	r3, #2
 8004748:	009b      	lsls	r3, r3, #2
 800474a:	589b      	ldr	r3, [r3, r2]
 800474c:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 800474e:	697b      	ldr	r3, [r7, #20]
 8004750:	2203      	movs	r2, #3
 8004752:	4013      	ands	r3, r2
 8004754:	009b      	lsls	r3, r3, #2
 8004756:	220f      	movs	r2, #15
 8004758:	409a      	lsls	r2, r3
 800475a:	0013      	movs	r3, r2
 800475c:	43da      	mvns	r2, r3
 800475e:	693b      	ldr	r3, [r7, #16]
 8004760:	4013      	ands	r3, r2
 8004762:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8004764:	687a      	ldr	r2, [r7, #4]
 8004766:	2390      	movs	r3, #144	; 0x90
 8004768:	05db      	lsls	r3, r3, #23
 800476a:	429a      	cmp	r2, r3
 800476c:	d013      	beq.n	8004796 <HAL_GPIO_Init+0x1e2>
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	4a44      	ldr	r2, [pc, #272]	; (8004884 <HAL_GPIO_Init+0x2d0>)
 8004772:	4293      	cmp	r3, r2
 8004774:	d00d      	beq.n	8004792 <HAL_GPIO_Init+0x1de>
 8004776:	687b      	ldr	r3, [r7, #4]
 8004778:	4a43      	ldr	r2, [pc, #268]	; (8004888 <HAL_GPIO_Init+0x2d4>)
 800477a:	4293      	cmp	r3, r2
 800477c:	d007      	beq.n	800478e <HAL_GPIO_Init+0x1da>
 800477e:	687b      	ldr	r3, [r7, #4]
 8004780:	4a42      	ldr	r2, [pc, #264]	; (800488c <HAL_GPIO_Init+0x2d8>)
 8004782:	4293      	cmp	r3, r2
 8004784:	d101      	bne.n	800478a <HAL_GPIO_Init+0x1d6>
 8004786:	2303      	movs	r3, #3
 8004788:	e006      	b.n	8004798 <HAL_GPIO_Init+0x1e4>
 800478a:	2305      	movs	r3, #5
 800478c:	e004      	b.n	8004798 <HAL_GPIO_Init+0x1e4>
 800478e:	2302      	movs	r3, #2
 8004790:	e002      	b.n	8004798 <HAL_GPIO_Init+0x1e4>
 8004792:	2301      	movs	r3, #1
 8004794:	e000      	b.n	8004798 <HAL_GPIO_Init+0x1e4>
 8004796:	2300      	movs	r3, #0
 8004798:	697a      	ldr	r2, [r7, #20]
 800479a:	2103      	movs	r1, #3
 800479c:	400a      	ands	r2, r1
 800479e:	0092      	lsls	r2, r2, #2
 80047a0:	4093      	lsls	r3, r2
 80047a2:	693a      	ldr	r2, [r7, #16]
 80047a4:	4313      	orrs	r3, r2
 80047a6:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 80047a8:	4935      	ldr	r1, [pc, #212]	; (8004880 <HAL_GPIO_Init+0x2cc>)
 80047aa:	697b      	ldr	r3, [r7, #20]
 80047ac:	089b      	lsrs	r3, r3, #2
 80047ae:	3302      	adds	r3, #2
 80047b0:	009b      	lsls	r3, r3, #2
 80047b2:	693a      	ldr	r2, [r7, #16]
 80047b4:	505a      	str	r2, [r3, r1]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80047b6:	4b36      	ldr	r3, [pc, #216]	; (8004890 <HAL_GPIO_Init+0x2dc>)
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80047bc:	68fb      	ldr	r3, [r7, #12]
 80047be:	43da      	mvns	r2, r3
 80047c0:	693b      	ldr	r3, [r7, #16]
 80047c2:	4013      	ands	r3, r2
 80047c4:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 80047c6:	683b      	ldr	r3, [r7, #0]
 80047c8:	685a      	ldr	r2, [r3, #4]
 80047ca:	2380      	movs	r3, #128	; 0x80
 80047cc:	025b      	lsls	r3, r3, #9
 80047ce:	4013      	ands	r3, r2
 80047d0:	d003      	beq.n	80047da <HAL_GPIO_Init+0x226>
        {
          temp |= iocurrent;
 80047d2:	693a      	ldr	r2, [r7, #16]
 80047d4:	68fb      	ldr	r3, [r7, #12]
 80047d6:	4313      	orrs	r3, r2
 80047d8:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 80047da:	4b2d      	ldr	r3, [pc, #180]	; (8004890 <HAL_GPIO_Init+0x2dc>)
 80047dc:	693a      	ldr	r2, [r7, #16]
 80047de:	601a      	str	r2, [r3, #0]

        temp = EXTI->EMR;
 80047e0:	4b2b      	ldr	r3, [pc, #172]	; (8004890 <HAL_GPIO_Init+0x2dc>)
 80047e2:	685b      	ldr	r3, [r3, #4]
 80047e4:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80047e6:	68fb      	ldr	r3, [r7, #12]
 80047e8:	43da      	mvns	r2, r3
 80047ea:	693b      	ldr	r3, [r7, #16]
 80047ec:	4013      	ands	r3, r2
 80047ee:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80047f0:	683b      	ldr	r3, [r7, #0]
 80047f2:	685a      	ldr	r2, [r3, #4]
 80047f4:	2380      	movs	r3, #128	; 0x80
 80047f6:	029b      	lsls	r3, r3, #10
 80047f8:	4013      	ands	r3, r2
 80047fa:	d003      	beq.n	8004804 <HAL_GPIO_Init+0x250>
        {
          temp |= iocurrent;
 80047fc:	693a      	ldr	r2, [r7, #16]
 80047fe:	68fb      	ldr	r3, [r7, #12]
 8004800:	4313      	orrs	r3, r2
 8004802:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8004804:	4b22      	ldr	r3, [pc, #136]	; (8004890 <HAL_GPIO_Init+0x2dc>)
 8004806:	693a      	ldr	r2, [r7, #16]
 8004808:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800480a:	4b21      	ldr	r3, [pc, #132]	; (8004890 <HAL_GPIO_Init+0x2dc>)
 800480c:	689b      	ldr	r3, [r3, #8]
 800480e:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8004810:	68fb      	ldr	r3, [r7, #12]
 8004812:	43da      	mvns	r2, r3
 8004814:	693b      	ldr	r3, [r7, #16]
 8004816:	4013      	ands	r3, r2
 8004818:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 800481a:	683b      	ldr	r3, [r7, #0]
 800481c:	685a      	ldr	r2, [r3, #4]
 800481e:	2380      	movs	r3, #128	; 0x80
 8004820:	035b      	lsls	r3, r3, #13
 8004822:	4013      	ands	r3, r2
 8004824:	d003      	beq.n	800482e <HAL_GPIO_Init+0x27a>
        {
          temp |= iocurrent;
 8004826:	693a      	ldr	r2, [r7, #16]
 8004828:	68fb      	ldr	r3, [r7, #12]
 800482a:	4313      	orrs	r3, r2
 800482c:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 800482e:	4b18      	ldr	r3, [pc, #96]	; (8004890 <HAL_GPIO_Init+0x2dc>)
 8004830:	693a      	ldr	r2, [r7, #16]
 8004832:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 8004834:	4b16      	ldr	r3, [pc, #88]	; (8004890 <HAL_GPIO_Init+0x2dc>)
 8004836:	68db      	ldr	r3, [r3, #12]
 8004838:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 800483a:	68fb      	ldr	r3, [r7, #12]
 800483c:	43da      	mvns	r2, r3
 800483e:	693b      	ldr	r3, [r7, #16]
 8004840:	4013      	ands	r3, r2
 8004842:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8004844:	683b      	ldr	r3, [r7, #0]
 8004846:	685a      	ldr	r2, [r3, #4]
 8004848:	2380      	movs	r3, #128	; 0x80
 800484a:	039b      	lsls	r3, r3, #14
 800484c:	4013      	ands	r3, r2
 800484e:	d003      	beq.n	8004858 <HAL_GPIO_Init+0x2a4>
        {
          temp |= iocurrent;
 8004850:	693a      	ldr	r2, [r7, #16]
 8004852:	68fb      	ldr	r3, [r7, #12]
 8004854:	4313      	orrs	r3, r2
 8004856:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 8004858:	4b0d      	ldr	r3, [pc, #52]	; (8004890 <HAL_GPIO_Init+0x2dc>)
 800485a:	693a      	ldr	r2, [r7, #16]
 800485c:	60da      	str	r2, [r3, #12]
      }
    }

    position++;
 800485e:	697b      	ldr	r3, [r7, #20]
 8004860:	3301      	adds	r3, #1
 8004862:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8004864:	683b      	ldr	r3, [r7, #0]
 8004866:	681a      	ldr	r2, [r3, #0]
 8004868:	697b      	ldr	r3, [r7, #20]
 800486a:	40da      	lsrs	r2, r3
 800486c:	1e13      	subs	r3, r2, #0
 800486e:	d000      	beq.n	8004872 <HAL_GPIO_Init+0x2be>
 8004870:	e6a8      	b.n	80045c4 <HAL_GPIO_Init+0x10>
  } 
}
 8004872:	46c0      	nop			; (mov r8, r8)
 8004874:	46c0      	nop			; (mov r8, r8)
 8004876:	46bd      	mov	sp, r7
 8004878:	b006      	add	sp, #24
 800487a:	bd80      	pop	{r7, pc}
 800487c:	40021000 	.word	0x40021000
 8004880:	40010000 	.word	0x40010000
 8004884:	48000400 	.word	0x48000400
 8004888:	48000800 	.word	0x48000800
 800488c:	48000c00 	.word	0x48000c00
 8004890:	40010400 	.word	0x40010400

08004894 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8004894:	b580      	push	{r7, lr}
 8004896:	b082      	sub	sp, #8
 8004898:	af00      	add	r7, sp, #0
 800489a:	6078      	str	r0, [r7, #4]
 800489c:	0008      	movs	r0, r1
 800489e:	0011      	movs	r1, r2
 80048a0:	1cbb      	adds	r3, r7, #2
 80048a2:	1c02      	adds	r2, r0, #0
 80048a4:	801a      	strh	r2, [r3, #0]
 80048a6:	1c7b      	adds	r3, r7, #1
 80048a8:	1c0a      	adds	r2, r1, #0
 80048aa:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 80048ac:	1c7b      	adds	r3, r7, #1
 80048ae:	781b      	ldrb	r3, [r3, #0]
 80048b0:	2b00      	cmp	r3, #0
 80048b2:	d004      	beq.n	80048be <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 80048b4:	1cbb      	adds	r3, r7, #2
 80048b6:	881a      	ldrh	r2, [r3, #0]
 80048b8:	687b      	ldr	r3, [r7, #4]
 80048ba:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 80048bc:	e003      	b.n	80048c6 <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 80048be:	1cbb      	adds	r3, r7, #2
 80048c0:	881a      	ldrh	r2, [r3, #0]
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	629a      	str	r2, [r3, #40]	; 0x28
}
 80048c6:	46c0      	nop			; (mov r8, r8)
 80048c8:	46bd      	mov	sp, r7
 80048ca:	b002      	add	sp, #8
 80048cc:	bd80      	pop	{r7, pc}
	...

080048d0 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80048d0:	b580      	push	{r7, lr}
 80048d2:	b088      	sub	sp, #32
 80048d4:	af00      	add	r7, sp, #0
 80048d6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	2b00      	cmp	r3, #0
 80048dc:	d101      	bne.n	80048e2 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 80048de:	2301      	movs	r3, #1
 80048e0:	e301      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80048e2:	687b      	ldr	r3, [r7, #4]
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	2201      	movs	r2, #1
 80048e8:	4013      	ands	r3, r2
 80048ea:	d100      	bne.n	80048ee <HAL_RCC_OscConfig+0x1e>
 80048ec:	e08d      	b.n	8004a0a <HAL_RCC_OscConfig+0x13a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 80048ee:	4bc3      	ldr	r3, [pc, #780]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 80048f0:	685b      	ldr	r3, [r3, #4]
 80048f2:	220c      	movs	r2, #12
 80048f4:	4013      	ands	r3, r2
 80048f6:	2b04      	cmp	r3, #4
 80048f8:	d00e      	beq.n	8004918 <HAL_RCC_OscConfig+0x48>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 80048fa:	4bc0      	ldr	r3, [pc, #768]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 80048fc:	685b      	ldr	r3, [r3, #4]
 80048fe:	220c      	movs	r2, #12
 8004900:	4013      	ands	r3, r2
 8004902:	2b08      	cmp	r3, #8
 8004904:	d116      	bne.n	8004934 <HAL_RCC_OscConfig+0x64>
 8004906:	4bbd      	ldr	r3, [pc, #756]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004908:	685a      	ldr	r2, [r3, #4]
 800490a:	2380      	movs	r3, #128	; 0x80
 800490c:	025b      	lsls	r3, r3, #9
 800490e:	401a      	ands	r2, r3
 8004910:	2380      	movs	r3, #128	; 0x80
 8004912:	025b      	lsls	r3, r3, #9
 8004914:	429a      	cmp	r2, r3
 8004916:	d10d      	bne.n	8004934 <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004918:	4bb8      	ldr	r3, [pc, #736]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 800491a:	681a      	ldr	r2, [r3, #0]
 800491c:	2380      	movs	r3, #128	; 0x80
 800491e:	029b      	lsls	r3, r3, #10
 8004920:	4013      	ands	r3, r2
 8004922:	d100      	bne.n	8004926 <HAL_RCC_OscConfig+0x56>
 8004924:	e070      	b.n	8004a08 <HAL_RCC_OscConfig+0x138>
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	685b      	ldr	r3, [r3, #4]
 800492a:	2b00      	cmp	r3, #0
 800492c:	d000      	beq.n	8004930 <HAL_RCC_OscConfig+0x60>
 800492e:	e06b      	b.n	8004a08 <HAL_RCC_OscConfig+0x138>
      {
        return HAL_ERROR;
 8004930:	2301      	movs	r3, #1
 8004932:	e2d8      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004934:	687b      	ldr	r3, [r7, #4]
 8004936:	685b      	ldr	r3, [r3, #4]
 8004938:	2b01      	cmp	r3, #1
 800493a:	d107      	bne.n	800494c <HAL_RCC_OscConfig+0x7c>
 800493c:	4baf      	ldr	r3, [pc, #700]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 800493e:	681a      	ldr	r2, [r3, #0]
 8004940:	4bae      	ldr	r3, [pc, #696]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004942:	2180      	movs	r1, #128	; 0x80
 8004944:	0249      	lsls	r1, r1, #9
 8004946:	430a      	orrs	r2, r1
 8004948:	601a      	str	r2, [r3, #0]
 800494a:	e02f      	b.n	80049ac <HAL_RCC_OscConfig+0xdc>
 800494c:	687b      	ldr	r3, [r7, #4]
 800494e:	685b      	ldr	r3, [r3, #4]
 8004950:	2b00      	cmp	r3, #0
 8004952:	d10c      	bne.n	800496e <HAL_RCC_OscConfig+0x9e>
 8004954:	4ba9      	ldr	r3, [pc, #676]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004956:	681a      	ldr	r2, [r3, #0]
 8004958:	4ba8      	ldr	r3, [pc, #672]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 800495a:	49a9      	ldr	r1, [pc, #676]	; (8004c00 <HAL_RCC_OscConfig+0x330>)
 800495c:	400a      	ands	r2, r1
 800495e:	601a      	str	r2, [r3, #0]
 8004960:	4ba6      	ldr	r3, [pc, #664]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004962:	681a      	ldr	r2, [r3, #0]
 8004964:	4ba5      	ldr	r3, [pc, #660]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004966:	49a7      	ldr	r1, [pc, #668]	; (8004c04 <HAL_RCC_OscConfig+0x334>)
 8004968:	400a      	ands	r2, r1
 800496a:	601a      	str	r2, [r3, #0]
 800496c:	e01e      	b.n	80049ac <HAL_RCC_OscConfig+0xdc>
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	685b      	ldr	r3, [r3, #4]
 8004972:	2b05      	cmp	r3, #5
 8004974:	d10e      	bne.n	8004994 <HAL_RCC_OscConfig+0xc4>
 8004976:	4ba1      	ldr	r3, [pc, #644]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004978:	681a      	ldr	r2, [r3, #0]
 800497a:	4ba0      	ldr	r3, [pc, #640]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 800497c:	2180      	movs	r1, #128	; 0x80
 800497e:	02c9      	lsls	r1, r1, #11
 8004980:	430a      	orrs	r2, r1
 8004982:	601a      	str	r2, [r3, #0]
 8004984:	4b9d      	ldr	r3, [pc, #628]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004986:	681a      	ldr	r2, [r3, #0]
 8004988:	4b9c      	ldr	r3, [pc, #624]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 800498a:	2180      	movs	r1, #128	; 0x80
 800498c:	0249      	lsls	r1, r1, #9
 800498e:	430a      	orrs	r2, r1
 8004990:	601a      	str	r2, [r3, #0]
 8004992:	e00b      	b.n	80049ac <HAL_RCC_OscConfig+0xdc>
 8004994:	4b99      	ldr	r3, [pc, #612]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004996:	681a      	ldr	r2, [r3, #0]
 8004998:	4b98      	ldr	r3, [pc, #608]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 800499a:	4999      	ldr	r1, [pc, #612]	; (8004c00 <HAL_RCC_OscConfig+0x330>)
 800499c:	400a      	ands	r2, r1
 800499e:	601a      	str	r2, [r3, #0]
 80049a0:	4b96      	ldr	r3, [pc, #600]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 80049a2:	681a      	ldr	r2, [r3, #0]
 80049a4:	4b95      	ldr	r3, [pc, #596]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 80049a6:	4997      	ldr	r1, [pc, #604]	; (8004c04 <HAL_RCC_OscConfig+0x334>)
 80049a8:	400a      	ands	r2, r1
 80049aa:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80049ac:	687b      	ldr	r3, [r7, #4]
 80049ae:	685b      	ldr	r3, [r3, #4]
 80049b0:	2b00      	cmp	r3, #0
 80049b2:	d014      	beq.n	80049de <HAL_RCC_OscConfig+0x10e>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80049b4:	f7ff fd40 	bl	8004438 <HAL_GetTick>
 80049b8:	0003      	movs	r3, r0
 80049ba:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80049bc:	e008      	b.n	80049d0 <HAL_RCC_OscConfig+0x100>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80049be:	f7ff fd3b 	bl	8004438 <HAL_GetTick>
 80049c2:	0002      	movs	r2, r0
 80049c4:	69bb      	ldr	r3, [r7, #24]
 80049c6:	1ad3      	subs	r3, r2, r3
 80049c8:	2b64      	cmp	r3, #100	; 0x64
 80049ca:	d901      	bls.n	80049d0 <HAL_RCC_OscConfig+0x100>
          {
            return HAL_TIMEOUT;
 80049cc:	2303      	movs	r3, #3
 80049ce:	e28a      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80049d0:	4b8a      	ldr	r3, [pc, #552]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 80049d2:	681a      	ldr	r2, [r3, #0]
 80049d4:	2380      	movs	r3, #128	; 0x80
 80049d6:	029b      	lsls	r3, r3, #10
 80049d8:	4013      	ands	r3, r2
 80049da:	d0f0      	beq.n	80049be <HAL_RCC_OscConfig+0xee>
 80049dc:	e015      	b.n	8004a0a <HAL_RCC_OscConfig+0x13a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80049de:	f7ff fd2b 	bl	8004438 <HAL_GetTick>
 80049e2:	0003      	movs	r3, r0
 80049e4:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80049e6:	e008      	b.n	80049fa <HAL_RCC_OscConfig+0x12a>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80049e8:	f7ff fd26 	bl	8004438 <HAL_GetTick>
 80049ec:	0002      	movs	r2, r0
 80049ee:	69bb      	ldr	r3, [r7, #24]
 80049f0:	1ad3      	subs	r3, r2, r3
 80049f2:	2b64      	cmp	r3, #100	; 0x64
 80049f4:	d901      	bls.n	80049fa <HAL_RCC_OscConfig+0x12a>
          {
            return HAL_TIMEOUT;
 80049f6:	2303      	movs	r3, #3
 80049f8:	e275      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80049fa:	4b80      	ldr	r3, [pc, #512]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 80049fc:	681a      	ldr	r2, [r3, #0]
 80049fe:	2380      	movs	r3, #128	; 0x80
 8004a00:	029b      	lsls	r3, r3, #10
 8004a02:	4013      	ands	r3, r2
 8004a04:	d1f0      	bne.n	80049e8 <HAL_RCC_OscConfig+0x118>
 8004a06:	e000      	b.n	8004a0a <HAL_RCC_OscConfig+0x13a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004a08:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004a0a:	687b      	ldr	r3, [r7, #4]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	2202      	movs	r2, #2
 8004a10:	4013      	ands	r3, r2
 8004a12:	d100      	bne.n	8004a16 <HAL_RCC_OscConfig+0x146>
 8004a14:	e069      	b.n	8004aea <HAL_RCC_OscConfig+0x21a>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 8004a16:	4b79      	ldr	r3, [pc, #484]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004a18:	685b      	ldr	r3, [r3, #4]
 8004a1a:	220c      	movs	r2, #12
 8004a1c:	4013      	ands	r3, r2
 8004a1e:	d00b      	beq.n	8004a38 <HAL_RCC_OscConfig+0x168>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8004a20:	4b76      	ldr	r3, [pc, #472]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004a22:	685b      	ldr	r3, [r3, #4]
 8004a24:	220c      	movs	r2, #12
 8004a26:	4013      	ands	r3, r2
 8004a28:	2b08      	cmp	r3, #8
 8004a2a:	d11c      	bne.n	8004a66 <HAL_RCC_OscConfig+0x196>
 8004a2c:	4b73      	ldr	r3, [pc, #460]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004a2e:	685a      	ldr	r2, [r3, #4]
 8004a30:	2380      	movs	r3, #128	; 0x80
 8004a32:	025b      	lsls	r3, r3, #9
 8004a34:	4013      	ands	r3, r2
 8004a36:	d116      	bne.n	8004a66 <HAL_RCC_OscConfig+0x196>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004a38:	4b70      	ldr	r3, [pc, #448]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004a3a:	681b      	ldr	r3, [r3, #0]
 8004a3c:	2202      	movs	r2, #2
 8004a3e:	4013      	ands	r3, r2
 8004a40:	d005      	beq.n	8004a4e <HAL_RCC_OscConfig+0x17e>
 8004a42:	687b      	ldr	r3, [r7, #4]
 8004a44:	68db      	ldr	r3, [r3, #12]
 8004a46:	2b01      	cmp	r3, #1
 8004a48:	d001      	beq.n	8004a4e <HAL_RCC_OscConfig+0x17e>
      {
        return HAL_ERROR;
 8004a4a:	2301      	movs	r3, #1
 8004a4c:	e24b      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004a4e:	4b6b      	ldr	r3, [pc, #428]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004a50:	681b      	ldr	r3, [r3, #0]
 8004a52:	22f8      	movs	r2, #248	; 0xf8
 8004a54:	4393      	bics	r3, r2
 8004a56:	0019      	movs	r1, r3
 8004a58:	687b      	ldr	r3, [r7, #4]
 8004a5a:	691b      	ldr	r3, [r3, #16]
 8004a5c:	00da      	lsls	r2, r3, #3
 8004a5e:	4b67      	ldr	r3, [pc, #412]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004a60:	430a      	orrs	r2, r1
 8004a62:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004a64:	e041      	b.n	8004aea <HAL_RCC_OscConfig+0x21a>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8004a66:	687b      	ldr	r3, [r7, #4]
 8004a68:	68db      	ldr	r3, [r3, #12]
 8004a6a:	2b00      	cmp	r3, #0
 8004a6c:	d024      	beq.n	8004ab8 <HAL_RCC_OscConfig+0x1e8>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8004a6e:	4b63      	ldr	r3, [pc, #396]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004a70:	681a      	ldr	r2, [r3, #0]
 8004a72:	4b62      	ldr	r3, [pc, #392]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004a74:	2101      	movs	r1, #1
 8004a76:	430a      	orrs	r2, r1
 8004a78:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004a7a:	f7ff fcdd 	bl	8004438 <HAL_GetTick>
 8004a7e:	0003      	movs	r3, r0
 8004a80:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004a82:	e008      	b.n	8004a96 <HAL_RCC_OscConfig+0x1c6>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004a84:	f7ff fcd8 	bl	8004438 <HAL_GetTick>
 8004a88:	0002      	movs	r2, r0
 8004a8a:	69bb      	ldr	r3, [r7, #24]
 8004a8c:	1ad3      	subs	r3, r2, r3
 8004a8e:	2b02      	cmp	r3, #2
 8004a90:	d901      	bls.n	8004a96 <HAL_RCC_OscConfig+0x1c6>
          {
            return HAL_TIMEOUT;
 8004a92:	2303      	movs	r3, #3
 8004a94:	e227      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004a96:	4b59      	ldr	r3, [pc, #356]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004a98:	681b      	ldr	r3, [r3, #0]
 8004a9a:	2202      	movs	r2, #2
 8004a9c:	4013      	ands	r3, r2
 8004a9e:	d0f1      	beq.n	8004a84 <HAL_RCC_OscConfig+0x1b4>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004aa0:	4b56      	ldr	r3, [pc, #344]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004aa2:	681b      	ldr	r3, [r3, #0]
 8004aa4:	22f8      	movs	r2, #248	; 0xf8
 8004aa6:	4393      	bics	r3, r2
 8004aa8:	0019      	movs	r1, r3
 8004aaa:	687b      	ldr	r3, [r7, #4]
 8004aac:	691b      	ldr	r3, [r3, #16]
 8004aae:	00da      	lsls	r2, r3, #3
 8004ab0:	4b52      	ldr	r3, [pc, #328]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004ab2:	430a      	orrs	r2, r1
 8004ab4:	601a      	str	r2, [r3, #0]
 8004ab6:	e018      	b.n	8004aea <HAL_RCC_OscConfig+0x21a>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8004ab8:	4b50      	ldr	r3, [pc, #320]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004aba:	681a      	ldr	r2, [r3, #0]
 8004abc:	4b4f      	ldr	r3, [pc, #316]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004abe:	2101      	movs	r1, #1
 8004ac0:	438a      	bics	r2, r1
 8004ac2:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004ac4:	f7ff fcb8 	bl	8004438 <HAL_GetTick>
 8004ac8:	0003      	movs	r3, r0
 8004aca:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004acc:	e008      	b.n	8004ae0 <HAL_RCC_OscConfig+0x210>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004ace:	f7ff fcb3 	bl	8004438 <HAL_GetTick>
 8004ad2:	0002      	movs	r2, r0
 8004ad4:	69bb      	ldr	r3, [r7, #24]
 8004ad6:	1ad3      	subs	r3, r2, r3
 8004ad8:	2b02      	cmp	r3, #2
 8004ada:	d901      	bls.n	8004ae0 <HAL_RCC_OscConfig+0x210>
          {
            return HAL_TIMEOUT;
 8004adc:	2303      	movs	r3, #3
 8004ade:	e202      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004ae0:	4b46      	ldr	r3, [pc, #280]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004ae2:	681b      	ldr	r3, [r3, #0]
 8004ae4:	2202      	movs	r2, #2
 8004ae6:	4013      	ands	r3, r2
 8004ae8:	d1f1      	bne.n	8004ace <HAL_RCC_OscConfig+0x1fe>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004aea:	687b      	ldr	r3, [r7, #4]
 8004aec:	681b      	ldr	r3, [r3, #0]
 8004aee:	2208      	movs	r2, #8
 8004af0:	4013      	ands	r3, r2
 8004af2:	d036      	beq.n	8004b62 <HAL_RCC_OscConfig+0x292>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8004af4:	687b      	ldr	r3, [r7, #4]
 8004af6:	69db      	ldr	r3, [r3, #28]
 8004af8:	2b00      	cmp	r3, #0
 8004afa:	d019      	beq.n	8004b30 <HAL_RCC_OscConfig+0x260>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8004afc:	4b3f      	ldr	r3, [pc, #252]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004afe:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004b00:	4b3e      	ldr	r3, [pc, #248]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004b02:	2101      	movs	r1, #1
 8004b04:	430a      	orrs	r2, r1
 8004b06:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004b08:	f7ff fc96 	bl	8004438 <HAL_GetTick>
 8004b0c:	0003      	movs	r3, r0
 8004b0e:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004b10:	e008      	b.n	8004b24 <HAL_RCC_OscConfig+0x254>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004b12:	f7ff fc91 	bl	8004438 <HAL_GetTick>
 8004b16:	0002      	movs	r2, r0
 8004b18:	69bb      	ldr	r3, [r7, #24]
 8004b1a:	1ad3      	subs	r3, r2, r3
 8004b1c:	2b02      	cmp	r3, #2
 8004b1e:	d901      	bls.n	8004b24 <HAL_RCC_OscConfig+0x254>
        {
          return HAL_TIMEOUT;
 8004b20:	2303      	movs	r3, #3
 8004b22:	e1e0      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004b24:	4b35      	ldr	r3, [pc, #212]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004b26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b28:	2202      	movs	r2, #2
 8004b2a:	4013      	ands	r3, r2
 8004b2c:	d0f1      	beq.n	8004b12 <HAL_RCC_OscConfig+0x242>
 8004b2e:	e018      	b.n	8004b62 <HAL_RCC_OscConfig+0x292>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8004b30:	4b32      	ldr	r3, [pc, #200]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004b32:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004b34:	4b31      	ldr	r3, [pc, #196]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004b36:	2101      	movs	r1, #1
 8004b38:	438a      	bics	r2, r1
 8004b3a:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004b3c:	f7ff fc7c 	bl	8004438 <HAL_GetTick>
 8004b40:	0003      	movs	r3, r0
 8004b42:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004b44:	e008      	b.n	8004b58 <HAL_RCC_OscConfig+0x288>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004b46:	f7ff fc77 	bl	8004438 <HAL_GetTick>
 8004b4a:	0002      	movs	r2, r0
 8004b4c:	69bb      	ldr	r3, [r7, #24]
 8004b4e:	1ad3      	subs	r3, r2, r3
 8004b50:	2b02      	cmp	r3, #2
 8004b52:	d901      	bls.n	8004b58 <HAL_RCC_OscConfig+0x288>
        {
          return HAL_TIMEOUT;
 8004b54:	2303      	movs	r3, #3
 8004b56:	e1c6      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004b58:	4b28      	ldr	r3, [pc, #160]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004b5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b5c:	2202      	movs	r2, #2
 8004b5e:	4013      	ands	r3, r2
 8004b60:	d1f1      	bne.n	8004b46 <HAL_RCC_OscConfig+0x276>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004b62:	687b      	ldr	r3, [r7, #4]
 8004b64:	681b      	ldr	r3, [r3, #0]
 8004b66:	2204      	movs	r2, #4
 8004b68:	4013      	ands	r3, r2
 8004b6a:	d100      	bne.n	8004b6e <HAL_RCC_OscConfig+0x29e>
 8004b6c:	e0b4      	b.n	8004cd8 <HAL_RCC_OscConfig+0x408>
  {
    FlagStatus       pwrclkchanged = RESET;
 8004b6e:	201f      	movs	r0, #31
 8004b70:	183b      	adds	r3, r7, r0
 8004b72:	2200      	movs	r2, #0
 8004b74:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004b76:	4b21      	ldr	r3, [pc, #132]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004b78:	69da      	ldr	r2, [r3, #28]
 8004b7a:	2380      	movs	r3, #128	; 0x80
 8004b7c:	055b      	lsls	r3, r3, #21
 8004b7e:	4013      	ands	r3, r2
 8004b80:	d110      	bne.n	8004ba4 <HAL_RCC_OscConfig+0x2d4>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8004b82:	4b1e      	ldr	r3, [pc, #120]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004b84:	69da      	ldr	r2, [r3, #28]
 8004b86:	4b1d      	ldr	r3, [pc, #116]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004b88:	2180      	movs	r1, #128	; 0x80
 8004b8a:	0549      	lsls	r1, r1, #21
 8004b8c:	430a      	orrs	r2, r1
 8004b8e:	61da      	str	r2, [r3, #28]
 8004b90:	4b1a      	ldr	r3, [pc, #104]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004b92:	69da      	ldr	r2, [r3, #28]
 8004b94:	2380      	movs	r3, #128	; 0x80
 8004b96:	055b      	lsls	r3, r3, #21
 8004b98:	4013      	ands	r3, r2
 8004b9a:	60fb      	str	r3, [r7, #12]
 8004b9c:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 8004b9e:	183b      	adds	r3, r7, r0
 8004ba0:	2201      	movs	r2, #1
 8004ba2:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004ba4:	4b18      	ldr	r3, [pc, #96]	; (8004c08 <HAL_RCC_OscConfig+0x338>)
 8004ba6:	681a      	ldr	r2, [r3, #0]
 8004ba8:	2380      	movs	r3, #128	; 0x80
 8004baa:	005b      	lsls	r3, r3, #1
 8004bac:	4013      	ands	r3, r2
 8004bae:	d11a      	bne.n	8004be6 <HAL_RCC_OscConfig+0x316>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004bb0:	4b15      	ldr	r3, [pc, #84]	; (8004c08 <HAL_RCC_OscConfig+0x338>)
 8004bb2:	681a      	ldr	r2, [r3, #0]
 8004bb4:	4b14      	ldr	r3, [pc, #80]	; (8004c08 <HAL_RCC_OscConfig+0x338>)
 8004bb6:	2180      	movs	r1, #128	; 0x80
 8004bb8:	0049      	lsls	r1, r1, #1
 8004bba:	430a      	orrs	r2, r1
 8004bbc:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004bbe:	f7ff fc3b 	bl	8004438 <HAL_GetTick>
 8004bc2:	0003      	movs	r3, r0
 8004bc4:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004bc6:	e008      	b.n	8004bda <HAL_RCC_OscConfig+0x30a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004bc8:	f7ff fc36 	bl	8004438 <HAL_GetTick>
 8004bcc:	0002      	movs	r2, r0
 8004bce:	69bb      	ldr	r3, [r7, #24]
 8004bd0:	1ad3      	subs	r3, r2, r3
 8004bd2:	2b64      	cmp	r3, #100	; 0x64
 8004bd4:	d901      	bls.n	8004bda <HAL_RCC_OscConfig+0x30a>
        {
          return HAL_TIMEOUT;
 8004bd6:	2303      	movs	r3, #3
 8004bd8:	e185      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004bda:	4b0b      	ldr	r3, [pc, #44]	; (8004c08 <HAL_RCC_OscConfig+0x338>)
 8004bdc:	681a      	ldr	r2, [r3, #0]
 8004bde:	2380      	movs	r3, #128	; 0x80
 8004be0:	005b      	lsls	r3, r3, #1
 8004be2:	4013      	ands	r3, r2
 8004be4:	d0f0      	beq.n	8004bc8 <HAL_RCC_OscConfig+0x2f8>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004be6:	687b      	ldr	r3, [r7, #4]
 8004be8:	689b      	ldr	r3, [r3, #8]
 8004bea:	2b01      	cmp	r3, #1
 8004bec:	d10e      	bne.n	8004c0c <HAL_RCC_OscConfig+0x33c>
 8004bee:	4b03      	ldr	r3, [pc, #12]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004bf0:	6a1a      	ldr	r2, [r3, #32]
 8004bf2:	4b02      	ldr	r3, [pc, #8]	; (8004bfc <HAL_RCC_OscConfig+0x32c>)
 8004bf4:	2101      	movs	r1, #1
 8004bf6:	430a      	orrs	r2, r1
 8004bf8:	621a      	str	r2, [r3, #32]
 8004bfa:	e035      	b.n	8004c68 <HAL_RCC_OscConfig+0x398>
 8004bfc:	40021000 	.word	0x40021000
 8004c00:	fffeffff 	.word	0xfffeffff
 8004c04:	fffbffff 	.word	0xfffbffff
 8004c08:	40007000 	.word	0x40007000
 8004c0c:	687b      	ldr	r3, [r7, #4]
 8004c0e:	689b      	ldr	r3, [r3, #8]
 8004c10:	2b00      	cmp	r3, #0
 8004c12:	d10c      	bne.n	8004c2e <HAL_RCC_OscConfig+0x35e>
 8004c14:	4bb6      	ldr	r3, [pc, #728]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004c16:	6a1a      	ldr	r2, [r3, #32]
 8004c18:	4bb5      	ldr	r3, [pc, #724]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004c1a:	2101      	movs	r1, #1
 8004c1c:	438a      	bics	r2, r1
 8004c1e:	621a      	str	r2, [r3, #32]
 8004c20:	4bb3      	ldr	r3, [pc, #716]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004c22:	6a1a      	ldr	r2, [r3, #32]
 8004c24:	4bb2      	ldr	r3, [pc, #712]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004c26:	2104      	movs	r1, #4
 8004c28:	438a      	bics	r2, r1
 8004c2a:	621a      	str	r2, [r3, #32]
 8004c2c:	e01c      	b.n	8004c68 <HAL_RCC_OscConfig+0x398>
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	689b      	ldr	r3, [r3, #8]
 8004c32:	2b05      	cmp	r3, #5
 8004c34:	d10c      	bne.n	8004c50 <HAL_RCC_OscConfig+0x380>
 8004c36:	4bae      	ldr	r3, [pc, #696]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004c38:	6a1a      	ldr	r2, [r3, #32]
 8004c3a:	4bad      	ldr	r3, [pc, #692]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004c3c:	2104      	movs	r1, #4
 8004c3e:	430a      	orrs	r2, r1
 8004c40:	621a      	str	r2, [r3, #32]
 8004c42:	4bab      	ldr	r3, [pc, #684]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004c44:	6a1a      	ldr	r2, [r3, #32]
 8004c46:	4baa      	ldr	r3, [pc, #680]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004c48:	2101      	movs	r1, #1
 8004c4a:	430a      	orrs	r2, r1
 8004c4c:	621a      	str	r2, [r3, #32]
 8004c4e:	e00b      	b.n	8004c68 <HAL_RCC_OscConfig+0x398>
 8004c50:	4ba7      	ldr	r3, [pc, #668]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004c52:	6a1a      	ldr	r2, [r3, #32]
 8004c54:	4ba6      	ldr	r3, [pc, #664]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004c56:	2101      	movs	r1, #1
 8004c58:	438a      	bics	r2, r1
 8004c5a:	621a      	str	r2, [r3, #32]
 8004c5c:	4ba4      	ldr	r3, [pc, #656]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004c5e:	6a1a      	ldr	r2, [r3, #32]
 8004c60:	4ba3      	ldr	r3, [pc, #652]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004c62:	2104      	movs	r1, #4
 8004c64:	438a      	bics	r2, r1
 8004c66:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	689b      	ldr	r3, [r3, #8]
 8004c6c:	2b00      	cmp	r3, #0
 8004c6e:	d014      	beq.n	8004c9a <HAL_RCC_OscConfig+0x3ca>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004c70:	f7ff fbe2 	bl	8004438 <HAL_GetTick>
 8004c74:	0003      	movs	r3, r0
 8004c76:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004c78:	e009      	b.n	8004c8e <HAL_RCC_OscConfig+0x3be>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004c7a:	f7ff fbdd 	bl	8004438 <HAL_GetTick>
 8004c7e:	0002      	movs	r2, r0
 8004c80:	69bb      	ldr	r3, [r7, #24]
 8004c82:	1ad3      	subs	r3, r2, r3
 8004c84:	4a9b      	ldr	r2, [pc, #620]	; (8004ef4 <HAL_RCC_OscConfig+0x624>)
 8004c86:	4293      	cmp	r3, r2
 8004c88:	d901      	bls.n	8004c8e <HAL_RCC_OscConfig+0x3be>
        {
          return HAL_TIMEOUT;
 8004c8a:	2303      	movs	r3, #3
 8004c8c:	e12b      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004c8e:	4b98      	ldr	r3, [pc, #608]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004c90:	6a1b      	ldr	r3, [r3, #32]
 8004c92:	2202      	movs	r2, #2
 8004c94:	4013      	ands	r3, r2
 8004c96:	d0f0      	beq.n	8004c7a <HAL_RCC_OscConfig+0x3aa>
 8004c98:	e013      	b.n	8004cc2 <HAL_RCC_OscConfig+0x3f2>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004c9a:	f7ff fbcd 	bl	8004438 <HAL_GetTick>
 8004c9e:	0003      	movs	r3, r0
 8004ca0:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004ca2:	e009      	b.n	8004cb8 <HAL_RCC_OscConfig+0x3e8>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004ca4:	f7ff fbc8 	bl	8004438 <HAL_GetTick>
 8004ca8:	0002      	movs	r2, r0
 8004caa:	69bb      	ldr	r3, [r7, #24]
 8004cac:	1ad3      	subs	r3, r2, r3
 8004cae:	4a91      	ldr	r2, [pc, #580]	; (8004ef4 <HAL_RCC_OscConfig+0x624>)
 8004cb0:	4293      	cmp	r3, r2
 8004cb2:	d901      	bls.n	8004cb8 <HAL_RCC_OscConfig+0x3e8>
        {
          return HAL_TIMEOUT;
 8004cb4:	2303      	movs	r3, #3
 8004cb6:	e116      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004cb8:	4b8d      	ldr	r3, [pc, #564]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004cba:	6a1b      	ldr	r3, [r3, #32]
 8004cbc:	2202      	movs	r2, #2
 8004cbe:	4013      	ands	r3, r2
 8004cc0:	d1f0      	bne.n	8004ca4 <HAL_RCC_OscConfig+0x3d4>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8004cc2:	231f      	movs	r3, #31
 8004cc4:	18fb      	adds	r3, r7, r3
 8004cc6:	781b      	ldrb	r3, [r3, #0]
 8004cc8:	2b01      	cmp	r3, #1
 8004cca:	d105      	bne.n	8004cd8 <HAL_RCC_OscConfig+0x408>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004ccc:	4b88      	ldr	r3, [pc, #544]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004cce:	69da      	ldr	r2, [r3, #28]
 8004cd0:	4b87      	ldr	r3, [pc, #540]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004cd2:	4989      	ldr	r1, [pc, #548]	; (8004ef8 <HAL_RCC_OscConfig+0x628>)
 8004cd4:	400a      	ands	r2, r1
 8004cd6:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	681b      	ldr	r3, [r3, #0]
 8004cdc:	2210      	movs	r2, #16
 8004cde:	4013      	ands	r3, r2
 8004ce0:	d063      	beq.n	8004daa <HAL_RCC_OscConfig+0x4da>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 8004ce2:	687b      	ldr	r3, [r7, #4]
 8004ce4:	695b      	ldr	r3, [r3, #20]
 8004ce6:	2b01      	cmp	r3, #1
 8004ce8:	d12a      	bne.n	8004d40 <HAL_RCC_OscConfig+0x470>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8004cea:	4b81      	ldr	r3, [pc, #516]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004cec:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004cee:	4b80      	ldr	r3, [pc, #512]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004cf0:	2104      	movs	r1, #4
 8004cf2:	430a      	orrs	r2, r1
 8004cf4:	635a      	str	r2, [r3, #52]	; 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 8004cf6:	4b7e      	ldr	r3, [pc, #504]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004cf8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004cfa:	4b7d      	ldr	r3, [pc, #500]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004cfc:	2101      	movs	r1, #1
 8004cfe:	430a      	orrs	r2, r1
 8004d00:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004d02:	f7ff fb99 	bl	8004438 <HAL_GetTick>
 8004d06:	0003      	movs	r3, r0
 8004d08:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8004d0a:	e008      	b.n	8004d1e <HAL_RCC_OscConfig+0x44e>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8004d0c:	f7ff fb94 	bl	8004438 <HAL_GetTick>
 8004d10:	0002      	movs	r2, r0
 8004d12:	69bb      	ldr	r3, [r7, #24]
 8004d14:	1ad3      	subs	r3, r2, r3
 8004d16:	2b02      	cmp	r3, #2
 8004d18:	d901      	bls.n	8004d1e <HAL_RCC_OscConfig+0x44e>
        {
          return HAL_TIMEOUT;
 8004d1a:	2303      	movs	r3, #3
 8004d1c:	e0e3      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8004d1e:	4b74      	ldr	r3, [pc, #464]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004d20:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004d22:	2202      	movs	r2, #2
 8004d24:	4013      	ands	r3, r2
 8004d26:	d0f1      	beq.n	8004d0c <HAL_RCC_OscConfig+0x43c>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8004d28:	4b71      	ldr	r3, [pc, #452]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004d2a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004d2c:	22f8      	movs	r2, #248	; 0xf8
 8004d2e:	4393      	bics	r3, r2
 8004d30:	0019      	movs	r1, r3
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	699b      	ldr	r3, [r3, #24]
 8004d36:	00da      	lsls	r2, r3, #3
 8004d38:	4b6d      	ldr	r3, [pc, #436]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004d3a:	430a      	orrs	r2, r1
 8004d3c:	635a      	str	r2, [r3, #52]	; 0x34
 8004d3e:	e034      	b.n	8004daa <HAL_RCC_OscConfig+0x4da>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	695b      	ldr	r3, [r3, #20]
 8004d44:	3305      	adds	r3, #5
 8004d46:	d111      	bne.n	8004d6c <HAL_RCC_OscConfig+0x49c>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 8004d48:	4b69      	ldr	r3, [pc, #420]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004d4a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004d4c:	4b68      	ldr	r3, [pc, #416]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004d4e:	2104      	movs	r1, #4
 8004d50:	438a      	bics	r2, r1
 8004d52:	635a      	str	r2, [r3, #52]	; 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8004d54:	4b66      	ldr	r3, [pc, #408]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004d56:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004d58:	22f8      	movs	r2, #248	; 0xf8
 8004d5a:	4393      	bics	r3, r2
 8004d5c:	0019      	movs	r1, r3
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	699b      	ldr	r3, [r3, #24]
 8004d62:	00da      	lsls	r2, r3, #3
 8004d64:	4b62      	ldr	r3, [pc, #392]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004d66:	430a      	orrs	r2, r1
 8004d68:	635a      	str	r2, [r3, #52]	; 0x34
 8004d6a:	e01e      	b.n	8004daa <HAL_RCC_OscConfig+0x4da>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8004d6c:	4b60      	ldr	r3, [pc, #384]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004d6e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004d70:	4b5f      	ldr	r3, [pc, #380]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004d72:	2104      	movs	r1, #4
 8004d74:	430a      	orrs	r2, r1
 8004d76:	635a      	str	r2, [r3, #52]	; 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 8004d78:	4b5d      	ldr	r3, [pc, #372]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004d7a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004d7c:	4b5c      	ldr	r3, [pc, #368]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004d7e:	2101      	movs	r1, #1
 8004d80:	438a      	bics	r2, r1
 8004d82:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004d84:	f7ff fb58 	bl	8004438 <HAL_GetTick>
 8004d88:	0003      	movs	r3, r0
 8004d8a:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8004d8c:	e008      	b.n	8004da0 <HAL_RCC_OscConfig+0x4d0>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8004d8e:	f7ff fb53 	bl	8004438 <HAL_GetTick>
 8004d92:	0002      	movs	r2, r0
 8004d94:	69bb      	ldr	r3, [r7, #24]
 8004d96:	1ad3      	subs	r3, r2, r3
 8004d98:	2b02      	cmp	r3, #2
 8004d9a:	d901      	bls.n	8004da0 <HAL_RCC_OscConfig+0x4d0>
        {
          return HAL_TIMEOUT;
 8004d9c:	2303      	movs	r3, #3
 8004d9e:	e0a2      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8004da0:	4b53      	ldr	r3, [pc, #332]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004da2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004da4:	2202      	movs	r2, #2
 8004da6:	4013      	ands	r3, r2
 8004da8:	d1f1      	bne.n	8004d8e <HAL_RCC_OscConfig+0x4be>
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004daa:	687b      	ldr	r3, [r7, #4]
 8004dac:	6a1b      	ldr	r3, [r3, #32]
 8004dae:	2b00      	cmp	r3, #0
 8004db0:	d100      	bne.n	8004db4 <HAL_RCC_OscConfig+0x4e4>
 8004db2:	e097      	b.n	8004ee4 <HAL_RCC_OscConfig+0x614>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8004db4:	4b4e      	ldr	r3, [pc, #312]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004db6:	685b      	ldr	r3, [r3, #4]
 8004db8:	220c      	movs	r2, #12
 8004dba:	4013      	ands	r3, r2
 8004dbc:	2b08      	cmp	r3, #8
 8004dbe:	d100      	bne.n	8004dc2 <HAL_RCC_OscConfig+0x4f2>
 8004dc0:	e06b      	b.n	8004e9a <HAL_RCC_OscConfig+0x5ca>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004dc2:	687b      	ldr	r3, [r7, #4]
 8004dc4:	6a1b      	ldr	r3, [r3, #32]
 8004dc6:	2b02      	cmp	r3, #2
 8004dc8:	d14c      	bne.n	8004e64 <HAL_RCC_OscConfig+0x594>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004dca:	4b49      	ldr	r3, [pc, #292]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004dcc:	681a      	ldr	r2, [r3, #0]
 8004dce:	4b48      	ldr	r3, [pc, #288]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004dd0:	494a      	ldr	r1, [pc, #296]	; (8004efc <HAL_RCC_OscConfig+0x62c>)
 8004dd2:	400a      	ands	r2, r1
 8004dd4:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004dd6:	f7ff fb2f 	bl	8004438 <HAL_GetTick>
 8004dda:	0003      	movs	r3, r0
 8004ddc:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8004dde:	e008      	b.n	8004df2 <HAL_RCC_OscConfig+0x522>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004de0:	f7ff fb2a 	bl	8004438 <HAL_GetTick>
 8004de4:	0002      	movs	r2, r0
 8004de6:	69bb      	ldr	r3, [r7, #24]
 8004de8:	1ad3      	subs	r3, r2, r3
 8004dea:	2b02      	cmp	r3, #2
 8004dec:	d901      	bls.n	8004df2 <HAL_RCC_OscConfig+0x522>
          {
            return HAL_TIMEOUT;
 8004dee:	2303      	movs	r3, #3
 8004df0:	e079      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8004df2:	4b3f      	ldr	r3, [pc, #252]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004df4:	681a      	ldr	r2, [r3, #0]
 8004df6:	2380      	movs	r3, #128	; 0x80
 8004df8:	049b      	lsls	r3, r3, #18
 8004dfa:	4013      	ands	r3, r2
 8004dfc:	d1f0      	bne.n	8004de0 <HAL_RCC_OscConfig+0x510>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8004dfe:	4b3c      	ldr	r3, [pc, #240]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004e00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004e02:	220f      	movs	r2, #15
 8004e04:	4393      	bics	r3, r2
 8004e06:	0019      	movs	r1, r3
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004e0c:	4b38      	ldr	r3, [pc, #224]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004e0e:	430a      	orrs	r2, r1
 8004e10:	62da      	str	r2, [r3, #44]	; 0x2c
 8004e12:	4b37      	ldr	r3, [pc, #220]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004e14:	685b      	ldr	r3, [r3, #4]
 8004e16:	4a3a      	ldr	r2, [pc, #232]	; (8004f00 <HAL_RCC_OscConfig+0x630>)
 8004e18:	4013      	ands	r3, r2
 8004e1a:	0019      	movs	r1, r3
 8004e1c:	687b      	ldr	r3, [r7, #4]
 8004e1e:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004e20:	687b      	ldr	r3, [r7, #4]
 8004e22:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e24:	431a      	orrs	r2, r3
 8004e26:	4b32      	ldr	r3, [pc, #200]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004e28:	430a      	orrs	r2, r1
 8004e2a:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8004e2c:	4b30      	ldr	r3, [pc, #192]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004e2e:	681a      	ldr	r2, [r3, #0]
 8004e30:	4b2f      	ldr	r3, [pc, #188]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004e32:	2180      	movs	r1, #128	; 0x80
 8004e34:	0449      	lsls	r1, r1, #17
 8004e36:	430a      	orrs	r2, r1
 8004e38:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004e3a:	f7ff fafd 	bl	8004438 <HAL_GetTick>
 8004e3e:	0003      	movs	r3, r0
 8004e40:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8004e42:	e008      	b.n	8004e56 <HAL_RCC_OscConfig+0x586>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004e44:	f7ff faf8 	bl	8004438 <HAL_GetTick>
 8004e48:	0002      	movs	r2, r0
 8004e4a:	69bb      	ldr	r3, [r7, #24]
 8004e4c:	1ad3      	subs	r3, r2, r3
 8004e4e:	2b02      	cmp	r3, #2
 8004e50:	d901      	bls.n	8004e56 <HAL_RCC_OscConfig+0x586>
          {
            return HAL_TIMEOUT;
 8004e52:	2303      	movs	r3, #3
 8004e54:	e047      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8004e56:	4b26      	ldr	r3, [pc, #152]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004e58:	681a      	ldr	r2, [r3, #0]
 8004e5a:	2380      	movs	r3, #128	; 0x80
 8004e5c:	049b      	lsls	r3, r3, #18
 8004e5e:	4013      	ands	r3, r2
 8004e60:	d0f0      	beq.n	8004e44 <HAL_RCC_OscConfig+0x574>
 8004e62:	e03f      	b.n	8004ee4 <HAL_RCC_OscConfig+0x614>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004e64:	4b22      	ldr	r3, [pc, #136]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004e66:	681a      	ldr	r2, [r3, #0]
 8004e68:	4b21      	ldr	r3, [pc, #132]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004e6a:	4924      	ldr	r1, [pc, #144]	; (8004efc <HAL_RCC_OscConfig+0x62c>)
 8004e6c:	400a      	ands	r2, r1
 8004e6e:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004e70:	f7ff fae2 	bl	8004438 <HAL_GetTick>
 8004e74:	0003      	movs	r3, r0
 8004e76:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8004e78:	e008      	b.n	8004e8c <HAL_RCC_OscConfig+0x5bc>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004e7a:	f7ff fadd 	bl	8004438 <HAL_GetTick>
 8004e7e:	0002      	movs	r2, r0
 8004e80:	69bb      	ldr	r3, [r7, #24]
 8004e82:	1ad3      	subs	r3, r2, r3
 8004e84:	2b02      	cmp	r3, #2
 8004e86:	d901      	bls.n	8004e8c <HAL_RCC_OscConfig+0x5bc>
          {
            return HAL_TIMEOUT;
 8004e88:	2303      	movs	r3, #3
 8004e8a:	e02c      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8004e8c:	4b18      	ldr	r3, [pc, #96]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004e8e:	681a      	ldr	r2, [r3, #0]
 8004e90:	2380      	movs	r3, #128	; 0x80
 8004e92:	049b      	lsls	r3, r3, #18
 8004e94:	4013      	ands	r3, r2
 8004e96:	d1f0      	bne.n	8004e7a <HAL_RCC_OscConfig+0x5aa>
 8004e98:	e024      	b.n	8004ee4 <HAL_RCC_OscConfig+0x614>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8004e9a:	687b      	ldr	r3, [r7, #4]
 8004e9c:	6a1b      	ldr	r3, [r3, #32]
 8004e9e:	2b01      	cmp	r3, #1
 8004ea0:	d101      	bne.n	8004ea6 <HAL_RCC_OscConfig+0x5d6>
      {
        return HAL_ERROR;
 8004ea2:	2301      	movs	r3, #1
 8004ea4:	e01f      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 8004ea6:	4b12      	ldr	r3, [pc, #72]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004ea8:	685b      	ldr	r3, [r3, #4]
 8004eaa:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 8004eac:	4b10      	ldr	r3, [pc, #64]	; (8004ef0 <HAL_RCC_OscConfig+0x620>)
 8004eae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004eb0:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8004eb2:	697a      	ldr	r2, [r7, #20]
 8004eb4:	2380      	movs	r3, #128	; 0x80
 8004eb6:	025b      	lsls	r3, r3, #9
 8004eb8:	401a      	ands	r2, r3
 8004eba:	687b      	ldr	r3, [r7, #4]
 8004ebc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ebe:	429a      	cmp	r2, r3
 8004ec0:	d10e      	bne.n	8004ee0 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8004ec2:	693b      	ldr	r3, [r7, #16]
 8004ec4:	220f      	movs	r2, #15
 8004ec6:	401a      	ands	r2, r3
 8004ec8:	687b      	ldr	r3, [r7, #4]
 8004eca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8004ecc:	429a      	cmp	r2, r3
 8004ece:	d107      	bne.n	8004ee0 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8004ed0:	697a      	ldr	r2, [r7, #20]
 8004ed2:	23f0      	movs	r3, #240	; 0xf0
 8004ed4:	039b      	lsls	r3, r3, #14
 8004ed6:	401a      	ands	r2, r3
 8004ed8:	687b      	ldr	r3, [r7, #4]
 8004eda:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8004edc:	429a      	cmp	r2, r3
 8004ede:	d001      	beq.n	8004ee4 <HAL_RCC_OscConfig+0x614>
        {
          return HAL_ERROR;
 8004ee0:	2301      	movs	r3, #1
 8004ee2:	e000      	b.n	8004ee6 <HAL_RCC_OscConfig+0x616>
        }
      }
    }
  }

  return HAL_OK;
 8004ee4:	2300      	movs	r3, #0
}
 8004ee6:	0018      	movs	r0, r3
 8004ee8:	46bd      	mov	sp, r7
 8004eea:	b008      	add	sp, #32
 8004eec:	bd80      	pop	{r7, pc}
 8004eee:	46c0      	nop			; (mov r8, r8)
 8004ef0:	40021000 	.word	0x40021000
 8004ef4:	00001388 	.word	0x00001388
 8004ef8:	efffffff 	.word	0xefffffff
 8004efc:	feffffff 	.word	0xfeffffff
 8004f00:	ffc2ffff 	.word	0xffc2ffff

08004f04 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8004f04:	b580      	push	{r7, lr}
 8004f06:	b084      	sub	sp, #16
 8004f08:	af00      	add	r7, sp, #0
 8004f0a:	6078      	str	r0, [r7, #4]
 8004f0c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	2b00      	cmp	r3, #0
 8004f12:	d101      	bne.n	8004f18 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8004f14:	2301      	movs	r3, #1
 8004f16:	e0b3      	b.n	8005080 <HAL_RCC_ClockConfig+0x17c>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004f18:	4b5b      	ldr	r3, [pc, #364]	; (8005088 <HAL_RCC_ClockConfig+0x184>)
 8004f1a:	681b      	ldr	r3, [r3, #0]
 8004f1c:	2201      	movs	r2, #1
 8004f1e:	4013      	ands	r3, r2
 8004f20:	683a      	ldr	r2, [r7, #0]
 8004f22:	429a      	cmp	r2, r3
 8004f24:	d911      	bls.n	8004f4a <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004f26:	4b58      	ldr	r3, [pc, #352]	; (8005088 <HAL_RCC_ClockConfig+0x184>)
 8004f28:	681b      	ldr	r3, [r3, #0]
 8004f2a:	2201      	movs	r2, #1
 8004f2c:	4393      	bics	r3, r2
 8004f2e:	0019      	movs	r1, r3
 8004f30:	4b55      	ldr	r3, [pc, #340]	; (8005088 <HAL_RCC_ClockConfig+0x184>)
 8004f32:	683a      	ldr	r2, [r7, #0]
 8004f34:	430a      	orrs	r2, r1
 8004f36:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004f38:	4b53      	ldr	r3, [pc, #332]	; (8005088 <HAL_RCC_ClockConfig+0x184>)
 8004f3a:	681b      	ldr	r3, [r3, #0]
 8004f3c:	2201      	movs	r2, #1
 8004f3e:	4013      	ands	r3, r2
 8004f40:	683a      	ldr	r2, [r7, #0]
 8004f42:	429a      	cmp	r2, r3
 8004f44:	d001      	beq.n	8004f4a <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 8004f46:	2301      	movs	r3, #1
 8004f48:	e09a      	b.n	8005080 <HAL_RCC_ClockConfig+0x17c>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	2202      	movs	r2, #2
 8004f50:	4013      	ands	r3, r2
 8004f52:	d015      	beq.n	8004f80 <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	2204      	movs	r2, #4
 8004f5a:	4013      	ands	r3, r2
 8004f5c:	d006      	beq.n	8004f6c <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 8004f5e:	4b4b      	ldr	r3, [pc, #300]	; (800508c <HAL_RCC_ClockConfig+0x188>)
 8004f60:	685a      	ldr	r2, [r3, #4]
 8004f62:	4b4a      	ldr	r3, [pc, #296]	; (800508c <HAL_RCC_ClockConfig+0x188>)
 8004f64:	21e0      	movs	r1, #224	; 0xe0
 8004f66:	00c9      	lsls	r1, r1, #3
 8004f68:	430a      	orrs	r2, r1
 8004f6a:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004f6c:	4b47      	ldr	r3, [pc, #284]	; (800508c <HAL_RCC_ClockConfig+0x188>)
 8004f6e:	685b      	ldr	r3, [r3, #4]
 8004f70:	22f0      	movs	r2, #240	; 0xf0
 8004f72:	4393      	bics	r3, r2
 8004f74:	0019      	movs	r1, r3
 8004f76:	687b      	ldr	r3, [r7, #4]
 8004f78:	689a      	ldr	r2, [r3, #8]
 8004f7a:	4b44      	ldr	r3, [pc, #272]	; (800508c <HAL_RCC_ClockConfig+0x188>)
 8004f7c:	430a      	orrs	r2, r1
 8004f7e:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8004f80:	687b      	ldr	r3, [r7, #4]
 8004f82:	681b      	ldr	r3, [r3, #0]
 8004f84:	2201      	movs	r2, #1
 8004f86:	4013      	ands	r3, r2
 8004f88:	d040      	beq.n	800500c <HAL_RCC_ClockConfig+0x108>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	685b      	ldr	r3, [r3, #4]
 8004f8e:	2b01      	cmp	r3, #1
 8004f90:	d107      	bne.n	8004fa2 <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004f92:	4b3e      	ldr	r3, [pc, #248]	; (800508c <HAL_RCC_ClockConfig+0x188>)
 8004f94:	681a      	ldr	r2, [r3, #0]
 8004f96:	2380      	movs	r3, #128	; 0x80
 8004f98:	029b      	lsls	r3, r3, #10
 8004f9a:	4013      	ands	r3, r2
 8004f9c:	d114      	bne.n	8004fc8 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8004f9e:	2301      	movs	r3, #1
 8004fa0:	e06e      	b.n	8005080 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	685b      	ldr	r3, [r3, #4]
 8004fa6:	2b02      	cmp	r3, #2
 8004fa8:	d107      	bne.n	8004fba <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8004faa:	4b38      	ldr	r3, [pc, #224]	; (800508c <HAL_RCC_ClockConfig+0x188>)
 8004fac:	681a      	ldr	r2, [r3, #0]
 8004fae:	2380      	movs	r3, #128	; 0x80
 8004fb0:	049b      	lsls	r3, r3, #18
 8004fb2:	4013      	ands	r3, r2
 8004fb4:	d108      	bne.n	8004fc8 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8004fb6:	2301      	movs	r3, #1
 8004fb8:	e062      	b.n	8005080 <HAL_RCC_ClockConfig+0x17c>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004fba:	4b34      	ldr	r3, [pc, #208]	; (800508c <HAL_RCC_ClockConfig+0x188>)
 8004fbc:	681b      	ldr	r3, [r3, #0]
 8004fbe:	2202      	movs	r2, #2
 8004fc0:	4013      	ands	r3, r2
 8004fc2:	d101      	bne.n	8004fc8 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8004fc4:	2301      	movs	r3, #1
 8004fc6:	e05b      	b.n	8005080 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8004fc8:	4b30      	ldr	r3, [pc, #192]	; (800508c <HAL_RCC_ClockConfig+0x188>)
 8004fca:	685b      	ldr	r3, [r3, #4]
 8004fcc:	2203      	movs	r2, #3
 8004fce:	4393      	bics	r3, r2
 8004fd0:	0019      	movs	r1, r3
 8004fd2:	687b      	ldr	r3, [r7, #4]
 8004fd4:	685a      	ldr	r2, [r3, #4]
 8004fd6:	4b2d      	ldr	r3, [pc, #180]	; (800508c <HAL_RCC_ClockConfig+0x188>)
 8004fd8:	430a      	orrs	r2, r1
 8004fda:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8004fdc:	f7ff fa2c 	bl	8004438 <HAL_GetTick>
 8004fe0:	0003      	movs	r3, r0
 8004fe2:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004fe4:	e009      	b.n	8004ffa <HAL_RCC_ClockConfig+0xf6>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004fe6:	f7ff fa27 	bl	8004438 <HAL_GetTick>
 8004fea:	0002      	movs	r2, r0
 8004fec:	68fb      	ldr	r3, [r7, #12]
 8004fee:	1ad3      	subs	r3, r2, r3
 8004ff0:	4a27      	ldr	r2, [pc, #156]	; (8005090 <HAL_RCC_ClockConfig+0x18c>)
 8004ff2:	4293      	cmp	r3, r2
 8004ff4:	d901      	bls.n	8004ffa <HAL_RCC_ClockConfig+0xf6>
      {
        return HAL_TIMEOUT;
 8004ff6:	2303      	movs	r3, #3
 8004ff8:	e042      	b.n	8005080 <HAL_RCC_ClockConfig+0x17c>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8004ffa:	4b24      	ldr	r3, [pc, #144]	; (800508c <HAL_RCC_ClockConfig+0x188>)
 8004ffc:	685b      	ldr	r3, [r3, #4]
 8004ffe:	220c      	movs	r2, #12
 8005000:	401a      	ands	r2, r3
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	685b      	ldr	r3, [r3, #4]
 8005006:	009b      	lsls	r3, r3, #2
 8005008:	429a      	cmp	r2, r3
 800500a:	d1ec      	bne.n	8004fe6 <HAL_RCC_ClockConfig+0xe2>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800500c:	4b1e      	ldr	r3, [pc, #120]	; (8005088 <HAL_RCC_ClockConfig+0x184>)
 800500e:	681b      	ldr	r3, [r3, #0]
 8005010:	2201      	movs	r2, #1
 8005012:	4013      	ands	r3, r2
 8005014:	683a      	ldr	r2, [r7, #0]
 8005016:	429a      	cmp	r2, r3
 8005018:	d211      	bcs.n	800503e <HAL_RCC_ClockConfig+0x13a>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800501a:	4b1b      	ldr	r3, [pc, #108]	; (8005088 <HAL_RCC_ClockConfig+0x184>)
 800501c:	681b      	ldr	r3, [r3, #0]
 800501e:	2201      	movs	r2, #1
 8005020:	4393      	bics	r3, r2
 8005022:	0019      	movs	r1, r3
 8005024:	4b18      	ldr	r3, [pc, #96]	; (8005088 <HAL_RCC_ClockConfig+0x184>)
 8005026:	683a      	ldr	r2, [r7, #0]
 8005028:	430a      	orrs	r2, r1
 800502a:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800502c:	4b16      	ldr	r3, [pc, #88]	; (8005088 <HAL_RCC_ClockConfig+0x184>)
 800502e:	681b      	ldr	r3, [r3, #0]
 8005030:	2201      	movs	r2, #1
 8005032:	4013      	ands	r3, r2
 8005034:	683a      	ldr	r2, [r7, #0]
 8005036:	429a      	cmp	r2, r3
 8005038:	d001      	beq.n	800503e <HAL_RCC_ClockConfig+0x13a>
    {
      return HAL_ERROR;
 800503a:	2301      	movs	r3, #1
 800503c:	e020      	b.n	8005080 <HAL_RCC_ClockConfig+0x17c>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	2204      	movs	r2, #4
 8005044:	4013      	ands	r3, r2
 8005046:	d009      	beq.n	800505c <HAL_RCC_ClockConfig+0x158>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 8005048:	4b10      	ldr	r3, [pc, #64]	; (800508c <HAL_RCC_ClockConfig+0x188>)
 800504a:	685b      	ldr	r3, [r3, #4]
 800504c:	4a11      	ldr	r2, [pc, #68]	; (8005094 <HAL_RCC_ClockConfig+0x190>)
 800504e:	4013      	ands	r3, r2
 8005050:	0019      	movs	r1, r3
 8005052:	687b      	ldr	r3, [r7, #4]
 8005054:	68da      	ldr	r2, [r3, #12]
 8005056:	4b0d      	ldr	r3, [pc, #52]	; (800508c <HAL_RCC_ClockConfig+0x188>)
 8005058:	430a      	orrs	r2, r1
 800505a:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 800505c:	f000 f820 	bl	80050a0 <HAL_RCC_GetSysClockFreq>
 8005060:	0001      	movs	r1, r0
 8005062:	4b0a      	ldr	r3, [pc, #40]	; (800508c <HAL_RCC_ClockConfig+0x188>)
 8005064:	685b      	ldr	r3, [r3, #4]
 8005066:	091b      	lsrs	r3, r3, #4
 8005068:	220f      	movs	r2, #15
 800506a:	4013      	ands	r3, r2
 800506c:	4a0a      	ldr	r2, [pc, #40]	; (8005098 <HAL_RCC_ClockConfig+0x194>)
 800506e:	5cd3      	ldrb	r3, [r2, r3]
 8005070:	000a      	movs	r2, r1
 8005072:	40da      	lsrs	r2, r3
 8005074:	4b09      	ldr	r3, [pc, #36]	; (800509c <HAL_RCC_ClockConfig+0x198>)
 8005076:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8005078:	2000      	movs	r0, #0
 800507a:	f7ff f997 	bl	80043ac <HAL_InitTick>
  
  return HAL_OK;
 800507e:	2300      	movs	r3, #0
}
 8005080:	0018      	movs	r0, r3
 8005082:	46bd      	mov	sp, r7
 8005084:	b004      	add	sp, #16
 8005086:	bd80      	pop	{r7, pc}
 8005088:	40022000 	.word	0x40022000
 800508c:	40021000 	.word	0x40021000
 8005090:	00001388 	.word	0x00001388
 8005094:	fffff8ff 	.word	0xfffff8ff
 8005098:	08008a90 	.word	0x08008a90
 800509c:	20000000 	.word	0x20000000

080050a0 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80050a0:	b590      	push	{r4, r7, lr}
 80050a2:	b08f      	sub	sp, #60	; 0x3c
 80050a4:	af00      	add	r7, sp, #0
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 80050a6:	2314      	movs	r3, #20
 80050a8:	18fb      	adds	r3, r7, r3
 80050aa:	4a2b      	ldr	r2, [pc, #172]	; (8005158 <HAL_RCC_GetSysClockFreq+0xb8>)
 80050ac:	ca13      	ldmia	r2!, {r0, r1, r4}
 80050ae:	c313      	stmia	r3!, {r0, r1, r4}
 80050b0:	6812      	ldr	r2, [r2, #0]
 80050b2:	601a      	str	r2, [r3, #0]
                                         10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 80050b4:	1d3b      	adds	r3, r7, #4
 80050b6:	4a29      	ldr	r2, [pc, #164]	; (800515c <HAL_RCC_GetSysClockFreq+0xbc>)
 80050b8:	ca13      	ldmia	r2!, {r0, r1, r4}
 80050ba:	c313      	stmia	r3!, {r0, r1, r4}
 80050bc:	6812      	ldr	r2, [r2, #0]
 80050be:	601a      	str	r2, [r3, #0]
                                           9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 80050c0:	2300      	movs	r3, #0
 80050c2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80050c4:	2300      	movs	r3, #0
 80050c6:	62bb      	str	r3, [r7, #40]	; 0x28
 80050c8:	2300      	movs	r3, #0
 80050ca:	637b      	str	r3, [r7, #52]	; 0x34
 80050cc:	2300      	movs	r3, #0
 80050ce:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t sysclockfreq = 0U;
 80050d0:	2300      	movs	r3, #0
 80050d2:	633b      	str	r3, [r7, #48]	; 0x30
  
  tmpreg = RCC->CFGR;
 80050d4:	4b22      	ldr	r3, [pc, #136]	; (8005160 <HAL_RCC_GetSysClockFreq+0xc0>)
 80050d6:	685b      	ldr	r3, [r3, #4]
 80050d8:	62fb      	str	r3, [r7, #44]	; 0x2c
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 80050da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80050dc:	220c      	movs	r2, #12
 80050de:	4013      	ands	r3, r2
 80050e0:	2b04      	cmp	r3, #4
 80050e2:	d002      	beq.n	80050ea <HAL_RCC_GetSysClockFreq+0x4a>
 80050e4:	2b08      	cmp	r3, #8
 80050e6:	d003      	beq.n	80050f0 <HAL_RCC_GetSysClockFreq+0x50>
 80050e8:	e02d      	b.n	8005146 <HAL_RCC_GetSysClockFreq+0xa6>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 80050ea:	4b1e      	ldr	r3, [pc, #120]	; (8005164 <HAL_RCC_GetSysClockFreq+0xc4>)
 80050ec:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 80050ee:	e02d      	b.n	800514c <HAL_RCC_GetSysClockFreq+0xac>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 80050f0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80050f2:	0c9b      	lsrs	r3, r3, #18
 80050f4:	220f      	movs	r2, #15
 80050f6:	4013      	ands	r3, r2
 80050f8:	2214      	movs	r2, #20
 80050fa:	18ba      	adds	r2, r7, r2
 80050fc:	5cd3      	ldrb	r3, [r2, r3]
 80050fe:	627b      	str	r3, [r7, #36]	; 0x24
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 8005100:	4b17      	ldr	r3, [pc, #92]	; (8005160 <HAL_RCC_GetSysClockFreq+0xc0>)
 8005102:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005104:	220f      	movs	r2, #15
 8005106:	4013      	ands	r3, r2
 8005108:	1d3a      	adds	r2, r7, #4
 800510a:	5cd3      	ldrb	r3, [r2, r3]
 800510c:	62bb      	str	r3, [r7, #40]	; 0x28
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 800510e:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8005110:	2380      	movs	r3, #128	; 0x80
 8005112:	025b      	lsls	r3, r3, #9
 8005114:	4013      	ands	r3, r2
 8005116:	d009      	beq.n	800512c <HAL_RCC_GetSysClockFreq+0x8c>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8005118:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800511a:	4812      	ldr	r0, [pc, #72]	; (8005164 <HAL_RCC_GetSysClockFreq+0xc4>)
 800511c:	f7fb f810 	bl	8000140 <__udivsi3>
 8005120:	0003      	movs	r3, r0
 8005122:	001a      	movs	r2, r3
 8005124:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005126:	4353      	muls	r3, r2
 8005128:	637b      	str	r3, [r7, #52]	; 0x34
 800512a:	e009      	b.n	8005140 <HAL_RCC_GetSysClockFreq+0xa0>
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 800512c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800512e:	000a      	movs	r2, r1
 8005130:	0152      	lsls	r2, r2, #5
 8005132:	1a52      	subs	r2, r2, r1
 8005134:	0193      	lsls	r3, r2, #6
 8005136:	1a9b      	subs	r3, r3, r2
 8005138:	00db      	lsls	r3, r3, #3
 800513a:	185b      	adds	r3, r3, r1
 800513c:	021b      	lsls	r3, r3, #8
 800513e:	637b      	str	r3, [r7, #52]	; 0x34
#endif
      }
      sysclockfreq = pllclk;
 8005140:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8005142:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 8005144:	e002      	b.n	800514c <HAL_RCC_GetSysClockFreq+0xac>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8005146:	4b07      	ldr	r3, [pc, #28]	; (8005164 <HAL_RCC_GetSysClockFreq+0xc4>)
 8005148:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 800514a:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 800514c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 800514e:	0018      	movs	r0, r3
 8005150:	46bd      	mov	sp, r7
 8005152:	b00f      	add	sp, #60	; 0x3c
 8005154:	bd90      	pop	{r4, r7, pc}
 8005156:	46c0      	nop			; (mov r8, r8)
 8005158:	080089b0 	.word	0x080089b0
 800515c:	080089c0 	.word	0x080089c0
 8005160:	40021000 	.word	0x40021000
 8005164:	007a1200 	.word	0x007a1200

08005168 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8005168:	b580      	push	{r7, lr}
 800516a:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 800516c:	4b02      	ldr	r3, [pc, #8]	; (8005178 <HAL_RCC_GetHCLKFreq+0x10>)
 800516e:	681b      	ldr	r3, [r3, #0]
}
 8005170:	0018      	movs	r0, r3
 8005172:	46bd      	mov	sp, r7
 8005174:	bd80      	pop	{r7, pc}
 8005176:	46c0      	nop			; (mov r8, r8)
 8005178:	20000000 	.word	0x20000000

0800517c <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 800517c:	b580      	push	{r7, lr}
 800517e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 8005180:	f7ff fff2 	bl	8005168 <HAL_RCC_GetHCLKFreq>
 8005184:	0001      	movs	r1, r0
 8005186:	4b06      	ldr	r3, [pc, #24]	; (80051a0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005188:	685b      	ldr	r3, [r3, #4]
 800518a:	0a1b      	lsrs	r3, r3, #8
 800518c:	2207      	movs	r2, #7
 800518e:	4013      	ands	r3, r2
 8005190:	4a04      	ldr	r2, [pc, #16]	; (80051a4 <HAL_RCC_GetPCLK1Freq+0x28>)
 8005192:	5cd3      	ldrb	r3, [r2, r3]
 8005194:	40d9      	lsrs	r1, r3
 8005196:	000b      	movs	r3, r1
}    
 8005198:	0018      	movs	r0, r3
 800519a:	46bd      	mov	sp, r7
 800519c:	bd80      	pop	{r7, pc}
 800519e:	46c0      	nop			; (mov r8, r8)
 80051a0:	40021000 	.word	0x40021000
 80051a4:	08008aa0 	.word	0x08008aa0

080051a8 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 80051a8:	b580      	push	{r7, lr}
 80051aa:	b082      	sub	sp, #8
 80051ac:	af00      	add	r7, sp, #0
 80051ae:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	2b00      	cmp	r3, #0
 80051b4:	d101      	bne.n	80051ba <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 80051b6:	2301      	movs	r3, #1
 80051b8:	e044      	b.n	8005244 <HAL_UART_Init+0x9c>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80051be:	2b00      	cmp	r3, #0
 80051c0:	d107      	bne.n	80051d2 <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	2274      	movs	r2, #116	; 0x74
 80051c6:	2100      	movs	r1, #0
 80051c8:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 80051ca:	687b      	ldr	r3, [r7, #4]
 80051cc:	0018      	movs	r0, r3
 80051ce:	f7fe ff89 	bl	80040e4 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	2224      	movs	r2, #36	; 0x24
 80051d6:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 80051d8:	687b      	ldr	r3, [r7, #4]
 80051da:	681b      	ldr	r3, [r3, #0]
 80051dc:	681a      	ldr	r2, [r3, #0]
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	681b      	ldr	r3, [r3, #0]
 80051e2:	2101      	movs	r1, #1
 80051e4:	438a      	bics	r2, r1
 80051e6:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 80051e8:	687b      	ldr	r3, [r7, #4]
 80051ea:	0018      	movs	r0, r3
 80051ec:	f000 f8da 	bl	80053a4 <UART_SetConfig>
 80051f0:	0003      	movs	r3, r0
 80051f2:	2b01      	cmp	r3, #1
 80051f4:	d101      	bne.n	80051fa <HAL_UART_Init+0x52>
  {
    return HAL_ERROR;
 80051f6:	2301      	movs	r3, #1
 80051f8:	e024      	b.n	8005244 <HAL_UART_Init+0x9c>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 80051fa:	687b      	ldr	r3, [r7, #4]
 80051fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051fe:	2b00      	cmp	r3, #0
 8005200:	d003      	beq.n	800520a <HAL_UART_Init+0x62>
  {
    UART_AdvFeatureConfig(huart);
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	0018      	movs	r0, r3
 8005206:	f000 fa0d 	bl	8005624 <UART_AdvFeatureConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
  - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 register.*/
#if defined (USART_CR2_LINEN)
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800520a:	687b      	ldr	r3, [r7, #4]
 800520c:	681b      	ldr	r3, [r3, #0]
 800520e:	685a      	ldr	r2, [r3, #4]
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	681b      	ldr	r3, [r3, #0]
 8005214:	490d      	ldr	r1, [pc, #52]	; (800524c <HAL_UART_Init+0xa4>)
 8005216:	400a      	ands	r2, r1
 8005218:	605a      	str	r2, [r3, #4]
#else
  CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
#endif /* USART_CR2_LINEN */
#if defined (USART_CR3_SCEN)
#if defined (USART_CR3_IREN)
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800521a:	687b      	ldr	r3, [r7, #4]
 800521c:	681b      	ldr	r3, [r3, #0]
 800521e:	689a      	ldr	r2, [r3, #8]
 8005220:	687b      	ldr	r3, [r7, #4]
 8005222:	681b      	ldr	r3, [r3, #0]
 8005224:	212a      	movs	r1, #42	; 0x2a
 8005226:	438a      	bics	r2, r1
 8005228:	609a      	str	r2, [r3, #8]
#else
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
#endif /* USART_CR3_IREN*/
#endif /* USART_CR3_SCEN */

  __HAL_UART_ENABLE(huart);
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	681b      	ldr	r3, [r3, #0]
 800522e:	681a      	ldr	r2, [r3, #0]
 8005230:	687b      	ldr	r3, [r7, #4]
 8005232:	681b      	ldr	r3, [r3, #0]
 8005234:	2101      	movs	r1, #1
 8005236:	430a      	orrs	r2, r1
 8005238:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	0018      	movs	r0, r3
 800523e:	f000 faa5 	bl	800578c <UART_CheckIdleState>
 8005242:	0003      	movs	r3, r0
}
 8005244:	0018      	movs	r0, r3
 8005246:	46bd      	mov	sp, r7
 8005248:	b002      	add	sp, #8
 800524a:	bd80      	pop	{r7, pc}
 800524c:	ffffb7ff 	.word	0xffffb7ff

08005250 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005250:	b580      	push	{r7, lr}
 8005252:	b08a      	sub	sp, #40	; 0x28
 8005254:	af02      	add	r7, sp, #8
 8005256:	60f8      	str	r0, [r7, #12]
 8005258:	60b9      	str	r1, [r7, #8]
 800525a:	603b      	str	r3, [r7, #0]
 800525c:	1dbb      	adds	r3, r7, #6
 800525e:	801a      	strh	r2, [r3, #0]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8005260:	68fb      	ldr	r3, [r7, #12]
 8005262:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8005264:	2b20      	cmp	r3, #32
 8005266:	d000      	beq.n	800526a <HAL_UART_Transmit+0x1a>
 8005268:	e096      	b.n	8005398 <HAL_UART_Transmit+0x148>
  {
    if ((pData == NULL) || (Size == 0U))
 800526a:	68bb      	ldr	r3, [r7, #8]
 800526c:	2b00      	cmp	r3, #0
 800526e:	d003      	beq.n	8005278 <HAL_UART_Transmit+0x28>
 8005270:	1dbb      	adds	r3, r7, #6
 8005272:	881b      	ldrh	r3, [r3, #0]
 8005274:	2b00      	cmp	r3, #0
 8005276:	d101      	bne.n	800527c <HAL_UART_Transmit+0x2c>
    {
      return  HAL_ERROR;
 8005278:	2301      	movs	r3, #1
 800527a:	e08e      	b.n	800539a <HAL_UART_Transmit+0x14a>
    }

    /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
       should be aligned on a u16 frontier, as data to be filled into TDR will be
       handled through a u16 cast. */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800527c:	68fb      	ldr	r3, [r7, #12]
 800527e:	689a      	ldr	r2, [r3, #8]
 8005280:	2380      	movs	r3, #128	; 0x80
 8005282:	015b      	lsls	r3, r3, #5
 8005284:	429a      	cmp	r2, r3
 8005286:	d109      	bne.n	800529c <HAL_UART_Transmit+0x4c>
 8005288:	68fb      	ldr	r3, [r7, #12]
 800528a:	691b      	ldr	r3, [r3, #16]
 800528c:	2b00      	cmp	r3, #0
 800528e:	d105      	bne.n	800529c <HAL_UART_Transmit+0x4c>
    {
      if ((((uint32_t)pData) & 1U) != 0U)
 8005290:	68bb      	ldr	r3, [r7, #8]
 8005292:	2201      	movs	r2, #1
 8005294:	4013      	ands	r3, r2
 8005296:	d001      	beq.n	800529c <HAL_UART_Transmit+0x4c>
      {
        return  HAL_ERROR;
 8005298:	2301      	movs	r3, #1
 800529a:	e07e      	b.n	800539a <HAL_UART_Transmit+0x14a>
      }
    }

    __HAL_LOCK(huart);
 800529c:	68fb      	ldr	r3, [r7, #12]
 800529e:	2274      	movs	r2, #116	; 0x74
 80052a0:	5c9b      	ldrb	r3, [r3, r2]
 80052a2:	2b01      	cmp	r3, #1
 80052a4:	d101      	bne.n	80052aa <HAL_UART_Transmit+0x5a>
 80052a6:	2302      	movs	r3, #2
 80052a8:	e077      	b.n	800539a <HAL_UART_Transmit+0x14a>
 80052aa:	68fb      	ldr	r3, [r7, #12]
 80052ac:	2274      	movs	r2, #116	; 0x74
 80052ae:	2101      	movs	r1, #1
 80052b0:	5499      	strb	r1, [r3, r2]

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 80052b2:	68fb      	ldr	r3, [r7, #12]
 80052b4:	2280      	movs	r2, #128	; 0x80
 80052b6:	2100      	movs	r1, #0
 80052b8:	5099      	str	r1, [r3, r2]
    huart->gState = HAL_UART_STATE_BUSY_TX;
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	2221      	movs	r2, #33	; 0x21
 80052be:	679a      	str	r2, [r3, #120]	; 0x78

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 80052c0:	f7ff f8ba 	bl	8004438 <HAL_GetTick>
 80052c4:	0003      	movs	r3, r0
 80052c6:	617b      	str	r3, [r7, #20]

    huart->TxXferSize  = Size;
 80052c8:	68fb      	ldr	r3, [r7, #12]
 80052ca:	1dba      	adds	r2, r7, #6
 80052cc:	2150      	movs	r1, #80	; 0x50
 80052ce:	8812      	ldrh	r2, [r2, #0]
 80052d0:	525a      	strh	r2, [r3, r1]
    huart->TxXferCount = Size;
 80052d2:	68fb      	ldr	r3, [r7, #12]
 80052d4:	1dba      	adds	r2, r7, #6
 80052d6:	2152      	movs	r1, #82	; 0x52
 80052d8:	8812      	ldrh	r2, [r2, #0]
 80052da:	525a      	strh	r2, [r3, r1]

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80052dc:	68fb      	ldr	r3, [r7, #12]
 80052de:	689a      	ldr	r2, [r3, #8]
 80052e0:	2380      	movs	r3, #128	; 0x80
 80052e2:	015b      	lsls	r3, r3, #5
 80052e4:	429a      	cmp	r2, r3
 80052e6:	d108      	bne.n	80052fa <HAL_UART_Transmit+0xaa>
 80052e8:	68fb      	ldr	r3, [r7, #12]
 80052ea:	691b      	ldr	r3, [r3, #16]
 80052ec:	2b00      	cmp	r3, #0
 80052ee:	d104      	bne.n	80052fa <HAL_UART_Transmit+0xaa>
    {
      pdata8bits  = NULL;
 80052f0:	2300      	movs	r3, #0
 80052f2:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 80052f4:	68bb      	ldr	r3, [r7, #8]
 80052f6:	61bb      	str	r3, [r7, #24]
 80052f8:	e003      	b.n	8005302 <HAL_UART_Transmit+0xb2>
    }
    else
    {
      pdata8bits  = pData;
 80052fa:	68bb      	ldr	r3, [r7, #8]
 80052fc:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 80052fe:	2300      	movs	r3, #0
 8005300:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 8005302:	68fb      	ldr	r3, [r7, #12]
 8005304:	2274      	movs	r2, #116	; 0x74
 8005306:	2100      	movs	r1, #0
 8005308:	5499      	strb	r1, [r3, r2]

    while (huart->TxXferCount > 0U)
 800530a:	e02d      	b.n	8005368 <HAL_UART_Transmit+0x118>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800530c:	697a      	ldr	r2, [r7, #20]
 800530e:	68f8      	ldr	r0, [r7, #12]
 8005310:	683b      	ldr	r3, [r7, #0]
 8005312:	9300      	str	r3, [sp, #0]
 8005314:	0013      	movs	r3, r2
 8005316:	2200      	movs	r2, #0
 8005318:	2180      	movs	r1, #128	; 0x80
 800531a:	f000 fa7f 	bl	800581c <UART_WaitOnFlagUntilTimeout>
 800531e:	1e03      	subs	r3, r0, #0
 8005320:	d001      	beq.n	8005326 <HAL_UART_Transmit+0xd6>
      {
        return HAL_TIMEOUT;
 8005322:	2303      	movs	r3, #3
 8005324:	e039      	b.n	800539a <HAL_UART_Transmit+0x14a>
      }
      if (pdata8bits == NULL)
 8005326:	69fb      	ldr	r3, [r7, #28]
 8005328:	2b00      	cmp	r3, #0
 800532a:	d10b      	bne.n	8005344 <HAL_UART_Transmit+0xf4>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 800532c:	69bb      	ldr	r3, [r7, #24]
 800532e:	881a      	ldrh	r2, [r3, #0]
 8005330:	68fb      	ldr	r3, [r7, #12]
 8005332:	681b      	ldr	r3, [r3, #0]
 8005334:	05d2      	lsls	r2, r2, #23
 8005336:	0dd2      	lsrs	r2, r2, #23
 8005338:	b292      	uxth	r2, r2
 800533a:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata16bits++;
 800533c:	69bb      	ldr	r3, [r7, #24]
 800533e:	3302      	adds	r3, #2
 8005340:	61bb      	str	r3, [r7, #24]
 8005342:	e008      	b.n	8005356 <HAL_UART_Transmit+0x106>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8005344:	69fb      	ldr	r3, [r7, #28]
 8005346:	781a      	ldrb	r2, [r3, #0]
 8005348:	68fb      	ldr	r3, [r7, #12]
 800534a:	681b      	ldr	r3, [r3, #0]
 800534c:	b292      	uxth	r2, r2
 800534e:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata8bits++;
 8005350:	69fb      	ldr	r3, [r7, #28]
 8005352:	3301      	adds	r3, #1
 8005354:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8005356:	68fb      	ldr	r3, [r7, #12]
 8005358:	2252      	movs	r2, #82	; 0x52
 800535a:	5a9b      	ldrh	r3, [r3, r2]
 800535c:	b29b      	uxth	r3, r3
 800535e:	3b01      	subs	r3, #1
 8005360:	b299      	uxth	r1, r3
 8005362:	68fb      	ldr	r3, [r7, #12]
 8005364:	2252      	movs	r2, #82	; 0x52
 8005366:	5299      	strh	r1, [r3, r2]
    while (huart->TxXferCount > 0U)
 8005368:	68fb      	ldr	r3, [r7, #12]
 800536a:	2252      	movs	r2, #82	; 0x52
 800536c:	5a9b      	ldrh	r3, [r3, r2]
 800536e:	b29b      	uxth	r3, r3
 8005370:	2b00      	cmp	r3, #0
 8005372:	d1cb      	bne.n	800530c <HAL_UART_Transmit+0xbc>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8005374:	697a      	ldr	r2, [r7, #20]
 8005376:	68f8      	ldr	r0, [r7, #12]
 8005378:	683b      	ldr	r3, [r7, #0]
 800537a:	9300      	str	r3, [sp, #0]
 800537c:	0013      	movs	r3, r2
 800537e:	2200      	movs	r2, #0
 8005380:	2140      	movs	r1, #64	; 0x40
 8005382:	f000 fa4b 	bl	800581c <UART_WaitOnFlagUntilTimeout>
 8005386:	1e03      	subs	r3, r0, #0
 8005388:	d001      	beq.n	800538e <HAL_UART_Transmit+0x13e>
    {
      return HAL_TIMEOUT;
 800538a:	2303      	movs	r3, #3
 800538c:	e005      	b.n	800539a <HAL_UART_Transmit+0x14a>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 800538e:	68fb      	ldr	r3, [r7, #12]
 8005390:	2220      	movs	r2, #32
 8005392:	679a      	str	r2, [r3, #120]	; 0x78

    return HAL_OK;
 8005394:	2300      	movs	r3, #0
 8005396:	e000      	b.n	800539a <HAL_UART_Transmit+0x14a>
  }
  else
  {
    return HAL_BUSY;
 8005398:	2302      	movs	r3, #2
  }
}
 800539a:	0018      	movs	r0, r3
 800539c:	46bd      	mov	sp, r7
 800539e:	b008      	add	sp, #32
 80053a0:	bd80      	pop	{r7, pc}
	...

080053a4 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 80053a4:	b580      	push	{r7, lr}
 80053a6:	b088      	sub	sp, #32
 80053a8:	af00      	add	r7, sp, #0
 80053aa:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 80053ac:	231e      	movs	r3, #30
 80053ae:	18fb      	adds	r3, r7, r3
 80053b0:	2200      	movs	r2, #0
 80053b2:	701a      	strb	r2, [r3, #0]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 80053b4:	687b      	ldr	r3, [r7, #4]
 80053b6:	689a      	ldr	r2, [r3, #8]
 80053b8:	687b      	ldr	r3, [r7, #4]
 80053ba:	691b      	ldr	r3, [r3, #16]
 80053bc:	431a      	orrs	r2, r3
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	695b      	ldr	r3, [r3, #20]
 80053c2:	431a      	orrs	r2, r3
 80053c4:	687b      	ldr	r3, [r7, #4]
 80053c6:	69db      	ldr	r3, [r3, #28]
 80053c8:	4313      	orrs	r3, r2
 80053ca:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 80053cc:	687b      	ldr	r3, [r7, #4]
 80053ce:	681b      	ldr	r3, [r3, #0]
 80053d0:	681b      	ldr	r3, [r3, #0]
 80053d2:	4a8d      	ldr	r2, [pc, #564]	; (8005608 <UART_SetConfig+0x264>)
 80053d4:	4013      	ands	r3, r2
 80053d6:	0019      	movs	r1, r3
 80053d8:	687b      	ldr	r3, [r7, #4]
 80053da:	681b      	ldr	r3, [r3, #0]
 80053dc:	697a      	ldr	r2, [r7, #20]
 80053de:	430a      	orrs	r2, r1
 80053e0:	601a      	str	r2, [r3, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 80053e2:	687b      	ldr	r3, [r7, #4]
 80053e4:	681b      	ldr	r3, [r3, #0]
 80053e6:	685b      	ldr	r3, [r3, #4]
 80053e8:	4a88      	ldr	r2, [pc, #544]	; (800560c <UART_SetConfig+0x268>)
 80053ea:	4013      	ands	r3, r2
 80053ec:	0019      	movs	r1, r3
 80053ee:	687b      	ldr	r3, [r7, #4]
 80053f0:	68da      	ldr	r2, [r3, #12]
 80053f2:	687b      	ldr	r3, [r7, #4]
 80053f4:	681b      	ldr	r3, [r3, #0]
 80053f6:	430a      	orrs	r2, r1
 80053f8:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	699b      	ldr	r3, [r3, #24]
 80053fe:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 8005400:	687b      	ldr	r3, [r7, #4]
 8005402:	6a1b      	ldr	r3, [r3, #32]
 8005404:	697a      	ldr	r2, [r7, #20]
 8005406:	4313      	orrs	r3, r2
 8005408:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	681b      	ldr	r3, [r3, #0]
 800540e:	689b      	ldr	r3, [r3, #8]
 8005410:	4a7f      	ldr	r2, [pc, #508]	; (8005610 <UART_SetConfig+0x26c>)
 8005412:	4013      	ands	r3, r2
 8005414:	0019      	movs	r1, r3
 8005416:	687b      	ldr	r3, [r7, #4]
 8005418:	681b      	ldr	r3, [r3, #0]
 800541a:	697a      	ldr	r2, [r7, #20]
 800541c:	430a      	orrs	r2, r1
 800541e:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	681b      	ldr	r3, [r3, #0]
 8005424:	4a7b      	ldr	r2, [pc, #492]	; (8005614 <UART_SetConfig+0x270>)
 8005426:	4293      	cmp	r3, r2
 8005428:	d127      	bne.n	800547a <UART_SetConfig+0xd6>
 800542a:	4b7b      	ldr	r3, [pc, #492]	; (8005618 <UART_SetConfig+0x274>)
 800542c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800542e:	2203      	movs	r2, #3
 8005430:	4013      	ands	r3, r2
 8005432:	2b03      	cmp	r3, #3
 8005434:	d00d      	beq.n	8005452 <UART_SetConfig+0xae>
 8005436:	d81b      	bhi.n	8005470 <UART_SetConfig+0xcc>
 8005438:	2b02      	cmp	r3, #2
 800543a:	d014      	beq.n	8005466 <UART_SetConfig+0xc2>
 800543c:	d818      	bhi.n	8005470 <UART_SetConfig+0xcc>
 800543e:	2b00      	cmp	r3, #0
 8005440:	d002      	beq.n	8005448 <UART_SetConfig+0xa4>
 8005442:	2b01      	cmp	r3, #1
 8005444:	d00a      	beq.n	800545c <UART_SetConfig+0xb8>
 8005446:	e013      	b.n	8005470 <UART_SetConfig+0xcc>
 8005448:	231f      	movs	r3, #31
 800544a:	18fb      	adds	r3, r7, r3
 800544c:	2200      	movs	r2, #0
 800544e:	701a      	strb	r2, [r3, #0]
 8005450:	e021      	b.n	8005496 <UART_SetConfig+0xf2>
 8005452:	231f      	movs	r3, #31
 8005454:	18fb      	adds	r3, r7, r3
 8005456:	2202      	movs	r2, #2
 8005458:	701a      	strb	r2, [r3, #0]
 800545a:	e01c      	b.n	8005496 <UART_SetConfig+0xf2>
 800545c:	231f      	movs	r3, #31
 800545e:	18fb      	adds	r3, r7, r3
 8005460:	2204      	movs	r2, #4
 8005462:	701a      	strb	r2, [r3, #0]
 8005464:	e017      	b.n	8005496 <UART_SetConfig+0xf2>
 8005466:	231f      	movs	r3, #31
 8005468:	18fb      	adds	r3, r7, r3
 800546a:	2208      	movs	r2, #8
 800546c:	701a      	strb	r2, [r3, #0]
 800546e:	e012      	b.n	8005496 <UART_SetConfig+0xf2>
 8005470:	231f      	movs	r3, #31
 8005472:	18fb      	adds	r3, r7, r3
 8005474:	2210      	movs	r2, #16
 8005476:	701a      	strb	r2, [r3, #0]
 8005478:	e00d      	b.n	8005496 <UART_SetConfig+0xf2>
 800547a:	687b      	ldr	r3, [r7, #4]
 800547c:	681b      	ldr	r3, [r3, #0]
 800547e:	4a67      	ldr	r2, [pc, #412]	; (800561c <UART_SetConfig+0x278>)
 8005480:	4293      	cmp	r3, r2
 8005482:	d104      	bne.n	800548e <UART_SetConfig+0xea>
 8005484:	231f      	movs	r3, #31
 8005486:	18fb      	adds	r3, r7, r3
 8005488:	2200      	movs	r2, #0
 800548a:	701a      	strb	r2, [r3, #0]
 800548c:	e003      	b.n	8005496 <UART_SetConfig+0xf2>
 800548e:	231f      	movs	r3, #31
 8005490:	18fb      	adds	r3, r7, r3
 8005492:	2210      	movs	r2, #16
 8005494:	701a      	strb	r2, [r3, #0]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8005496:	687b      	ldr	r3, [r7, #4]
 8005498:	69da      	ldr	r2, [r3, #28]
 800549a:	2380      	movs	r3, #128	; 0x80
 800549c:	021b      	lsls	r3, r3, #8
 800549e:	429a      	cmp	r2, r3
 80054a0:	d15d      	bne.n	800555e <UART_SetConfig+0x1ba>
  {
    switch (clocksource)
 80054a2:	231f      	movs	r3, #31
 80054a4:	18fb      	adds	r3, r7, r3
 80054a6:	781b      	ldrb	r3, [r3, #0]
 80054a8:	2b08      	cmp	r3, #8
 80054aa:	d015      	beq.n	80054d8 <UART_SetConfig+0x134>
 80054ac:	dc18      	bgt.n	80054e0 <UART_SetConfig+0x13c>
 80054ae:	2b04      	cmp	r3, #4
 80054b0:	d00d      	beq.n	80054ce <UART_SetConfig+0x12a>
 80054b2:	dc15      	bgt.n	80054e0 <UART_SetConfig+0x13c>
 80054b4:	2b00      	cmp	r3, #0
 80054b6:	d002      	beq.n	80054be <UART_SetConfig+0x11a>
 80054b8:	2b02      	cmp	r3, #2
 80054ba:	d005      	beq.n	80054c8 <UART_SetConfig+0x124>
 80054bc:	e010      	b.n	80054e0 <UART_SetConfig+0x13c>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 80054be:	f7ff fe5d 	bl	800517c <HAL_RCC_GetPCLK1Freq>
 80054c2:	0003      	movs	r3, r0
 80054c4:	61bb      	str	r3, [r7, #24]
        break;
 80054c6:	e012      	b.n	80054ee <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 80054c8:	4b55      	ldr	r3, [pc, #340]	; (8005620 <UART_SetConfig+0x27c>)
 80054ca:	61bb      	str	r3, [r7, #24]
        break;
 80054cc:	e00f      	b.n	80054ee <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 80054ce:	f7ff fde7 	bl	80050a0 <HAL_RCC_GetSysClockFreq>
 80054d2:	0003      	movs	r3, r0
 80054d4:	61bb      	str	r3, [r7, #24]
        break;
 80054d6:	e00a      	b.n	80054ee <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80054d8:	2380      	movs	r3, #128	; 0x80
 80054da:	021b      	lsls	r3, r3, #8
 80054dc:	61bb      	str	r3, [r7, #24]
        break;
 80054de:	e006      	b.n	80054ee <UART_SetConfig+0x14a>
      default:
        pclk = 0U;
 80054e0:	2300      	movs	r3, #0
 80054e2:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 80054e4:	231e      	movs	r3, #30
 80054e6:	18fb      	adds	r3, r7, r3
 80054e8:	2201      	movs	r2, #1
 80054ea:	701a      	strb	r2, [r3, #0]
        break;
 80054ec:	46c0      	nop			; (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 80054ee:	69bb      	ldr	r3, [r7, #24]
 80054f0:	2b00      	cmp	r3, #0
 80054f2:	d100      	bne.n	80054f6 <UART_SetConfig+0x152>
 80054f4:	e07b      	b.n	80055ee <UART_SetConfig+0x24a>
    {
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 80054f6:	69bb      	ldr	r3, [r7, #24]
 80054f8:	005a      	lsls	r2, r3, #1
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	685b      	ldr	r3, [r3, #4]
 80054fe:	085b      	lsrs	r3, r3, #1
 8005500:	18d2      	adds	r2, r2, r3
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	685b      	ldr	r3, [r3, #4]
 8005506:	0019      	movs	r1, r3
 8005508:	0010      	movs	r0, r2
 800550a:	f7fa fe19 	bl	8000140 <__udivsi3>
 800550e:	0003      	movs	r3, r0
 8005510:	b29b      	uxth	r3, r3
 8005512:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8005514:	693b      	ldr	r3, [r7, #16]
 8005516:	2b0f      	cmp	r3, #15
 8005518:	d91c      	bls.n	8005554 <UART_SetConfig+0x1b0>
 800551a:	693a      	ldr	r2, [r7, #16]
 800551c:	2380      	movs	r3, #128	; 0x80
 800551e:	025b      	lsls	r3, r3, #9
 8005520:	429a      	cmp	r2, r3
 8005522:	d217      	bcs.n	8005554 <UART_SetConfig+0x1b0>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8005524:	693b      	ldr	r3, [r7, #16]
 8005526:	b29a      	uxth	r2, r3
 8005528:	200e      	movs	r0, #14
 800552a:	183b      	adds	r3, r7, r0
 800552c:	210f      	movs	r1, #15
 800552e:	438a      	bics	r2, r1
 8005530:	801a      	strh	r2, [r3, #0]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8005532:	693b      	ldr	r3, [r7, #16]
 8005534:	085b      	lsrs	r3, r3, #1
 8005536:	b29b      	uxth	r3, r3
 8005538:	2207      	movs	r2, #7
 800553a:	4013      	ands	r3, r2
 800553c:	b299      	uxth	r1, r3
 800553e:	183b      	adds	r3, r7, r0
 8005540:	183a      	adds	r2, r7, r0
 8005542:	8812      	ldrh	r2, [r2, #0]
 8005544:	430a      	orrs	r2, r1
 8005546:	801a      	strh	r2, [r3, #0]
        huart->Instance->BRR = brrtemp;
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	681b      	ldr	r3, [r3, #0]
 800554c:	183a      	adds	r2, r7, r0
 800554e:	8812      	ldrh	r2, [r2, #0]
 8005550:	60da      	str	r2, [r3, #12]
 8005552:	e04c      	b.n	80055ee <UART_SetConfig+0x24a>
      }
      else
      {
        ret = HAL_ERROR;
 8005554:	231e      	movs	r3, #30
 8005556:	18fb      	adds	r3, r7, r3
 8005558:	2201      	movs	r2, #1
 800555a:	701a      	strb	r2, [r3, #0]
 800555c:	e047      	b.n	80055ee <UART_SetConfig+0x24a>
      }
    }
  }
  else
  {
    switch (clocksource)
 800555e:	231f      	movs	r3, #31
 8005560:	18fb      	adds	r3, r7, r3
 8005562:	781b      	ldrb	r3, [r3, #0]
 8005564:	2b08      	cmp	r3, #8
 8005566:	d015      	beq.n	8005594 <UART_SetConfig+0x1f0>
 8005568:	dc18      	bgt.n	800559c <UART_SetConfig+0x1f8>
 800556a:	2b04      	cmp	r3, #4
 800556c:	d00d      	beq.n	800558a <UART_SetConfig+0x1e6>
 800556e:	dc15      	bgt.n	800559c <UART_SetConfig+0x1f8>
 8005570:	2b00      	cmp	r3, #0
 8005572:	d002      	beq.n	800557a <UART_SetConfig+0x1d6>
 8005574:	2b02      	cmp	r3, #2
 8005576:	d005      	beq.n	8005584 <UART_SetConfig+0x1e0>
 8005578:	e010      	b.n	800559c <UART_SetConfig+0x1f8>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 800557a:	f7ff fdff 	bl	800517c <HAL_RCC_GetPCLK1Freq>
 800557e:	0003      	movs	r3, r0
 8005580:	61bb      	str	r3, [r7, #24]
        break;
 8005582:	e012      	b.n	80055aa <UART_SetConfig+0x206>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8005584:	4b26      	ldr	r3, [pc, #152]	; (8005620 <UART_SetConfig+0x27c>)
 8005586:	61bb      	str	r3, [r7, #24]
        break;
 8005588:	e00f      	b.n	80055aa <UART_SetConfig+0x206>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 800558a:	f7ff fd89 	bl	80050a0 <HAL_RCC_GetSysClockFreq>
 800558e:	0003      	movs	r3, r0
 8005590:	61bb      	str	r3, [r7, #24]
        break;
 8005592:	e00a      	b.n	80055aa <UART_SetConfig+0x206>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8005594:	2380      	movs	r3, #128	; 0x80
 8005596:	021b      	lsls	r3, r3, #8
 8005598:	61bb      	str	r3, [r7, #24]
        break;
 800559a:	e006      	b.n	80055aa <UART_SetConfig+0x206>
      default:
        pclk = 0U;
 800559c:	2300      	movs	r3, #0
 800559e:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 80055a0:	231e      	movs	r3, #30
 80055a2:	18fb      	adds	r3, r7, r3
 80055a4:	2201      	movs	r2, #1
 80055a6:	701a      	strb	r2, [r3, #0]
        break;
 80055a8:	46c0      	nop			; (mov r8, r8)
    }

    if (pclk != 0U)
 80055aa:	69bb      	ldr	r3, [r7, #24]
 80055ac:	2b00      	cmp	r3, #0
 80055ae:	d01e      	beq.n	80055ee <UART_SetConfig+0x24a>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	685b      	ldr	r3, [r3, #4]
 80055b4:	085a      	lsrs	r2, r3, #1
 80055b6:	69bb      	ldr	r3, [r7, #24]
 80055b8:	18d2      	adds	r2, r2, r3
 80055ba:	687b      	ldr	r3, [r7, #4]
 80055bc:	685b      	ldr	r3, [r3, #4]
 80055be:	0019      	movs	r1, r3
 80055c0:	0010      	movs	r0, r2
 80055c2:	f7fa fdbd 	bl	8000140 <__udivsi3>
 80055c6:	0003      	movs	r3, r0
 80055c8:	b29b      	uxth	r3, r3
 80055ca:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80055cc:	693b      	ldr	r3, [r7, #16]
 80055ce:	2b0f      	cmp	r3, #15
 80055d0:	d909      	bls.n	80055e6 <UART_SetConfig+0x242>
 80055d2:	693a      	ldr	r2, [r7, #16]
 80055d4:	2380      	movs	r3, #128	; 0x80
 80055d6:	025b      	lsls	r3, r3, #9
 80055d8:	429a      	cmp	r2, r3
 80055da:	d204      	bcs.n	80055e6 <UART_SetConfig+0x242>
      {
        huart->Instance->BRR = usartdiv;
 80055dc:	687b      	ldr	r3, [r7, #4]
 80055de:	681b      	ldr	r3, [r3, #0]
 80055e0:	693a      	ldr	r2, [r7, #16]
 80055e2:	60da      	str	r2, [r3, #12]
 80055e4:	e003      	b.n	80055ee <UART_SetConfig+0x24a>
      }
      else
      {
        ret = HAL_ERROR;
 80055e6:	231e      	movs	r3, #30
 80055e8:	18fb      	adds	r3, r7, r3
 80055ea:	2201      	movs	r2, #1
 80055ec:	701a      	strb	r2, [r3, #0]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	2200      	movs	r2, #0
 80055f2:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 80055f4:	687b      	ldr	r3, [r7, #4]
 80055f6:	2200      	movs	r2, #0
 80055f8:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 80055fa:	231e      	movs	r3, #30
 80055fc:	18fb      	adds	r3, r7, r3
 80055fe:	781b      	ldrb	r3, [r3, #0]
}
 8005600:	0018      	movs	r0, r3
 8005602:	46bd      	mov	sp, r7
 8005604:	b008      	add	sp, #32
 8005606:	bd80      	pop	{r7, pc}
 8005608:	ffff69f3 	.word	0xffff69f3
 800560c:	ffffcfff 	.word	0xffffcfff
 8005610:	fffff4ff 	.word	0xfffff4ff
 8005614:	40013800 	.word	0x40013800
 8005618:	40021000 	.word	0x40021000
 800561c:	40004400 	.word	0x40004400
 8005620:	007a1200 	.word	0x007a1200

08005624 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8005624:	b580      	push	{r7, lr}
 8005626:	b082      	sub	sp, #8
 8005628:	af00      	add	r7, sp, #0
 800562a:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800562c:	687b      	ldr	r3, [r7, #4]
 800562e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005630:	2201      	movs	r2, #1
 8005632:	4013      	ands	r3, r2
 8005634:	d00b      	beq.n	800564e <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8005636:	687b      	ldr	r3, [r7, #4]
 8005638:	681b      	ldr	r3, [r3, #0]
 800563a:	685b      	ldr	r3, [r3, #4]
 800563c:	4a4a      	ldr	r2, [pc, #296]	; (8005768 <UART_AdvFeatureConfig+0x144>)
 800563e:	4013      	ands	r3, r2
 8005640:	0019      	movs	r1, r3
 8005642:	687b      	ldr	r3, [r7, #4]
 8005644:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005646:	687b      	ldr	r3, [r7, #4]
 8005648:	681b      	ldr	r3, [r3, #0]
 800564a:	430a      	orrs	r2, r1
 800564c:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800564e:	687b      	ldr	r3, [r7, #4]
 8005650:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005652:	2202      	movs	r2, #2
 8005654:	4013      	ands	r3, r2
 8005656:	d00b      	beq.n	8005670 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8005658:	687b      	ldr	r3, [r7, #4]
 800565a:	681b      	ldr	r3, [r3, #0]
 800565c:	685b      	ldr	r3, [r3, #4]
 800565e:	4a43      	ldr	r2, [pc, #268]	; (800576c <UART_AdvFeatureConfig+0x148>)
 8005660:	4013      	ands	r3, r2
 8005662:	0019      	movs	r1, r3
 8005664:	687b      	ldr	r3, [r7, #4]
 8005666:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005668:	687b      	ldr	r3, [r7, #4]
 800566a:	681b      	ldr	r3, [r3, #0]
 800566c:	430a      	orrs	r2, r1
 800566e:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005674:	2204      	movs	r2, #4
 8005676:	4013      	ands	r3, r2
 8005678:	d00b      	beq.n	8005692 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 800567a:	687b      	ldr	r3, [r7, #4]
 800567c:	681b      	ldr	r3, [r3, #0]
 800567e:	685b      	ldr	r3, [r3, #4]
 8005680:	4a3b      	ldr	r2, [pc, #236]	; (8005770 <UART_AdvFeatureConfig+0x14c>)
 8005682:	4013      	ands	r3, r2
 8005684:	0019      	movs	r1, r3
 8005686:	687b      	ldr	r3, [r7, #4]
 8005688:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800568a:	687b      	ldr	r3, [r7, #4]
 800568c:	681b      	ldr	r3, [r3, #0]
 800568e:	430a      	orrs	r2, r1
 8005690:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8005692:	687b      	ldr	r3, [r7, #4]
 8005694:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005696:	2208      	movs	r2, #8
 8005698:	4013      	ands	r3, r2
 800569a:	d00b      	beq.n	80056b4 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	681b      	ldr	r3, [r3, #0]
 80056a0:	685b      	ldr	r3, [r3, #4]
 80056a2:	4a34      	ldr	r2, [pc, #208]	; (8005774 <UART_AdvFeatureConfig+0x150>)
 80056a4:	4013      	ands	r3, r2
 80056a6:	0019      	movs	r1, r3
 80056a8:	687b      	ldr	r3, [r7, #4]
 80056aa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80056ac:	687b      	ldr	r3, [r7, #4]
 80056ae:	681b      	ldr	r3, [r3, #0]
 80056b0:	430a      	orrs	r2, r1
 80056b2:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 80056b4:	687b      	ldr	r3, [r7, #4]
 80056b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056b8:	2210      	movs	r2, #16
 80056ba:	4013      	ands	r3, r2
 80056bc:	d00b      	beq.n	80056d6 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 80056be:	687b      	ldr	r3, [r7, #4]
 80056c0:	681b      	ldr	r3, [r3, #0]
 80056c2:	689b      	ldr	r3, [r3, #8]
 80056c4:	4a2c      	ldr	r2, [pc, #176]	; (8005778 <UART_AdvFeatureConfig+0x154>)
 80056c6:	4013      	ands	r3, r2
 80056c8:	0019      	movs	r1, r3
 80056ca:	687b      	ldr	r3, [r7, #4]
 80056cc:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	430a      	orrs	r2, r1
 80056d4:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 80056d6:	687b      	ldr	r3, [r7, #4]
 80056d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056da:	2220      	movs	r2, #32
 80056dc:	4013      	ands	r3, r2
 80056de:	d00b      	beq.n	80056f8 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 80056e0:	687b      	ldr	r3, [r7, #4]
 80056e2:	681b      	ldr	r3, [r3, #0]
 80056e4:	689b      	ldr	r3, [r3, #8]
 80056e6:	4a25      	ldr	r2, [pc, #148]	; (800577c <UART_AdvFeatureConfig+0x158>)
 80056e8:	4013      	ands	r3, r2
 80056ea:	0019      	movs	r1, r3
 80056ec:	687b      	ldr	r3, [r7, #4]
 80056ee:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80056f0:	687b      	ldr	r3, [r7, #4]
 80056f2:	681b      	ldr	r3, [r3, #0]
 80056f4:	430a      	orrs	r2, r1
 80056f6:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 80056f8:	687b      	ldr	r3, [r7, #4]
 80056fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80056fc:	2240      	movs	r2, #64	; 0x40
 80056fe:	4013      	ands	r3, r2
 8005700:	d01d      	beq.n	800573e <UART_AdvFeatureConfig+0x11a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8005702:	687b      	ldr	r3, [r7, #4]
 8005704:	681b      	ldr	r3, [r3, #0]
 8005706:	685b      	ldr	r3, [r3, #4]
 8005708:	4a1d      	ldr	r2, [pc, #116]	; (8005780 <UART_AdvFeatureConfig+0x15c>)
 800570a:	4013      	ands	r3, r2
 800570c:	0019      	movs	r1, r3
 800570e:	687b      	ldr	r3, [r7, #4]
 8005710:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005712:	687b      	ldr	r3, [r7, #4]
 8005714:	681b      	ldr	r3, [r3, #0]
 8005716:	430a      	orrs	r2, r1
 8005718:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800571a:	687b      	ldr	r3, [r7, #4]
 800571c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800571e:	2380      	movs	r3, #128	; 0x80
 8005720:	035b      	lsls	r3, r3, #13
 8005722:	429a      	cmp	r2, r3
 8005724:	d10b      	bne.n	800573e <UART_AdvFeatureConfig+0x11a>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8005726:	687b      	ldr	r3, [r7, #4]
 8005728:	681b      	ldr	r3, [r3, #0]
 800572a:	685b      	ldr	r3, [r3, #4]
 800572c:	4a15      	ldr	r2, [pc, #84]	; (8005784 <UART_AdvFeatureConfig+0x160>)
 800572e:	4013      	ands	r3, r2
 8005730:	0019      	movs	r1, r3
 8005732:	687b      	ldr	r3, [r7, #4]
 8005734:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005736:	687b      	ldr	r3, [r7, #4]
 8005738:	681b      	ldr	r3, [r3, #0]
 800573a:	430a      	orrs	r2, r1
 800573c:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800573e:	687b      	ldr	r3, [r7, #4]
 8005740:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005742:	2280      	movs	r2, #128	; 0x80
 8005744:	4013      	ands	r3, r2
 8005746:	d00b      	beq.n	8005760 <UART_AdvFeatureConfig+0x13c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8005748:	687b      	ldr	r3, [r7, #4]
 800574a:	681b      	ldr	r3, [r3, #0]
 800574c:	685b      	ldr	r3, [r3, #4]
 800574e:	4a0e      	ldr	r2, [pc, #56]	; (8005788 <UART_AdvFeatureConfig+0x164>)
 8005750:	4013      	ands	r3, r2
 8005752:	0019      	movs	r1, r3
 8005754:	687b      	ldr	r3, [r7, #4]
 8005756:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8005758:	687b      	ldr	r3, [r7, #4]
 800575a:	681b      	ldr	r3, [r3, #0]
 800575c:	430a      	orrs	r2, r1
 800575e:	605a      	str	r2, [r3, #4]
  }
}
 8005760:	46c0      	nop			; (mov r8, r8)
 8005762:	46bd      	mov	sp, r7
 8005764:	b002      	add	sp, #8
 8005766:	bd80      	pop	{r7, pc}
 8005768:	fffdffff 	.word	0xfffdffff
 800576c:	fffeffff 	.word	0xfffeffff
 8005770:	fffbffff 	.word	0xfffbffff
 8005774:	ffff7fff 	.word	0xffff7fff
 8005778:	ffffefff 	.word	0xffffefff
 800577c:	ffffdfff 	.word	0xffffdfff
 8005780:	ffefffff 	.word	0xffefffff
 8005784:	ff9fffff 	.word	0xff9fffff
 8005788:	fff7ffff 	.word	0xfff7ffff

0800578c <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 800578c:	b580      	push	{r7, lr}
 800578e:	b086      	sub	sp, #24
 8005790:	af02      	add	r7, sp, #8
 8005792:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8005794:	687b      	ldr	r3, [r7, #4]
 8005796:	2280      	movs	r2, #128	; 0x80
 8005798:	2100      	movs	r1, #0
 800579a:	5099      	str	r1, [r3, r2]

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 800579c:	f7fe fe4c 	bl	8004438 <HAL_GetTick>
 80057a0:	0003      	movs	r3, r0
 80057a2:	60fb      	str	r3, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80057a4:	687b      	ldr	r3, [r7, #4]
 80057a6:	681b      	ldr	r3, [r3, #0]
 80057a8:	681b      	ldr	r3, [r3, #0]
 80057aa:	2208      	movs	r2, #8
 80057ac:	4013      	ands	r3, r2
 80057ae:	2b08      	cmp	r3, #8
 80057b0:	d10c      	bne.n	80057cc <UART_CheckIdleState+0x40>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 80057b2:	68fb      	ldr	r3, [r7, #12]
 80057b4:	2280      	movs	r2, #128	; 0x80
 80057b6:	0391      	lsls	r1, r2, #14
 80057b8:	6878      	ldr	r0, [r7, #4]
 80057ba:	4a17      	ldr	r2, [pc, #92]	; (8005818 <UART_CheckIdleState+0x8c>)
 80057bc:	9200      	str	r2, [sp, #0]
 80057be:	2200      	movs	r2, #0
 80057c0:	f000 f82c 	bl	800581c <UART_WaitOnFlagUntilTimeout>
 80057c4:	1e03      	subs	r3, r0, #0
 80057c6:	d001      	beq.n	80057cc <UART_CheckIdleState+0x40>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 80057c8:	2303      	movs	r3, #3
 80057ca:	e021      	b.n	8005810 <UART_CheckIdleState+0x84>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 80057cc:	687b      	ldr	r3, [r7, #4]
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	681b      	ldr	r3, [r3, #0]
 80057d2:	2204      	movs	r2, #4
 80057d4:	4013      	ands	r3, r2
 80057d6:	2b04      	cmp	r3, #4
 80057d8:	d10c      	bne.n	80057f4 <UART_CheckIdleState+0x68>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 80057da:	68fb      	ldr	r3, [r7, #12]
 80057dc:	2280      	movs	r2, #128	; 0x80
 80057de:	03d1      	lsls	r1, r2, #15
 80057e0:	6878      	ldr	r0, [r7, #4]
 80057e2:	4a0d      	ldr	r2, [pc, #52]	; (8005818 <UART_CheckIdleState+0x8c>)
 80057e4:	9200      	str	r2, [sp, #0]
 80057e6:	2200      	movs	r2, #0
 80057e8:	f000 f818 	bl	800581c <UART_WaitOnFlagUntilTimeout>
 80057ec:	1e03      	subs	r3, r0, #0
 80057ee:	d001      	beq.n	80057f4 <UART_CheckIdleState+0x68>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 80057f0:	2303      	movs	r3, #3
 80057f2:	e00d      	b.n	8005810 <UART_CheckIdleState+0x84>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 80057f4:	687b      	ldr	r3, [r7, #4]
 80057f6:	2220      	movs	r2, #32
 80057f8:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 80057fa:	687b      	ldr	r3, [r7, #4]
 80057fc:	2220      	movs	r2, #32
 80057fe:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8005800:	687b      	ldr	r3, [r7, #4]
 8005802:	2200      	movs	r2, #0
 8005804:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	2274      	movs	r2, #116	; 0x74
 800580a:	2100      	movs	r1, #0
 800580c:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 800580e:	2300      	movs	r3, #0
}
 8005810:	0018      	movs	r0, r3
 8005812:	46bd      	mov	sp, r7
 8005814:	b004      	add	sp, #16
 8005816:	bd80      	pop	{r7, pc}
 8005818:	01ffffff 	.word	0x01ffffff

0800581c <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 800581c:	b580      	push	{r7, lr}
 800581e:	b094      	sub	sp, #80	; 0x50
 8005820:	af00      	add	r7, sp, #0
 8005822:	60f8      	str	r0, [r7, #12]
 8005824:	60b9      	str	r1, [r7, #8]
 8005826:	603b      	str	r3, [r7, #0]
 8005828:	1dfb      	adds	r3, r7, #7
 800582a:	701a      	strb	r2, [r3, #0]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800582c:	e0a3      	b.n	8005976 <UART_WaitOnFlagUntilTimeout+0x15a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800582e:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8005830:	3301      	adds	r3, #1
 8005832:	d100      	bne.n	8005836 <UART_WaitOnFlagUntilTimeout+0x1a>
 8005834:	e09f      	b.n	8005976 <UART_WaitOnFlagUntilTimeout+0x15a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005836:	f7fe fdff 	bl	8004438 <HAL_GetTick>
 800583a:	0002      	movs	r2, r0
 800583c:	683b      	ldr	r3, [r7, #0]
 800583e:	1ad3      	subs	r3, r2, r3
 8005840:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8005842:	429a      	cmp	r2, r3
 8005844:	d302      	bcc.n	800584c <UART_WaitOnFlagUntilTimeout+0x30>
 8005846:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8005848:	2b00      	cmp	r3, #0
 800584a:	d13d      	bne.n	80058c8 <UART_WaitOnFlagUntilTimeout+0xac>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800584c:	f3ef 8310 	mrs	r3, PRIMASK
 8005850:	62bb      	str	r3, [r7, #40]	; 0x28
  return(result);
 8005852:	6abb      	ldr	r3, [r7, #40]	; 0x28
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
           interrupts for the interrupt process */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8005854:	647b      	str	r3, [r7, #68]	; 0x44
 8005856:	2301      	movs	r3, #1
 8005858:	62fb      	str	r3, [r7, #44]	; 0x2c
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800585a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800585c:	f383 8810 	msr	PRIMASK, r3
}
 8005860:	46c0      	nop			; (mov r8, r8)
 8005862:	68fb      	ldr	r3, [r7, #12]
 8005864:	681b      	ldr	r3, [r3, #0]
 8005866:	681a      	ldr	r2, [r3, #0]
 8005868:	68fb      	ldr	r3, [r7, #12]
 800586a:	681b      	ldr	r3, [r3, #0]
 800586c:	494c      	ldr	r1, [pc, #304]	; (80059a0 <UART_WaitOnFlagUntilTimeout+0x184>)
 800586e:	400a      	ands	r2, r1
 8005870:	601a      	str	r2, [r3, #0]
 8005872:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005874:	633b      	str	r3, [r7, #48]	; 0x30
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005876:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005878:	f383 8810 	msr	PRIMASK, r3
}
 800587c:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800587e:	f3ef 8310 	mrs	r3, PRIMASK
 8005882:	637b      	str	r3, [r7, #52]	; 0x34
  return(result);
 8005884:	6b7b      	ldr	r3, [r7, #52]	; 0x34
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8005886:	643b      	str	r3, [r7, #64]	; 0x40
 8005888:	2301      	movs	r3, #1
 800588a:	63bb      	str	r3, [r7, #56]	; 0x38
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800588c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800588e:	f383 8810 	msr	PRIMASK, r3
}
 8005892:	46c0      	nop			; (mov r8, r8)
 8005894:	68fb      	ldr	r3, [r7, #12]
 8005896:	681b      	ldr	r3, [r3, #0]
 8005898:	689a      	ldr	r2, [r3, #8]
 800589a:	68fb      	ldr	r3, [r7, #12]
 800589c:	681b      	ldr	r3, [r3, #0]
 800589e:	2101      	movs	r1, #1
 80058a0:	438a      	bics	r2, r1
 80058a2:	609a      	str	r2, [r3, #8]
 80058a4:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80058a6:	63fb      	str	r3, [r7, #60]	; 0x3c
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 80058a8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80058aa:	f383 8810 	msr	PRIMASK, r3
}
 80058ae:	46c0      	nop			; (mov r8, r8)

        huart->gState = HAL_UART_STATE_READY;
 80058b0:	68fb      	ldr	r3, [r7, #12]
 80058b2:	2220      	movs	r2, #32
 80058b4:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 80058b6:	68fb      	ldr	r3, [r7, #12]
 80058b8:	2220      	movs	r2, #32
 80058ba:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 80058bc:	68fb      	ldr	r3, [r7, #12]
 80058be:	2274      	movs	r2, #116	; 0x74
 80058c0:	2100      	movs	r1, #0
 80058c2:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 80058c4:	2303      	movs	r3, #3
 80058c6:	e067      	b.n	8005998 <UART_WaitOnFlagUntilTimeout+0x17c>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 80058c8:	68fb      	ldr	r3, [r7, #12]
 80058ca:	681b      	ldr	r3, [r3, #0]
 80058cc:	681b      	ldr	r3, [r3, #0]
 80058ce:	2204      	movs	r2, #4
 80058d0:	4013      	ands	r3, r2
 80058d2:	d050      	beq.n	8005976 <UART_WaitOnFlagUntilTimeout+0x15a>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 80058d4:	68fb      	ldr	r3, [r7, #12]
 80058d6:	681b      	ldr	r3, [r3, #0]
 80058d8:	69da      	ldr	r2, [r3, #28]
 80058da:	2380      	movs	r3, #128	; 0x80
 80058dc:	011b      	lsls	r3, r3, #4
 80058de:	401a      	ands	r2, r3
 80058e0:	2380      	movs	r3, #128	; 0x80
 80058e2:	011b      	lsls	r3, r3, #4
 80058e4:	429a      	cmp	r2, r3
 80058e6:	d146      	bne.n	8005976 <UART_WaitOnFlagUntilTimeout+0x15a>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80058e8:	68fb      	ldr	r3, [r7, #12]
 80058ea:	681b      	ldr	r3, [r3, #0]
 80058ec:	2280      	movs	r2, #128	; 0x80
 80058ee:	0112      	lsls	r2, r2, #4
 80058f0:	621a      	str	r2, [r3, #32]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80058f2:	f3ef 8310 	mrs	r3, PRIMASK
 80058f6:	613b      	str	r3, [r7, #16]
  return(result);
 80058f8:	693b      	ldr	r3, [r7, #16]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 80058fa:	64fb      	str	r3, [r7, #76]	; 0x4c
 80058fc:	2301      	movs	r3, #1
 80058fe:	617b      	str	r3, [r7, #20]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005900:	697b      	ldr	r3, [r7, #20]
 8005902:	f383 8810 	msr	PRIMASK, r3
}
 8005906:	46c0      	nop			; (mov r8, r8)
 8005908:	68fb      	ldr	r3, [r7, #12]
 800590a:	681b      	ldr	r3, [r3, #0]
 800590c:	681a      	ldr	r2, [r3, #0]
 800590e:	68fb      	ldr	r3, [r7, #12]
 8005910:	681b      	ldr	r3, [r3, #0]
 8005912:	4923      	ldr	r1, [pc, #140]	; (80059a0 <UART_WaitOnFlagUntilTimeout+0x184>)
 8005914:	400a      	ands	r2, r1
 8005916:	601a      	str	r2, [r3, #0]
 8005918:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800591a:	61bb      	str	r3, [r7, #24]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800591c:	69bb      	ldr	r3, [r7, #24]
 800591e:	f383 8810 	msr	PRIMASK, r3
}
 8005922:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8005924:	f3ef 8310 	mrs	r3, PRIMASK
 8005928:	61fb      	str	r3, [r7, #28]
  return(result);
 800592a:	69fb      	ldr	r3, [r7, #28]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800592c:	64bb      	str	r3, [r7, #72]	; 0x48
 800592e:	2301      	movs	r3, #1
 8005930:	623b      	str	r3, [r7, #32]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005932:	6a3b      	ldr	r3, [r7, #32]
 8005934:	f383 8810 	msr	PRIMASK, r3
}
 8005938:	46c0      	nop			; (mov r8, r8)
 800593a:	68fb      	ldr	r3, [r7, #12]
 800593c:	681b      	ldr	r3, [r3, #0]
 800593e:	689a      	ldr	r2, [r3, #8]
 8005940:	68fb      	ldr	r3, [r7, #12]
 8005942:	681b      	ldr	r3, [r3, #0]
 8005944:	2101      	movs	r1, #1
 8005946:	438a      	bics	r2, r1
 8005948:	609a      	str	r2, [r3, #8]
 800594a:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800594c:	627b      	str	r3, [r7, #36]	; 0x24
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 800594e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005950:	f383 8810 	msr	PRIMASK, r3
}
 8005954:	46c0      	nop			; (mov r8, r8)

          huart->gState = HAL_UART_STATE_READY;
 8005956:	68fb      	ldr	r3, [r7, #12]
 8005958:	2220      	movs	r2, #32
 800595a:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 800595c:	68fb      	ldr	r3, [r7, #12]
 800595e:	2220      	movs	r2, #32
 8005960:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8005962:	68fb      	ldr	r3, [r7, #12]
 8005964:	2280      	movs	r2, #128	; 0x80
 8005966:	2120      	movs	r1, #32
 8005968:	5099      	str	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 800596a:	68fb      	ldr	r3, [r7, #12]
 800596c:	2274      	movs	r2, #116	; 0x74
 800596e:	2100      	movs	r1, #0
 8005970:	5499      	strb	r1, [r3, r2]

          return HAL_TIMEOUT;
 8005972:	2303      	movs	r3, #3
 8005974:	e010      	b.n	8005998 <UART_WaitOnFlagUntilTimeout+0x17c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8005976:	68fb      	ldr	r3, [r7, #12]
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	69db      	ldr	r3, [r3, #28]
 800597c:	68ba      	ldr	r2, [r7, #8]
 800597e:	4013      	ands	r3, r2
 8005980:	68ba      	ldr	r2, [r7, #8]
 8005982:	1ad3      	subs	r3, r2, r3
 8005984:	425a      	negs	r2, r3
 8005986:	4153      	adcs	r3, r2
 8005988:	b2db      	uxtb	r3, r3
 800598a:	001a      	movs	r2, r3
 800598c:	1dfb      	adds	r3, r7, #7
 800598e:	781b      	ldrb	r3, [r3, #0]
 8005990:	429a      	cmp	r2, r3
 8005992:	d100      	bne.n	8005996 <UART_WaitOnFlagUntilTimeout+0x17a>
 8005994:	e74b      	b.n	800582e <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8005996:	2300      	movs	r3, #0
}
 8005998:	0018      	movs	r0, r3
 800599a:	46bd      	mov	sp, r7
 800599c:	b014      	add	sp, #80	; 0x50
 800599e:	bd80      	pop	{r7, pc}
 80059a0:	fffffe5f 	.word	0xfffffe5f

080059a4 <__errno>:
 80059a4:	4b01      	ldr	r3, [pc, #4]	; (80059ac <__errno+0x8>)
 80059a6:	6818      	ldr	r0, [r3, #0]
 80059a8:	4770      	bx	lr
 80059aa:	46c0      	nop			; (mov r8, r8)
 80059ac:	2000000c 	.word	0x2000000c

080059b0 <__libc_init_array>:
 80059b0:	b570      	push	{r4, r5, r6, lr}
 80059b2:	2600      	movs	r6, #0
 80059b4:	4d0c      	ldr	r5, [pc, #48]	; (80059e8 <__libc_init_array+0x38>)
 80059b6:	4c0d      	ldr	r4, [pc, #52]	; (80059ec <__libc_init_array+0x3c>)
 80059b8:	1b64      	subs	r4, r4, r5
 80059ba:	10a4      	asrs	r4, r4, #2
 80059bc:	42a6      	cmp	r6, r4
 80059be:	d109      	bne.n	80059d4 <__libc_init_array+0x24>
 80059c0:	2600      	movs	r6, #0
 80059c2:	f002 ffbb 	bl	800893c <_init>
 80059c6:	4d0a      	ldr	r5, [pc, #40]	; (80059f0 <__libc_init_array+0x40>)
 80059c8:	4c0a      	ldr	r4, [pc, #40]	; (80059f4 <__libc_init_array+0x44>)
 80059ca:	1b64      	subs	r4, r4, r5
 80059cc:	10a4      	asrs	r4, r4, #2
 80059ce:	42a6      	cmp	r6, r4
 80059d0:	d105      	bne.n	80059de <__libc_init_array+0x2e>
 80059d2:	bd70      	pop	{r4, r5, r6, pc}
 80059d4:	00b3      	lsls	r3, r6, #2
 80059d6:	58eb      	ldr	r3, [r5, r3]
 80059d8:	4798      	blx	r3
 80059da:	3601      	adds	r6, #1
 80059dc:	e7ee      	b.n	80059bc <__libc_init_array+0xc>
 80059de:	00b3      	lsls	r3, r6, #2
 80059e0:	58eb      	ldr	r3, [r5, r3]
 80059e2:	4798      	blx	r3
 80059e4:	3601      	adds	r6, #1
 80059e6:	e7f2      	b.n	80059ce <__libc_init_array+0x1e>
 80059e8:	08008e84 	.word	0x08008e84
 80059ec:	08008e84 	.word	0x08008e84
 80059f0:	08008e84 	.word	0x08008e84
 80059f4:	08008e88 	.word	0x08008e88

080059f8 <memset>:
 80059f8:	0003      	movs	r3, r0
 80059fa:	1882      	adds	r2, r0, r2
 80059fc:	4293      	cmp	r3, r2
 80059fe:	d100      	bne.n	8005a02 <memset+0xa>
 8005a00:	4770      	bx	lr
 8005a02:	7019      	strb	r1, [r3, #0]
 8005a04:	3301      	adds	r3, #1
 8005a06:	e7f9      	b.n	80059fc <memset+0x4>

08005a08 <__cvt>:
 8005a08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005a0a:	001e      	movs	r6, r3
 8005a0c:	2300      	movs	r3, #0
 8005a0e:	0014      	movs	r4, r2
 8005a10:	b08b      	sub	sp, #44	; 0x2c
 8005a12:	429e      	cmp	r6, r3
 8005a14:	da04      	bge.n	8005a20 <__cvt+0x18>
 8005a16:	2180      	movs	r1, #128	; 0x80
 8005a18:	0609      	lsls	r1, r1, #24
 8005a1a:	1873      	adds	r3, r6, r1
 8005a1c:	001e      	movs	r6, r3
 8005a1e:	232d      	movs	r3, #45	; 0x2d
 8005a20:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005a22:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8005a24:	7013      	strb	r3, [r2, #0]
 8005a26:	2320      	movs	r3, #32
 8005a28:	2203      	movs	r2, #3
 8005a2a:	439f      	bics	r7, r3
 8005a2c:	2f46      	cmp	r7, #70	; 0x46
 8005a2e:	d007      	beq.n	8005a40 <__cvt+0x38>
 8005a30:	003b      	movs	r3, r7
 8005a32:	3b45      	subs	r3, #69	; 0x45
 8005a34:	4259      	negs	r1, r3
 8005a36:	414b      	adcs	r3, r1
 8005a38:	9910      	ldr	r1, [sp, #64]	; 0x40
 8005a3a:	3a01      	subs	r2, #1
 8005a3c:	18cb      	adds	r3, r1, r3
 8005a3e:	9310      	str	r3, [sp, #64]	; 0x40
 8005a40:	ab09      	add	r3, sp, #36	; 0x24
 8005a42:	9304      	str	r3, [sp, #16]
 8005a44:	ab08      	add	r3, sp, #32
 8005a46:	9303      	str	r3, [sp, #12]
 8005a48:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005a4a:	9200      	str	r2, [sp, #0]
 8005a4c:	9302      	str	r3, [sp, #8]
 8005a4e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005a50:	0022      	movs	r2, r4
 8005a52:	9301      	str	r3, [sp, #4]
 8005a54:	0033      	movs	r3, r6
 8005a56:	f000 fcf1 	bl	800643c <_dtoa_r>
 8005a5a:	0005      	movs	r5, r0
 8005a5c:	2f47      	cmp	r7, #71	; 0x47
 8005a5e:	d102      	bne.n	8005a66 <__cvt+0x5e>
 8005a60:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005a62:	07db      	lsls	r3, r3, #31
 8005a64:	d528      	bpl.n	8005ab8 <__cvt+0xb0>
 8005a66:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005a68:	18eb      	adds	r3, r5, r3
 8005a6a:	9307      	str	r3, [sp, #28]
 8005a6c:	2f46      	cmp	r7, #70	; 0x46
 8005a6e:	d114      	bne.n	8005a9a <__cvt+0x92>
 8005a70:	782b      	ldrb	r3, [r5, #0]
 8005a72:	2b30      	cmp	r3, #48	; 0x30
 8005a74:	d10c      	bne.n	8005a90 <__cvt+0x88>
 8005a76:	2200      	movs	r2, #0
 8005a78:	2300      	movs	r3, #0
 8005a7a:	0020      	movs	r0, r4
 8005a7c:	0031      	movs	r1, r6
 8005a7e:	f7fa fce5 	bl	800044c <__aeabi_dcmpeq>
 8005a82:	2800      	cmp	r0, #0
 8005a84:	d104      	bne.n	8005a90 <__cvt+0x88>
 8005a86:	2301      	movs	r3, #1
 8005a88:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005a8a:	1a9b      	subs	r3, r3, r2
 8005a8c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005a8e:	6013      	str	r3, [r2, #0]
 8005a90:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005a92:	9a07      	ldr	r2, [sp, #28]
 8005a94:	681b      	ldr	r3, [r3, #0]
 8005a96:	18d3      	adds	r3, r2, r3
 8005a98:	9307      	str	r3, [sp, #28]
 8005a9a:	2200      	movs	r2, #0
 8005a9c:	2300      	movs	r3, #0
 8005a9e:	0020      	movs	r0, r4
 8005aa0:	0031      	movs	r1, r6
 8005aa2:	f7fa fcd3 	bl	800044c <__aeabi_dcmpeq>
 8005aa6:	2800      	cmp	r0, #0
 8005aa8:	d001      	beq.n	8005aae <__cvt+0xa6>
 8005aaa:	9b07      	ldr	r3, [sp, #28]
 8005aac:	9309      	str	r3, [sp, #36]	; 0x24
 8005aae:	2230      	movs	r2, #48	; 0x30
 8005ab0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005ab2:	9907      	ldr	r1, [sp, #28]
 8005ab4:	428b      	cmp	r3, r1
 8005ab6:	d306      	bcc.n	8005ac6 <__cvt+0xbe>
 8005ab8:	0028      	movs	r0, r5
 8005aba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005abc:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8005abe:	1b5b      	subs	r3, r3, r5
 8005ac0:	6013      	str	r3, [r2, #0]
 8005ac2:	b00b      	add	sp, #44	; 0x2c
 8005ac4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005ac6:	1c59      	adds	r1, r3, #1
 8005ac8:	9109      	str	r1, [sp, #36]	; 0x24
 8005aca:	701a      	strb	r2, [r3, #0]
 8005acc:	e7f0      	b.n	8005ab0 <__cvt+0xa8>

08005ace <__exponent>:
 8005ace:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005ad0:	1c83      	adds	r3, r0, #2
 8005ad2:	b087      	sub	sp, #28
 8005ad4:	9303      	str	r3, [sp, #12]
 8005ad6:	0005      	movs	r5, r0
 8005ad8:	000c      	movs	r4, r1
 8005ada:	232b      	movs	r3, #43	; 0x2b
 8005adc:	7002      	strb	r2, [r0, #0]
 8005ade:	2900      	cmp	r1, #0
 8005ae0:	da01      	bge.n	8005ae6 <__exponent+0x18>
 8005ae2:	424c      	negs	r4, r1
 8005ae4:	3302      	adds	r3, #2
 8005ae6:	706b      	strb	r3, [r5, #1]
 8005ae8:	2c09      	cmp	r4, #9
 8005aea:	dd31      	ble.n	8005b50 <__exponent+0x82>
 8005aec:	270a      	movs	r7, #10
 8005aee:	ab04      	add	r3, sp, #16
 8005af0:	1dde      	adds	r6, r3, #7
 8005af2:	0020      	movs	r0, r4
 8005af4:	0039      	movs	r1, r7
 8005af6:	9601      	str	r6, [sp, #4]
 8005af8:	f7fa fc92 	bl	8000420 <__aeabi_idivmod>
 8005afc:	3e01      	subs	r6, #1
 8005afe:	3130      	adds	r1, #48	; 0x30
 8005b00:	0020      	movs	r0, r4
 8005b02:	7031      	strb	r1, [r6, #0]
 8005b04:	0039      	movs	r1, r7
 8005b06:	9402      	str	r4, [sp, #8]
 8005b08:	f7fa fba4 	bl	8000254 <__divsi3>
 8005b0c:	9b02      	ldr	r3, [sp, #8]
 8005b0e:	0004      	movs	r4, r0
 8005b10:	2b63      	cmp	r3, #99	; 0x63
 8005b12:	dcee      	bgt.n	8005af2 <__exponent+0x24>
 8005b14:	9b01      	ldr	r3, [sp, #4]
 8005b16:	3430      	adds	r4, #48	; 0x30
 8005b18:	1e9a      	subs	r2, r3, #2
 8005b1a:	0013      	movs	r3, r2
 8005b1c:	9903      	ldr	r1, [sp, #12]
 8005b1e:	7014      	strb	r4, [r2, #0]
 8005b20:	a804      	add	r0, sp, #16
 8005b22:	3007      	adds	r0, #7
 8005b24:	4298      	cmp	r0, r3
 8005b26:	d80e      	bhi.n	8005b46 <__exponent+0x78>
 8005b28:	ab04      	add	r3, sp, #16
 8005b2a:	3307      	adds	r3, #7
 8005b2c:	2000      	movs	r0, #0
 8005b2e:	429a      	cmp	r2, r3
 8005b30:	d804      	bhi.n	8005b3c <__exponent+0x6e>
 8005b32:	ab04      	add	r3, sp, #16
 8005b34:	3009      	adds	r0, #9
 8005b36:	18c0      	adds	r0, r0, r3
 8005b38:	9b01      	ldr	r3, [sp, #4]
 8005b3a:	1ac0      	subs	r0, r0, r3
 8005b3c:	9b03      	ldr	r3, [sp, #12]
 8005b3e:	1818      	adds	r0, r3, r0
 8005b40:	1b40      	subs	r0, r0, r5
 8005b42:	b007      	add	sp, #28
 8005b44:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005b46:	7818      	ldrb	r0, [r3, #0]
 8005b48:	3301      	adds	r3, #1
 8005b4a:	7008      	strb	r0, [r1, #0]
 8005b4c:	3101      	adds	r1, #1
 8005b4e:	e7e7      	b.n	8005b20 <__exponent+0x52>
 8005b50:	2330      	movs	r3, #48	; 0x30
 8005b52:	18e4      	adds	r4, r4, r3
 8005b54:	70ab      	strb	r3, [r5, #2]
 8005b56:	1d28      	adds	r0, r5, #4
 8005b58:	70ec      	strb	r4, [r5, #3]
 8005b5a:	e7f1      	b.n	8005b40 <__exponent+0x72>

08005b5c <_printf_float>:
 8005b5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005b5e:	b095      	sub	sp, #84	; 0x54
 8005b60:	000c      	movs	r4, r1
 8005b62:	9209      	str	r2, [sp, #36]	; 0x24
 8005b64:	001e      	movs	r6, r3
 8005b66:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8005b68:	0007      	movs	r7, r0
 8005b6a:	f001 fa81 	bl	8007070 <_localeconv_r>
 8005b6e:	6803      	ldr	r3, [r0, #0]
 8005b70:	0018      	movs	r0, r3
 8005b72:	930c      	str	r3, [sp, #48]	; 0x30
 8005b74:	f7fa fac8 	bl	8000108 <strlen>
 8005b78:	2300      	movs	r3, #0
 8005b7a:	9312      	str	r3, [sp, #72]	; 0x48
 8005b7c:	7e23      	ldrb	r3, [r4, #24]
 8005b7e:	2207      	movs	r2, #7
 8005b80:	930a      	str	r3, [sp, #40]	; 0x28
 8005b82:	6823      	ldr	r3, [r4, #0]
 8005b84:	900e      	str	r0, [sp, #56]	; 0x38
 8005b86:	930d      	str	r3, [sp, #52]	; 0x34
 8005b88:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005b8a:	682b      	ldr	r3, [r5, #0]
 8005b8c:	05c9      	lsls	r1, r1, #23
 8005b8e:	d547      	bpl.n	8005c20 <_printf_float+0xc4>
 8005b90:	189b      	adds	r3, r3, r2
 8005b92:	4393      	bics	r3, r2
 8005b94:	001a      	movs	r2, r3
 8005b96:	3208      	adds	r2, #8
 8005b98:	602a      	str	r2, [r5, #0]
 8005b9a:	681a      	ldr	r2, [r3, #0]
 8005b9c:	685b      	ldr	r3, [r3, #4]
 8005b9e:	64a2      	str	r2, [r4, #72]	; 0x48
 8005ba0:	64e3      	str	r3, [r4, #76]	; 0x4c
 8005ba2:	2201      	movs	r2, #1
 8005ba4:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8005ba6:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8005ba8:	930b      	str	r3, [sp, #44]	; 0x2c
 8005baa:	006b      	lsls	r3, r5, #1
 8005bac:	085b      	lsrs	r3, r3, #1
 8005bae:	930f      	str	r3, [sp, #60]	; 0x3c
 8005bb0:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005bb2:	4ba7      	ldr	r3, [pc, #668]	; (8005e50 <_printf_float+0x2f4>)
 8005bb4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005bb6:	4252      	negs	r2, r2
 8005bb8:	f7fc fc10 	bl	80023dc <__aeabi_dcmpun>
 8005bbc:	2800      	cmp	r0, #0
 8005bbe:	d131      	bne.n	8005c24 <_printf_float+0xc8>
 8005bc0:	2201      	movs	r2, #1
 8005bc2:	4ba3      	ldr	r3, [pc, #652]	; (8005e50 <_printf_float+0x2f4>)
 8005bc4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005bc6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005bc8:	4252      	negs	r2, r2
 8005bca:	f7fa fc4f 	bl	800046c <__aeabi_dcmple>
 8005bce:	2800      	cmp	r0, #0
 8005bd0:	d128      	bne.n	8005c24 <_printf_float+0xc8>
 8005bd2:	2200      	movs	r2, #0
 8005bd4:	2300      	movs	r3, #0
 8005bd6:	0029      	movs	r1, r5
 8005bd8:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005bda:	f7fa fc3d 	bl	8000458 <__aeabi_dcmplt>
 8005bde:	2800      	cmp	r0, #0
 8005be0:	d003      	beq.n	8005bea <_printf_float+0x8e>
 8005be2:	0023      	movs	r3, r4
 8005be4:	222d      	movs	r2, #45	; 0x2d
 8005be6:	3343      	adds	r3, #67	; 0x43
 8005be8:	701a      	strb	r2, [r3, #0]
 8005bea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005bec:	4d99      	ldr	r5, [pc, #612]	; (8005e54 <_printf_float+0x2f8>)
 8005bee:	2b47      	cmp	r3, #71	; 0x47
 8005bf0:	d900      	bls.n	8005bf4 <_printf_float+0x98>
 8005bf2:	4d99      	ldr	r5, [pc, #612]	; (8005e58 <_printf_float+0x2fc>)
 8005bf4:	2303      	movs	r3, #3
 8005bf6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005bf8:	6123      	str	r3, [r4, #16]
 8005bfa:	3301      	adds	r3, #1
 8005bfc:	439a      	bics	r2, r3
 8005bfe:	2300      	movs	r3, #0
 8005c00:	6022      	str	r2, [r4, #0]
 8005c02:	930b      	str	r3, [sp, #44]	; 0x2c
 8005c04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005c06:	0021      	movs	r1, r4
 8005c08:	0038      	movs	r0, r7
 8005c0a:	9600      	str	r6, [sp, #0]
 8005c0c:	aa13      	add	r2, sp, #76	; 0x4c
 8005c0e:	f000 f9e7 	bl	8005fe0 <_printf_common>
 8005c12:	1c43      	adds	r3, r0, #1
 8005c14:	d000      	beq.n	8005c18 <_printf_float+0xbc>
 8005c16:	e0a2      	b.n	8005d5e <_printf_float+0x202>
 8005c18:	2001      	movs	r0, #1
 8005c1a:	4240      	negs	r0, r0
 8005c1c:	b015      	add	sp, #84	; 0x54
 8005c1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005c20:	3307      	adds	r3, #7
 8005c22:	e7b6      	b.n	8005b92 <_printf_float+0x36>
 8005c24:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005c26:	002b      	movs	r3, r5
 8005c28:	0010      	movs	r0, r2
 8005c2a:	0029      	movs	r1, r5
 8005c2c:	f7fc fbd6 	bl	80023dc <__aeabi_dcmpun>
 8005c30:	2800      	cmp	r0, #0
 8005c32:	d00b      	beq.n	8005c4c <_printf_float+0xf0>
 8005c34:	2d00      	cmp	r5, #0
 8005c36:	da03      	bge.n	8005c40 <_printf_float+0xe4>
 8005c38:	0023      	movs	r3, r4
 8005c3a:	222d      	movs	r2, #45	; 0x2d
 8005c3c:	3343      	adds	r3, #67	; 0x43
 8005c3e:	701a      	strb	r2, [r3, #0]
 8005c40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005c42:	4d86      	ldr	r5, [pc, #536]	; (8005e5c <_printf_float+0x300>)
 8005c44:	2b47      	cmp	r3, #71	; 0x47
 8005c46:	d9d5      	bls.n	8005bf4 <_printf_float+0x98>
 8005c48:	4d85      	ldr	r5, [pc, #532]	; (8005e60 <_printf_float+0x304>)
 8005c4a:	e7d3      	b.n	8005bf4 <_printf_float+0x98>
 8005c4c:	2220      	movs	r2, #32
 8005c4e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005c50:	6863      	ldr	r3, [r4, #4]
 8005c52:	4391      	bics	r1, r2
 8005c54:	910f      	str	r1, [sp, #60]	; 0x3c
 8005c56:	1c5a      	adds	r2, r3, #1
 8005c58:	d149      	bne.n	8005cee <_printf_float+0x192>
 8005c5a:	3307      	adds	r3, #7
 8005c5c:	6063      	str	r3, [r4, #4]
 8005c5e:	2380      	movs	r3, #128	; 0x80
 8005c60:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005c62:	00db      	lsls	r3, r3, #3
 8005c64:	4313      	orrs	r3, r2
 8005c66:	2200      	movs	r2, #0
 8005c68:	9206      	str	r2, [sp, #24]
 8005c6a:	aa12      	add	r2, sp, #72	; 0x48
 8005c6c:	9205      	str	r2, [sp, #20]
 8005c6e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005c70:	a908      	add	r1, sp, #32
 8005c72:	9204      	str	r2, [sp, #16]
 8005c74:	aa11      	add	r2, sp, #68	; 0x44
 8005c76:	9203      	str	r2, [sp, #12]
 8005c78:	2223      	movs	r2, #35	; 0x23
 8005c7a:	6023      	str	r3, [r4, #0]
 8005c7c:	9301      	str	r3, [sp, #4]
 8005c7e:	6863      	ldr	r3, [r4, #4]
 8005c80:	1852      	adds	r2, r2, r1
 8005c82:	9202      	str	r2, [sp, #8]
 8005c84:	9300      	str	r3, [sp, #0]
 8005c86:	0038      	movs	r0, r7
 8005c88:	002b      	movs	r3, r5
 8005c8a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005c8c:	f7ff febc 	bl	8005a08 <__cvt>
 8005c90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005c92:	0005      	movs	r5, r0
 8005c94:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005c96:	2b47      	cmp	r3, #71	; 0x47
 8005c98:	d108      	bne.n	8005cac <_printf_float+0x150>
 8005c9a:	1ccb      	adds	r3, r1, #3
 8005c9c:	db02      	blt.n	8005ca4 <_printf_float+0x148>
 8005c9e:	6863      	ldr	r3, [r4, #4]
 8005ca0:	4299      	cmp	r1, r3
 8005ca2:	dd48      	ble.n	8005d36 <_printf_float+0x1da>
 8005ca4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005ca6:	3b02      	subs	r3, #2
 8005ca8:	b2db      	uxtb	r3, r3
 8005caa:	930a      	str	r3, [sp, #40]	; 0x28
 8005cac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005cae:	2b65      	cmp	r3, #101	; 0x65
 8005cb0:	d824      	bhi.n	8005cfc <_printf_float+0x1a0>
 8005cb2:	0020      	movs	r0, r4
 8005cb4:	001a      	movs	r2, r3
 8005cb6:	3901      	subs	r1, #1
 8005cb8:	3050      	adds	r0, #80	; 0x50
 8005cba:	9111      	str	r1, [sp, #68]	; 0x44
 8005cbc:	f7ff ff07 	bl	8005ace <__exponent>
 8005cc0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005cc2:	900b      	str	r0, [sp, #44]	; 0x2c
 8005cc4:	1813      	adds	r3, r2, r0
 8005cc6:	6123      	str	r3, [r4, #16]
 8005cc8:	2a01      	cmp	r2, #1
 8005cca:	dc02      	bgt.n	8005cd2 <_printf_float+0x176>
 8005ccc:	6822      	ldr	r2, [r4, #0]
 8005cce:	07d2      	lsls	r2, r2, #31
 8005cd0:	d501      	bpl.n	8005cd6 <_printf_float+0x17a>
 8005cd2:	3301      	adds	r3, #1
 8005cd4:	6123      	str	r3, [r4, #16]
 8005cd6:	2323      	movs	r3, #35	; 0x23
 8005cd8:	aa08      	add	r2, sp, #32
 8005cda:	189b      	adds	r3, r3, r2
 8005cdc:	781b      	ldrb	r3, [r3, #0]
 8005cde:	2b00      	cmp	r3, #0
 8005ce0:	d100      	bne.n	8005ce4 <_printf_float+0x188>
 8005ce2:	e78f      	b.n	8005c04 <_printf_float+0xa8>
 8005ce4:	0023      	movs	r3, r4
 8005ce6:	222d      	movs	r2, #45	; 0x2d
 8005ce8:	3343      	adds	r3, #67	; 0x43
 8005cea:	701a      	strb	r2, [r3, #0]
 8005cec:	e78a      	b.n	8005c04 <_printf_float+0xa8>
 8005cee:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005cf0:	2a47      	cmp	r2, #71	; 0x47
 8005cf2:	d1b4      	bne.n	8005c5e <_printf_float+0x102>
 8005cf4:	2b00      	cmp	r3, #0
 8005cf6:	d1b2      	bne.n	8005c5e <_printf_float+0x102>
 8005cf8:	3301      	adds	r3, #1
 8005cfa:	e7af      	b.n	8005c5c <_printf_float+0x100>
 8005cfc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005cfe:	2b66      	cmp	r3, #102	; 0x66
 8005d00:	d11b      	bne.n	8005d3a <_printf_float+0x1de>
 8005d02:	6863      	ldr	r3, [r4, #4]
 8005d04:	2900      	cmp	r1, #0
 8005d06:	dd0d      	ble.n	8005d24 <_printf_float+0x1c8>
 8005d08:	6121      	str	r1, [r4, #16]
 8005d0a:	2b00      	cmp	r3, #0
 8005d0c:	d102      	bne.n	8005d14 <_printf_float+0x1b8>
 8005d0e:	6822      	ldr	r2, [r4, #0]
 8005d10:	07d2      	lsls	r2, r2, #31
 8005d12:	d502      	bpl.n	8005d1a <_printf_float+0x1be>
 8005d14:	3301      	adds	r3, #1
 8005d16:	1859      	adds	r1, r3, r1
 8005d18:	6121      	str	r1, [r4, #16]
 8005d1a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005d1c:	65a3      	str	r3, [r4, #88]	; 0x58
 8005d1e:	2300      	movs	r3, #0
 8005d20:	930b      	str	r3, [sp, #44]	; 0x2c
 8005d22:	e7d8      	b.n	8005cd6 <_printf_float+0x17a>
 8005d24:	2b00      	cmp	r3, #0
 8005d26:	d103      	bne.n	8005d30 <_printf_float+0x1d4>
 8005d28:	2201      	movs	r2, #1
 8005d2a:	6821      	ldr	r1, [r4, #0]
 8005d2c:	4211      	tst	r1, r2
 8005d2e:	d000      	beq.n	8005d32 <_printf_float+0x1d6>
 8005d30:	1c9a      	adds	r2, r3, #2
 8005d32:	6122      	str	r2, [r4, #16]
 8005d34:	e7f1      	b.n	8005d1a <_printf_float+0x1be>
 8005d36:	2367      	movs	r3, #103	; 0x67
 8005d38:	930a      	str	r3, [sp, #40]	; 0x28
 8005d3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005d3c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005d3e:	4293      	cmp	r3, r2
 8005d40:	db06      	blt.n	8005d50 <_printf_float+0x1f4>
 8005d42:	6822      	ldr	r2, [r4, #0]
 8005d44:	6123      	str	r3, [r4, #16]
 8005d46:	07d2      	lsls	r2, r2, #31
 8005d48:	d5e7      	bpl.n	8005d1a <_printf_float+0x1be>
 8005d4a:	3301      	adds	r3, #1
 8005d4c:	6123      	str	r3, [r4, #16]
 8005d4e:	e7e4      	b.n	8005d1a <_printf_float+0x1be>
 8005d50:	2101      	movs	r1, #1
 8005d52:	2b00      	cmp	r3, #0
 8005d54:	dc01      	bgt.n	8005d5a <_printf_float+0x1fe>
 8005d56:	1849      	adds	r1, r1, r1
 8005d58:	1ac9      	subs	r1, r1, r3
 8005d5a:	1852      	adds	r2, r2, r1
 8005d5c:	e7e9      	b.n	8005d32 <_printf_float+0x1d6>
 8005d5e:	6822      	ldr	r2, [r4, #0]
 8005d60:	0553      	lsls	r3, r2, #21
 8005d62:	d407      	bmi.n	8005d74 <_printf_float+0x218>
 8005d64:	6923      	ldr	r3, [r4, #16]
 8005d66:	002a      	movs	r2, r5
 8005d68:	0038      	movs	r0, r7
 8005d6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005d6c:	47b0      	blx	r6
 8005d6e:	1c43      	adds	r3, r0, #1
 8005d70:	d128      	bne.n	8005dc4 <_printf_float+0x268>
 8005d72:	e751      	b.n	8005c18 <_printf_float+0xbc>
 8005d74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005d76:	2b65      	cmp	r3, #101	; 0x65
 8005d78:	d800      	bhi.n	8005d7c <_printf_float+0x220>
 8005d7a:	e0e1      	b.n	8005f40 <_printf_float+0x3e4>
 8005d7c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8005d7e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8005d80:	2200      	movs	r2, #0
 8005d82:	2300      	movs	r3, #0
 8005d84:	f7fa fb62 	bl	800044c <__aeabi_dcmpeq>
 8005d88:	2800      	cmp	r0, #0
 8005d8a:	d031      	beq.n	8005df0 <_printf_float+0x294>
 8005d8c:	2301      	movs	r3, #1
 8005d8e:	0038      	movs	r0, r7
 8005d90:	4a34      	ldr	r2, [pc, #208]	; (8005e64 <_printf_float+0x308>)
 8005d92:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005d94:	47b0      	blx	r6
 8005d96:	1c43      	adds	r3, r0, #1
 8005d98:	d100      	bne.n	8005d9c <_printf_float+0x240>
 8005d9a:	e73d      	b.n	8005c18 <_printf_float+0xbc>
 8005d9c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005d9e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005da0:	4293      	cmp	r3, r2
 8005da2:	db02      	blt.n	8005daa <_printf_float+0x24e>
 8005da4:	6823      	ldr	r3, [r4, #0]
 8005da6:	07db      	lsls	r3, r3, #31
 8005da8:	d50c      	bpl.n	8005dc4 <_printf_float+0x268>
 8005daa:	0038      	movs	r0, r7
 8005dac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005dae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005db0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005db2:	47b0      	blx	r6
 8005db4:	2500      	movs	r5, #0
 8005db6:	1c43      	adds	r3, r0, #1
 8005db8:	d100      	bne.n	8005dbc <_printf_float+0x260>
 8005dba:	e72d      	b.n	8005c18 <_printf_float+0xbc>
 8005dbc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005dbe:	3b01      	subs	r3, #1
 8005dc0:	42ab      	cmp	r3, r5
 8005dc2:	dc0a      	bgt.n	8005dda <_printf_float+0x27e>
 8005dc4:	6823      	ldr	r3, [r4, #0]
 8005dc6:	079b      	lsls	r3, r3, #30
 8005dc8:	d500      	bpl.n	8005dcc <_printf_float+0x270>
 8005dca:	e106      	b.n	8005fda <_printf_float+0x47e>
 8005dcc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005dce:	68e0      	ldr	r0, [r4, #12]
 8005dd0:	4298      	cmp	r0, r3
 8005dd2:	db00      	blt.n	8005dd6 <_printf_float+0x27a>
 8005dd4:	e722      	b.n	8005c1c <_printf_float+0xc0>
 8005dd6:	0018      	movs	r0, r3
 8005dd8:	e720      	b.n	8005c1c <_printf_float+0xc0>
 8005dda:	0022      	movs	r2, r4
 8005ddc:	2301      	movs	r3, #1
 8005dde:	0038      	movs	r0, r7
 8005de0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005de2:	321a      	adds	r2, #26
 8005de4:	47b0      	blx	r6
 8005de6:	1c43      	adds	r3, r0, #1
 8005de8:	d100      	bne.n	8005dec <_printf_float+0x290>
 8005dea:	e715      	b.n	8005c18 <_printf_float+0xbc>
 8005dec:	3501      	adds	r5, #1
 8005dee:	e7e5      	b.n	8005dbc <_printf_float+0x260>
 8005df0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005df2:	2b00      	cmp	r3, #0
 8005df4:	dc38      	bgt.n	8005e68 <_printf_float+0x30c>
 8005df6:	2301      	movs	r3, #1
 8005df8:	0038      	movs	r0, r7
 8005dfa:	4a1a      	ldr	r2, [pc, #104]	; (8005e64 <_printf_float+0x308>)
 8005dfc:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005dfe:	47b0      	blx	r6
 8005e00:	1c43      	adds	r3, r0, #1
 8005e02:	d100      	bne.n	8005e06 <_printf_float+0x2aa>
 8005e04:	e708      	b.n	8005c18 <_printf_float+0xbc>
 8005e06:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005e08:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005e0a:	4313      	orrs	r3, r2
 8005e0c:	d102      	bne.n	8005e14 <_printf_float+0x2b8>
 8005e0e:	6823      	ldr	r3, [r4, #0]
 8005e10:	07db      	lsls	r3, r3, #31
 8005e12:	d5d7      	bpl.n	8005dc4 <_printf_float+0x268>
 8005e14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005e16:	0038      	movs	r0, r7
 8005e18:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005e1a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005e1c:	47b0      	blx	r6
 8005e1e:	1c43      	adds	r3, r0, #1
 8005e20:	d100      	bne.n	8005e24 <_printf_float+0x2c8>
 8005e22:	e6f9      	b.n	8005c18 <_printf_float+0xbc>
 8005e24:	2300      	movs	r3, #0
 8005e26:	930a      	str	r3, [sp, #40]	; 0x28
 8005e28:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005e2a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005e2c:	425b      	negs	r3, r3
 8005e2e:	4293      	cmp	r3, r2
 8005e30:	dc01      	bgt.n	8005e36 <_printf_float+0x2da>
 8005e32:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005e34:	e797      	b.n	8005d66 <_printf_float+0x20a>
 8005e36:	0022      	movs	r2, r4
 8005e38:	2301      	movs	r3, #1
 8005e3a:	0038      	movs	r0, r7
 8005e3c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005e3e:	321a      	adds	r2, #26
 8005e40:	47b0      	blx	r6
 8005e42:	1c43      	adds	r3, r0, #1
 8005e44:	d100      	bne.n	8005e48 <_printf_float+0x2ec>
 8005e46:	e6e7      	b.n	8005c18 <_printf_float+0xbc>
 8005e48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005e4a:	3301      	adds	r3, #1
 8005e4c:	e7eb      	b.n	8005e26 <_printf_float+0x2ca>
 8005e4e:	46c0      	nop			; (mov r8, r8)
 8005e50:	7fefffff 	.word	0x7fefffff
 8005e54:	08008aac 	.word	0x08008aac
 8005e58:	08008ab0 	.word	0x08008ab0
 8005e5c:	08008ab4 	.word	0x08008ab4
 8005e60:	08008ab8 	.word	0x08008ab8
 8005e64:	08008abc 	.word	0x08008abc
 8005e68:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005e6a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8005e6c:	920a      	str	r2, [sp, #40]	; 0x28
 8005e6e:	429a      	cmp	r2, r3
 8005e70:	dd00      	ble.n	8005e74 <_printf_float+0x318>
 8005e72:	930a      	str	r3, [sp, #40]	; 0x28
 8005e74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005e76:	2b00      	cmp	r3, #0
 8005e78:	dc3c      	bgt.n	8005ef4 <_printf_float+0x398>
 8005e7a:	2300      	movs	r3, #0
 8005e7c:	930d      	str	r3, [sp, #52]	; 0x34
 8005e7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005e80:	43db      	mvns	r3, r3
 8005e82:	17db      	asrs	r3, r3, #31
 8005e84:	930f      	str	r3, [sp, #60]	; 0x3c
 8005e86:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8005e88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005e8a:	930b      	str	r3, [sp, #44]	; 0x2c
 8005e8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005e8e:	4013      	ands	r3, r2
 8005e90:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005e92:	1ad3      	subs	r3, r2, r3
 8005e94:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005e96:	4293      	cmp	r3, r2
 8005e98:	dc34      	bgt.n	8005f04 <_printf_float+0x3a8>
 8005e9a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005e9c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005e9e:	4293      	cmp	r3, r2
 8005ea0:	db3d      	blt.n	8005f1e <_printf_float+0x3c2>
 8005ea2:	6823      	ldr	r3, [r4, #0]
 8005ea4:	07db      	lsls	r3, r3, #31
 8005ea6:	d43a      	bmi.n	8005f1e <_printf_float+0x3c2>
 8005ea8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005eaa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005eac:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005eae:	1ad3      	subs	r3, r2, r3
 8005eb0:	1a52      	subs	r2, r2, r1
 8005eb2:	920a      	str	r2, [sp, #40]	; 0x28
 8005eb4:	429a      	cmp	r2, r3
 8005eb6:	dd00      	ble.n	8005eba <_printf_float+0x35e>
 8005eb8:	930a      	str	r3, [sp, #40]	; 0x28
 8005eba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005ebc:	2b00      	cmp	r3, #0
 8005ebe:	dc36      	bgt.n	8005f2e <_printf_float+0x3d2>
 8005ec0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005ec2:	2500      	movs	r5, #0
 8005ec4:	43db      	mvns	r3, r3
 8005ec6:	17db      	asrs	r3, r3, #31
 8005ec8:	930b      	str	r3, [sp, #44]	; 0x2c
 8005eca:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8005ecc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005ece:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005ed0:	1a9b      	subs	r3, r3, r2
 8005ed2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005ed4:	400a      	ands	r2, r1
 8005ed6:	1a9b      	subs	r3, r3, r2
 8005ed8:	42ab      	cmp	r3, r5
 8005eda:	dc00      	bgt.n	8005ede <_printf_float+0x382>
 8005edc:	e772      	b.n	8005dc4 <_printf_float+0x268>
 8005ede:	0022      	movs	r2, r4
 8005ee0:	2301      	movs	r3, #1
 8005ee2:	0038      	movs	r0, r7
 8005ee4:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005ee6:	321a      	adds	r2, #26
 8005ee8:	47b0      	blx	r6
 8005eea:	1c43      	adds	r3, r0, #1
 8005eec:	d100      	bne.n	8005ef0 <_printf_float+0x394>
 8005eee:	e693      	b.n	8005c18 <_printf_float+0xbc>
 8005ef0:	3501      	adds	r5, #1
 8005ef2:	e7ea      	b.n	8005eca <_printf_float+0x36e>
 8005ef4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005ef6:	002a      	movs	r2, r5
 8005ef8:	0038      	movs	r0, r7
 8005efa:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005efc:	47b0      	blx	r6
 8005efe:	1c43      	adds	r3, r0, #1
 8005f00:	d1bb      	bne.n	8005e7a <_printf_float+0x31e>
 8005f02:	e689      	b.n	8005c18 <_printf_float+0xbc>
 8005f04:	0022      	movs	r2, r4
 8005f06:	2301      	movs	r3, #1
 8005f08:	0038      	movs	r0, r7
 8005f0a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005f0c:	321a      	adds	r2, #26
 8005f0e:	47b0      	blx	r6
 8005f10:	1c43      	adds	r3, r0, #1
 8005f12:	d100      	bne.n	8005f16 <_printf_float+0x3ba>
 8005f14:	e680      	b.n	8005c18 <_printf_float+0xbc>
 8005f16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005f18:	3301      	adds	r3, #1
 8005f1a:	930d      	str	r3, [sp, #52]	; 0x34
 8005f1c:	e7b3      	b.n	8005e86 <_printf_float+0x32a>
 8005f1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005f20:	0038      	movs	r0, r7
 8005f22:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005f24:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005f26:	47b0      	blx	r6
 8005f28:	1c43      	adds	r3, r0, #1
 8005f2a:	d1bd      	bne.n	8005ea8 <_printf_float+0x34c>
 8005f2c:	e674      	b.n	8005c18 <_printf_float+0xbc>
 8005f2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005f30:	0038      	movs	r0, r7
 8005f32:	18ea      	adds	r2, r5, r3
 8005f34:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005f36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005f38:	47b0      	blx	r6
 8005f3a:	1c43      	adds	r3, r0, #1
 8005f3c:	d1c0      	bne.n	8005ec0 <_printf_float+0x364>
 8005f3e:	e66b      	b.n	8005c18 <_printf_float+0xbc>
 8005f40:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005f42:	2b01      	cmp	r3, #1
 8005f44:	dc02      	bgt.n	8005f4c <_printf_float+0x3f0>
 8005f46:	2301      	movs	r3, #1
 8005f48:	421a      	tst	r2, r3
 8005f4a:	d034      	beq.n	8005fb6 <_printf_float+0x45a>
 8005f4c:	2301      	movs	r3, #1
 8005f4e:	002a      	movs	r2, r5
 8005f50:	0038      	movs	r0, r7
 8005f52:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005f54:	47b0      	blx	r6
 8005f56:	1c43      	adds	r3, r0, #1
 8005f58:	d100      	bne.n	8005f5c <_printf_float+0x400>
 8005f5a:	e65d      	b.n	8005c18 <_printf_float+0xbc>
 8005f5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005f5e:	0038      	movs	r0, r7
 8005f60:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005f62:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005f64:	47b0      	blx	r6
 8005f66:	1c43      	adds	r3, r0, #1
 8005f68:	d100      	bne.n	8005f6c <_printf_float+0x410>
 8005f6a:	e655      	b.n	8005c18 <_printf_float+0xbc>
 8005f6c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8005f6e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8005f70:	2200      	movs	r2, #0
 8005f72:	2300      	movs	r3, #0
 8005f74:	f7fa fa6a 	bl	800044c <__aeabi_dcmpeq>
 8005f78:	2800      	cmp	r0, #0
 8005f7a:	d11a      	bne.n	8005fb2 <_printf_float+0x456>
 8005f7c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005f7e:	1c6a      	adds	r2, r5, #1
 8005f80:	3b01      	subs	r3, #1
 8005f82:	0038      	movs	r0, r7
 8005f84:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005f86:	47b0      	blx	r6
 8005f88:	1c43      	adds	r3, r0, #1
 8005f8a:	d10e      	bne.n	8005faa <_printf_float+0x44e>
 8005f8c:	e644      	b.n	8005c18 <_printf_float+0xbc>
 8005f8e:	0022      	movs	r2, r4
 8005f90:	2301      	movs	r3, #1
 8005f92:	0038      	movs	r0, r7
 8005f94:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005f96:	321a      	adds	r2, #26
 8005f98:	47b0      	blx	r6
 8005f9a:	1c43      	adds	r3, r0, #1
 8005f9c:	d100      	bne.n	8005fa0 <_printf_float+0x444>
 8005f9e:	e63b      	b.n	8005c18 <_printf_float+0xbc>
 8005fa0:	3501      	adds	r5, #1
 8005fa2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005fa4:	3b01      	subs	r3, #1
 8005fa6:	42ab      	cmp	r3, r5
 8005fa8:	dcf1      	bgt.n	8005f8e <_printf_float+0x432>
 8005faa:	0022      	movs	r2, r4
 8005fac:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005fae:	3250      	adds	r2, #80	; 0x50
 8005fb0:	e6da      	b.n	8005d68 <_printf_float+0x20c>
 8005fb2:	2500      	movs	r5, #0
 8005fb4:	e7f5      	b.n	8005fa2 <_printf_float+0x446>
 8005fb6:	002a      	movs	r2, r5
 8005fb8:	e7e3      	b.n	8005f82 <_printf_float+0x426>
 8005fba:	0022      	movs	r2, r4
 8005fbc:	2301      	movs	r3, #1
 8005fbe:	0038      	movs	r0, r7
 8005fc0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005fc2:	3219      	adds	r2, #25
 8005fc4:	47b0      	blx	r6
 8005fc6:	1c43      	adds	r3, r0, #1
 8005fc8:	d100      	bne.n	8005fcc <_printf_float+0x470>
 8005fca:	e625      	b.n	8005c18 <_printf_float+0xbc>
 8005fcc:	3501      	adds	r5, #1
 8005fce:	68e3      	ldr	r3, [r4, #12]
 8005fd0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005fd2:	1a9b      	subs	r3, r3, r2
 8005fd4:	42ab      	cmp	r3, r5
 8005fd6:	dcf0      	bgt.n	8005fba <_printf_float+0x45e>
 8005fd8:	e6f8      	b.n	8005dcc <_printf_float+0x270>
 8005fda:	2500      	movs	r5, #0
 8005fdc:	e7f7      	b.n	8005fce <_printf_float+0x472>
 8005fde:	46c0      	nop			; (mov r8, r8)

08005fe0 <_printf_common>:
 8005fe0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005fe2:	0015      	movs	r5, r2
 8005fe4:	9301      	str	r3, [sp, #4]
 8005fe6:	688a      	ldr	r2, [r1, #8]
 8005fe8:	690b      	ldr	r3, [r1, #16]
 8005fea:	000c      	movs	r4, r1
 8005fec:	9000      	str	r0, [sp, #0]
 8005fee:	4293      	cmp	r3, r2
 8005ff0:	da00      	bge.n	8005ff4 <_printf_common+0x14>
 8005ff2:	0013      	movs	r3, r2
 8005ff4:	0022      	movs	r2, r4
 8005ff6:	602b      	str	r3, [r5, #0]
 8005ff8:	3243      	adds	r2, #67	; 0x43
 8005ffa:	7812      	ldrb	r2, [r2, #0]
 8005ffc:	2a00      	cmp	r2, #0
 8005ffe:	d001      	beq.n	8006004 <_printf_common+0x24>
 8006000:	3301      	adds	r3, #1
 8006002:	602b      	str	r3, [r5, #0]
 8006004:	6823      	ldr	r3, [r4, #0]
 8006006:	069b      	lsls	r3, r3, #26
 8006008:	d502      	bpl.n	8006010 <_printf_common+0x30>
 800600a:	682b      	ldr	r3, [r5, #0]
 800600c:	3302      	adds	r3, #2
 800600e:	602b      	str	r3, [r5, #0]
 8006010:	6822      	ldr	r2, [r4, #0]
 8006012:	2306      	movs	r3, #6
 8006014:	0017      	movs	r7, r2
 8006016:	401f      	ands	r7, r3
 8006018:	421a      	tst	r2, r3
 800601a:	d027      	beq.n	800606c <_printf_common+0x8c>
 800601c:	0023      	movs	r3, r4
 800601e:	3343      	adds	r3, #67	; 0x43
 8006020:	781b      	ldrb	r3, [r3, #0]
 8006022:	1e5a      	subs	r2, r3, #1
 8006024:	4193      	sbcs	r3, r2
 8006026:	6822      	ldr	r2, [r4, #0]
 8006028:	0692      	lsls	r2, r2, #26
 800602a:	d430      	bmi.n	800608e <_printf_common+0xae>
 800602c:	0022      	movs	r2, r4
 800602e:	9901      	ldr	r1, [sp, #4]
 8006030:	9800      	ldr	r0, [sp, #0]
 8006032:	9e08      	ldr	r6, [sp, #32]
 8006034:	3243      	adds	r2, #67	; 0x43
 8006036:	47b0      	blx	r6
 8006038:	1c43      	adds	r3, r0, #1
 800603a:	d025      	beq.n	8006088 <_printf_common+0xa8>
 800603c:	2306      	movs	r3, #6
 800603e:	6820      	ldr	r0, [r4, #0]
 8006040:	682a      	ldr	r2, [r5, #0]
 8006042:	68e1      	ldr	r1, [r4, #12]
 8006044:	2500      	movs	r5, #0
 8006046:	4003      	ands	r3, r0
 8006048:	2b04      	cmp	r3, #4
 800604a:	d103      	bne.n	8006054 <_printf_common+0x74>
 800604c:	1a8d      	subs	r5, r1, r2
 800604e:	43eb      	mvns	r3, r5
 8006050:	17db      	asrs	r3, r3, #31
 8006052:	401d      	ands	r5, r3
 8006054:	68a3      	ldr	r3, [r4, #8]
 8006056:	6922      	ldr	r2, [r4, #16]
 8006058:	4293      	cmp	r3, r2
 800605a:	dd01      	ble.n	8006060 <_printf_common+0x80>
 800605c:	1a9b      	subs	r3, r3, r2
 800605e:	18ed      	adds	r5, r5, r3
 8006060:	2700      	movs	r7, #0
 8006062:	42bd      	cmp	r5, r7
 8006064:	d120      	bne.n	80060a8 <_printf_common+0xc8>
 8006066:	2000      	movs	r0, #0
 8006068:	e010      	b.n	800608c <_printf_common+0xac>
 800606a:	3701      	adds	r7, #1
 800606c:	68e3      	ldr	r3, [r4, #12]
 800606e:	682a      	ldr	r2, [r5, #0]
 8006070:	1a9b      	subs	r3, r3, r2
 8006072:	42bb      	cmp	r3, r7
 8006074:	ddd2      	ble.n	800601c <_printf_common+0x3c>
 8006076:	0022      	movs	r2, r4
 8006078:	2301      	movs	r3, #1
 800607a:	9901      	ldr	r1, [sp, #4]
 800607c:	9800      	ldr	r0, [sp, #0]
 800607e:	9e08      	ldr	r6, [sp, #32]
 8006080:	3219      	adds	r2, #25
 8006082:	47b0      	blx	r6
 8006084:	1c43      	adds	r3, r0, #1
 8006086:	d1f0      	bne.n	800606a <_printf_common+0x8a>
 8006088:	2001      	movs	r0, #1
 800608a:	4240      	negs	r0, r0
 800608c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800608e:	2030      	movs	r0, #48	; 0x30
 8006090:	18e1      	adds	r1, r4, r3
 8006092:	3143      	adds	r1, #67	; 0x43
 8006094:	7008      	strb	r0, [r1, #0]
 8006096:	0021      	movs	r1, r4
 8006098:	1c5a      	adds	r2, r3, #1
 800609a:	3145      	adds	r1, #69	; 0x45
 800609c:	7809      	ldrb	r1, [r1, #0]
 800609e:	18a2      	adds	r2, r4, r2
 80060a0:	3243      	adds	r2, #67	; 0x43
 80060a2:	3302      	adds	r3, #2
 80060a4:	7011      	strb	r1, [r2, #0]
 80060a6:	e7c1      	b.n	800602c <_printf_common+0x4c>
 80060a8:	0022      	movs	r2, r4
 80060aa:	2301      	movs	r3, #1
 80060ac:	9901      	ldr	r1, [sp, #4]
 80060ae:	9800      	ldr	r0, [sp, #0]
 80060b0:	9e08      	ldr	r6, [sp, #32]
 80060b2:	321a      	adds	r2, #26
 80060b4:	47b0      	blx	r6
 80060b6:	1c43      	adds	r3, r0, #1
 80060b8:	d0e6      	beq.n	8006088 <_printf_common+0xa8>
 80060ba:	3701      	adds	r7, #1
 80060bc:	e7d1      	b.n	8006062 <_printf_common+0x82>
	...

080060c0 <_printf_i>:
 80060c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80060c2:	b08b      	sub	sp, #44	; 0x2c
 80060c4:	9206      	str	r2, [sp, #24]
 80060c6:	000a      	movs	r2, r1
 80060c8:	3243      	adds	r2, #67	; 0x43
 80060ca:	9307      	str	r3, [sp, #28]
 80060cc:	9005      	str	r0, [sp, #20]
 80060ce:	9204      	str	r2, [sp, #16]
 80060d0:	7e0a      	ldrb	r2, [r1, #24]
 80060d2:	000c      	movs	r4, r1
 80060d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80060d6:	2a78      	cmp	r2, #120	; 0x78
 80060d8:	d807      	bhi.n	80060ea <_printf_i+0x2a>
 80060da:	2a62      	cmp	r2, #98	; 0x62
 80060dc:	d809      	bhi.n	80060f2 <_printf_i+0x32>
 80060de:	2a00      	cmp	r2, #0
 80060e0:	d100      	bne.n	80060e4 <_printf_i+0x24>
 80060e2:	e0c1      	b.n	8006268 <_printf_i+0x1a8>
 80060e4:	2a58      	cmp	r2, #88	; 0x58
 80060e6:	d100      	bne.n	80060ea <_printf_i+0x2a>
 80060e8:	e08c      	b.n	8006204 <_printf_i+0x144>
 80060ea:	0026      	movs	r6, r4
 80060ec:	3642      	adds	r6, #66	; 0x42
 80060ee:	7032      	strb	r2, [r6, #0]
 80060f0:	e022      	b.n	8006138 <_printf_i+0x78>
 80060f2:	0010      	movs	r0, r2
 80060f4:	3863      	subs	r0, #99	; 0x63
 80060f6:	2815      	cmp	r0, #21
 80060f8:	d8f7      	bhi.n	80060ea <_printf_i+0x2a>
 80060fa:	f7fa f817 	bl	800012c <__gnu_thumb1_case_shi>
 80060fe:	0016      	.short	0x0016
 8006100:	fff6001f 	.word	0xfff6001f
 8006104:	fff6fff6 	.word	0xfff6fff6
 8006108:	001ffff6 	.word	0x001ffff6
 800610c:	fff6fff6 	.word	0xfff6fff6
 8006110:	fff6fff6 	.word	0xfff6fff6
 8006114:	003600a8 	.word	0x003600a8
 8006118:	fff6009a 	.word	0xfff6009a
 800611c:	00b9fff6 	.word	0x00b9fff6
 8006120:	0036fff6 	.word	0x0036fff6
 8006124:	fff6fff6 	.word	0xfff6fff6
 8006128:	009e      	.short	0x009e
 800612a:	0026      	movs	r6, r4
 800612c:	681a      	ldr	r2, [r3, #0]
 800612e:	3642      	adds	r6, #66	; 0x42
 8006130:	1d11      	adds	r1, r2, #4
 8006132:	6019      	str	r1, [r3, #0]
 8006134:	6813      	ldr	r3, [r2, #0]
 8006136:	7033      	strb	r3, [r6, #0]
 8006138:	2301      	movs	r3, #1
 800613a:	e0a7      	b.n	800628c <_printf_i+0x1cc>
 800613c:	6808      	ldr	r0, [r1, #0]
 800613e:	6819      	ldr	r1, [r3, #0]
 8006140:	1d0a      	adds	r2, r1, #4
 8006142:	0605      	lsls	r5, r0, #24
 8006144:	d50b      	bpl.n	800615e <_printf_i+0x9e>
 8006146:	680d      	ldr	r5, [r1, #0]
 8006148:	601a      	str	r2, [r3, #0]
 800614a:	2d00      	cmp	r5, #0
 800614c:	da03      	bge.n	8006156 <_printf_i+0x96>
 800614e:	232d      	movs	r3, #45	; 0x2d
 8006150:	9a04      	ldr	r2, [sp, #16]
 8006152:	426d      	negs	r5, r5
 8006154:	7013      	strb	r3, [r2, #0]
 8006156:	4b61      	ldr	r3, [pc, #388]	; (80062dc <_printf_i+0x21c>)
 8006158:	270a      	movs	r7, #10
 800615a:	9303      	str	r3, [sp, #12]
 800615c:	e01b      	b.n	8006196 <_printf_i+0xd6>
 800615e:	680d      	ldr	r5, [r1, #0]
 8006160:	601a      	str	r2, [r3, #0]
 8006162:	0641      	lsls	r1, r0, #25
 8006164:	d5f1      	bpl.n	800614a <_printf_i+0x8a>
 8006166:	b22d      	sxth	r5, r5
 8006168:	e7ef      	b.n	800614a <_printf_i+0x8a>
 800616a:	680d      	ldr	r5, [r1, #0]
 800616c:	6819      	ldr	r1, [r3, #0]
 800616e:	1d08      	adds	r0, r1, #4
 8006170:	6018      	str	r0, [r3, #0]
 8006172:	062e      	lsls	r6, r5, #24
 8006174:	d501      	bpl.n	800617a <_printf_i+0xba>
 8006176:	680d      	ldr	r5, [r1, #0]
 8006178:	e003      	b.n	8006182 <_printf_i+0xc2>
 800617a:	066d      	lsls	r5, r5, #25
 800617c:	d5fb      	bpl.n	8006176 <_printf_i+0xb6>
 800617e:	680d      	ldr	r5, [r1, #0]
 8006180:	b2ad      	uxth	r5, r5
 8006182:	4b56      	ldr	r3, [pc, #344]	; (80062dc <_printf_i+0x21c>)
 8006184:	2708      	movs	r7, #8
 8006186:	9303      	str	r3, [sp, #12]
 8006188:	2a6f      	cmp	r2, #111	; 0x6f
 800618a:	d000      	beq.n	800618e <_printf_i+0xce>
 800618c:	3702      	adds	r7, #2
 800618e:	0023      	movs	r3, r4
 8006190:	2200      	movs	r2, #0
 8006192:	3343      	adds	r3, #67	; 0x43
 8006194:	701a      	strb	r2, [r3, #0]
 8006196:	6863      	ldr	r3, [r4, #4]
 8006198:	60a3      	str	r3, [r4, #8]
 800619a:	2b00      	cmp	r3, #0
 800619c:	db03      	blt.n	80061a6 <_printf_i+0xe6>
 800619e:	2204      	movs	r2, #4
 80061a0:	6821      	ldr	r1, [r4, #0]
 80061a2:	4391      	bics	r1, r2
 80061a4:	6021      	str	r1, [r4, #0]
 80061a6:	2d00      	cmp	r5, #0
 80061a8:	d102      	bne.n	80061b0 <_printf_i+0xf0>
 80061aa:	9e04      	ldr	r6, [sp, #16]
 80061ac:	2b00      	cmp	r3, #0
 80061ae:	d00c      	beq.n	80061ca <_printf_i+0x10a>
 80061b0:	9e04      	ldr	r6, [sp, #16]
 80061b2:	0028      	movs	r0, r5
 80061b4:	0039      	movs	r1, r7
 80061b6:	f7fa f849 	bl	800024c <__aeabi_uidivmod>
 80061ba:	9b03      	ldr	r3, [sp, #12]
 80061bc:	3e01      	subs	r6, #1
 80061be:	5c5b      	ldrb	r3, [r3, r1]
 80061c0:	7033      	strb	r3, [r6, #0]
 80061c2:	002b      	movs	r3, r5
 80061c4:	0005      	movs	r5, r0
 80061c6:	429f      	cmp	r7, r3
 80061c8:	d9f3      	bls.n	80061b2 <_printf_i+0xf2>
 80061ca:	2f08      	cmp	r7, #8
 80061cc:	d109      	bne.n	80061e2 <_printf_i+0x122>
 80061ce:	6823      	ldr	r3, [r4, #0]
 80061d0:	07db      	lsls	r3, r3, #31
 80061d2:	d506      	bpl.n	80061e2 <_printf_i+0x122>
 80061d4:	6863      	ldr	r3, [r4, #4]
 80061d6:	6922      	ldr	r2, [r4, #16]
 80061d8:	4293      	cmp	r3, r2
 80061da:	dc02      	bgt.n	80061e2 <_printf_i+0x122>
 80061dc:	2330      	movs	r3, #48	; 0x30
 80061de:	3e01      	subs	r6, #1
 80061e0:	7033      	strb	r3, [r6, #0]
 80061e2:	9b04      	ldr	r3, [sp, #16]
 80061e4:	1b9b      	subs	r3, r3, r6
 80061e6:	6123      	str	r3, [r4, #16]
 80061e8:	9b07      	ldr	r3, [sp, #28]
 80061ea:	0021      	movs	r1, r4
 80061ec:	9300      	str	r3, [sp, #0]
 80061ee:	9805      	ldr	r0, [sp, #20]
 80061f0:	9b06      	ldr	r3, [sp, #24]
 80061f2:	aa09      	add	r2, sp, #36	; 0x24
 80061f4:	f7ff fef4 	bl	8005fe0 <_printf_common>
 80061f8:	1c43      	adds	r3, r0, #1
 80061fa:	d14c      	bne.n	8006296 <_printf_i+0x1d6>
 80061fc:	2001      	movs	r0, #1
 80061fe:	4240      	negs	r0, r0
 8006200:	b00b      	add	sp, #44	; 0x2c
 8006202:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006204:	3145      	adds	r1, #69	; 0x45
 8006206:	700a      	strb	r2, [r1, #0]
 8006208:	4a34      	ldr	r2, [pc, #208]	; (80062dc <_printf_i+0x21c>)
 800620a:	9203      	str	r2, [sp, #12]
 800620c:	681a      	ldr	r2, [r3, #0]
 800620e:	6821      	ldr	r1, [r4, #0]
 8006210:	ca20      	ldmia	r2!, {r5}
 8006212:	601a      	str	r2, [r3, #0]
 8006214:	0608      	lsls	r0, r1, #24
 8006216:	d516      	bpl.n	8006246 <_printf_i+0x186>
 8006218:	07cb      	lsls	r3, r1, #31
 800621a:	d502      	bpl.n	8006222 <_printf_i+0x162>
 800621c:	2320      	movs	r3, #32
 800621e:	4319      	orrs	r1, r3
 8006220:	6021      	str	r1, [r4, #0]
 8006222:	2710      	movs	r7, #16
 8006224:	2d00      	cmp	r5, #0
 8006226:	d1b2      	bne.n	800618e <_printf_i+0xce>
 8006228:	2320      	movs	r3, #32
 800622a:	6822      	ldr	r2, [r4, #0]
 800622c:	439a      	bics	r2, r3
 800622e:	6022      	str	r2, [r4, #0]
 8006230:	e7ad      	b.n	800618e <_printf_i+0xce>
 8006232:	2220      	movs	r2, #32
 8006234:	6809      	ldr	r1, [r1, #0]
 8006236:	430a      	orrs	r2, r1
 8006238:	6022      	str	r2, [r4, #0]
 800623a:	0022      	movs	r2, r4
 800623c:	2178      	movs	r1, #120	; 0x78
 800623e:	3245      	adds	r2, #69	; 0x45
 8006240:	7011      	strb	r1, [r2, #0]
 8006242:	4a27      	ldr	r2, [pc, #156]	; (80062e0 <_printf_i+0x220>)
 8006244:	e7e1      	b.n	800620a <_printf_i+0x14a>
 8006246:	0648      	lsls	r0, r1, #25
 8006248:	d5e6      	bpl.n	8006218 <_printf_i+0x158>
 800624a:	b2ad      	uxth	r5, r5
 800624c:	e7e4      	b.n	8006218 <_printf_i+0x158>
 800624e:	681a      	ldr	r2, [r3, #0]
 8006250:	680d      	ldr	r5, [r1, #0]
 8006252:	1d10      	adds	r0, r2, #4
 8006254:	6949      	ldr	r1, [r1, #20]
 8006256:	6018      	str	r0, [r3, #0]
 8006258:	6813      	ldr	r3, [r2, #0]
 800625a:	062e      	lsls	r6, r5, #24
 800625c:	d501      	bpl.n	8006262 <_printf_i+0x1a2>
 800625e:	6019      	str	r1, [r3, #0]
 8006260:	e002      	b.n	8006268 <_printf_i+0x1a8>
 8006262:	066d      	lsls	r5, r5, #25
 8006264:	d5fb      	bpl.n	800625e <_printf_i+0x19e>
 8006266:	8019      	strh	r1, [r3, #0]
 8006268:	2300      	movs	r3, #0
 800626a:	9e04      	ldr	r6, [sp, #16]
 800626c:	6123      	str	r3, [r4, #16]
 800626e:	e7bb      	b.n	80061e8 <_printf_i+0x128>
 8006270:	681a      	ldr	r2, [r3, #0]
 8006272:	1d11      	adds	r1, r2, #4
 8006274:	6019      	str	r1, [r3, #0]
 8006276:	6816      	ldr	r6, [r2, #0]
 8006278:	2100      	movs	r1, #0
 800627a:	0030      	movs	r0, r6
 800627c:	6862      	ldr	r2, [r4, #4]
 800627e:	f000 ff05 	bl	800708c <memchr>
 8006282:	2800      	cmp	r0, #0
 8006284:	d001      	beq.n	800628a <_printf_i+0x1ca>
 8006286:	1b80      	subs	r0, r0, r6
 8006288:	6060      	str	r0, [r4, #4]
 800628a:	6863      	ldr	r3, [r4, #4]
 800628c:	6123      	str	r3, [r4, #16]
 800628e:	2300      	movs	r3, #0
 8006290:	9a04      	ldr	r2, [sp, #16]
 8006292:	7013      	strb	r3, [r2, #0]
 8006294:	e7a8      	b.n	80061e8 <_printf_i+0x128>
 8006296:	6923      	ldr	r3, [r4, #16]
 8006298:	0032      	movs	r2, r6
 800629a:	9906      	ldr	r1, [sp, #24]
 800629c:	9805      	ldr	r0, [sp, #20]
 800629e:	9d07      	ldr	r5, [sp, #28]
 80062a0:	47a8      	blx	r5
 80062a2:	1c43      	adds	r3, r0, #1
 80062a4:	d0aa      	beq.n	80061fc <_printf_i+0x13c>
 80062a6:	6823      	ldr	r3, [r4, #0]
 80062a8:	079b      	lsls	r3, r3, #30
 80062aa:	d415      	bmi.n	80062d8 <_printf_i+0x218>
 80062ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80062ae:	68e0      	ldr	r0, [r4, #12]
 80062b0:	4298      	cmp	r0, r3
 80062b2:	daa5      	bge.n	8006200 <_printf_i+0x140>
 80062b4:	0018      	movs	r0, r3
 80062b6:	e7a3      	b.n	8006200 <_printf_i+0x140>
 80062b8:	0022      	movs	r2, r4
 80062ba:	2301      	movs	r3, #1
 80062bc:	9906      	ldr	r1, [sp, #24]
 80062be:	9805      	ldr	r0, [sp, #20]
 80062c0:	9e07      	ldr	r6, [sp, #28]
 80062c2:	3219      	adds	r2, #25
 80062c4:	47b0      	blx	r6
 80062c6:	1c43      	adds	r3, r0, #1
 80062c8:	d098      	beq.n	80061fc <_printf_i+0x13c>
 80062ca:	3501      	adds	r5, #1
 80062cc:	68e3      	ldr	r3, [r4, #12]
 80062ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80062d0:	1a9b      	subs	r3, r3, r2
 80062d2:	42ab      	cmp	r3, r5
 80062d4:	dcf0      	bgt.n	80062b8 <_printf_i+0x1f8>
 80062d6:	e7e9      	b.n	80062ac <_printf_i+0x1ec>
 80062d8:	2500      	movs	r5, #0
 80062da:	e7f7      	b.n	80062cc <_printf_i+0x20c>
 80062dc:	08008abe 	.word	0x08008abe
 80062e0:	08008acf 	.word	0x08008acf

080062e4 <siprintf>:
 80062e4:	b40e      	push	{r1, r2, r3}
 80062e6:	b500      	push	{lr}
 80062e8:	490b      	ldr	r1, [pc, #44]	; (8006318 <siprintf+0x34>)
 80062ea:	b09c      	sub	sp, #112	; 0x70
 80062ec:	ab1d      	add	r3, sp, #116	; 0x74
 80062ee:	9002      	str	r0, [sp, #8]
 80062f0:	9006      	str	r0, [sp, #24]
 80062f2:	9107      	str	r1, [sp, #28]
 80062f4:	9104      	str	r1, [sp, #16]
 80062f6:	4809      	ldr	r0, [pc, #36]	; (800631c <siprintf+0x38>)
 80062f8:	4909      	ldr	r1, [pc, #36]	; (8006320 <siprintf+0x3c>)
 80062fa:	cb04      	ldmia	r3!, {r2}
 80062fc:	9105      	str	r1, [sp, #20]
 80062fe:	6800      	ldr	r0, [r0, #0]
 8006300:	a902      	add	r1, sp, #8
 8006302:	9301      	str	r3, [sp, #4]
 8006304:	f001 fbe2 	bl	8007acc <_svfiprintf_r>
 8006308:	2300      	movs	r3, #0
 800630a:	9a02      	ldr	r2, [sp, #8]
 800630c:	7013      	strb	r3, [r2, #0]
 800630e:	b01c      	add	sp, #112	; 0x70
 8006310:	bc08      	pop	{r3}
 8006312:	b003      	add	sp, #12
 8006314:	4718      	bx	r3
 8006316:	46c0      	nop			; (mov r8, r8)
 8006318:	7fffffff 	.word	0x7fffffff
 800631c:	2000000c 	.word	0x2000000c
 8006320:	ffff0208 	.word	0xffff0208

08006324 <quorem>:
 8006324:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006326:	0006      	movs	r6, r0
 8006328:	690b      	ldr	r3, [r1, #16]
 800632a:	6932      	ldr	r2, [r6, #16]
 800632c:	b087      	sub	sp, #28
 800632e:	2000      	movs	r0, #0
 8006330:	9103      	str	r1, [sp, #12]
 8006332:	429a      	cmp	r2, r3
 8006334:	db65      	blt.n	8006402 <quorem+0xde>
 8006336:	3b01      	subs	r3, #1
 8006338:	009c      	lsls	r4, r3, #2
 800633a:	9300      	str	r3, [sp, #0]
 800633c:	000b      	movs	r3, r1
 800633e:	3314      	adds	r3, #20
 8006340:	9305      	str	r3, [sp, #20]
 8006342:	191b      	adds	r3, r3, r4
 8006344:	9304      	str	r3, [sp, #16]
 8006346:	0033      	movs	r3, r6
 8006348:	3314      	adds	r3, #20
 800634a:	9302      	str	r3, [sp, #8]
 800634c:	191c      	adds	r4, r3, r4
 800634e:	9b04      	ldr	r3, [sp, #16]
 8006350:	6827      	ldr	r7, [r4, #0]
 8006352:	681b      	ldr	r3, [r3, #0]
 8006354:	0038      	movs	r0, r7
 8006356:	1c5d      	adds	r5, r3, #1
 8006358:	0029      	movs	r1, r5
 800635a:	9301      	str	r3, [sp, #4]
 800635c:	f7f9 fef0 	bl	8000140 <__udivsi3>
 8006360:	9001      	str	r0, [sp, #4]
 8006362:	42af      	cmp	r7, r5
 8006364:	d324      	bcc.n	80063b0 <quorem+0x8c>
 8006366:	2500      	movs	r5, #0
 8006368:	46ac      	mov	ip, r5
 800636a:	9802      	ldr	r0, [sp, #8]
 800636c:	9f05      	ldr	r7, [sp, #20]
 800636e:	cf08      	ldmia	r7!, {r3}
 8006370:	9a01      	ldr	r2, [sp, #4]
 8006372:	b299      	uxth	r1, r3
 8006374:	4351      	muls	r1, r2
 8006376:	0c1b      	lsrs	r3, r3, #16
 8006378:	4353      	muls	r3, r2
 800637a:	1949      	adds	r1, r1, r5
 800637c:	0c0a      	lsrs	r2, r1, #16
 800637e:	189b      	adds	r3, r3, r2
 8006380:	6802      	ldr	r2, [r0, #0]
 8006382:	b289      	uxth	r1, r1
 8006384:	b292      	uxth	r2, r2
 8006386:	4462      	add	r2, ip
 8006388:	1a52      	subs	r2, r2, r1
 800638a:	6801      	ldr	r1, [r0, #0]
 800638c:	0c1d      	lsrs	r5, r3, #16
 800638e:	0c09      	lsrs	r1, r1, #16
 8006390:	b29b      	uxth	r3, r3
 8006392:	1acb      	subs	r3, r1, r3
 8006394:	1411      	asrs	r1, r2, #16
 8006396:	185b      	adds	r3, r3, r1
 8006398:	1419      	asrs	r1, r3, #16
 800639a:	b292      	uxth	r2, r2
 800639c:	041b      	lsls	r3, r3, #16
 800639e:	431a      	orrs	r2, r3
 80063a0:	9b04      	ldr	r3, [sp, #16]
 80063a2:	468c      	mov	ip, r1
 80063a4:	c004      	stmia	r0!, {r2}
 80063a6:	42bb      	cmp	r3, r7
 80063a8:	d2e1      	bcs.n	800636e <quorem+0x4a>
 80063aa:	6823      	ldr	r3, [r4, #0]
 80063ac:	2b00      	cmp	r3, #0
 80063ae:	d030      	beq.n	8006412 <quorem+0xee>
 80063b0:	0030      	movs	r0, r6
 80063b2:	9903      	ldr	r1, [sp, #12]
 80063b4:	f001 f902 	bl	80075bc <__mcmp>
 80063b8:	2800      	cmp	r0, #0
 80063ba:	db21      	blt.n	8006400 <quorem+0xdc>
 80063bc:	0030      	movs	r0, r6
 80063be:	2400      	movs	r4, #0
 80063c0:	9b01      	ldr	r3, [sp, #4]
 80063c2:	9903      	ldr	r1, [sp, #12]
 80063c4:	3301      	adds	r3, #1
 80063c6:	9301      	str	r3, [sp, #4]
 80063c8:	3014      	adds	r0, #20
 80063ca:	3114      	adds	r1, #20
 80063cc:	6803      	ldr	r3, [r0, #0]
 80063ce:	c920      	ldmia	r1!, {r5}
 80063d0:	b29a      	uxth	r2, r3
 80063d2:	1914      	adds	r4, r2, r4
 80063d4:	b2aa      	uxth	r2, r5
 80063d6:	1aa2      	subs	r2, r4, r2
 80063d8:	0c1b      	lsrs	r3, r3, #16
 80063da:	0c2d      	lsrs	r5, r5, #16
 80063dc:	1414      	asrs	r4, r2, #16
 80063de:	1b5b      	subs	r3, r3, r5
 80063e0:	191b      	adds	r3, r3, r4
 80063e2:	141c      	asrs	r4, r3, #16
 80063e4:	b292      	uxth	r2, r2
 80063e6:	041b      	lsls	r3, r3, #16
 80063e8:	4313      	orrs	r3, r2
 80063ea:	c008      	stmia	r0!, {r3}
 80063ec:	9b04      	ldr	r3, [sp, #16]
 80063ee:	428b      	cmp	r3, r1
 80063f0:	d2ec      	bcs.n	80063cc <quorem+0xa8>
 80063f2:	9b00      	ldr	r3, [sp, #0]
 80063f4:	9a02      	ldr	r2, [sp, #8]
 80063f6:	009b      	lsls	r3, r3, #2
 80063f8:	18d3      	adds	r3, r2, r3
 80063fa:	681a      	ldr	r2, [r3, #0]
 80063fc:	2a00      	cmp	r2, #0
 80063fe:	d015      	beq.n	800642c <quorem+0x108>
 8006400:	9801      	ldr	r0, [sp, #4]
 8006402:	b007      	add	sp, #28
 8006404:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006406:	6823      	ldr	r3, [r4, #0]
 8006408:	2b00      	cmp	r3, #0
 800640a:	d106      	bne.n	800641a <quorem+0xf6>
 800640c:	9b00      	ldr	r3, [sp, #0]
 800640e:	3b01      	subs	r3, #1
 8006410:	9300      	str	r3, [sp, #0]
 8006412:	9b02      	ldr	r3, [sp, #8]
 8006414:	3c04      	subs	r4, #4
 8006416:	42a3      	cmp	r3, r4
 8006418:	d3f5      	bcc.n	8006406 <quorem+0xe2>
 800641a:	9b00      	ldr	r3, [sp, #0]
 800641c:	6133      	str	r3, [r6, #16]
 800641e:	e7c7      	b.n	80063b0 <quorem+0x8c>
 8006420:	681a      	ldr	r2, [r3, #0]
 8006422:	2a00      	cmp	r2, #0
 8006424:	d106      	bne.n	8006434 <quorem+0x110>
 8006426:	9a00      	ldr	r2, [sp, #0]
 8006428:	3a01      	subs	r2, #1
 800642a:	9200      	str	r2, [sp, #0]
 800642c:	9a02      	ldr	r2, [sp, #8]
 800642e:	3b04      	subs	r3, #4
 8006430:	429a      	cmp	r2, r3
 8006432:	d3f5      	bcc.n	8006420 <quorem+0xfc>
 8006434:	9b00      	ldr	r3, [sp, #0]
 8006436:	6133      	str	r3, [r6, #16]
 8006438:	e7e2      	b.n	8006400 <quorem+0xdc>
	...

0800643c <_dtoa_r>:
 800643c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800643e:	b09d      	sub	sp, #116	; 0x74
 8006440:	9202      	str	r2, [sp, #8]
 8006442:	9303      	str	r3, [sp, #12]
 8006444:	9b02      	ldr	r3, [sp, #8]
 8006446:	9c03      	ldr	r4, [sp, #12]
 8006448:	9308      	str	r3, [sp, #32]
 800644a:	9409      	str	r4, [sp, #36]	; 0x24
 800644c:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800644e:	0007      	movs	r7, r0
 8006450:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8006452:	2c00      	cmp	r4, #0
 8006454:	d10e      	bne.n	8006474 <_dtoa_r+0x38>
 8006456:	2010      	movs	r0, #16
 8006458:	f000 fe0e 	bl	8007078 <malloc>
 800645c:	1e02      	subs	r2, r0, #0
 800645e:	6278      	str	r0, [r7, #36]	; 0x24
 8006460:	d104      	bne.n	800646c <_dtoa_r+0x30>
 8006462:	21ea      	movs	r1, #234	; 0xea
 8006464:	4bc7      	ldr	r3, [pc, #796]	; (8006784 <_dtoa_r+0x348>)
 8006466:	48c8      	ldr	r0, [pc, #800]	; (8006788 <_dtoa_r+0x34c>)
 8006468:	f001 fc42 	bl	8007cf0 <__assert_func>
 800646c:	6044      	str	r4, [r0, #4]
 800646e:	6084      	str	r4, [r0, #8]
 8006470:	6004      	str	r4, [r0, #0]
 8006472:	60c4      	str	r4, [r0, #12]
 8006474:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006476:	6819      	ldr	r1, [r3, #0]
 8006478:	2900      	cmp	r1, #0
 800647a:	d00a      	beq.n	8006492 <_dtoa_r+0x56>
 800647c:	685a      	ldr	r2, [r3, #4]
 800647e:	2301      	movs	r3, #1
 8006480:	4093      	lsls	r3, r2
 8006482:	604a      	str	r2, [r1, #4]
 8006484:	608b      	str	r3, [r1, #8]
 8006486:	0038      	movs	r0, r7
 8006488:	f000 fe58 	bl	800713c <_Bfree>
 800648c:	2200      	movs	r2, #0
 800648e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006490:	601a      	str	r2, [r3, #0]
 8006492:	9b03      	ldr	r3, [sp, #12]
 8006494:	2b00      	cmp	r3, #0
 8006496:	da20      	bge.n	80064da <_dtoa_r+0x9e>
 8006498:	2301      	movs	r3, #1
 800649a:	602b      	str	r3, [r5, #0]
 800649c:	9b03      	ldr	r3, [sp, #12]
 800649e:	005b      	lsls	r3, r3, #1
 80064a0:	085b      	lsrs	r3, r3, #1
 80064a2:	9309      	str	r3, [sp, #36]	; 0x24
 80064a4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80064a6:	4bb9      	ldr	r3, [pc, #740]	; (800678c <_dtoa_r+0x350>)
 80064a8:	4ab8      	ldr	r2, [pc, #736]	; (800678c <_dtoa_r+0x350>)
 80064aa:	402b      	ands	r3, r5
 80064ac:	4293      	cmp	r3, r2
 80064ae:	d117      	bne.n	80064e0 <_dtoa_r+0xa4>
 80064b0:	4bb7      	ldr	r3, [pc, #732]	; (8006790 <_dtoa_r+0x354>)
 80064b2:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80064b4:	0328      	lsls	r0, r5, #12
 80064b6:	6013      	str	r3, [r2, #0]
 80064b8:	9b02      	ldr	r3, [sp, #8]
 80064ba:	0b00      	lsrs	r0, r0, #12
 80064bc:	4318      	orrs	r0, r3
 80064be:	d101      	bne.n	80064c4 <_dtoa_r+0x88>
 80064c0:	f000 fdbf 	bl	8007042 <_dtoa_r+0xc06>
 80064c4:	48b3      	ldr	r0, [pc, #716]	; (8006794 <_dtoa_r+0x358>)
 80064c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80064c8:	9006      	str	r0, [sp, #24]
 80064ca:	2b00      	cmp	r3, #0
 80064cc:	d002      	beq.n	80064d4 <_dtoa_r+0x98>
 80064ce:	4bb2      	ldr	r3, [pc, #712]	; (8006798 <_dtoa_r+0x35c>)
 80064d0:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80064d2:	6013      	str	r3, [r2, #0]
 80064d4:	9806      	ldr	r0, [sp, #24]
 80064d6:	b01d      	add	sp, #116	; 0x74
 80064d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80064da:	2300      	movs	r3, #0
 80064dc:	602b      	str	r3, [r5, #0]
 80064de:	e7e1      	b.n	80064a4 <_dtoa_r+0x68>
 80064e0:	9b08      	ldr	r3, [sp, #32]
 80064e2:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80064e4:	9312      	str	r3, [sp, #72]	; 0x48
 80064e6:	9413      	str	r4, [sp, #76]	; 0x4c
 80064e8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80064ea:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80064ec:	2200      	movs	r2, #0
 80064ee:	2300      	movs	r3, #0
 80064f0:	f7f9 ffac 	bl	800044c <__aeabi_dcmpeq>
 80064f4:	1e04      	subs	r4, r0, #0
 80064f6:	d009      	beq.n	800650c <_dtoa_r+0xd0>
 80064f8:	2301      	movs	r3, #1
 80064fa:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80064fc:	6013      	str	r3, [r2, #0]
 80064fe:	4ba7      	ldr	r3, [pc, #668]	; (800679c <_dtoa_r+0x360>)
 8006500:	9306      	str	r3, [sp, #24]
 8006502:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8006504:	2b00      	cmp	r3, #0
 8006506:	d0e5      	beq.n	80064d4 <_dtoa_r+0x98>
 8006508:	4ba5      	ldr	r3, [pc, #660]	; (80067a0 <_dtoa_r+0x364>)
 800650a:	e7e1      	b.n	80064d0 <_dtoa_r+0x94>
 800650c:	ab1a      	add	r3, sp, #104	; 0x68
 800650e:	9301      	str	r3, [sp, #4]
 8006510:	ab1b      	add	r3, sp, #108	; 0x6c
 8006512:	9300      	str	r3, [sp, #0]
 8006514:	0038      	movs	r0, r7
 8006516:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8006518:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800651a:	f001 f903 	bl	8007724 <__d2b>
 800651e:	006e      	lsls	r6, r5, #1
 8006520:	9005      	str	r0, [sp, #20]
 8006522:	0d76      	lsrs	r6, r6, #21
 8006524:	d100      	bne.n	8006528 <_dtoa_r+0xec>
 8006526:	e07c      	b.n	8006622 <_dtoa_r+0x1e6>
 8006528:	9812      	ldr	r0, [sp, #72]	; 0x48
 800652a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800652c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800652e:	4a9d      	ldr	r2, [pc, #628]	; (80067a4 <_dtoa_r+0x368>)
 8006530:	031b      	lsls	r3, r3, #12
 8006532:	0b1b      	lsrs	r3, r3, #12
 8006534:	431a      	orrs	r2, r3
 8006536:	0011      	movs	r1, r2
 8006538:	4b9b      	ldr	r3, [pc, #620]	; (80067a8 <_dtoa_r+0x36c>)
 800653a:	9418      	str	r4, [sp, #96]	; 0x60
 800653c:	18f6      	adds	r6, r6, r3
 800653e:	2200      	movs	r2, #0
 8006540:	4b9a      	ldr	r3, [pc, #616]	; (80067ac <_dtoa_r+0x370>)
 8006542:	f7fb fbb9 	bl	8001cb8 <__aeabi_dsub>
 8006546:	4a9a      	ldr	r2, [pc, #616]	; (80067b0 <_dtoa_r+0x374>)
 8006548:	4b9a      	ldr	r3, [pc, #616]	; (80067b4 <_dtoa_r+0x378>)
 800654a:	f7fb f949 	bl	80017e0 <__aeabi_dmul>
 800654e:	4a9a      	ldr	r2, [pc, #616]	; (80067b8 <_dtoa_r+0x37c>)
 8006550:	4b9a      	ldr	r3, [pc, #616]	; (80067bc <_dtoa_r+0x380>)
 8006552:	f7fa fa07 	bl	8000964 <__aeabi_dadd>
 8006556:	0004      	movs	r4, r0
 8006558:	0030      	movs	r0, r6
 800655a:	000d      	movs	r5, r1
 800655c:	f7fb ff92 	bl	8002484 <__aeabi_i2d>
 8006560:	4a97      	ldr	r2, [pc, #604]	; (80067c0 <_dtoa_r+0x384>)
 8006562:	4b98      	ldr	r3, [pc, #608]	; (80067c4 <_dtoa_r+0x388>)
 8006564:	f7fb f93c 	bl	80017e0 <__aeabi_dmul>
 8006568:	0002      	movs	r2, r0
 800656a:	000b      	movs	r3, r1
 800656c:	0020      	movs	r0, r4
 800656e:	0029      	movs	r1, r5
 8006570:	f7fa f9f8 	bl	8000964 <__aeabi_dadd>
 8006574:	0004      	movs	r4, r0
 8006576:	000d      	movs	r5, r1
 8006578:	f7fb ff4e 	bl	8002418 <__aeabi_d2iz>
 800657c:	2200      	movs	r2, #0
 800657e:	9002      	str	r0, [sp, #8]
 8006580:	2300      	movs	r3, #0
 8006582:	0020      	movs	r0, r4
 8006584:	0029      	movs	r1, r5
 8006586:	f7f9 ff67 	bl	8000458 <__aeabi_dcmplt>
 800658a:	2800      	cmp	r0, #0
 800658c:	d00b      	beq.n	80065a6 <_dtoa_r+0x16a>
 800658e:	9802      	ldr	r0, [sp, #8]
 8006590:	f7fb ff78 	bl	8002484 <__aeabi_i2d>
 8006594:	002b      	movs	r3, r5
 8006596:	0022      	movs	r2, r4
 8006598:	f7f9 ff58 	bl	800044c <__aeabi_dcmpeq>
 800659c:	4243      	negs	r3, r0
 800659e:	4158      	adcs	r0, r3
 80065a0:	9b02      	ldr	r3, [sp, #8]
 80065a2:	1a1b      	subs	r3, r3, r0
 80065a4:	9302      	str	r3, [sp, #8]
 80065a6:	2301      	movs	r3, #1
 80065a8:	9316      	str	r3, [sp, #88]	; 0x58
 80065aa:	9b02      	ldr	r3, [sp, #8]
 80065ac:	2b16      	cmp	r3, #22
 80065ae:	d80f      	bhi.n	80065d0 <_dtoa_r+0x194>
 80065b0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80065b2:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80065b4:	00da      	lsls	r2, r3, #3
 80065b6:	4b84      	ldr	r3, [pc, #528]	; (80067c8 <_dtoa_r+0x38c>)
 80065b8:	189b      	adds	r3, r3, r2
 80065ba:	681a      	ldr	r2, [r3, #0]
 80065bc:	685b      	ldr	r3, [r3, #4]
 80065be:	f7f9 ff4b 	bl	8000458 <__aeabi_dcmplt>
 80065c2:	2800      	cmp	r0, #0
 80065c4:	d049      	beq.n	800665a <_dtoa_r+0x21e>
 80065c6:	9b02      	ldr	r3, [sp, #8]
 80065c8:	3b01      	subs	r3, #1
 80065ca:	9302      	str	r3, [sp, #8]
 80065cc:	2300      	movs	r3, #0
 80065ce:	9316      	str	r3, [sp, #88]	; 0x58
 80065d0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80065d2:	1b9e      	subs	r6, r3, r6
 80065d4:	2300      	movs	r3, #0
 80065d6:	930a      	str	r3, [sp, #40]	; 0x28
 80065d8:	0033      	movs	r3, r6
 80065da:	3b01      	subs	r3, #1
 80065dc:	930d      	str	r3, [sp, #52]	; 0x34
 80065de:	d504      	bpl.n	80065ea <_dtoa_r+0x1ae>
 80065e0:	2301      	movs	r3, #1
 80065e2:	1b9b      	subs	r3, r3, r6
 80065e4:	930a      	str	r3, [sp, #40]	; 0x28
 80065e6:	2300      	movs	r3, #0
 80065e8:	930d      	str	r3, [sp, #52]	; 0x34
 80065ea:	9b02      	ldr	r3, [sp, #8]
 80065ec:	2b00      	cmp	r3, #0
 80065ee:	db36      	blt.n	800665e <_dtoa_r+0x222>
 80065f0:	9a02      	ldr	r2, [sp, #8]
 80065f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80065f4:	4694      	mov	ip, r2
 80065f6:	4463      	add	r3, ip
 80065f8:	930d      	str	r3, [sp, #52]	; 0x34
 80065fa:	2300      	movs	r3, #0
 80065fc:	9215      	str	r2, [sp, #84]	; 0x54
 80065fe:	930e      	str	r3, [sp, #56]	; 0x38
 8006600:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006602:	2401      	movs	r4, #1
 8006604:	2b09      	cmp	r3, #9
 8006606:	d864      	bhi.n	80066d2 <_dtoa_r+0x296>
 8006608:	2b05      	cmp	r3, #5
 800660a:	dd02      	ble.n	8006612 <_dtoa_r+0x1d6>
 800660c:	2400      	movs	r4, #0
 800660e:	3b04      	subs	r3, #4
 8006610:	9322      	str	r3, [sp, #136]	; 0x88
 8006612:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006614:	1e98      	subs	r0, r3, #2
 8006616:	2803      	cmp	r0, #3
 8006618:	d864      	bhi.n	80066e4 <_dtoa_r+0x2a8>
 800661a:	f7f9 fd7d 	bl	8000118 <__gnu_thumb1_case_uqi>
 800661e:	3829      	.short	0x3829
 8006620:	5836      	.short	0x5836
 8006622:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8006624:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8006626:	189e      	adds	r6, r3, r2
 8006628:	4b68      	ldr	r3, [pc, #416]	; (80067cc <_dtoa_r+0x390>)
 800662a:	18f2      	adds	r2, r6, r3
 800662c:	2a20      	cmp	r2, #32
 800662e:	dd0f      	ble.n	8006650 <_dtoa_r+0x214>
 8006630:	2340      	movs	r3, #64	; 0x40
 8006632:	1a9b      	subs	r3, r3, r2
 8006634:	409d      	lsls	r5, r3
 8006636:	4b66      	ldr	r3, [pc, #408]	; (80067d0 <_dtoa_r+0x394>)
 8006638:	9802      	ldr	r0, [sp, #8]
 800663a:	18f3      	adds	r3, r6, r3
 800663c:	40d8      	lsrs	r0, r3
 800663e:	4328      	orrs	r0, r5
 8006640:	f7fb ff50 	bl	80024e4 <__aeabi_ui2d>
 8006644:	2301      	movs	r3, #1
 8006646:	4c63      	ldr	r4, [pc, #396]	; (80067d4 <_dtoa_r+0x398>)
 8006648:	3e01      	subs	r6, #1
 800664a:	1909      	adds	r1, r1, r4
 800664c:	9318      	str	r3, [sp, #96]	; 0x60
 800664e:	e776      	b.n	800653e <_dtoa_r+0x102>
 8006650:	2320      	movs	r3, #32
 8006652:	9802      	ldr	r0, [sp, #8]
 8006654:	1a9b      	subs	r3, r3, r2
 8006656:	4098      	lsls	r0, r3
 8006658:	e7f2      	b.n	8006640 <_dtoa_r+0x204>
 800665a:	9016      	str	r0, [sp, #88]	; 0x58
 800665c:	e7b8      	b.n	80065d0 <_dtoa_r+0x194>
 800665e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006660:	9a02      	ldr	r2, [sp, #8]
 8006662:	1a9b      	subs	r3, r3, r2
 8006664:	930a      	str	r3, [sp, #40]	; 0x28
 8006666:	4253      	negs	r3, r2
 8006668:	930e      	str	r3, [sp, #56]	; 0x38
 800666a:	2300      	movs	r3, #0
 800666c:	9315      	str	r3, [sp, #84]	; 0x54
 800666e:	e7c7      	b.n	8006600 <_dtoa_r+0x1c4>
 8006670:	2300      	movs	r3, #0
 8006672:	930f      	str	r3, [sp, #60]	; 0x3c
 8006674:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006676:	930c      	str	r3, [sp, #48]	; 0x30
 8006678:	9307      	str	r3, [sp, #28]
 800667a:	2b00      	cmp	r3, #0
 800667c:	dc13      	bgt.n	80066a6 <_dtoa_r+0x26a>
 800667e:	2301      	movs	r3, #1
 8006680:	001a      	movs	r2, r3
 8006682:	930c      	str	r3, [sp, #48]	; 0x30
 8006684:	9307      	str	r3, [sp, #28]
 8006686:	9223      	str	r2, [sp, #140]	; 0x8c
 8006688:	e00d      	b.n	80066a6 <_dtoa_r+0x26a>
 800668a:	2301      	movs	r3, #1
 800668c:	e7f1      	b.n	8006672 <_dtoa_r+0x236>
 800668e:	2300      	movs	r3, #0
 8006690:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8006692:	930f      	str	r3, [sp, #60]	; 0x3c
 8006694:	4694      	mov	ip, r2
 8006696:	9b02      	ldr	r3, [sp, #8]
 8006698:	4463      	add	r3, ip
 800669a:	930c      	str	r3, [sp, #48]	; 0x30
 800669c:	3301      	adds	r3, #1
 800669e:	9307      	str	r3, [sp, #28]
 80066a0:	2b00      	cmp	r3, #0
 80066a2:	dc00      	bgt.n	80066a6 <_dtoa_r+0x26a>
 80066a4:	2301      	movs	r3, #1
 80066a6:	2200      	movs	r2, #0
 80066a8:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80066aa:	6042      	str	r2, [r0, #4]
 80066ac:	3204      	adds	r2, #4
 80066ae:	0015      	movs	r5, r2
 80066b0:	3514      	adds	r5, #20
 80066b2:	6841      	ldr	r1, [r0, #4]
 80066b4:	429d      	cmp	r5, r3
 80066b6:	d919      	bls.n	80066ec <_dtoa_r+0x2b0>
 80066b8:	0038      	movs	r0, r7
 80066ba:	f000 fcfb 	bl	80070b4 <_Balloc>
 80066be:	9006      	str	r0, [sp, #24]
 80066c0:	2800      	cmp	r0, #0
 80066c2:	d117      	bne.n	80066f4 <_dtoa_r+0x2b8>
 80066c4:	21d5      	movs	r1, #213	; 0xd5
 80066c6:	0002      	movs	r2, r0
 80066c8:	4b43      	ldr	r3, [pc, #268]	; (80067d8 <_dtoa_r+0x39c>)
 80066ca:	0049      	lsls	r1, r1, #1
 80066cc:	e6cb      	b.n	8006466 <_dtoa_r+0x2a>
 80066ce:	2301      	movs	r3, #1
 80066d0:	e7de      	b.n	8006690 <_dtoa_r+0x254>
 80066d2:	2300      	movs	r3, #0
 80066d4:	940f      	str	r4, [sp, #60]	; 0x3c
 80066d6:	9322      	str	r3, [sp, #136]	; 0x88
 80066d8:	3b01      	subs	r3, #1
 80066da:	930c      	str	r3, [sp, #48]	; 0x30
 80066dc:	9307      	str	r3, [sp, #28]
 80066de:	2200      	movs	r2, #0
 80066e0:	3313      	adds	r3, #19
 80066e2:	e7d0      	b.n	8006686 <_dtoa_r+0x24a>
 80066e4:	2301      	movs	r3, #1
 80066e6:	930f      	str	r3, [sp, #60]	; 0x3c
 80066e8:	3b02      	subs	r3, #2
 80066ea:	e7f6      	b.n	80066da <_dtoa_r+0x29e>
 80066ec:	3101      	adds	r1, #1
 80066ee:	6041      	str	r1, [r0, #4]
 80066f0:	0052      	lsls	r2, r2, #1
 80066f2:	e7dc      	b.n	80066ae <_dtoa_r+0x272>
 80066f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80066f6:	9a06      	ldr	r2, [sp, #24]
 80066f8:	601a      	str	r2, [r3, #0]
 80066fa:	9b07      	ldr	r3, [sp, #28]
 80066fc:	2b0e      	cmp	r3, #14
 80066fe:	d900      	bls.n	8006702 <_dtoa_r+0x2c6>
 8006700:	e0eb      	b.n	80068da <_dtoa_r+0x49e>
 8006702:	2c00      	cmp	r4, #0
 8006704:	d100      	bne.n	8006708 <_dtoa_r+0x2cc>
 8006706:	e0e8      	b.n	80068da <_dtoa_r+0x49e>
 8006708:	9b02      	ldr	r3, [sp, #8]
 800670a:	2b00      	cmp	r3, #0
 800670c:	dd68      	ble.n	80067e0 <_dtoa_r+0x3a4>
 800670e:	001a      	movs	r2, r3
 8006710:	210f      	movs	r1, #15
 8006712:	4b2d      	ldr	r3, [pc, #180]	; (80067c8 <_dtoa_r+0x38c>)
 8006714:	400a      	ands	r2, r1
 8006716:	00d2      	lsls	r2, r2, #3
 8006718:	189b      	adds	r3, r3, r2
 800671a:	681d      	ldr	r5, [r3, #0]
 800671c:	685e      	ldr	r6, [r3, #4]
 800671e:	9b02      	ldr	r3, [sp, #8]
 8006720:	111c      	asrs	r4, r3, #4
 8006722:	2302      	movs	r3, #2
 8006724:	9310      	str	r3, [sp, #64]	; 0x40
 8006726:	9b02      	ldr	r3, [sp, #8]
 8006728:	05db      	lsls	r3, r3, #23
 800672a:	d50b      	bpl.n	8006744 <_dtoa_r+0x308>
 800672c:	4b2b      	ldr	r3, [pc, #172]	; (80067dc <_dtoa_r+0x3a0>)
 800672e:	400c      	ands	r4, r1
 8006730:	6a1a      	ldr	r2, [r3, #32]
 8006732:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006734:	9812      	ldr	r0, [sp, #72]	; 0x48
 8006736:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8006738:	f7fa fc50 	bl	8000fdc <__aeabi_ddiv>
 800673c:	2303      	movs	r3, #3
 800673e:	9008      	str	r0, [sp, #32]
 8006740:	9109      	str	r1, [sp, #36]	; 0x24
 8006742:	9310      	str	r3, [sp, #64]	; 0x40
 8006744:	4b25      	ldr	r3, [pc, #148]	; (80067dc <_dtoa_r+0x3a0>)
 8006746:	9314      	str	r3, [sp, #80]	; 0x50
 8006748:	2c00      	cmp	r4, #0
 800674a:	d108      	bne.n	800675e <_dtoa_r+0x322>
 800674c:	9808      	ldr	r0, [sp, #32]
 800674e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006750:	002a      	movs	r2, r5
 8006752:	0033      	movs	r3, r6
 8006754:	f7fa fc42 	bl	8000fdc <__aeabi_ddiv>
 8006758:	9008      	str	r0, [sp, #32]
 800675a:	9109      	str	r1, [sp, #36]	; 0x24
 800675c:	e05c      	b.n	8006818 <_dtoa_r+0x3dc>
 800675e:	2301      	movs	r3, #1
 8006760:	421c      	tst	r4, r3
 8006762:	d00b      	beq.n	800677c <_dtoa_r+0x340>
 8006764:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006766:	0028      	movs	r0, r5
 8006768:	3301      	adds	r3, #1
 800676a:	9310      	str	r3, [sp, #64]	; 0x40
 800676c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800676e:	0031      	movs	r1, r6
 8006770:	681a      	ldr	r2, [r3, #0]
 8006772:	685b      	ldr	r3, [r3, #4]
 8006774:	f7fb f834 	bl	80017e0 <__aeabi_dmul>
 8006778:	0005      	movs	r5, r0
 800677a:	000e      	movs	r6, r1
 800677c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800677e:	1064      	asrs	r4, r4, #1
 8006780:	3308      	adds	r3, #8
 8006782:	e7e0      	b.n	8006746 <_dtoa_r+0x30a>
 8006784:	08008aed 	.word	0x08008aed
 8006788:	08008b04 	.word	0x08008b04
 800678c:	7ff00000 	.word	0x7ff00000
 8006790:	0000270f 	.word	0x0000270f
 8006794:	08008ae9 	.word	0x08008ae9
 8006798:	08008aec 	.word	0x08008aec
 800679c:	08008abc 	.word	0x08008abc
 80067a0:	08008abd 	.word	0x08008abd
 80067a4:	3ff00000 	.word	0x3ff00000
 80067a8:	fffffc01 	.word	0xfffffc01
 80067ac:	3ff80000 	.word	0x3ff80000
 80067b0:	636f4361 	.word	0x636f4361
 80067b4:	3fd287a7 	.word	0x3fd287a7
 80067b8:	8b60c8b3 	.word	0x8b60c8b3
 80067bc:	3fc68a28 	.word	0x3fc68a28
 80067c0:	509f79fb 	.word	0x509f79fb
 80067c4:	3fd34413 	.word	0x3fd34413
 80067c8:	08008bf8 	.word	0x08008bf8
 80067cc:	00000432 	.word	0x00000432
 80067d0:	00000412 	.word	0x00000412
 80067d4:	fe100000 	.word	0xfe100000
 80067d8:	08008b5f 	.word	0x08008b5f
 80067dc:	08008bd0 	.word	0x08008bd0
 80067e0:	2302      	movs	r3, #2
 80067e2:	9310      	str	r3, [sp, #64]	; 0x40
 80067e4:	9b02      	ldr	r3, [sp, #8]
 80067e6:	2b00      	cmp	r3, #0
 80067e8:	d016      	beq.n	8006818 <_dtoa_r+0x3dc>
 80067ea:	9812      	ldr	r0, [sp, #72]	; 0x48
 80067ec:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80067ee:	425c      	negs	r4, r3
 80067f0:	230f      	movs	r3, #15
 80067f2:	4ab6      	ldr	r2, [pc, #728]	; (8006acc <_dtoa_r+0x690>)
 80067f4:	4023      	ands	r3, r4
 80067f6:	00db      	lsls	r3, r3, #3
 80067f8:	18d3      	adds	r3, r2, r3
 80067fa:	681a      	ldr	r2, [r3, #0]
 80067fc:	685b      	ldr	r3, [r3, #4]
 80067fe:	f7fa ffef 	bl	80017e0 <__aeabi_dmul>
 8006802:	2601      	movs	r6, #1
 8006804:	2300      	movs	r3, #0
 8006806:	9008      	str	r0, [sp, #32]
 8006808:	9109      	str	r1, [sp, #36]	; 0x24
 800680a:	4db1      	ldr	r5, [pc, #708]	; (8006ad0 <_dtoa_r+0x694>)
 800680c:	1124      	asrs	r4, r4, #4
 800680e:	2c00      	cmp	r4, #0
 8006810:	d000      	beq.n	8006814 <_dtoa_r+0x3d8>
 8006812:	e094      	b.n	800693e <_dtoa_r+0x502>
 8006814:	2b00      	cmp	r3, #0
 8006816:	d19f      	bne.n	8006758 <_dtoa_r+0x31c>
 8006818:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800681a:	2b00      	cmp	r3, #0
 800681c:	d100      	bne.n	8006820 <_dtoa_r+0x3e4>
 800681e:	e09b      	b.n	8006958 <_dtoa_r+0x51c>
 8006820:	9c08      	ldr	r4, [sp, #32]
 8006822:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8006824:	2200      	movs	r2, #0
 8006826:	0020      	movs	r0, r4
 8006828:	0029      	movs	r1, r5
 800682a:	4baa      	ldr	r3, [pc, #680]	; (8006ad4 <_dtoa_r+0x698>)
 800682c:	f7f9 fe14 	bl	8000458 <__aeabi_dcmplt>
 8006830:	2800      	cmp	r0, #0
 8006832:	d100      	bne.n	8006836 <_dtoa_r+0x3fa>
 8006834:	e090      	b.n	8006958 <_dtoa_r+0x51c>
 8006836:	9b07      	ldr	r3, [sp, #28]
 8006838:	2b00      	cmp	r3, #0
 800683a:	d100      	bne.n	800683e <_dtoa_r+0x402>
 800683c:	e08c      	b.n	8006958 <_dtoa_r+0x51c>
 800683e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006840:	2b00      	cmp	r3, #0
 8006842:	dd46      	ble.n	80068d2 <_dtoa_r+0x496>
 8006844:	9b02      	ldr	r3, [sp, #8]
 8006846:	2200      	movs	r2, #0
 8006848:	0020      	movs	r0, r4
 800684a:	0029      	movs	r1, r5
 800684c:	1e5e      	subs	r6, r3, #1
 800684e:	4ba2      	ldr	r3, [pc, #648]	; (8006ad8 <_dtoa_r+0x69c>)
 8006850:	f7fa ffc6 	bl	80017e0 <__aeabi_dmul>
 8006854:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006856:	9008      	str	r0, [sp, #32]
 8006858:	9109      	str	r1, [sp, #36]	; 0x24
 800685a:	3301      	adds	r3, #1
 800685c:	9310      	str	r3, [sp, #64]	; 0x40
 800685e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006860:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006862:	9c08      	ldr	r4, [sp, #32]
 8006864:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8006866:	9314      	str	r3, [sp, #80]	; 0x50
 8006868:	f7fb fe0c 	bl	8002484 <__aeabi_i2d>
 800686c:	0022      	movs	r2, r4
 800686e:	002b      	movs	r3, r5
 8006870:	f7fa ffb6 	bl	80017e0 <__aeabi_dmul>
 8006874:	2200      	movs	r2, #0
 8006876:	4b99      	ldr	r3, [pc, #612]	; (8006adc <_dtoa_r+0x6a0>)
 8006878:	f7fa f874 	bl	8000964 <__aeabi_dadd>
 800687c:	9010      	str	r0, [sp, #64]	; 0x40
 800687e:	9111      	str	r1, [sp, #68]	; 0x44
 8006880:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006882:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006884:	9208      	str	r2, [sp, #32]
 8006886:	9309      	str	r3, [sp, #36]	; 0x24
 8006888:	4a95      	ldr	r2, [pc, #596]	; (8006ae0 <_dtoa_r+0x6a4>)
 800688a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800688c:	4694      	mov	ip, r2
 800688e:	4463      	add	r3, ip
 8006890:	9317      	str	r3, [sp, #92]	; 0x5c
 8006892:	9309      	str	r3, [sp, #36]	; 0x24
 8006894:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006896:	2b00      	cmp	r3, #0
 8006898:	d161      	bne.n	800695e <_dtoa_r+0x522>
 800689a:	2200      	movs	r2, #0
 800689c:	0020      	movs	r0, r4
 800689e:	0029      	movs	r1, r5
 80068a0:	4b90      	ldr	r3, [pc, #576]	; (8006ae4 <_dtoa_r+0x6a8>)
 80068a2:	f7fb fa09 	bl	8001cb8 <__aeabi_dsub>
 80068a6:	9a08      	ldr	r2, [sp, #32]
 80068a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80068aa:	0004      	movs	r4, r0
 80068ac:	000d      	movs	r5, r1
 80068ae:	f7f9 fde7 	bl	8000480 <__aeabi_dcmpgt>
 80068b2:	2800      	cmp	r0, #0
 80068b4:	d000      	beq.n	80068b8 <_dtoa_r+0x47c>
 80068b6:	e2af      	b.n	8006e18 <_dtoa_r+0x9dc>
 80068b8:	488b      	ldr	r0, [pc, #556]	; (8006ae8 <_dtoa_r+0x6ac>)
 80068ba:	9911      	ldr	r1, [sp, #68]	; 0x44
 80068bc:	4684      	mov	ip, r0
 80068be:	4461      	add	r1, ip
 80068c0:	000b      	movs	r3, r1
 80068c2:	0020      	movs	r0, r4
 80068c4:	0029      	movs	r1, r5
 80068c6:	9a08      	ldr	r2, [sp, #32]
 80068c8:	f7f9 fdc6 	bl	8000458 <__aeabi_dcmplt>
 80068cc:	2800      	cmp	r0, #0
 80068ce:	d000      	beq.n	80068d2 <_dtoa_r+0x496>
 80068d0:	e29f      	b.n	8006e12 <_dtoa_r+0x9d6>
 80068d2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80068d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80068d6:	9308      	str	r3, [sp, #32]
 80068d8:	9409      	str	r4, [sp, #36]	; 0x24
 80068da:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80068dc:	2b00      	cmp	r3, #0
 80068de:	da00      	bge.n	80068e2 <_dtoa_r+0x4a6>
 80068e0:	e172      	b.n	8006bc8 <_dtoa_r+0x78c>
 80068e2:	9a02      	ldr	r2, [sp, #8]
 80068e4:	2a0e      	cmp	r2, #14
 80068e6:	dd00      	ble.n	80068ea <_dtoa_r+0x4ae>
 80068e8:	e16e      	b.n	8006bc8 <_dtoa_r+0x78c>
 80068ea:	4b78      	ldr	r3, [pc, #480]	; (8006acc <_dtoa_r+0x690>)
 80068ec:	00d2      	lsls	r2, r2, #3
 80068ee:	189b      	adds	r3, r3, r2
 80068f0:	685c      	ldr	r4, [r3, #4]
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	930a      	str	r3, [sp, #40]	; 0x28
 80068f6:	940b      	str	r4, [sp, #44]	; 0x2c
 80068f8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80068fa:	2b00      	cmp	r3, #0
 80068fc:	db00      	blt.n	8006900 <_dtoa_r+0x4c4>
 80068fe:	e0f7      	b.n	8006af0 <_dtoa_r+0x6b4>
 8006900:	9b07      	ldr	r3, [sp, #28]
 8006902:	2b00      	cmp	r3, #0
 8006904:	dd00      	ble.n	8006908 <_dtoa_r+0x4cc>
 8006906:	e0f3      	b.n	8006af0 <_dtoa_r+0x6b4>
 8006908:	d000      	beq.n	800690c <_dtoa_r+0x4d0>
 800690a:	e282      	b.n	8006e12 <_dtoa_r+0x9d6>
 800690c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800690e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006910:	2200      	movs	r2, #0
 8006912:	4b74      	ldr	r3, [pc, #464]	; (8006ae4 <_dtoa_r+0x6a8>)
 8006914:	f7fa ff64 	bl	80017e0 <__aeabi_dmul>
 8006918:	9a08      	ldr	r2, [sp, #32]
 800691a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800691c:	f7f9 fdba 	bl	8000494 <__aeabi_dcmpge>
 8006920:	9e07      	ldr	r6, [sp, #28]
 8006922:	0035      	movs	r5, r6
 8006924:	2800      	cmp	r0, #0
 8006926:	d000      	beq.n	800692a <_dtoa_r+0x4ee>
 8006928:	e259      	b.n	8006dde <_dtoa_r+0x9a2>
 800692a:	9b06      	ldr	r3, [sp, #24]
 800692c:	9a06      	ldr	r2, [sp, #24]
 800692e:	3301      	adds	r3, #1
 8006930:	9308      	str	r3, [sp, #32]
 8006932:	2331      	movs	r3, #49	; 0x31
 8006934:	7013      	strb	r3, [r2, #0]
 8006936:	9b02      	ldr	r3, [sp, #8]
 8006938:	3301      	adds	r3, #1
 800693a:	9302      	str	r3, [sp, #8]
 800693c:	e254      	b.n	8006de8 <_dtoa_r+0x9ac>
 800693e:	4234      	tst	r4, r6
 8006940:	d007      	beq.n	8006952 <_dtoa_r+0x516>
 8006942:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006944:	3301      	adds	r3, #1
 8006946:	9310      	str	r3, [sp, #64]	; 0x40
 8006948:	682a      	ldr	r2, [r5, #0]
 800694a:	686b      	ldr	r3, [r5, #4]
 800694c:	f7fa ff48 	bl	80017e0 <__aeabi_dmul>
 8006950:	0033      	movs	r3, r6
 8006952:	1064      	asrs	r4, r4, #1
 8006954:	3508      	adds	r5, #8
 8006956:	e75a      	b.n	800680e <_dtoa_r+0x3d2>
 8006958:	9e02      	ldr	r6, [sp, #8]
 800695a:	9b07      	ldr	r3, [sp, #28]
 800695c:	e780      	b.n	8006860 <_dtoa_r+0x424>
 800695e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006960:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006962:	1e5a      	subs	r2, r3, #1
 8006964:	4b59      	ldr	r3, [pc, #356]	; (8006acc <_dtoa_r+0x690>)
 8006966:	00d2      	lsls	r2, r2, #3
 8006968:	189b      	adds	r3, r3, r2
 800696a:	681a      	ldr	r2, [r3, #0]
 800696c:	685b      	ldr	r3, [r3, #4]
 800696e:	2900      	cmp	r1, #0
 8006970:	d051      	beq.n	8006a16 <_dtoa_r+0x5da>
 8006972:	2000      	movs	r0, #0
 8006974:	495d      	ldr	r1, [pc, #372]	; (8006aec <_dtoa_r+0x6b0>)
 8006976:	f7fa fb31 	bl	8000fdc <__aeabi_ddiv>
 800697a:	9a08      	ldr	r2, [sp, #32]
 800697c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800697e:	f7fb f99b 	bl	8001cb8 <__aeabi_dsub>
 8006982:	9a06      	ldr	r2, [sp, #24]
 8006984:	9b06      	ldr	r3, [sp, #24]
 8006986:	4694      	mov	ip, r2
 8006988:	9317      	str	r3, [sp, #92]	; 0x5c
 800698a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800698c:	9010      	str	r0, [sp, #64]	; 0x40
 800698e:	9111      	str	r1, [sp, #68]	; 0x44
 8006990:	4463      	add	r3, ip
 8006992:	9319      	str	r3, [sp, #100]	; 0x64
 8006994:	0029      	movs	r1, r5
 8006996:	0020      	movs	r0, r4
 8006998:	f7fb fd3e 	bl	8002418 <__aeabi_d2iz>
 800699c:	9014      	str	r0, [sp, #80]	; 0x50
 800699e:	f7fb fd71 	bl	8002484 <__aeabi_i2d>
 80069a2:	0002      	movs	r2, r0
 80069a4:	000b      	movs	r3, r1
 80069a6:	0020      	movs	r0, r4
 80069a8:	0029      	movs	r1, r5
 80069aa:	f7fb f985 	bl	8001cb8 <__aeabi_dsub>
 80069ae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80069b0:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 80069b2:	3301      	adds	r3, #1
 80069b4:	9308      	str	r3, [sp, #32]
 80069b6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80069b8:	0004      	movs	r4, r0
 80069ba:	3330      	adds	r3, #48	; 0x30
 80069bc:	7013      	strb	r3, [r2, #0]
 80069be:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80069c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80069c2:	000d      	movs	r5, r1
 80069c4:	f7f9 fd48 	bl	8000458 <__aeabi_dcmplt>
 80069c8:	2800      	cmp	r0, #0
 80069ca:	d175      	bne.n	8006ab8 <_dtoa_r+0x67c>
 80069cc:	0022      	movs	r2, r4
 80069ce:	002b      	movs	r3, r5
 80069d0:	2000      	movs	r0, #0
 80069d2:	4940      	ldr	r1, [pc, #256]	; (8006ad4 <_dtoa_r+0x698>)
 80069d4:	f7fb f970 	bl	8001cb8 <__aeabi_dsub>
 80069d8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80069da:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80069dc:	f7f9 fd3c 	bl	8000458 <__aeabi_dcmplt>
 80069e0:	2800      	cmp	r0, #0
 80069e2:	d000      	beq.n	80069e6 <_dtoa_r+0x5aa>
 80069e4:	e0d2      	b.n	8006b8c <_dtoa_r+0x750>
 80069e6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80069e8:	9a08      	ldr	r2, [sp, #32]
 80069ea:	4293      	cmp	r3, r2
 80069ec:	d100      	bne.n	80069f0 <_dtoa_r+0x5b4>
 80069ee:	e770      	b.n	80068d2 <_dtoa_r+0x496>
 80069f0:	9810      	ldr	r0, [sp, #64]	; 0x40
 80069f2:	9911      	ldr	r1, [sp, #68]	; 0x44
 80069f4:	2200      	movs	r2, #0
 80069f6:	4b38      	ldr	r3, [pc, #224]	; (8006ad8 <_dtoa_r+0x69c>)
 80069f8:	f7fa fef2 	bl	80017e0 <__aeabi_dmul>
 80069fc:	4b36      	ldr	r3, [pc, #216]	; (8006ad8 <_dtoa_r+0x69c>)
 80069fe:	9010      	str	r0, [sp, #64]	; 0x40
 8006a00:	9111      	str	r1, [sp, #68]	; 0x44
 8006a02:	2200      	movs	r2, #0
 8006a04:	0020      	movs	r0, r4
 8006a06:	0029      	movs	r1, r5
 8006a08:	f7fa feea 	bl	80017e0 <__aeabi_dmul>
 8006a0c:	9b08      	ldr	r3, [sp, #32]
 8006a0e:	0004      	movs	r4, r0
 8006a10:	000d      	movs	r5, r1
 8006a12:	9317      	str	r3, [sp, #92]	; 0x5c
 8006a14:	e7be      	b.n	8006994 <_dtoa_r+0x558>
 8006a16:	9808      	ldr	r0, [sp, #32]
 8006a18:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006a1a:	f7fa fee1 	bl	80017e0 <__aeabi_dmul>
 8006a1e:	9a06      	ldr	r2, [sp, #24]
 8006a20:	9b06      	ldr	r3, [sp, #24]
 8006a22:	4694      	mov	ip, r2
 8006a24:	9308      	str	r3, [sp, #32]
 8006a26:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006a28:	9010      	str	r0, [sp, #64]	; 0x40
 8006a2a:	9111      	str	r1, [sp, #68]	; 0x44
 8006a2c:	4463      	add	r3, ip
 8006a2e:	9319      	str	r3, [sp, #100]	; 0x64
 8006a30:	0029      	movs	r1, r5
 8006a32:	0020      	movs	r0, r4
 8006a34:	f7fb fcf0 	bl	8002418 <__aeabi_d2iz>
 8006a38:	9017      	str	r0, [sp, #92]	; 0x5c
 8006a3a:	f7fb fd23 	bl	8002484 <__aeabi_i2d>
 8006a3e:	0002      	movs	r2, r0
 8006a40:	000b      	movs	r3, r1
 8006a42:	0020      	movs	r0, r4
 8006a44:	0029      	movs	r1, r5
 8006a46:	f7fb f937 	bl	8001cb8 <__aeabi_dsub>
 8006a4a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8006a4c:	9a08      	ldr	r2, [sp, #32]
 8006a4e:	3330      	adds	r3, #48	; 0x30
 8006a50:	7013      	strb	r3, [r2, #0]
 8006a52:	0013      	movs	r3, r2
 8006a54:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8006a56:	3301      	adds	r3, #1
 8006a58:	0004      	movs	r4, r0
 8006a5a:	000d      	movs	r5, r1
 8006a5c:	9308      	str	r3, [sp, #32]
 8006a5e:	4293      	cmp	r3, r2
 8006a60:	d12c      	bne.n	8006abc <_dtoa_r+0x680>
 8006a62:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006a64:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006a66:	9a06      	ldr	r2, [sp, #24]
 8006a68:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006a6a:	4694      	mov	ip, r2
 8006a6c:	4463      	add	r3, ip
 8006a6e:	2200      	movs	r2, #0
 8006a70:	9308      	str	r3, [sp, #32]
 8006a72:	4b1e      	ldr	r3, [pc, #120]	; (8006aec <_dtoa_r+0x6b0>)
 8006a74:	f7f9 ff76 	bl	8000964 <__aeabi_dadd>
 8006a78:	0002      	movs	r2, r0
 8006a7a:	000b      	movs	r3, r1
 8006a7c:	0020      	movs	r0, r4
 8006a7e:	0029      	movs	r1, r5
 8006a80:	f7f9 fcfe 	bl	8000480 <__aeabi_dcmpgt>
 8006a84:	2800      	cmp	r0, #0
 8006a86:	d000      	beq.n	8006a8a <_dtoa_r+0x64e>
 8006a88:	e080      	b.n	8006b8c <_dtoa_r+0x750>
 8006a8a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006a8c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006a8e:	2000      	movs	r0, #0
 8006a90:	4916      	ldr	r1, [pc, #88]	; (8006aec <_dtoa_r+0x6b0>)
 8006a92:	f7fb f911 	bl	8001cb8 <__aeabi_dsub>
 8006a96:	0002      	movs	r2, r0
 8006a98:	000b      	movs	r3, r1
 8006a9a:	0020      	movs	r0, r4
 8006a9c:	0029      	movs	r1, r5
 8006a9e:	f7f9 fcdb 	bl	8000458 <__aeabi_dcmplt>
 8006aa2:	2800      	cmp	r0, #0
 8006aa4:	d100      	bne.n	8006aa8 <_dtoa_r+0x66c>
 8006aa6:	e714      	b.n	80068d2 <_dtoa_r+0x496>
 8006aa8:	9b08      	ldr	r3, [sp, #32]
 8006aaa:	001a      	movs	r2, r3
 8006aac:	3a01      	subs	r2, #1
 8006aae:	9208      	str	r2, [sp, #32]
 8006ab0:	7812      	ldrb	r2, [r2, #0]
 8006ab2:	2a30      	cmp	r2, #48	; 0x30
 8006ab4:	d0f8      	beq.n	8006aa8 <_dtoa_r+0x66c>
 8006ab6:	9308      	str	r3, [sp, #32]
 8006ab8:	9602      	str	r6, [sp, #8]
 8006aba:	e055      	b.n	8006b68 <_dtoa_r+0x72c>
 8006abc:	2200      	movs	r2, #0
 8006abe:	4b06      	ldr	r3, [pc, #24]	; (8006ad8 <_dtoa_r+0x69c>)
 8006ac0:	f7fa fe8e 	bl	80017e0 <__aeabi_dmul>
 8006ac4:	0004      	movs	r4, r0
 8006ac6:	000d      	movs	r5, r1
 8006ac8:	e7b2      	b.n	8006a30 <_dtoa_r+0x5f4>
 8006aca:	46c0      	nop			; (mov r8, r8)
 8006acc:	08008bf8 	.word	0x08008bf8
 8006ad0:	08008bd0 	.word	0x08008bd0
 8006ad4:	3ff00000 	.word	0x3ff00000
 8006ad8:	40240000 	.word	0x40240000
 8006adc:	401c0000 	.word	0x401c0000
 8006ae0:	fcc00000 	.word	0xfcc00000
 8006ae4:	40140000 	.word	0x40140000
 8006ae8:	7cc00000 	.word	0x7cc00000
 8006aec:	3fe00000 	.word	0x3fe00000
 8006af0:	9b07      	ldr	r3, [sp, #28]
 8006af2:	9e06      	ldr	r6, [sp, #24]
 8006af4:	3b01      	subs	r3, #1
 8006af6:	199b      	adds	r3, r3, r6
 8006af8:	930c      	str	r3, [sp, #48]	; 0x30
 8006afa:	9c08      	ldr	r4, [sp, #32]
 8006afc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8006afe:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006b00:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006b02:	0020      	movs	r0, r4
 8006b04:	0029      	movs	r1, r5
 8006b06:	f7fa fa69 	bl	8000fdc <__aeabi_ddiv>
 8006b0a:	f7fb fc85 	bl	8002418 <__aeabi_d2iz>
 8006b0e:	9007      	str	r0, [sp, #28]
 8006b10:	f7fb fcb8 	bl	8002484 <__aeabi_i2d>
 8006b14:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006b16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006b18:	f7fa fe62 	bl	80017e0 <__aeabi_dmul>
 8006b1c:	0002      	movs	r2, r0
 8006b1e:	000b      	movs	r3, r1
 8006b20:	0020      	movs	r0, r4
 8006b22:	0029      	movs	r1, r5
 8006b24:	f7fb f8c8 	bl	8001cb8 <__aeabi_dsub>
 8006b28:	0033      	movs	r3, r6
 8006b2a:	9a07      	ldr	r2, [sp, #28]
 8006b2c:	3601      	adds	r6, #1
 8006b2e:	3230      	adds	r2, #48	; 0x30
 8006b30:	701a      	strb	r2, [r3, #0]
 8006b32:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006b34:	9608      	str	r6, [sp, #32]
 8006b36:	429a      	cmp	r2, r3
 8006b38:	d139      	bne.n	8006bae <_dtoa_r+0x772>
 8006b3a:	0002      	movs	r2, r0
 8006b3c:	000b      	movs	r3, r1
 8006b3e:	f7f9 ff11 	bl	8000964 <__aeabi_dadd>
 8006b42:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006b44:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006b46:	0004      	movs	r4, r0
 8006b48:	000d      	movs	r5, r1
 8006b4a:	f7f9 fc99 	bl	8000480 <__aeabi_dcmpgt>
 8006b4e:	2800      	cmp	r0, #0
 8006b50:	d11b      	bne.n	8006b8a <_dtoa_r+0x74e>
 8006b52:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006b54:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006b56:	0020      	movs	r0, r4
 8006b58:	0029      	movs	r1, r5
 8006b5a:	f7f9 fc77 	bl	800044c <__aeabi_dcmpeq>
 8006b5e:	2800      	cmp	r0, #0
 8006b60:	d002      	beq.n	8006b68 <_dtoa_r+0x72c>
 8006b62:	9b07      	ldr	r3, [sp, #28]
 8006b64:	07db      	lsls	r3, r3, #31
 8006b66:	d410      	bmi.n	8006b8a <_dtoa_r+0x74e>
 8006b68:	0038      	movs	r0, r7
 8006b6a:	9905      	ldr	r1, [sp, #20]
 8006b6c:	f000 fae6 	bl	800713c <_Bfree>
 8006b70:	2300      	movs	r3, #0
 8006b72:	9a08      	ldr	r2, [sp, #32]
 8006b74:	9802      	ldr	r0, [sp, #8]
 8006b76:	7013      	strb	r3, [r2, #0]
 8006b78:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8006b7a:	3001      	adds	r0, #1
 8006b7c:	6018      	str	r0, [r3, #0]
 8006b7e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8006b80:	2b00      	cmp	r3, #0
 8006b82:	d100      	bne.n	8006b86 <_dtoa_r+0x74a>
 8006b84:	e4a6      	b.n	80064d4 <_dtoa_r+0x98>
 8006b86:	601a      	str	r2, [r3, #0]
 8006b88:	e4a4      	b.n	80064d4 <_dtoa_r+0x98>
 8006b8a:	9e02      	ldr	r6, [sp, #8]
 8006b8c:	9b08      	ldr	r3, [sp, #32]
 8006b8e:	9308      	str	r3, [sp, #32]
 8006b90:	3b01      	subs	r3, #1
 8006b92:	781a      	ldrb	r2, [r3, #0]
 8006b94:	2a39      	cmp	r2, #57	; 0x39
 8006b96:	d106      	bne.n	8006ba6 <_dtoa_r+0x76a>
 8006b98:	9a06      	ldr	r2, [sp, #24]
 8006b9a:	429a      	cmp	r2, r3
 8006b9c:	d1f7      	bne.n	8006b8e <_dtoa_r+0x752>
 8006b9e:	2230      	movs	r2, #48	; 0x30
 8006ba0:	9906      	ldr	r1, [sp, #24]
 8006ba2:	3601      	adds	r6, #1
 8006ba4:	700a      	strb	r2, [r1, #0]
 8006ba6:	781a      	ldrb	r2, [r3, #0]
 8006ba8:	3201      	adds	r2, #1
 8006baa:	701a      	strb	r2, [r3, #0]
 8006bac:	e784      	b.n	8006ab8 <_dtoa_r+0x67c>
 8006bae:	2200      	movs	r2, #0
 8006bb0:	4baa      	ldr	r3, [pc, #680]	; (8006e5c <_dtoa_r+0xa20>)
 8006bb2:	f7fa fe15 	bl	80017e0 <__aeabi_dmul>
 8006bb6:	2200      	movs	r2, #0
 8006bb8:	2300      	movs	r3, #0
 8006bba:	0004      	movs	r4, r0
 8006bbc:	000d      	movs	r5, r1
 8006bbe:	f7f9 fc45 	bl	800044c <__aeabi_dcmpeq>
 8006bc2:	2800      	cmp	r0, #0
 8006bc4:	d09b      	beq.n	8006afe <_dtoa_r+0x6c2>
 8006bc6:	e7cf      	b.n	8006b68 <_dtoa_r+0x72c>
 8006bc8:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8006bca:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8006bcc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8006bce:	2d00      	cmp	r5, #0
 8006bd0:	d012      	beq.n	8006bf8 <_dtoa_r+0x7bc>
 8006bd2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8006bd4:	2a01      	cmp	r2, #1
 8006bd6:	dc66      	bgt.n	8006ca6 <_dtoa_r+0x86a>
 8006bd8:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8006bda:	2a00      	cmp	r2, #0
 8006bdc:	d05d      	beq.n	8006c9a <_dtoa_r+0x85e>
 8006bde:	4aa0      	ldr	r2, [pc, #640]	; (8006e60 <_dtoa_r+0xa24>)
 8006be0:	189b      	adds	r3, r3, r2
 8006be2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006be4:	2101      	movs	r1, #1
 8006be6:	18d2      	adds	r2, r2, r3
 8006be8:	920a      	str	r2, [sp, #40]	; 0x28
 8006bea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006bec:	0038      	movs	r0, r7
 8006bee:	18d3      	adds	r3, r2, r3
 8006bf0:	930d      	str	r3, [sp, #52]	; 0x34
 8006bf2:	f000 fb53 	bl	800729c <__i2b>
 8006bf6:	0005      	movs	r5, r0
 8006bf8:	2c00      	cmp	r4, #0
 8006bfa:	dd0e      	ble.n	8006c1a <_dtoa_r+0x7de>
 8006bfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006bfe:	2b00      	cmp	r3, #0
 8006c00:	dd0b      	ble.n	8006c1a <_dtoa_r+0x7de>
 8006c02:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006c04:	0023      	movs	r3, r4
 8006c06:	4294      	cmp	r4, r2
 8006c08:	dd00      	ble.n	8006c0c <_dtoa_r+0x7d0>
 8006c0a:	0013      	movs	r3, r2
 8006c0c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006c0e:	1ae4      	subs	r4, r4, r3
 8006c10:	1ad2      	subs	r2, r2, r3
 8006c12:	920a      	str	r2, [sp, #40]	; 0x28
 8006c14:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006c16:	1ad3      	subs	r3, r2, r3
 8006c18:	930d      	str	r3, [sp, #52]	; 0x34
 8006c1a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006c1c:	2b00      	cmp	r3, #0
 8006c1e:	d01f      	beq.n	8006c60 <_dtoa_r+0x824>
 8006c20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006c22:	2b00      	cmp	r3, #0
 8006c24:	d054      	beq.n	8006cd0 <_dtoa_r+0x894>
 8006c26:	2e00      	cmp	r6, #0
 8006c28:	dd11      	ble.n	8006c4e <_dtoa_r+0x812>
 8006c2a:	0029      	movs	r1, r5
 8006c2c:	0032      	movs	r2, r6
 8006c2e:	0038      	movs	r0, r7
 8006c30:	f000 fbfa 	bl	8007428 <__pow5mult>
 8006c34:	9a05      	ldr	r2, [sp, #20]
 8006c36:	0001      	movs	r1, r0
 8006c38:	0005      	movs	r5, r0
 8006c3a:	0038      	movs	r0, r7
 8006c3c:	f000 fb44 	bl	80072c8 <__multiply>
 8006c40:	9905      	ldr	r1, [sp, #20]
 8006c42:	9014      	str	r0, [sp, #80]	; 0x50
 8006c44:	0038      	movs	r0, r7
 8006c46:	f000 fa79 	bl	800713c <_Bfree>
 8006c4a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006c4c:	9305      	str	r3, [sp, #20]
 8006c4e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006c50:	1b9a      	subs	r2, r3, r6
 8006c52:	42b3      	cmp	r3, r6
 8006c54:	d004      	beq.n	8006c60 <_dtoa_r+0x824>
 8006c56:	0038      	movs	r0, r7
 8006c58:	9905      	ldr	r1, [sp, #20]
 8006c5a:	f000 fbe5 	bl	8007428 <__pow5mult>
 8006c5e:	9005      	str	r0, [sp, #20]
 8006c60:	2101      	movs	r1, #1
 8006c62:	0038      	movs	r0, r7
 8006c64:	f000 fb1a 	bl	800729c <__i2b>
 8006c68:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006c6a:	0006      	movs	r6, r0
 8006c6c:	2b00      	cmp	r3, #0
 8006c6e:	dd31      	ble.n	8006cd4 <_dtoa_r+0x898>
 8006c70:	001a      	movs	r2, r3
 8006c72:	0001      	movs	r1, r0
 8006c74:	0038      	movs	r0, r7
 8006c76:	f000 fbd7 	bl	8007428 <__pow5mult>
 8006c7a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006c7c:	0006      	movs	r6, r0
 8006c7e:	2b01      	cmp	r3, #1
 8006c80:	dd2d      	ble.n	8006cde <_dtoa_r+0x8a2>
 8006c82:	2300      	movs	r3, #0
 8006c84:	930e      	str	r3, [sp, #56]	; 0x38
 8006c86:	6933      	ldr	r3, [r6, #16]
 8006c88:	3303      	adds	r3, #3
 8006c8a:	009b      	lsls	r3, r3, #2
 8006c8c:	18f3      	adds	r3, r6, r3
 8006c8e:	6858      	ldr	r0, [r3, #4]
 8006c90:	f000 fabc 	bl	800720c <__hi0bits>
 8006c94:	2320      	movs	r3, #32
 8006c96:	1a18      	subs	r0, r3, r0
 8006c98:	e039      	b.n	8006d0e <_dtoa_r+0x8d2>
 8006c9a:	2336      	movs	r3, #54	; 0x36
 8006c9c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8006c9e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8006ca0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8006ca2:	1a9b      	subs	r3, r3, r2
 8006ca4:	e79d      	b.n	8006be2 <_dtoa_r+0x7a6>
 8006ca6:	9b07      	ldr	r3, [sp, #28]
 8006ca8:	1e5e      	subs	r6, r3, #1
 8006caa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006cac:	42b3      	cmp	r3, r6
 8006cae:	db07      	blt.n	8006cc0 <_dtoa_r+0x884>
 8006cb0:	1b9e      	subs	r6, r3, r6
 8006cb2:	9b07      	ldr	r3, [sp, #28]
 8006cb4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8006cb6:	2b00      	cmp	r3, #0
 8006cb8:	da93      	bge.n	8006be2 <_dtoa_r+0x7a6>
 8006cba:	1ae4      	subs	r4, r4, r3
 8006cbc:	2300      	movs	r3, #0
 8006cbe:	e790      	b.n	8006be2 <_dtoa_r+0x7a6>
 8006cc0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006cc2:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8006cc4:	1af3      	subs	r3, r6, r3
 8006cc6:	18d3      	adds	r3, r2, r3
 8006cc8:	960e      	str	r6, [sp, #56]	; 0x38
 8006cca:	9315      	str	r3, [sp, #84]	; 0x54
 8006ccc:	2600      	movs	r6, #0
 8006cce:	e7f0      	b.n	8006cb2 <_dtoa_r+0x876>
 8006cd0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006cd2:	e7c0      	b.n	8006c56 <_dtoa_r+0x81a>
 8006cd4:	2300      	movs	r3, #0
 8006cd6:	930e      	str	r3, [sp, #56]	; 0x38
 8006cd8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006cda:	2b01      	cmp	r3, #1
 8006cdc:	dc13      	bgt.n	8006d06 <_dtoa_r+0x8ca>
 8006cde:	2300      	movs	r3, #0
 8006ce0:	930e      	str	r3, [sp, #56]	; 0x38
 8006ce2:	9b08      	ldr	r3, [sp, #32]
 8006ce4:	2b00      	cmp	r3, #0
 8006ce6:	d10e      	bne.n	8006d06 <_dtoa_r+0x8ca>
 8006ce8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006cea:	031b      	lsls	r3, r3, #12
 8006cec:	d10b      	bne.n	8006d06 <_dtoa_r+0x8ca>
 8006cee:	4b5d      	ldr	r3, [pc, #372]	; (8006e64 <_dtoa_r+0xa28>)
 8006cf0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006cf2:	4213      	tst	r3, r2
 8006cf4:	d007      	beq.n	8006d06 <_dtoa_r+0x8ca>
 8006cf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006cf8:	3301      	adds	r3, #1
 8006cfa:	930a      	str	r3, [sp, #40]	; 0x28
 8006cfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006cfe:	3301      	adds	r3, #1
 8006d00:	930d      	str	r3, [sp, #52]	; 0x34
 8006d02:	2301      	movs	r3, #1
 8006d04:	930e      	str	r3, [sp, #56]	; 0x38
 8006d06:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006d08:	2001      	movs	r0, #1
 8006d0a:	2b00      	cmp	r3, #0
 8006d0c:	d1bb      	bne.n	8006c86 <_dtoa_r+0x84a>
 8006d0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006d10:	221f      	movs	r2, #31
 8006d12:	1818      	adds	r0, r3, r0
 8006d14:	0003      	movs	r3, r0
 8006d16:	4013      	ands	r3, r2
 8006d18:	4210      	tst	r0, r2
 8006d1a:	d046      	beq.n	8006daa <_dtoa_r+0x96e>
 8006d1c:	3201      	adds	r2, #1
 8006d1e:	1ad2      	subs	r2, r2, r3
 8006d20:	2a04      	cmp	r2, #4
 8006d22:	dd3f      	ble.n	8006da4 <_dtoa_r+0x968>
 8006d24:	221c      	movs	r2, #28
 8006d26:	1ad3      	subs	r3, r2, r3
 8006d28:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006d2a:	18e4      	adds	r4, r4, r3
 8006d2c:	18d2      	adds	r2, r2, r3
 8006d2e:	920a      	str	r2, [sp, #40]	; 0x28
 8006d30:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006d32:	18d3      	adds	r3, r2, r3
 8006d34:	930d      	str	r3, [sp, #52]	; 0x34
 8006d36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006d38:	2b00      	cmp	r3, #0
 8006d3a:	dd05      	ble.n	8006d48 <_dtoa_r+0x90c>
 8006d3c:	001a      	movs	r2, r3
 8006d3e:	0038      	movs	r0, r7
 8006d40:	9905      	ldr	r1, [sp, #20]
 8006d42:	f000 fbcd 	bl	80074e0 <__lshift>
 8006d46:	9005      	str	r0, [sp, #20]
 8006d48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006d4a:	2b00      	cmp	r3, #0
 8006d4c:	dd05      	ble.n	8006d5a <_dtoa_r+0x91e>
 8006d4e:	0031      	movs	r1, r6
 8006d50:	001a      	movs	r2, r3
 8006d52:	0038      	movs	r0, r7
 8006d54:	f000 fbc4 	bl	80074e0 <__lshift>
 8006d58:	0006      	movs	r6, r0
 8006d5a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006d5c:	2b00      	cmp	r3, #0
 8006d5e:	d026      	beq.n	8006dae <_dtoa_r+0x972>
 8006d60:	0031      	movs	r1, r6
 8006d62:	9805      	ldr	r0, [sp, #20]
 8006d64:	f000 fc2a 	bl	80075bc <__mcmp>
 8006d68:	2800      	cmp	r0, #0
 8006d6a:	da20      	bge.n	8006dae <_dtoa_r+0x972>
 8006d6c:	9b02      	ldr	r3, [sp, #8]
 8006d6e:	220a      	movs	r2, #10
 8006d70:	3b01      	subs	r3, #1
 8006d72:	9302      	str	r3, [sp, #8]
 8006d74:	0038      	movs	r0, r7
 8006d76:	2300      	movs	r3, #0
 8006d78:	9905      	ldr	r1, [sp, #20]
 8006d7a:	f000 fa03 	bl	8007184 <__multadd>
 8006d7e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006d80:	9005      	str	r0, [sp, #20]
 8006d82:	2b00      	cmp	r3, #0
 8006d84:	d100      	bne.n	8006d88 <_dtoa_r+0x94c>
 8006d86:	e166      	b.n	8007056 <_dtoa_r+0xc1a>
 8006d88:	2300      	movs	r3, #0
 8006d8a:	0029      	movs	r1, r5
 8006d8c:	220a      	movs	r2, #10
 8006d8e:	0038      	movs	r0, r7
 8006d90:	f000 f9f8 	bl	8007184 <__multadd>
 8006d94:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006d96:	0005      	movs	r5, r0
 8006d98:	2b00      	cmp	r3, #0
 8006d9a:	dc47      	bgt.n	8006e2c <_dtoa_r+0x9f0>
 8006d9c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006d9e:	2b02      	cmp	r3, #2
 8006da0:	dc0d      	bgt.n	8006dbe <_dtoa_r+0x982>
 8006da2:	e043      	b.n	8006e2c <_dtoa_r+0x9f0>
 8006da4:	2a04      	cmp	r2, #4
 8006da6:	d0c6      	beq.n	8006d36 <_dtoa_r+0x8fa>
 8006da8:	0013      	movs	r3, r2
 8006daa:	331c      	adds	r3, #28
 8006dac:	e7bc      	b.n	8006d28 <_dtoa_r+0x8ec>
 8006dae:	9b07      	ldr	r3, [sp, #28]
 8006db0:	2b00      	cmp	r3, #0
 8006db2:	dc35      	bgt.n	8006e20 <_dtoa_r+0x9e4>
 8006db4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006db6:	2b02      	cmp	r3, #2
 8006db8:	dd32      	ble.n	8006e20 <_dtoa_r+0x9e4>
 8006dba:	9b07      	ldr	r3, [sp, #28]
 8006dbc:	930c      	str	r3, [sp, #48]	; 0x30
 8006dbe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006dc0:	2b00      	cmp	r3, #0
 8006dc2:	d10c      	bne.n	8006dde <_dtoa_r+0x9a2>
 8006dc4:	0031      	movs	r1, r6
 8006dc6:	2205      	movs	r2, #5
 8006dc8:	0038      	movs	r0, r7
 8006dca:	f000 f9db 	bl	8007184 <__multadd>
 8006dce:	0006      	movs	r6, r0
 8006dd0:	0001      	movs	r1, r0
 8006dd2:	9805      	ldr	r0, [sp, #20]
 8006dd4:	f000 fbf2 	bl	80075bc <__mcmp>
 8006dd8:	2800      	cmp	r0, #0
 8006dda:	dd00      	ble.n	8006dde <_dtoa_r+0x9a2>
 8006ddc:	e5a5      	b.n	800692a <_dtoa_r+0x4ee>
 8006dde:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006de0:	43db      	mvns	r3, r3
 8006de2:	9302      	str	r3, [sp, #8]
 8006de4:	9b06      	ldr	r3, [sp, #24]
 8006de6:	9308      	str	r3, [sp, #32]
 8006de8:	2400      	movs	r4, #0
 8006dea:	0031      	movs	r1, r6
 8006dec:	0038      	movs	r0, r7
 8006dee:	f000 f9a5 	bl	800713c <_Bfree>
 8006df2:	2d00      	cmp	r5, #0
 8006df4:	d100      	bne.n	8006df8 <_dtoa_r+0x9bc>
 8006df6:	e6b7      	b.n	8006b68 <_dtoa_r+0x72c>
 8006df8:	2c00      	cmp	r4, #0
 8006dfa:	d005      	beq.n	8006e08 <_dtoa_r+0x9cc>
 8006dfc:	42ac      	cmp	r4, r5
 8006dfe:	d003      	beq.n	8006e08 <_dtoa_r+0x9cc>
 8006e00:	0021      	movs	r1, r4
 8006e02:	0038      	movs	r0, r7
 8006e04:	f000 f99a 	bl	800713c <_Bfree>
 8006e08:	0029      	movs	r1, r5
 8006e0a:	0038      	movs	r0, r7
 8006e0c:	f000 f996 	bl	800713c <_Bfree>
 8006e10:	e6aa      	b.n	8006b68 <_dtoa_r+0x72c>
 8006e12:	2600      	movs	r6, #0
 8006e14:	0035      	movs	r5, r6
 8006e16:	e7e2      	b.n	8006dde <_dtoa_r+0x9a2>
 8006e18:	9602      	str	r6, [sp, #8]
 8006e1a:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8006e1c:	0035      	movs	r5, r6
 8006e1e:	e584      	b.n	800692a <_dtoa_r+0x4ee>
 8006e20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006e22:	2b00      	cmp	r3, #0
 8006e24:	d100      	bne.n	8006e28 <_dtoa_r+0x9ec>
 8006e26:	e0ce      	b.n	8006fc6 <_dtoa_r+0xb8a>
 8006e28:	9b07      	ldr	r3, [sp, #28]
 8006e2a:	930c      	str	r3, [sp, #48]	; 0x30
 8006e2c:	2c00      	cmp	r4, #0
 8006e2e:	dd05      	ble.n	8006e3c <_dtoa_r+0xa00>
 8006e30:	0029      	movs	r1, r5
 8006e32:	0022      	movs	r2, r4
 8006e34:	0038      	movs	r0, r7
 8006e36:	f000 fb53 	bl	80074e0 <__lshift>
 8006e3a:	0005      	movs	r5, r0
 8006e3c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006e3e:	0028      	movs	r0, r5
 8006e40:	2b00      	cmp	r3, #0
 8006e42:	d022      	beq.n	8006e8a <_dtoa_r+0xa4e>
 8006e44:	0038      	movs	r0, r7
 8006e46:	6869      	ldr	r1, [r5, #4]
 8006e48:	f000 f934 	bl	80070b4 <_Balloc>
 8006e4c:	1e04      	subs	r4, r0, #0
 8006e4e:	d10f      	bne.n	8006e70 <_dtoa_r+0xa34>
 8006e50:	0002      	movs	r2, r0
 8006e52:	4b05      	ldr	r3, [pc, #20]	; (8006e68 <_dtoa_r+0xa2c>)
 8006e54:	4905      	ldr	r1, [pc, #20]	; (8006e6c <_dtoa_r+0xa30>)
 8006e56:	f7ff fb06 	bl	8006466 <_dtoa_r+0x2a>
 8006e5a:	46c0      	nop			; (mov r8, r8)
 8006e5c:	40240000 	.word	0x40240000
 8006e60:	00000433 	.word	0x00000433
 8006e64:	7ff00000 	.word	0x7ff00000
 8006e68:	08008b5f 	.word	0x08008b5f
 8006e6c:	000002ea 	.word	0x000002ea
 8006e70:	0029      	movs	r1, r5
 8006e72:	692b      	ldr	r3, [r5, #16]
 8006e74:	310c      	adds	r1, #12
 8006e76:	1c9a      	adds	r2, r3, #2
 8006e78:	0092      	lsls	r2, r2, #2
 8006e7a:	300c      	adds	r0, #12
 8006e7c:	f000 f911 	bl	80070a2 <memcpy>
 8006e80:	2201      	movs	r2, #1
 8006e82:	0021      	movs	r1, r4
 8006e84:	0038      	movs	r0, r7
 8006e86:	f000 fb2b 	bl	80074e0 <__lshift>
 8006e8a:	9b06      	ldr	r3, [sp, #24]
 8006e8c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006e8e:	930a      	str	r3, [sp, #40]	; 0x28
 8006e90:	3b01      	subs	r3, #1
 8006e92:	189b      	adds	r3, r3, r2
 8006e94:	2201      	movs	r2, #1
 8006e96:	002c      	movs	r4, r5
 8006e98:	0005      	movs	r5, r0
 8006e9a:	9314      	str	r3, [sp, #80]	; 0x50
 8006e9c:	9b08      	ldr	r3, [sp, #32]
 8006e9e:	4013      	ands	r3, r2
 8006ea0:	930f      	str	r3, [sp, #60]	; 0x3c
 8006ea2:	0031      	movs	r1, r6
 8006ea4:	9805      	ldr	r0, [sp, #20]
 8006ea6:	f7ff fa3d 	bl	8006324 <quorem>
 8006eaa:	0003      	movs	r3, r0
 8006eac:	0021      	movs	r1, r4
 8006eae:	3330      	adds	r3, #48	; 0x30
 8006eb0:	900d      	str	r0, [sp, #52]	; 0x34
 8006eb2:	9805      	ldr	r0, [sp, #20]
 8006eb4:	9307      	str	r3, [sp, #28]
 8006eb6:	f000 fb81 	bl	80075bc <__mcmp>
 8006eba:	002a      	movs	r2, r5
 8006ebc:	900e      	str	r0, [sp, #56]	; 0x38
 8006ebe:	0031      	movs	r1, r6
 8006ec0:	0038      	movs	r0, r7
 8006ec2:	f000 fb97 	bl	80075f4 <__mdiff>
 8006ec6:	68c3      	ldr	r3, [r0, #12]
 8006ec8:	9008      	str	r0, [sp, #32]
 8006eca:	9310      	str	r3, [sp, #64]	; 0x40
 8006ecc:	2301      	movs	r3, #1
 8006ece:	930c      	str	r3, [sp, #48]	; 0x30
 8006ed0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006ed2:	2b00      	cmp	r3, #0
 8006ed4:	d104      	bne.n	8006ee0 <_dtoa_r+0xaa4>
 8006ed6:	0001      	movs	r1, r0
 8006ed8:	9805      	ldr	r0, [sp, #20]
 8006eda:	f000 fb6f 	bl	80075bc <__mcmp>
 8006ede:	900c      	str	r0, [sp, #48]	; 0x30
 8006ee0:	0038      	movs	r0, r7
 8006ee2:	9908      	ldr	r1, [sp, #32]
 8006ee4:	f000 f92a 	bl	800713c <_Bfree>
 8006ee8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006eea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006eec:	3301      	adds	r3, #1
 8006eee:	9308      	str	r3, [sp, #32]
 8006ef0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006ef2:	4313      	orrs	r3, r2
 8006ef4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006ef6:	4313      	orrs	r3, r2
 8006ef8:	d10c      	bne.n	8006f14 <_dtoa_r+0xad8>
 8006efa:	9b07      	ldr	r3, [sp, #28]
 8006efc:	2b39      	cmp	r3, #57	; 0x39
 8006efe:	d026      	beq.n	8006f4e <_dtoa_r+0xb12>
 8006f00:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006f02:	2b00      	cmp	r3, #0
 8006f04:	dd02      	ble.n	8006f0c <_dtoa_r+0xad0>
 8006f06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006f08:	3331      	adds	r3, #49	; 0x31
 8006f0a:	9307      	str	r3, [sp, #28]
 8006f0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006f0e:	9a07      	ldr	r2, [sp, #28]
 8006f10:	701a      	strb	r2, [r3, #0]
 8006f12:	e76a      	b.n	8006dea <_dtoa_r+0x9ae>
 8006f14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006f16:	2b00      	cmp	r3, #0
 8006f18:	db04      	blt.n	8006f24 <_dtoa_r+0xae8>
 8006f1a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8006f1c:	4313      	orrs	r3, r2
 8006f1e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8006f20:	4313      	orrs	r3, r2
 8006f22:	d11f      	bne.n	8006f64 <_dtoa_r+0xb28>
 8006f24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006f26:	2b00      	cmp	r3, #0
 8006f28:	ddf0      	ble.n	8006f0c <_dtoa_r+0xad0>
 8006f2a:	9905      	ldr	r1, [sp, #20]
 8006f2c:	2201      	movs	r2, #1
 8006f2e:	0038      	movs	r0, r7
 8006f30:	f000 fad6 	bl	80074e0 <__lshift>
 8006f34:	0031      	movs	r1, r6
 8006f36:	9005      	str	r0, [sp, #20]
 8006f38:	f000 fb40 	bl	80075bc <__mcmp>
 8006f3c:	2800      	cmp	r0, #0
 8006f3e:	dc03      	bgt.n	8006f48 <_dtoa_r+0xb0c>
 8006f40:	d1e4      	bne.n	8006f0c <_dtoa_r+0xad0>
 8006f42:	9b07      	ldr	r3, [sp, #28]
 8006f44:	07db      	lsls	r3, r3, #31
 8006f46:	d5e1      	bpl.n	8006f0c <_dtoa_r+0xad0>
 8006f48:	9b07      	ldr	r3, [sp, #28]
 8006f4a:	2b39      	cmp	r3, #57	; 0x39
 8006f4c:	d1db      	bne.n	8006f06 <_dtoa_r+0xaca>
 8006f4e:	2339      	movs	r3, #57	; 0x39
 8006f50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006f52:	7013      	strb	r3, [r2, #0]
 8006f54:	9b08      	ldr	r3, [sp, #32]
 8006f56:	9308      	str	r3, [sp, #32]
 8006f58:	3b01      	subs	r3, #1
 8006f5a:	781a      	ldrb	r2, [r3, #0]
 8006f5c:	2a39      	cmp	r2, #57	; 0x39
 8006f5e:	d068      	beq.n	8007032 <_dtoa_r+0xbf6>
 8006f60:	3201      	adds	r2, #1
 8006f62:	e7d5      	b.n	8006f10 <_dtoa_r+0xad4>
 8006f64:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006f66:	2b00      	cmp	r3, #0
 8006f68:	dd07      	ble.n	8006f7a <_dtoa_r+0xb3e>
 8006f6a:	9b07      	ldr	r3, [sp, #28]
 8006f6c:	2b39      	cmp	r3, #57	; 0x39
 8006f6e:	d0ee      	beq.n	8006f4e <_dtoa_r+0xb12>
 8006f70:	9b07      	ldr	r3, [sp, #28]
 8006f72:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006f74:	3301      	adds	r3, #1
 8006f76:	7013      	strb	r3, [r2, #0]
 8006f78:	e737      	b.n	8006dea <_dtoa_r+0x9ae>
 8006f7a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006f7c:	9a07      	ldr	r2, [sp, #28]
 8006f7e:	701a      	strb	r2, [r3, #0]
 8006f80:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006f82:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006f84:	4293      	cmp	r3, r2
 8006f86:	d03e      	beq.n	8007006 <_dtoa_r+0xbca>
 8006f88:	2300      	movs	r3, #0
 8006f8a:	220a      	movs	r2, #10
 8006f8c:	9905      	ldr	r1, [sp, #20]
 8006f8e:	0038      	movs	r0, r7
 8006f90:	f000 f8f8 	bl	8007184 <__multadd>
 8006f94:	2300      	movs	r3, #0
 8006f96:	9005      	str	r0, [sp, #20]
 8006f98:	220a      	movs	r2, #10
 8006f9a:	0021      	movs	r1, r4
 8006f9c:	0038      	movs	r0, r7
 8006f9e:	42ac      	cmp	r4, r5
 8006fa0:	d106      	bne.n	8006fb0 <_dtoa_r+0xb74>
 8006fa2:	f000 f8ef 	bl	8007184 <__multadd>
 8006fa6:	0004      	movs	r4, r0
 8006fa8:	0005      	movs	r5, r0
 8006faa:	9b08      	ldr	r3, [sp, #32]
 8006fac:	930a      	str	r3, [sp, #40]	; 0x28
 8006fae:	e778      	b.n	8006ea2 <_dtoa_r+0xa66>
 8006fb0:	f000 f8e8 	bl	8007184 <__multadd>
 8006fb4:	0029      	movs	r1, r5
 8006fb6:	0004      	movs	r4, r0
 8006fb8:	2300      	movs	r3, #0
 8006fba:	220a      	movs	r2, #10
 8006fbc:	0038      	movs	r0, r7
 8006fbe:	f000 f8e1 	bl	8007184 <__multadd>
 8006fc2:	0005      	movs	r5, r0
 8006fc4:	e7f1      	b.n	8006faa <_dtoa_r+0xb6e>
 8006fc6:	9b07      	ldr	r3, [sp, #28]
 8006fc8:	930c      	str	r3, [sp, #48]	; 0x30
 8006fca:	2400      	movs	r4, #0
 8006fcc:	0031      	movs	r1, r6
 8006fce:	9805      	ldr	r0, [sp, #20]
 8006fd0:	f7ff f9a8 	bl	8006324 <quorem>
 8006fd4:	9b06      	ldr	r3, [sp, #24]
 8006fd6:	3030      	adds	r0, #48	; 0x30
 8006fd8:	5518      	strb	r0, [r3, r4]
 8006fda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006fdc:	3401      	adds	r4, #1
 8006fde:	9007      	str	r0, [sp, #28]
 8006fe0:	42a3      	cmp	r3, r4
 8006fe2:	dd07      	ble.n	8006ff4 <_dtoa_r+0xbb8>
 8006fe4:	2300      	movs	r3, #0
 8006fe6:	220a      	movs	r2, #10
 8006fe8:	0038      	movs	r0, r7
 8006fea:	9905      	ldr	r1, [sp, #20]
 8006fec:	f000 f8ca 	bl	8007184 <__multadd>
 8006ff0:	9005      	str	r0, [sp, #20]
 8006ff2:	e7eb      	b.n	8006fcc <_dtoa_r+0xb90>
 8006ff4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006ff6:	2001      	movs	r0, #1
 8006ff8:	2b00      	cmp	r3, #0
 8006ffa:	dd00      	ble.n	8006ffe <_dtoa_r+0xbc2>
 8006ffc:	0018      	movs	r0, r3
 8006ffe:	2400      	movs	r4, #0
 8007000:	9b06      	ldr	r3, [sp, #24]
 8007002:	181b      	adds	r3, r3, r0
 8007004:	9308      	str	r3, [sp, #32]
 8007006:	9905      	ldr	r1, [sp, #20]
 8007008:	2201      	movs	r2, #1
 800700a:	0038      	movs	r0, r7
 800700c:	f000 fa68 	bl	80074e0 <__lshift>
 8007010:	0031      	movs	r1, r6
 8007012:	9005      	str	r0, [sp, #20]
 8007014:	f000 fad2 	bl	80075bc <__mcmp>
 8007018:	2800      	cmp	r0, #0
 800701a:	dc9b      	bgt.n	8006f54 <_dtoa_r+0xb18>
 800701c:	d102      	bne.n	8007024 <_dtoa_r+0xbe8>
 800701e:	9b07      	ldr	r3, [sp, #28]
 8007020:	07db      	lsls	r3, r3, #31
 8007022:	d497      	bmi.n	8006f54 <_dtoa_r+0xb18>
 8007024:	9b08      	ldr	r3, [sp, #32]
 8007026:	9308      	str	r3, [sp, #32]
 8007028:	3b01      	subs	r3, #1
 800702a:	781a      	ldrb	r2, [r3, #0]
 800702c:	2a30      	cmp	r2, #48	; 0x30
 800702e:	d0fa      	beq.n	8007026 <_dtoa_r+0xbea>
 8007030:	e6db      	b.n	8006dea <_dtoa_r+0x9ae>
 8007032:	9a06      	ldr	r2, [sp, #24]
 8007034:	429a      	cmp	r2, r3
 8007036:	d18e      	bne.n	8006f56 <_dtoa_r+0xb1a>
 8007038:	9b02      	ldr	r3, [sp, #8]
 800703a:	3301      	adds	r3, #1
 800703c:	9302      	str	r3, [sp, #8]
 800703e:	2331      	movs	r3, #49	; 0x31
 8007040:	e799      	b.n	8006f76 <_dtoa_r+0xb3a>
 8007042:	4b09      	ldr	r3, [pc, #36]	; (8007068 <_dtoa_r+0xc2c>)
 8007044:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8007046:	9306      	str	r3, [sp, #24]
 8007048:	4b08      	ldr	r3, [pc, #32]	; (800706c <_dtoa_r+0xc30>)
 800704a:	2a00      	cmp	r2, #0
 800704c:	d001      	beq.n	8007052 <_dtoa_r+0xc16>
 800704e:	f7ff fa3f 	bl	80064d0 <_dtoa_r+0x94>
 8007052:	f7ff fa3f 	bl	80064d4 <_dtoa_r+0x98>
 8007056:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007058:	2b00      	cmp	r3, #0
 800705a:	dcb6      	bgt.n	8006fca <_dtoa_r+0xb8e>
 800705c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800705e:	2b02      	cmp	r3, #2
 8007060:	dd00      	ble.n	8007064 <_dtoa_r+0xc28>
 8007062:	e6ac      	b.n	8006dbe <_dtoa_r+0x982>
 8007064:	e7b1      	b.n	8006fca <_dtoa_r+0xb8e>
 8007066:	46c0      	nop			; (mov r8, r8)
 8007068:	08008ae0 	.word	0x08008ae0
 800706c:	08008ae8 	.word	0x08008ae8

08007070 <_localeconv_r>:
 8007070:	4800      	ldr	r0, [pc, #0]	; (8007074 <_localeconv_r+0x4>)
 8007072:	4770      	bx	lr
 8007074:	20000160 	.word	0x20000160

08007078 <malloc>:
 8007078:	b510      	push	{r4, lr}
 800707a:	4b03      	ldr	r3, [pc, #12]	; (8007088 <malloc+0x10>)
 800707c:	0001      	movs	r1, r0
 800707e:	6818      	ldr	r0, [r3, #0]
 8007080:	f000 fc4c 	bl	800791c <_malloc_r>
 8007084:	bd10      	pop	{r4, pc}
 8007086:	46c0      	nop			; (mov r8, r8)
 8007088:	2000000c 	.word	0x2000000c

0800708c <memchr>:
 800708c:	b2c9      	uxtb	r1, r1
 800708e:	1882      	adds	r2, r0, r2
 8007090:	4290      	cmp	r0, r2
 8007092:	d101      	bne.n	8007098 <memchr+0xc>
 8007094:	2000      	movs	r0, #0
 8007096:	4770      	bx	lr
 8007098:	7803      	ldrb	r3, [r0, #0]
 800709a:	428b      	cmp	r3, r1
 800709c:	d0fb      	beq.n	8007096 <memchr+0xa>
 800709e:	3001      	adds	r0, #1
 80070a0:	e7f6      	b.n	8007090 <memchr+0x4>

080070a2 <memcpy>:
 80070a2:	2300      	movs	r3, #0
 80070a4:	b510      	push	{r4, lr}
 80070a6:	429a      	cmp	r2, r3
 80070a8:	d100      	bne.n	80070ac <memcpy+0xa>
 80070aa:	bd10      	pop	{r4, pc}
 80070ac:	5ccc      	ldrb	r4, [r1, r3]
 80070ae:	54c4      	strb	r4, [r0, r3]
 80070b0:	3301      	adds	r3, #1
 80070b2:	e7f8      	b.n	80070a6 <memcpy+0x4>

080070b4 <_Balloc>:
 80070b4:	b570      	push	{r4, r5, r6, lr}
 80070b6:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80070b8:	0006      	movs	r6, r0
 80070ba:	000c      	movs	r4, r1
 80070bc:	2d00      	cmp	r5, #0
 80070be:	d10e      	bne.n	80070de <_Balloc+0x2a>
 80070c0:	2010      	movs	r0, #16
 80070c2:	f7ff ffd9 	bl	8007078 <malloc>
 80070c6:	1e02      	subs	r2, r0, #0
 80070c8:	6270      	str	r0, [r6, #36]	; 0x24
 80070ca:	d104      	bne.n	80070d6 <_Balloc+0x22>
 80070cc:	2166      	movs	r1, #102	; 0x66
 80070ce:	4b19      	ldr	r3, [pc, #100]	; (8007134 <_Balloc+0x80>)
 80070d0:	4819      	ldr	r0, [pc, #100]	; (8007138 <_Balloc+0x84>)
 80070d2:	f000 fe0d 	bl	8007cf0 <__assert_func>
 80070d6:	6045      	str	r5, [r0, #4]
 80070d8:	6085      	str	r5, [r0, #8]
 80070da:	6005      	str	r5, [r0, #0]
 80070dc:	60c5      	str	r5, [r0, #12]
 80070de:	6a75      	ldr	r5, [r6, #36]	; 0x24
 80070e0:	68eb      	ldr	r3, [r5, #12]
 80070e2:	2b00      	cmp	r3, #0
 80070e4:	d013      	beq.n	800710e <_Balloc+0x5a>
 80070e6:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80070e8:	00a2      	lsls	r2, r4, #2
 80070ea:	68db      	ldr	r3, [r3, #12]
 80070ec:	189b      	adds	r3, r3, r2
 80070ee:	6818      	ldr	r0, [r3, #0]
 80070f0:	2800      	cmp	r0, #0
 80070f2:	d118      	bne.n	8007126 <_Balloc+0x72>
 80070f4:	2101      	movs	r1, #1
 80070f6:	000d      	movs	r5, r1
 80070f8:	40a5      	lsls	r5, r4
 80070fa:	1d6a      	adds	r2, r5, #5
 80070fc:	0030      	movs	r0, r6
 80070fe:	0092      	lsls	r2, r2, #2
 8007100:	f000 fb74 	bl	80077ec <_calloc_r>
 8007104:	2800      	cmp	r0, #0
 8007106:	d00c      	beq.n	8007122 <_Balloc+0x6e>
 8007108:	6044      	str	r4, [r0, #4]
 800710a:	6085      	str	r5, [r0, #8]
 800710c:	e00d      	b.n	800712a <_Balloc+0x76>
 800710e:	2221      	movs	r2, #33	; 0x21
 8007110:	2104      	movs	r1, #4
 8007112:	0030      	movs	r0, r6
 8007114:	f000 fb6a 	bl	80077ec <_calloc_r>
 8007118:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800711a:	60e8      	str	r0, [r5, #12]
 800711c:	68db      	ldr	r3, [r3, #12]
 800711e:	2b00      	cmp	r3, #0
 8007120:	d1e1      	bne.n	80070e6 <_Balloc+0x32>
 8007122:	2000      	movs	r0, #0
 8007124:	bd70      	pop	{r4, r5, r6, pc}
 8007126:	6802      	ldr	r2, [r0, #0]
 8007128:	601a      	str	r2, [r3, #0]
 800712a:	2300      	movs	r3, #0
 800712c:	6103      	str	r3, [r0, #16]
 800712e:	60c3      	str	r3, [r0, #12]
 8007130:	e7f8      	b.n	8007124 <_Balloc+0x70>
 8007132:	46c0      	nop			; (mov r8, r8)
 8007134:	08008aed 	.word	0x08008aed
 8007138:	08008b70 	.word	0x08008b70

0800713c <_Bfree>:
 800713c:	b570      	push	{r4, r5, r6, lr}
 800713e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8007140:	0005      	movs	r5, r0
 8007142:	000c      	movs	r4, r1
 8007144:	2e00      	cmp	r6, #0
 8007146:	d10e      	bne.n	8007166 <_Bfree+0x2a>
 8007148:	2010      	movs	r0, #16
 800714a:	f7ff ff95 	bl	8007078 <malloc>
 800714e:	1e02      	subs	r2, r0, #0
 8007150:	6268      	str	r0, [r5, #36]	; 0x24
 8007152:	d104      	bne.n	800715e <_Bfree+0x22>
 8007154:	218a      	movs	r1, #138	; 0x8a
 8007156:	4b09      	ldr	r3, [pc, #36]	; (800717c <_Bfree+0x40>)
 8007158:	4809      	ldr	r0, [pc, #36]	; (8007180 <_Bfree+0x44>)
 800715a:	f000 fdc9 	bl	8007cf0 <__assert_func>
 800715e:	6046      	str	r6, [r0, #4]
 8007160:	6086      	str	r6, [r0, #8]
 8007162:	6006      	str	r6, [r0, #0]
 8007164:	60c6      	str	r6, [r0, #12]
 8007166:	2c00      	cmp	r4, #0
 8007168:	d007      	beq.n	800717a <_Bfree+0x3e>
 800716a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800716c:	6862      	ldr	r2, [r4, #4]
 800716e:	68db      	ldr	r3, [r3, #12]
 8007170:	0092      	lsls	r2, r2, #2
 8007172:	189b      	adds	r3, r3, r2
 8007174:	681a      	ldr	r2, [r3, #0]
 8007176:	6022      	str	r2, [r4, #0]
 8007178:	601c      	str	r4, [r3, #0]
 800717a:	bd70      	pop	{r4, r5, r6, pc}
 800717c:	08008aed 	.word	0x08008aed
 8007180:	08008b70 	.word	0x08008b70

08007184 <__multadd>:
 8007184:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007186:	000e      	movs	r6, r1
 8007188:	9001      	str	r0, [sp, #4]
 800718a:	000c      	movs	r4, r1
 800718c:	001d      	movs	r5, r3
 800718e:	2000      	movs	r0, #0
 8007190:	690f      	ldr	r7, [r1, #16]
 8007192:	3614      	adds	r6, #20
 8007194:	6833      	ldr	r3, [r6, #0]
 8007196:	3001      	adds	r0, #1
 8007198:	b299      	uxth	r1, r3
 800719a:	4351      	muls	r1, r2
 800719c:	0c1b      	lsrs	r3, r3, #16
 800719e:	4353      	muls	r3, r2
 80071a0:	1949      	adds	r1, r1, r5
 80071a2:	0c0d      	lsrs	r5, r1, #16
 80071a4:	195b      	adds	r3, r3, r5
 80071a6:	0c1d      	lsrs	r5, r3, #16
 80071a8:	b289      	uxth	r1, r1
 80071aa:	041b      	lsls	r3, r3, #16
 80071ac:	185b      	adds	r3, r3, r1
 80071ae:	c608      	stmia	r6!, {r3}
 80071b0:	4287      	cmp	r7, r0
 80071b2:	dcef      	bgt.n	8007194 <__multadd+0x10>
 80071b4:	2d00      	cmp	r5, #0
 80071b6:	d022      	beq.n	80071fe <__multadd+0x7a>
 80071b8:	68a3      	ldr	r3, [r4, #8]
 80071ba:	42bb      	cmp	r3, r7
 80071bc:	dc19      	bgt.n	80071f2 <__multadd+0x6e>
 80071be:	6863      	ldr	r3, [r4, #4]
 80071c0:	9801      	ldr	r0, [sp, #4]
 80071c2:	1c59      	adds	r1, r3, #1
 80071c4:	f7ff ff76 	bl	80070b4 <_Balloc>
 80071c8:	1e06      	subs	r6, r0, #0
 80071ca:	d105      	bne.n	80071d8 <__multadd+0x54>
 80071cc:	0002      	movs	r2, r0
 80071ce:	21b5      	movs	r1, #181	; 0xb5
 80071d0:	4b0c      	ldr	r3, [pc, #48]	; (8007204 <__multadd+0x80>)
 80071d2:	480d      	ldr	r0, [pc, #52]	; (8007208 <__multadd+0x84>)
 80071d4:	f000 fd8c 	bl	8007cf0 <__assert_func>
 80071d8:	0021      	movs	r1, r4
 80071da:	6923      	ldr	r3, [r4, #16]
 80071dc:	310c      	adds	r1, #12
 80071de:	1c9a      	adds	r2, r3, #2
 80071e0:	0092      	lsls	r2, r2, #2
 80071e2:	300c      	adds	r0, #12
 80071e4:	f7ff ff5d 	bl	80070a2 <memcpy>
 80071e8:	0021      	movs	r1, r4
 80071ea:	9801      	ldr	r0, [sp, #4]
 80071ec:	f7ff ffa6 	bl	800713c <_Bfree>
 80071f0:	0034      	movs	r4, r6
 80071f2:	1d3b      	adds	r3, r7, #4
 80071f4:	009b      	lsls	r3, r3, #2
 80071f6:	18e3      	adds	r3, r4, r3
 80071f8:	605d      	str	r5, [r3, #4]
 80071fa:	1c7b      	adds	r3, r7, #1
 80071fc:	6123      	str	r3, [r4, #16]
 80071fe:	0020      	movs	r0, r4
 8007200:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007202:	46c0      	nop			; (mov r8, r8)
 8007204:	08008b5f 	.word	0x08008b5f
 8007208:	08008b70 	.word	0x08008b70

0800720c <__hi0bits>:
 800720c:	0003      	movs	r3, r0
 800720e:	0c02      	lsrs	r2, r0, #16
 8007210:	2000      	movs	r0, #0
 8007212:	4282      	cmp	r2, r0
 8007214:	d101      	bne.n	800721a <__hi0bits+0xe>
 8007216:	041b      	lsls	r3, r3, #16
 8007218:	3010      	adds	r0, #16
 800721a:	0e1a      	lsrs	r2, r3, #24
 800721c:	d101      	bne.n	8007222 <__hi0bits+0x16>
 800721e:	3008      	adds	r0, #8
 8007220:	021b      	lsls	r3, r3, #8
 8007222:	0f1a      	lsrs	r2, r3, #28
 8007224:	d101      	bne.n	800722a <__hi0bits+0x1e>
 8007226:	3004      	adds	r0, #4
 8007228:	011b      	lsls	r3, r3, #4
 800722a:	0f9a      	lsrs	r2, r3, #30
 800722c:	d101      	bne.n	8007232 <__hi0bits+0x26>
 800722e:	3002      	adds	r0, #2
 8007230:	009b      	lsls	r3, r3, #2
 8007232:	2b00      	cmp	r3, #0
 8007234:	db03      	blt.n	800723e <__hi0bits+0x32>
 8007236:	3001      	adds	r0, #1
 8007238:	005b      	lsls	r3, r3, #1
 800723a:	d400      	bmi.n	800723e <__hi0bits+0x32>
 800723c:	2020      	movs	r0, #32
 800723e:	4770      	bx	lr

08007240 <__lo0bits>:
 8007240:	6803      	ldr	r3, [r0, #0]
 8007242:	0002      	movs	r2, r0
 8007244:	2107      	movs	r1, #7
 8007246:	0018      	movs	r0, r3
 8007248:	4008      	ands	r0, r1
 800724a:	420b      	tst	r3, r1
 800724c:	d00d      	beq.n	800726a <__lo0bits+0x2a>
 800724e:	3906      	subs	r1, #6
 8007250:	2000      	movs	r0, #0
 8007252:	420b      	tst	r3, r1
 8007254:	d105      	bne.n	8007262 <__lo0bits+0x22>
 8007256:	3002      	adds	r0, #2
 8007258:	4203      	tst	r3, r0
 800725a:	d003      	beq.n	8007264 <__lo0bits+0x24>
 800725c:	40cb      	lsrs	r3, r1
 800725e:	0008      	movs	r0, r1
 8007260:	6013      	str	r3, [r2, #0]
 8007262:	4770      	bx	lr
 8007264:	089b      	lsrs	r3, r3, #2
 8007266:	6013      	str	r3, [r2, #0]
 8007268:	e7fb      	b.n	8007262 <__lo0bits+0x22>
 800726a:	b299      	uxth	r1, r3
 800726c:	2900      	cmp	r1, #0
 800726e:	d101      	bne.n	8007274 <__lo0bits+0x34>
 8007270:	2010      	movs	r0, #16
 8007272:	0c1b      	lsrs	r3, r3, #16
 8007274:	b2d9      	uxtb	r1, r3
 8007276:	2900      	cmp	r1, #0
 8007278:	d101      	bne.n	800727e <__lo0bits+0x3e>
 800727a:	3008      	adds	r0, #8
 800727c:	0a1b      	lsrs	r3, r3, #8
 800727e:	0719      	lsls	r1, r3, #28
 8007280:	d101      	bne.n	8007286 <__lo0bits+0x46>
 8007282:	3004      	adds	r0, #4
 8007284:	091b      	lsrs	r3, r3, #4
 8007286:	0799      	lsls	r1, r3, #30
 8007288:	d101      	bne.n	800728e <__lo0bits+0x4e>
 800728a:	3002      	adds	r0, #2
 800728c:	089b      	lsrs	r3, r3, #2
 800728e:	07d9      	lsls	r1, r3, #31
 8007290:	d4e9      	bmi.n	8007266 <__lo0bits+0x26>
 8007292:	3001      	adds	r0, #1
 8007294:	085b      	lsrs	r3, r3, #1
 8007296:	d1e6      	bne.n	8007266 <__lo0bits+0x26>
 8007298:	2020      	movs	r0, #32
 800729a:	e7e2      	b.n	8007262 <__lo0bits+0x22>

0800729c <__i2b>:
 800729c:	b510      	push	{r4, lr}
 800729e:	000c      	movs	r4, r1
 80072a0:	2101      	movs	r1, #1
 80072a2:	f7ff ff07 	bl	80070b4 <_Balloc>
 80072a6:	2800      	cmp	r0, #0
 80072a8:	d106      	bne.n	80072b8 <__i2b+0x1c>
 80072aa:	21a0      	movs	r1, #160	; 0xa0
 80072ac:	0002      	movs	r2, r0
 80072ae:	4b04      	ldr	r3, [pc, #16]	; (80072c0 <__i2b+0x24>)
 80072b0:	4804      	ldr	r0, [pc, #16]	; (80072c4 <__i2b+0x28>)
 80072b2:	0049      	lsls	r1, r1, #1
 80072b4:	f000 fd1c 	bl	8007cf0 <__assert_func>
 80072b8:	2301      	movs	r3, #1
 80072ba:	6144      	str	r4, [r0, #20]
 80072bc:	6103      	str	r3, [r0, #16]
 80072be:	bd10      	pop	{r4, pc}
 80072c0:	08008b5f 	.word	0x08008b5f
 80072c4:	08008b70 	.word	0x08008b70

080072c8 <__multiply>:
 80072c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80072ca:	690b      	ldr	r3, [r1, #16]
 80072cc:	0014      	movs	r4, r2
 80072ce:	6912      	ldr	r2, [r2, #16]
 80072d0:	000d      	movs	r5, r1
 80072d2:	b089      	sub	sp, #36	; 0x24
 80072d4:	4293      	cmp	r3, r2
 80072d6:	da01      	bge.n	80072dc <__multiply+0x14>
 80072d8:	0025      	movs	r5, r4
 80072da:	000c      	movs	r4, r1
 80072dc:	692f      	ldr	r7, [r5, #16]
 80072de:	6926      	ldr	r6, [r4, #16]
 80072e0:	6869      	ldr	r1, [r5, #4]
 80072e2:	19bb      	adds	r3, r7, r6
 80072e4:	9302      	str	r3, [sp, #8]
 80072e6:	68ab      	ldr	r3, [r5, #8]
 80072e8:	19ba      	adds	r2, r7, r6
 80072ea:	4293      	cmp	r3, r2
 80072ec:	da00      	bge.n	80072f0 <__multiply+0x28>
 80072ee:	3101      	adds	r1, #1
 80072f0:	f7ff fee0 	bl	80070b4 <_Balloc>
 80072f4:	9001      	str	r0, [sp, #4]
 80072f6:	2800      	cmp	r0, #0
 80072f8:	d106      	bne.n	8007308 <__multiply+0x40>
 80072fa:	215e      	movs	r1, #94	; 0x5e
 80072fc:	0002      	movs	r2, r0
 80072fe:	4b48      	ldr	r3, [pc, #288]	; (8007420 <__multiply+0x158>)
 8007300:	4848      	ldr	r0, [pc, #288]	; (8007424 <__multiply+0x15c>)
 8007302:	31ff      	adds	r1, #255	; 0xff
 8007304:	f000 fcf4 	bl	8007cf0 <__assert_func>
 8007308:	9b01      	ldr	r3, [sp, #4]
 800730a:	2200      	movs	r2, #0
 800730c:	3314      	adds	r3, #20
 800730e:	469c      	mov	ip, r3
 8007310:	19bb      	adds	r3, r7, r6
 8007312:	009b      	lsls	r3, r3, #2
 8007314:	4463      	add	r3, ip
 8007316:	9303      	str	r3, [sp, #12]
 8007318:	4663      	mov	r3, ip
 800731a:	9903      	ldr	r1, [sp, #12]
 800731c:	428b      	cmp	r3, r1
 800731e:	d32c      	bcc.n	800737a <__multiply+0xb2>
 8007320:	002b      	movs	r3, r5
 8007322:	0022      	movs	r2, r4
 8007324:	3314      	adds	r3, #20
 8007326:	00bf      	lsls	r7, r7, #2
 8007328:	3214      	adds	r2, #20
 800732a:	9306      	str	r3, [sp, #24]
 800732c:	00b6      	lsls	r6, r6, #2
 800732e:	19db      	adds	r3, r3, r7
 8007330:	9304      	str	r3, [sp, #16]
 8007332:	1993      	adds	r3, r2, r6
 8007334:	9307      	str	r3, [sp, #28]
 8007336:	2304      	movs	r3, #4
 8007338:	9305      	str	r3, [sp, #20]
 800733a:	002b      	movs	r3, r5
 800733c:	9904      	ldr	r1, [sp, #16]
 800733e:	3315      	adds	r3, #21
 8007340:	9200      	str	r2, [sp, #0]
 8007342:	4299      	cmp	r1, r3
 8007344:	d305      	bcc.n	8007352 <__multiply+0x8a>
 8007346:	1b4b      	subs	r3, r1, r5
 8007348:	3b15      	subs	r3, #21
 800734a:	089b      	lsrs	r3, r3, #2
 800734c:	3301      	adds	r3, #1
 800734e:	009b      	lsls	r3, r3, #2
 8007350:	9305      	str	r3, [sp, #20]
 8007352:	9b07      	ldr	r3, [sp, #28]
 8007354:	9a00      	ldr	r2, [sp, #0]
 8007356:	429a      	cmp	r2, r3
 8007358:	d311      	bcc.n	800737e <__multiply+0xb6>
 800735a:	9b02      	ldr	r3, [sp, #8]
 800735c:	2b00      	cmp	r3, #0
 800735e:	dd06      	ble.n	800736e <__multiply+0xa6>
 8007360:	9b03      	ldr	r3, [sp, #12]
 8007362:	3b04      	subs	r3, #4
 8007364:	9303      	str	r3, [sp, #12]
 8007366:	681b      	ldr	r3, [r3, #0]
 8007368:	9300      	str	r3, [sp, #0]
 800736a:	2b00      	cmp	r3, #0
 800736c:	d053      	beq.n	8007416 <__multiply+0x14e>
 800736e:	9b01      	ldr	r3, [sp, #4]
 8007370:	9a02      	ldr	r2, [sp, #8]
 8007372:	0018      	movs	r0, r3
 8007374:	611a      	str	r2, [r3, #16]
 8007376:	b009      	add	sp, #36	; 0x24
 8007378:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800737a:	c304      	stmia	r3!, {r2}
 800737c:	e7cd      	b.n	800731a <__multiply+0x52>
 800737e:	9b00      	ldr	r3, [sp, #0]
 8007380:	681b      	ldr	r3, [r3, #0]
 8007382:	b298      	uxth	r0, r3
 8007384:	2800      	cmp	r0, #0
 8007386:	d01b      	beq.n	80073c0 <__multiply+0xf8>
 8007388:	4667      	mov	r7, ip
 800738a:	2400      	movs	r4, #0
 800738c:	9e06      	ldr	r6, [sp, #24]
 800738e:	ce02      	ldmia	r6!, {r1}
 8007390:	683a      	ldr	r2, [r7, #0]
 8007392:	b28b      	uxth	r3, r1
 8007394:	4343      	muls	r3, r0
 8007396:	b292      	uxth	r2, r2
 8007398:	189b      	adds	r3, r3, r2
 800739a:	191b      	adds	r3, r3, r4
 800739c:	0c0c      	lsrs	r4, r1, #16
 800739e:	4344      	muls	r4, r0
 80073a0:	683a      	ldr	r2, [r7, #0]
 80073a2:	0c11      	lsrs	r1, r2, #16
 80073a4:	1861      	adds	r1, r4, r1
 80073a6:	0c1c      	lsrs	r4, r3, #16
 80073a8:	1909      	adds	r1, r1, r4
 80073aa:	0c0c      	lsrs	r4, r1, #16
 80073ac:	b29b      	uxth	r3, r3
 80073ae:	0409      	lsls	r1, r1, #16
 80073b0:	430b      	orrs	r3, r1
 80073b2:	c708      	stmia	r7!, {r3}
 80073b4:	9b04      	ldr	r3, [sp, #16]
 80073b6:	42b3      	cmp	r3, r6
 80073b8:	d8e9      	bhi.n	800738e <__multiply+0xc6>
 80073ba:	4663      	mov	r3, ip
 80073bc:	9a05      	ldr	r2, [sp, #20]
 80073be:	509c      	str	r4, [r3, r2]
 80073c0:	9b00      	ldr	r3, [sp, #0]
 80073c2:	681b      	ldr	r3, [r3, #0]
 80073c4:	0c1e      	lsrs	r6, r3, #16
 80073c6:	d020      	beq.n	800740a <__multiply+0x142>
 80073c8:	4663      	mov	r3, ip
 80073ca:	002c      	movs	r4, r5
 80073cc:	4660      	mov	r0, ip
 80073ce:	2700      	movs	r7, #0
 80073d0:	681b      	ldr	r3, [r3, #0]
 80073d2:	3414      	adds	r4, #20
 80073d4:	6822      	ldr	r2, [r4, #0]
 80073d6:	b29b      	uxth	r3, r3
 80073d8:	b291      	uxth	r1, r2
 80073da:	4371      	muls	r1, r6
 80073dc:	6802      	ldr	r2, [r0, #0]
 80073de:	0c12      	lsrs	r2, r2, #16
 80073e0:	1889      	adds	r1, r1, r2
 80073e2:	19cf      	adds	r7, r1, r7
 80073e4:	0439      	lsls	r1, r7, #16
 80073e6:	430b      	orrs	r3, r1
 80073e8:	6003      	str	r3, [r0, #0]
 80073ea:	cc02      	ldmia	r4!, {r1}
 80073ec:	6843      	ldr	r3, [r0, #4]
 80073ee:	0c09      	lsrs	r1, r1, #16
 80073f0:	4371      	muls	r1, r6
 80073f2:	b29b      	uxth	r3, r3
 80073f4:	0c3f      	lsrs	r7, r7, #16
 80073f6:	18cb      	adds	r3, r1, r3
 80073f8:	9a04      	ldr	r2, [sp, #16]
 80073fa:	19db      	adds	r3, r3, r7
 80073fc:	0c1f      	lsrs	r7, r3, #16
 80073fe:	3004      	adds	r0, #4
 8007400:	42a2      	cmp	r2, r4
 8007402:	d8e7      	bhi.n	80073d4 <__multiply+0x10c>
 8007404:	4662      	mov	r2, ip
 8007406:	9905      	ldr	r1, [sp, #20]
 8007408:	5053      	str	r3, [r2, r1]
 800740a:	9b00      	ldr	r3, [sp, #0]
 800740c:	3304      	adds	r3, #4
 800740e:	9300      	str	r3, [sp, #0]
 8007410:	2304      	movs	r3, #4
 8007412:	449c      	add	ip, r3
 8007414:	e79d      	b.n	8007352 <__multiply+0x8a>
 8007416:	9b02      	ldr	r3, [sp, #8]
 8007418:	3b01      	subs	r3, #1
 800741a:	9302      	str	r3, [sp, #8]
 800741c:	e79d      	b.n	800735a <__multiply+0x92>
 800741e:	46c0      	nop			; (mov r8, r8)
 8007420:	08008b5f 	.word	0x08008b5f
 8007424:	08008b70 	.word	0x08008b70

08007428 <__pow5mult>:
 8007428:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800742a:	2303      	movs	r3, #3
 800742c:	0015      	movs	r5, r2
 800742e:	0007      	movs	r7, r0
 8007430:	000e      	movs	r6, r1
 8007432:	401a      	ands	r2, r3
 8007434:	421d      	tst	r5, r3
 8007436:	d008      	beq.n	800744a <__pow5mult+0x22>
 8007438:	4925      	ldr	r1, [pc, #148]	; (80074d0 <__pow5mult+0xa8>)
 800743a:	3a01      	subs	r2, #1
 800743c:	0092      	lsls	r2, r2, #2
 800743e:	5852      	ldr	r2, [r2, r1]
 8007440:	2300      	movs	r3, #0
 8007442:	0031      	movs	r1, r6
 8007444:	f7ff fe9e 	bl	8007184 <__multadd>
 8007448:	0006      	movs	r6, r0
 800744a:	10ad      	asrs	r5, r5, #2
 800744c:	d03d      	beq.n	80074ca <__pow5mult+0xa2>
 800744e:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8007450:	2c00      	cmp	r4, #0
 8007452:	d10f      	bne.n	8007474 <__pow5mult+0x4c>
 8007454:	2010      	movs	r0, #16
 8007456:	f7ff fe0f 	bl	8007078 <malloc>
 800745a:	1e02      	subs	r2, r0, #0
 800745c:	6278      	str	r0, [r7, #36]	; 0x24
 800745e:	d105      	bne.n	800746c <__pow5mult+0x44>
 8007460:	21d7      	movs	r1, #215	; 0xd7
 8007462:	4b1c      	ldr	r3, [pc, #112]	; (80074d4 <__pow5mult+0xac>)
 8007464:	481c      	ldr	r0, [pc, #112]	; (80074d8 <__pow5mult+0xb0>)
 8007466:	0049      	lsls	r1, r1, #1
 8007468:	f000 fc42 	bl	8007cf0 <__assert_func>
 800746c:	6044      	str	r4, [r0, #4]
 800746e:	6084      	str	r4, [r0, #8]
 8007470:	6004      	str	r4, [r0, #0]
 8007472:	60c4      	str	r4, [r0, #12]
 8007474:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007476:	689c      	ldr	r4, [r3, #8]
 8007478:	9301      	str	r3, [sp, #4]
 800747a:	2c00      	cmp	r4, #0
 800747c:	d108      	bne.n	8007490 <__pow5mult+0x68>
 800747e:	0038      	movs	r0, r7
 8007480:	4916      	ldr	r1, [pc, #88]	; (80074dc <__pow5mult+0xb4>)
 8007482:	f7ff ff0b 	bl	800729c <__i2b>
 8007486:	9b01      	ldr	r3, [sp, #4]
 8007488:	0004      	movs	r4, r0
 800748a:	6098      	str	r0, [r3, #8]
 800748c:	2300      	movs	r3, #0
 800748e:	6003      	str	r3, [r0, #0]
 8007490:	2301      	movs	r3, #1
 8007492:	421d      	tst	r5, r3
 8007494:	d00a      	beq.n	80074ac <__pow5mult+0x84>
 8007496:	0031      	movs	r1, r6
 8007498:	0022      	movs	r2, r4
 800749a:	0038      	movs	r0, r7
 800749c:	f7ff ff14 	bl	80072c8 <__multiply>
 80074a0:	0031      	movs	r1, r6
 80074a2:	9001      	str	r0, [sp, #4]
 80074a4:	0038      	movs	r0, r7
 80074a6:	f7ff fe49 	bl	800713c <_Bfree>
 80074aa:	9e01      	ldr	r6, [sp, #4]
 80074ac:	106d      	asrs	r5, r5, #1
 80074ae:	d00c      	beq.n	80074ca <__pow5mult+0xa2>
 80074b0:	6820      	ldr	r0, [r4, #0]
 80074b2:	2800      	cmp	r0, #0
 80074b4:	d107      	bne.n	80074c6 <__pow5mult+0x9e>
 80074b6:	0022      	movs	r2, r4
 80074b8:	0021      	movs	r1, r4
 80074ba:	0038      	movs	r0, r7
 80074bc:	f7ff ff04 	bl	80072c8 <__multiply>
 80074c0:	2300      	movs	r3, #0
 80074c2:	6020      	str	r0, [r4, #0]
 80074c4:	6003      	str	r3, [r0, #0]
 80074c6:	0004      	movs	r4, r0
 80074c8:	e7e2      	b.n	8007490 <__pow5mult+0x68>
 80074ca:	0030      	movs	r0, r6
 80074cc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80074ce:	46c0      	nop			; (mov r8, r8)
 80074d0:	08008cc0 	.word	0x08008cc0
 80074d4:	08008aed 	.word	0x08008aed
 80074d8:	08008b70 	.word	0x08008b70
 80074dc:	00000271 	.word	0x00000271

080074e0 <__lshift>:
 80074e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80074e2:	000c      	movs	r4, r1
 80074e4:	0017      	movs	r7, r2
 80074e6:	6923      	ldr	r3, [r4, #16]
 80074e8:	1155      	asrs	r5, r2, #5
 80074ea:	b087      	sub	sp, #28
 80074ec:	18eb      	adds	r3, r5, r3
 80074ee:	9302      	str	r3, [sp, #8]
 80074f0:	3301      	adds	r3, #1
 80074f2:	9301      	str	r3, [sp, #4]
 80074f4:	6849      	ldr	r1, [r1, #4]
 80074f6:	68a3      	ldr	r3, [r4, #8]
 80074f8:	9004      	str	r0, [sp, #16]
 80074fa:	9a01      	ldr	r2, [sp, #4]
 80074fc:	4293      	cmp	r3, r2
 80074fe:	db10      	blt.n	8007522 <__lshift+0x42>
 8007500:	9804      	ldr	r0, [sp, #16]
 8007502:	f7ff fdd7 	bl	80070b4 <_Balloc>
 8007506:	2300      	movs	r3, #0
 8007508:	0002      	movs	r2, r0
 800750a:	0006      	movs	r6, r0
 800750c:	0019      	movs	r1, r3
 800750e:	3214      	adds	r2, #20
 8007510:	4298      	cmp	r0, r3
 8007512:	d10c      	bne.n	800752e <__lshift+0x4e>
 8007514:	21da      	movs	r1, #218	; 0xda
 8007516:	0002      	movs	r2, r0
 8007518:	4b26      	ldr	r3, [pc, #152]	; (80075b4 <__lshift+0xd4>)
 800751a:	4827      	ldr	r0, [pc, #156]	; (80075b8 <__lshift+0xd8>)
 800751c:	31ff      	adds	r1, #255	; 0xff
 800751e:	f000 fbe7 	bl	8007cf0 <__assert_func>
 8007522:	3101      	adds	r1, #1
 8007524:	005b      	lsls	r3, r3, #1
 8007526:	e7e8      	b.n	80074fa <__lshift+0x1a>
 8007528:	0098      	lsls	r0, r3, #2
 800752a:	5011      	str	r1, [r2, r0]
 800752c:	3301      	adds	r3, #1
 800752e:	42ab      	cmp	r3, r5
 8007530:	dbfa      	blt.n	8007528 <__lshift+0x48>
 8007532:	43eb      	mvns	r3, r5
 8007534:	17db      	asrs	r3, r3, #31
 8007536:	401d      	ands	r5, r3
 8007538:	211f      	movs	r1, #31
 800753a:	0023      	movs	r3, r4
 800753c:	0038      	movs	r0, r7
 800753e:	00ad      	lsls	r5, r5, #2
 8007540:	1955      	adds	r5, r2, r5
 8007542:	6922      	ldr	r2, [r4, #16]
 8007544:	3314      	adds	r3, #20
 8007546:	0092      	lsls	r2, r2, #2
 8007548:	4008      	ands	r0, r1
 800754a:	4684      	mov	ip, r0
 800754c:	189a      	adds	r2, r3, r2
 800754e:	420f      	tst	r7, r1
 8007550:	d02a      	beq.n	80075a8 <__lshift+0xc8>
 8007552:	3101      	adds	r1, #1
 8007554:	1a09      	subs	r1, r1, r0
 8007556:	9105      	str	r1, [sp, #20]
 8007558:	2100      	movs	r1, #0
 800755a:	9503      	str	r5, [sp, #12]
 800755c:	4667      	mov	r7, ip
 800755e:	6818      	ldr	r0, [r3, #0]
 8007560:	40b8      	lsls	r0, r7
 8007562:	4301      	orrs	r1, r0
 8007564:	9803      	ldr	r0, [sp, #12]
 8007566:	c002      	stmia	r0!, {r1}
 8007568:	cb02      	ldmia	r3!, {r1}
 800756a:	9003      	str	r0, [sp, #12]
 800756c:	9805      	ldr	r0, [sp, #20]
 800756e:	40c1      	lsrs	r1, r0
 8007570:	429a      	cmp	r2, r3
 8007572:	d8f3      	bhi.n	800755c <__lshift+0x7c>
 8007574:	0020      	movs	r0, r4
 8007576:	3015      	adds	r0, #21
 8007578:	2304      	movs	r3, #4
 800757a:	4282      	cmp	r2, r0
 800757c:	d304      	bcc.n	8007588 <__lshift+0xa8>
 800757e:	1b13      	subs	r3, r2, r4
 8007580:	3b15      	subs	r3, #21
 8007582:	089b      	lsrs	r3, r3, #2
 8007584:	3301      	adds	r3, #1
 8007586:	009b      	lsls	r3, r3, #2
 8007588:	50e9      	str	r1, [r5, r3]
 800758a:	2900      	cmp	r1, #0
 800758c:	d002      	beq.n	8007594 <__lshift+0xb4>
 800758e:	9b02      	ldr	r3, [sp, #8]
 8007590:	3302      	adds	r3, #2
 8007592:	9301      	str	r3, [sp, #4]
 8007594:	9b01      	ldr	r3, [sp, #4]
 8007596:	9804      	ldr	r0, [sp, #16]
 8007598:	3b01      	subs	r3, #1
 800759a:	0021      	movs	r1, r4
 800759c:	6133      	str	r3, [r6, #16]
 800759e:	f7ff fdcd 	bl	800713c <_Bfree>
 80075a2:	0030      	movs	r0, r6
 80075a4:	b007      	add	sp, #28
 80075a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80075a8:	cb02      	ldmia	r3!, {r1}
 80075aa:	c502      	stmia	r5!, {r1}
 80075ac:	429a      	cmp	r2, r3
 80075ae:	d8fb      	bhi.n	80075a8 <__lshift+0xc8>
 80075b0:	e7f0      	b.n	8007594 <__lshift+0xb4>
 80075b2:	46c0      	nop			; (mov r8, r8)
 80075b4:	08008b5f 	.word	0x08008b5f
 80075b8:	08008b70 	.word	0x08008b70

080075bc <__mcmp>:
 80075bc:	6902      	ldr	r2, [r0, #16]
 80075be:	690b      	ldr	r3, [r1, #16]
 80075c0:	b530      	push	{r4, r5, lr}
 80075c2:	0004      	movs	r4, r0
 80075c4:	1ad0      	subs	r0, r2, r3
 80075c6:	429a      	cmp	r2, r3
 80075c8:	d10d      	bne.n	80075e6 <__mcmp+0x2a>
 80075ca:	009b      	lsls	r3, r3, #2
 80075cc:	3414      	adds	r4, #20
 80075ce:	3114      	adds	r1, #20
 80075d0:	18e2      	adds	r2, r4, r3
 80075d2:	18c9      	adds	r1, r1, r3
 80075d4:	3a04      	subs	r2, #4
 80075d6:	3904      	subs	r1, #4
 80075d8:	6815      	ldr	r5, [r2, #0]
 80075da:	680b      	ldr	r3, [r1, #0]
 80075dc:	429d      	cmp	r5, r3
 80075de:	d003      	beq.n	80075e8 <__mcmp+0x2c>
 80075e0:	2001      	movs	r0, #1
 80075e2:	429d      	cmp	r5, r3
 80075e4:	d303      	bcc.n	80075ee <__mcmp+0x32>
 80075e6:	bd30      	pop	{r4, r5, pc}
 80075e8:	4294      	cmp	r4, r2
 80075ea:	d3f3      	bcc.n	80075d4 <__mcmp+0x18>
 80075ec:	e7fb      	b.n	80075e6 <__mcmp+0x2a>
 80075ee:	4240      	negs	r0, r0
 80075f0:	e7f9      	b.n	80075e6 <__mcmp+0x2a>
	...

080075f4 <__mdiff>:
 80075f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80075f6:	000e      	movs	r6, r1
 80075f8:	0007      	movs	r7, r0
 80075fa:	0011      	movs	r1, r2
 80075fc:	0030      	movs	r0, r6
 80075fe:	b087      	sub	sp, #28
 8007600:	0014      	movs	r4, r2
 8007602:	f7ff ffdb 	bl	80075bc <__mcmp>
 8007606:	1e05      	subs	r5, r0, #0
 8007608:	d110      	bne.n	800762c <__mdiff+0x38>
 800760a:	0001      	movs	r1, r0
 800760c:	0038      	movs	r0, r7
 800760e:	f7ff fd51 	bl	80070b4 <_Balloc>
 8007612:	1e02      	subs	r2, r0, #0
 8007614:	d104      	bne.n	8007620 <__mdiff+0x2c>
 8007616:	4b40      	ldr	r3, [pc, #256]	; (8007718 <__mdiff+0x124>)
 8007618:	4940      	ldr	r1, [pc, #256]	; (800771c <__mdiff+0x128>)
 800761a:	4841      	ldr	r0, [pc, #260]	; (8007720 <__mdiff+0x12c>)
 800761c:	f000 fb68 	bl	8007cf0 <__assert_func>
 8007620:	2301      	movs	r3, #1
 8007622:	6145      	str	r5, [r0, #20]
 8007624:	6103      	str	r3, [r0, #16]
 8007626:	0010      	movs	r0, r2
 8007628:	b007      	add	sp, #28
 800762a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800762c:	2301      	movs	r3, #1
 800762e:	9301      	str	r3, [sp, #4]
 8007630:	2800      	cmp	r0, #0
 8007632:	db04      	blt.n	800763e <__mdiff+0x4a>
 8007634:	0023      	movs	r3, r4
 8007636:	0034      	movs	r4, r6
 8007638:	001e      	movs	r6, r3
 800763a:	2300      	movs	r3, #0
 800763c:	9301      	str	r3, [sp, #4]
 800763e:	0038      	movs	r0, r7
 8007640:	6861      	ldr	r1, [r4, #4]
 8007642:	f7ff fd37 	bl	80070b4 <_Balloc>
 8007646:	1e02      	subs	r2, r0, #0
 8007648:	d103      	bne.n	8007652 <__mdiff+0x5e>
 800764a:	2190      	movs	r1, #144	; 0x90
 800764c:	4b32      	ldr	r3, [pc, #200]	; (8007718 <__mdiff+0x124>)
 800764e:	0089      	lsls	r1, r1, #2
 8007650:	e7e3      	b.n	800761a <__mdiff+0x26>
 8007652:	9b01      	ldr	r3, [sp, #4]
 8007654:	2700      	movs	r7, #0
 8007656:	60c3      	str	r3, [r0, #12]
 8007658:	6920      	ldr	r0, [r4, #16]
 800765a:	3414      	adds	r4, #20
 800765c:	9401      	str	r4, [sp, #4]
 800765e:	9b01      	ldr	r3, [sp, #4]
 8007660:	0084      	lsls	r4, r0, #2
 8007662:	191b      	adds	r3, r3, r4
 8007664:	0034      	movs	r4, r6
 8007666:	9302      	str	r3, [sp, #8]
 8007668:	6933      	ldr	r3, [r6, #16]
 800766a:	3414      	adds	r4, #20
 800766c:	0099      	lsls	r1, r3, #2
 800766e:	1863      	adds	r3, r4, r1
 8007670:	9303      	str	r3, [sp, #12]
 8007672:	0013      	movs	r3, r2
 8007674:	3314      	adds	r3, #20
 8007676:	469c      	mov	ip, r3
 8007678:	9305      	str	r3, [sp, #20]
 800767a:	9b01      	ldr	r3, [sp, #4]
 800767c:	9304      	str	r3, [sp, #16]
 800767e:	9b04      	ldr	r3, [sp, #16]
 8007680:	cc02      	ldmia	r4!, {r1}
 8007682:	cb20      	ldmia	r3!, {r5}
 8007684:	9304      	str	r3, [sp, #16]
 8007686:	b2ab      	uxth	r3, r5
 8007688:	19df      	adds	r7, r3, r7
 800768a:	b28b      	uxth	r3, r1
 800768c:	1afb      	subs	r3, r7, r3
 800768e:	0c09      	lsrs	r1, r1, #16
 8007690:	0c2d      	lsrs	r5, r5, #16
 8007692:	1a6d      	subs	r5, r5, r1
 8007694:	1419      	asrs	r1, r3, #16
 8007696:	186d      	adds	r5, r5, r1
 8007698:	4661      	mov	r1, ip
 800769a:	142f      	asrs	r7, r5, #16
 800769c:	b29b      	uxth	r3, r3
 800769e:	042d      	lsls	r5, r5, #16
 80076a0:	432b      	orrs	r3, r5
 80076a2:	c108      	stmia	r1!, {r3}
 80076a4:	9b03      	ldr	r3, [sp, #12]
 80076a6:	468c      	mov	ip, r1
 80076a8:	42a3      	cmp	r3, r4
 80076aa:	d8e8      	bhi.n	800767e <__mdiff+0x8a>
 80076ac:	0031      	movs	r1, r6
 80076ae:	9c03      	ldr	r4, [sp, #12]
 80076b0:	3115      	adds	r1, #21
 80076b2:	2304      	movs	r3, #4
 80076b4:	428c      	cmp	r4, r1
 80076b6:	d304      	bcc.n	80076c2 <__mdiff+0xce>
 80076b8:	1ba3      	subs	r3, r4, r6
 80076ba:	3b15      	subs	r3, #21
 80076bc:	089b      	lsrs	r3, r3, #2
 80076be:	3301      	adds	r3, #1
 80076c0:	009b      	lsls	r3, r3, #2
 80076c2:	9901      	ldr	r1, [sp, #4]
 80076c4:	18cc      	adds	r4, r1, r3
 80076c6:	9905      	ldr	r1, [sp, #20]
 80076c8:	0026      	movs	r6, r4
 80076ca:	18cb      	adds	r3, r1, r3
 80076cc:	469c      	mov	ip, r3
 80076ce:	9902      	ldr	r1, [sp, #8]
 80076d0:	428e      	cmp	r6, r1
 80076d2:	d310      	bcc.n	80076f6 <__mdiff+0x102>
 80076d4:	9e02      	ldr	r6, [sp, #8]
 80076d6:	1ee1      	subs	r1, r4, #3
 80076d8:	2500      	movs	r5, #0
 80076da:	428e      	cmp	r6, r1
 80076dc:	d304      	bcc.n	80076e8 <__mdiff+0xf4>
 80076de:	0031      	movs	r1, r6
 80076e0:	3103      	adds	r1, #3
 80076e2:	1b0c      	subs	r4, r1, r4
 80076e4:	08a4      	lsrs	r4, r4, #2
 80076e6:	00a5      	lsls	r5, r4, #2
 80076e8:	195b      	adds	r3, r3, r5
 80076ea:	3b04      	subs	r3, #4
 80076ec:	6819      	ldr	r1, [r3, #0]
 80076ee:	2900      	cmp	r1, #0
 80076f0:	d00f      	beq.n	8007712 <__mdiff+0x11e>
 80076f2:	6110      	str	r0, [r2, #16]
 80076f4:	e797      	b.n	8007626 <__mdiff+0x32>
 80076f6:	ce02      	ldmia	r6!, {r1}
 80076f8:	b28d      	uxth	r5, r1
 80076fa:	19ed      	adds	r5, r5, r7
 80076fc:	0c0f      	lsrs	r7, r1, #16
 80076fe:	1429      	asrs	r1, r5, #16
 8007700:	1879      	adds	r1, r7, r1
 8007702:	140f      	asrs	r7, r1, #16
 8007704:	b2ad      	uxth	r5, r5
 8007706:	0409      	lsls	r1, r1, #16
 8007708:	430d      	orrs	r5, r1
 800770a:	4661      	mov	r1, ip
 800770c:	c120      	stmia	r1!, {r5}
 800770e:	468c      	mov	ip, r1
 8007710:	e7dd      	b.n	80076ce <__mdiff+0xda>
 8007712:	3801      	subs	r0, #1
 8007714:	e7e9      	b.n	80076ea <__mdiff+0xf6>
 8007716:	46c0      	nop			; (mov r8, r8)
 8007718:	08008b5f 	.word	0x08008b5f
 800771c:	00000232 	.word	0x00000232
 8007720:	08008b70 	.word	0x08008b70

08007724 <__d2b>:
 8007724:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007726:	2101      	movs	r1, #1
 8007728:	0014      	movs	r4, r2
 800772a:	001e      	movs	r6, r3
 800772c:	9f08      	ldr	r7, [sp, #32]
 800772e:	f7ff fcc1 	bl	80070b4 <_Balloc>
 8007732:	1e05      	subs	r5, r0, #0
 8007734:	d105      	bne.n	8007742 <__d2b+0x1e>
 8007736:	0002      	movs	r2, r0
 8007738:	4b26      	ldr	r3, [pc, #152]	; (80077d4 <__d2b+0xb0>)
 800773a:	4927      	ldr	r1, [pc, #156]	; (80077d8 <__d2b+0xb4>)
 800773c:	4827      	ldr	r0, [pc, #156]	; (80077dc <__d2b+0xb8>)
 800773e:	f000 fad7 	bl	8007cf0 <__assert_func>
 8007742:	0333      	lsls	r3, r6, #12
 8007744:	0076      	lsls	r6, r6, #1
 8007746:	0b1b      	lsrs	r3, r3, #12
 8007748:	0d76      	lsrs	r6, r6, #21
 800774a:	d124      	bne.n	8007796 <__d2b+0x72>
 800774c:	9301      	str	r3, [sp, #4]
 800774e:	2c00      	cmp	r4, #0
 8007750:	d027      	beq.n	80077a2 <__d2b+0x7e>
 8007752:	4668      	mov	r0, sp
 8007754:	9400      	str	r4, [sp, #0]
 8007756:	f7ff fd73 	bl	8007240 <__lo0bits>
 800775a:	9c00      	ldr	r4, [sp, #0]
 800775c:	2800      	cmp	r0, #0
 800775e:	d01e      	beq.n	800779e <__d2b+0x7a>
 8007760:	9b01      	ldr	r3, [sp, #4]
 8007762:	2120      	movs	r1, #32
 8007764:	001a      	movs	r2, r3
 8007766:	1a09      	subs	r1, r1, r0
 8007768:	408a      	lsls	r2, r1
 800776a:	40c3      	lsrs	r3, r0
 800776c:	4322      	orrs	r2, r4
 800776e:	616a      	str	r2, [r5, #20]
 8007770:	9301      	str	r3, [sp, #4]
 8007772:	9c01      	ldr	r4, [sp, #4]
 8007774:	61ac      	str	r4, [r5, #24]
 8007776:	1e63      	subs	r3, r4, #1
 8007778:	419c      	sbcs	r4, r3
 800777a:	3401      	adds	r4, #1
 800777c:	612c      	str	r4, [r5, #16]
 800777e:	2e00      	cmp	r6, #0
 8007780:	d018      	beq.n	80077b4 <__d2b+0x90>
 8007782:	4b17      	ldr	r3, [pc, #92]	; (80077e0 <__d2b+0xbc>)
 8007784:	18f6      	adds	r6, r6, r3
 8007786:	2335      	movs	r3, #53	; 0x35
 8007788:	1836      	adds	r6, r6, r0
 800778a:	1a18      	subs	r0, r3, r0
 800778c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800778e:	603e      	str	r6, [r7, #0]
 8007790:	6018      	str	r0, [r3, #0]
 8007792:	0028      	movs	r0, r5
 8007794:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007796:	2280      	movs	r2, #128	; 0x80
 8007798:	0352      	lsls	r2, r2, #13
 800779a:	4313      	orrs	r3, r2
 800779c:	e7d6      	b.n	800774c <__d2b+0x28>
 800779e:	616c      	str	r4, [r5, #20]
 80077a0:	e7e7      	b.n	8007772 <__d2b+0x4e>
 80077a2:	a801      	add	r0, sp, #4
 80077a4:	f7ff fd4c 	bl	8007240 <__lo0bits>
 80077a8:	2401      	movs	r4, #1
 80077aa:	9b01      	ldr	r3, [sp, #4]
 80077ac:	612c      	str	r4, [r5, #16]
 80077ae:	616b      	str	r3, [r5, #20]
 80077b0:	3020      	adds	r0, #32
 80077b2:	e7e4      	b.n	800777e <__d2b+0x5a>
 80077b4:	4b0b      	ldr	r3, [pc, #44]	; (80077e4 <__d2b+0xc0>)
 80077b6:	18c0      	adds	r0, r0, r3
 80077b8:	4b0b      	ldr	r3, [pc, #44]	; (80077e8 <__d2b+0xc4>)
 80077ba:	6038      	str	r0, [r7, #0]
 80077bc:	18e3      	adds	r3, r4, r3
 80077be:	009b      	lsls	r3, r3, #2
 80077c0:	18eb      	adds	r3, r5, r3
 80077c2:	6958      	ldr	r0, [r3, #20]
 80077c4:	f7ff fd22 	bl	800720c <__hi0bits>
 80077c8:	0164      	lsls	r4, r4, #5
 80077ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80077cc:	1a24      	subs	r4, r4, r0
 80077ce:	601c      	str	r4, [r3, #0]
 80077d0:	e7df      	b.n	8007792 <__d2b+0x6e>
 80077d2:	46c0      	nop			; (mov r8, r8)
 80077d4:	08008b5f 	.word	0x08008b5f
 80077d8:	0000030a 	.word	0x0000030a
 80077dc:	08008b70 	.word	0x08008b70
 80077e0:	fffffbcd 	.word	0xfffffbcd
 80077e4:	fffffbce 	.word	0xfffffbce
 80077e8:	3fffffff 	.word	0x3fffffff

080077ec <_calloc_r>:
 80077ec:	b570      	push	{r4, r5, r6, lr}
 80077ee:	0c13      	lsrs	r3, r2, #16
 80077f0:	0c0d      	lsrs	r5, r1, #16
 80077f2:	d11e      	bne.n	8007832 <_calloc_r+0x46>
 80077f4:	2b00      	cmp	r3, #0
 80077f6:	d10c      	bne.n	8007812 <_calloc_r+0x26>
 80077f8:	b289      	uxth	r1, r1
 80077fa:	b294      	uxth	r4, r2
 80077fc:	434c      	muls	r4, r1
 80077fe:	0021      	movs	r1, r4
 8007800:	f000 f88c 	bl	800791c <_malloc_r>
 8007804:	1e05      	subs	r5, r0, #0
 8007806:	d01b      	beq.n	8007840 <_calloc_r+0x54>
 8007808:	0022      	movs	r2, r4
 800780a:	2100      	movs	r1, #0
 800780c:	f7fe f8f4 	bl	80059f8 <memset>
 8007810:	e016      	b.n	8007840 <_calloc_r+0x54>
 8007812:	1c1d      	adds	r5, r3, #0
 8007814:	1c0b      	adds	r3, r1, #0
 8007816:	b292      	uxth	r2, r2
 8007818:	b289      	uxth	r1, r1
 800781a:	b29c      	uxth	r4, r3
 800781c:	4351      	muls	r1, r2
 800781e:	b2ab      	uxth	r3, r5
 8007820:	4363      	muls	r3, r4
 8007822:	0c0c      	lsrs	r4, r1, #16
 8007824:	191c      	adds	r4, r3, r4
 8007826:	0c22      	lsrs	r2, r4, #16
 8007828:	d107      	bne.n	800783a <_calloc_r+0x4e>
 800782a:	0424      	lsls	r4, r4, #16
 800782c:	b289      	uxth	r1, r1
 800782e:	430c      	orrs	r4, r1
 8007830:	e7e5      	b.n	80077fe <_calloc_r+0x12>
 8007832:	2b00      	cmp	r3, #0
 8007834:	d101      	bne.n	800783a <_calloc_r+0x4e>
 8007836:	1c13      	adds	r3, r2, #0
 8007838:	e7ed      	b.n	8007816 <_calloc_r+0x2a>
 800783a:	230c      	movs	r3, #12
 800783c:	2500      	movs	r5, #0
 800783e:	6003      	str	r3, [r0, #0]
 8007840:	0028      	movs	r0, r5
 8007842:	bd70      	pop	{r4, r5, r6, pc}

08007844 <_free_r>:
 8007844:	b570      	push	{r4, r5, r6, lr}
 8007846:	0005      	movs	r5, r0
 8007848:	2900      	cmp	r1, #0
 800784a:	d010      	beq.n	800786e <_free_r+0x2a>
 800784c:	1f0c      	subs	r4, r1, #4
 800784e:	6823      	ldr	r3, [r4, #0]
 8007850:	2b00      	cmp	r3, #0
 8007852:	da00      	bge.n	8007856 <_free_r+0x12>
 8007854:	18e4      	adds	r4, r4, r3
 8007856:	0028      	movs	r0, r5
 8007858:	f000 fa9e 	bl	8007d98 <__malloc_lock>
 800785c:	4a1d      	ldr	r2, [pc, #116]	; (80078d4 <_free_r+0x90>)
 800785e:	6813      	ldr	r3, [r2, #0]
 8007860:	2b00      	cmp	r3, #0
 8007862:	d105      	bne.n	8007870 <_free_r+0x2c>
 8007864:	6063      	str	r3, [r4, #4]
 8007866:	6014      	str	r4, [r2, #0]
 8007868:	0028      	movs	r0, r5
 800786a:	f000 fa9d 	bl	8007da8 <__malloc_unlock>
 800786e:	bd70      	pop	{r4, r5, r6, pc}
 8007870:	42a3      	cmp	r3, r4
 8007872:	d908      	bls.n	8007886 <_free_r+0x42>
 8007874:	6821      	ldr	r1, [r4, #0]
 8007876:	1860      	adds	r0, r4, r1
 8007878:	4283      	cmp	r3, r0
 800787a:	d1f3      	bne.n	8007864 <_free_r+0x20>
 800787c:	6818      	ldr	r0, [r3, #0]
 800787e:	685b      	ldr	r3, [r3, #4]
 8007880:	1841      	adds	r1, r0, r1
 8007882:	6021      	str	r1, [r4, #0]
 8007884:	e7ee      	b.n	8007864 <_free_r+0x20>
 8007886:	001a      	movs	r2, r3
 8007888:	685b      	ldr	r3, [r3, #4]
 800788a:	2b00      	cmp	r3, #0
 800788c:	d001      	beq.n	8007892 <_free_r+0x4e>
 800788e:	42a3      	cmp	r3, r4
 8007890:	d9f9      	bls.n	8007886 <_free_r+0x42>
 8007892:	6811      	ldr	r1, [r2, #0]
 8007894:	1850      	adds	r0, r2, r1
 8007896:	42a0      	cmp	r0, r4
 8007898:	d10b      	bne.n	80078b2 <_free_r+0x6e>
 800789a:	6820      	ldr	r0, [r4, #0]
 800789c:	1809      	adds	r1, r1, r0
 800789e:	1850      	adds	r0, r2, r1
 80078a0:	6011      	str	r1, [r2, #0]
 80078a2:	4283      	cmp	r3, r0
 80078a4:	d1e0      	bne.n	8007868 <_free_r+0x24>
 80078a6:	6818      	ldr	r0, [r3, #0]
 80078a8:	685b      	ldr	r3, [r3, #4]
 80078aa:	1841      	adds	r1, r0, r1
 80078ac:	6011      	str	r1, [r2, #0]
 80078ae:	6053      	str	r3, [r2, #4]
 80078b0:	e7da      	b.n	8007868 <_free_r+0x24>
 80078b2:	42a0      	cmp	r0, r4
 80078b4:	d902      	bls.n	80078bc <_free_r+0x78>
 80078b6:	230c      	movs	r3, #12
 80078b8:	602b      	str	r3, [r5, #0]
 80078ba:	e7d5      	b.n	8007868 <_free_r+0x24>
 80078bc:	6821      	ldr	r1, [r4, #0]
 80078be:	1860      	adds	r0, r4, r1
 80078c0:	4283      	cmp	r3, r0
 80078c2:	d103      	bne.n	80078cc <_free_r+0x88>
 80078c4:	6818      	ldr	r0, [r3, #0]
 80078c6:	685b      	ldr	r3, [r3, #4]
 80078c8:	1841      	adds	r1, r0, r1
 80078ca:	6021      	str	r1, [r4, #0]
 80078cc:	6063      	str	r3, [r4, #4]
 80078ce:	6054      	str	r4, [r2, #4]
 80078d0:	e7ca      	b.n	8007868 <_free_r+0x24>
 80078d2:	46c0      	nop			; (mov r8, r8)
 80078d4:	20000288 	.word	0x20000288

080078d8 <sbrk_aligned>:
 80078d8:	b570      	push	{r4, r5, r6, lr}
 80078da:	4e0f      	ldr	r6, [pc, #60]	; (8007918 <sbrk_aligned+0x40>)
 80078dc:	000d      	movs	r5, r1
 80078de:	6831      	ldr	r1, [r6, #0]
 80078e0:	0004      	movs	r4, r0
 80078e2:	2900      	cmp	r1, #0
 80078e4:	d102      	bne.n	80078ec <sbrk_aligned+0x14>
 80078e6:	f000 f9f1 	bl	8007ccc <_sbrk_r>
 80078ea:	6030      	str	r0, [r6, #0]
 80078ec:	0029      	movs	r1, r5
 80078ee:	0020      	movs	r0, r4
 80078f0:	f000 f9ec 	bl	8007ccc <_sbrk_r>
 80078f4:	1c43      	adds	r3, r0, #1
 80078f6:	d00a      	beq.n	800790e <sbrk_aligned+0x36>
 80078f8:	2303      	movs	r3, #3
 80078fa:	1cc5      	adds	r5, r0, #3
 80078fc:	439d      	bics	r5, r3
 80078fe:	42a8      	cmp	r0, r5
 8007900:	d007      	beq.n	8007912 <sbrk_aligned+0x3a>
 8007902:	1a29      	subs	r1, r5, r0
 8007904:	0020      	movs	r0, r4
 8007906:	f000 f9e1 	bl	8007ccc <_sbrk_r>
 800790a:	1c43      	adds	r3, r0, #1
 800790c:	d101      	bne.n	8007912 <sbrk_aligned+0x3a>
 800790e:	2501      	movs	r5, #1
 8007910:	426d      	negs	r5, r5
 8007912:	0028      	movs	r0, r5
 8007914:	bd70      	pop	{r4, r5, r6, pc}
 8007916:	46c0      	nop			; (mov r8, r8)
 8007918:	2000028c 	.word	0x2000028c

0800791c <_malloc_r>:
 800791c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800791e:	2203      	movs	r2, #3
 8007920:	1ccb      	adds	r3, r1, #3
 8007922:	4393      	bics	r3, r2
 8007924:	3308      	adds	r3, #8
 8007926:	0006      	movs	r6, r0
 8007928:	001f      	movs	r7, r3
 800792a:	2b0c      	cmp	r3, #12
 800792c:	d232      	bcs.n	8007994 <_malloc_r+0x78>
 800792e:	270c      	movs	r7, #12
 8007930:	42b9      	cmp	r1, r7
 8007932:	d831      	bhi.n	8007998 <_malloc_r+0x7c>
 8007934:	0030      	movs	r0, r6
 8007936:	f000 fa2f 	bl	8007d98 <__malloc_lock>
 800793a:	4d32      	ldr	r5, [pc, #200]	; (8007a04 <_malloc_r+0xe8>)
 800793c:	682b      	ldr	r3, [r5, #0]
 800793e:	001c      	movs	r4, r3
 8007940:	2c00      	cmp	r4, #0
 8007942:	d12e      	bne.n	80079a2 <_malloc_r+0x86>
 8007944:	0039      	movs	r1, r7
 8007946:	0030      	movs	r0, r6
 8007948:	f7ff ffc6 	bl	80078d8 <sbrk_aligned>
 800794c:	0004      	movs	r4, r0
 800794e:	1c43      	adds	r3, r0, #1
 8007950:	d11e      	bne.n	8007990 <_malloc_r+0x74>
 8007952:	682c      	ldr	r4, [r5, #0]
 8007954:	0025      	movs	r5, r4
 8007956:	2d00      	cmp	r5, #0
 8007958:	d14a      	bne.n	80079f0 <_malloc_r+0xd4>
 800795a:	6823      	ldr	r3, [r4, #0]
 800795c:	0029      	movs	r1, r5
 800795e:	18e3      	adds	r3, r4, r3
 8007960:	0030      	movs	r0, r6
 8007962:	9301      	str	r3, [sp, #4]
 8007964:	f000 f9b2 	bl	8007ccc <_sbrk_r>
 8007968:	9b01      	ldr	r3, [sp, #4]
 800796a:	4283      	cmp	r3, r0
 800796c:	d143      	bne.n	80079f6 <_malloc_r+0xda>
 800796e:	6823      	ldr	r3, [r4, #0]
 8007970:	3703      	adds	r7, #3
 8007972:	1aff      	subs	r7, r7, r3
 8007974:	2303      	movs	r3, #3
 8007976:	439f      	bics	r7, r3
 8007978:	3708      	adds	r7, #8
 800797a:	2f0c      	cmp	r7, #12
 800797c:	d200      	bcs.n	8007980 <_malloc_r+0x64>
 800797e:	270c      	movs	r7, #12
 8007980:	0039      	movs	r1, r7
 8007982:	0030      	movs	r0, r6
 8007984:	f7ff ffa8 	bl	80078d8 <sbrk_aligned>
 8007988:	1c43      	adds	r3, r0, #1
 800798a:	d034      	beq.n	80079f6 <_malloc_r+0xda>
 800798c:	6823      	ldr	r3, [r4, #0]
 800798e:	19df      	adds	r7, r3, r7
 8007990:	6027      	str	r7, [r4, #0]
 8007992:	e013      	b.n	80079bc <_malloc_r+0xa0>
 8007994:	2b00      	cmp	r3, #0
 8007996:	dacb      	bge.n	8007930 <_malloc_r+0x14>
 8007998:	230c      	movs	r3, #12
 800799a:	2500      	movs	r5, #0
 800799c:	6033      	str	r3, [r6, #0]
 800799e:	0028      	movs	r0, r5
 80079a0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80079a2:	6822      	ldr	r2, [r4, #0]
 80079a4:	1bd1      	subs	r1, r2, r7
 80079a6:	d420      	bmi.n	80079ea <_malloc_r+0xce>
 80079a8:	290b      	cmp	r1, #11
 80079aa:	d917      	bls.n	80079dc <_malloc_r+0xc0>
 80079ac:	19e2      	adds	r2, r4, r7
 80079ae:	6027      	str	r7, [r4, #0]
 80079b0:	42a3      	cmp	r3, r4
 80079b2:	d111      	bne.n	80079d8 <_malloc_r+0xbc>
 80079b4:	602a      	str	r2, [r5, #0]
 80079b6:	6863      	ldr	r3, [r4, #4]
 80079b8:	6011      	str	r1, [r2, #0]
 80079ba:	6053      	str	r3, [r2, #4]
 80079bc:	0030      	movs	r0, r6
 80079be:	0025      	movs	r5, r4
 80079c0:	f000 f9f2 	bl	8007da8 <__malloc_unlock>
 80079c4:	2207      	movs	r2, #7
 80079c6:	350b      	adds	r5, #11
 80079c8:	1d23      	adds	r3, r4, #4
 80079ca:	4395      	bics	r5, r2
 80079cc:	1aea      	subs	r2, r5, r3
 80079ce:	429d      	cmp	r5, r3
 80079d0:	d0e5      	beq.n	800799e <_malloc_r+0x82>
 80079d2:	1b5b      	subs	r3, r3, r5
 80079d4:	50a3      	str	r3, [r4, r2]
 80079d6:	e7e2      	b.n	800799e <_malloc_r+0x82>
 80079d8:	605a      	str	r2, [r3, #4]
 80079da:	e7ec      	b.n	80079b6 <_malloc_r+0x9a>
 80079dc:	6862      	ldr	r2, [r4, #4]
 80079de:	42a3      	cmp	r3, r4
 80079e0:	d101      	bne.n	80079e6 <_malloc_r+0xca>
 80079e2:	602a      	str	r2, [r5, #0]
 80079e4:	e7ea      	b.n	80079bc <_malloc_r+0xa0>
 80079e6:	605a      	str	r2, [r3, #4]
 80079e8:	e7e8      	b.n	80079bc <_malloc_r+0xa0>
 80079ea:	0023      	movs	r3, r4
 80079ec:	6864      	ldr	r4, [r4, #4]
 80079ee:	e7a7      	b.n	8007940 <_malloc_r+0x24>
 80079f0:	002c      	movs	r4, r5
 80079f2:	686d      	ldr	r5, [r5, #4]
 80079f4:	e7af      	b.n	8007956 <_malloc_r+0x3a>
 80079f6:	230c      	movs	r3, #12
 80079f8:	0030      	movs	r0, r6
 80079fa:	6033      	str	r3, [r6, #0]
 80079fc:	f000 f9d4 	bl	8007da8 <__malloc_unlock>
 8007a00:	e7cd      	b.n	800799e <_malloc_r+0x82>
 8007a02:	46c0      	nop			; (mov r8, r8)
 8007a04:	20000288 	.word	0x20000288

08007a08 <__ssputs_r>:
 8007a08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007a0a:	688e      	ldr	r6, [r1, #8]
 8007a0c:	b085      	sub	sp, #20
 8007a0e:	0007      	movs	r7, r0
 8007a10:	000c      	movs	r4, r1
 8007a12:	9203      	str	r2, [sp, #12]
 8007a14:	9301      	str	r3, [sp, #4]
 8007a16:	429e      	cmp	r6, r3
 8007a18:	d83c      	bhi.n	8007a94 <__ssputs_r+0x8c>
 8007a1a:	2390      	movs	r3, #144	; 0x90
 8007a1c:	898a      	ldrh	r2, [r1, #12]
 8007a1e:	00db      	lsls	r3, r3, #3
 8007a20:	421a      	tst	r2, r3
 8007a22:	d034      	beq.n	8007a8e <__ssputs_r+0x86>
 8007a24:	6909      	ldr	r1, [r1, #16]
 8007a26:	6823      	ldr	r3, [r4, #0]
 8007a28:	6960      	ldr	r0, [r4, #20]
 8007a2a:	1a5b      	subs	r3, r3, r1
 8007a2c:	9302      	str	r3, [sp, #8]
 8007a2e:	2303      	movs	r3, #3
 8007a30:	4343      	muls	r3, r0
 8007a32:	0fdd      	lsrs	r5, r3, #31
 8007a34:	18ed      	adds	r5, r5, r3
 8007a36:	9b01      	ldr	r3, [sp, #4]
 8007a38:	9802      	ldr	r0, [sp, #8]
 8007a3a:	3301      	adds	r3, #1
 8007a3c:	181b      	adds	r3, r3, r0
 8007a3e:	106d      	asrs	r5, r5, #1
 8007a40:	42ab      	cmp	r3, r5
 8007a42:	d900      	bls.n	8007a46 <__ssputs_r+0x3e>
 8007a44:	001d      	movs	r5, r3
 8007a46:	0553      	lsls	r3, r2, #21
 8007a48:	d532      	bpl.n	8007ab0 <__ssputs_r+0xa8>
 8007a4a:	0029      	movs	r1, r5
 8007a4c:	0038      	movs	r0, r7
 8007a4e:	f7ff ff65 	bl	800791c <_malloc_r>
 8007a52:	1e06      	subs	r6, r0, #0
 8007a54:	d109      	bne.n	8007a6a <__ssputs_r+0x62>
 8007a56:	230c      	movs	r3, #12
 8007a58:	603b      	str	r3, [r7, #0]
 8007a5a:	2340      	movs	r3, #64	; 0x40
 8007a5c:	2001      	movs	r0, #1
 8007a5e:	89a2      	ldrh	r2, [r4, #12]
 8007a60:	4240      	negs	r0, r0
 8007a62:	4313      	orrs	r3, r2
 8007a64:	81a3      	strh	r3, [r4, #12]
 8007a66:	b005      	add	sp, #20
 8007a68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007a6a:	9a02      	ldr	r2, [sp, #8]
 8007a6c:	6921      	ldr	r1, [r4, #16]
 8007a6e:	f7ff fb18 	bl	80070a2 <memcpy>
 8007a72:	89a3      	ldrh	r3, [r4, #12]
 8007a74:	4a14      	ldr	r2, [pc, #80]	; (8007ac8 <__ssputs_r+0xc0>)
 8007a76:	401a      	ands	r2, r3
 8007a78:	2380      	movs	r3, #128	; 0x80
 8007a7a:	4313      	orrs	r3, r2
 8007a7c:	81a3      	strh	r3, [r4, #12]
 8007a7e:	9b02      	ldr	r3, [sp, #8]
 8007a80:	6126      	str	r6, [r4, #16]
 8007a82:	18f6      	adds	r6, r6, r3
 8007a84:	6026      	str	r6, [r4, #0]
 8007a86:	6165      	str	r5, [r4, #20]
 8007a88:	9e01      	ldr	r6, [sp, #4]
 8007a8a:	1aed      	subs	r5, r5, r3
 8007a8c:	60a5      	str	r5, [r4, #8]
 8007a8e:	9b01      	ldr	r3, [sp, #4]
 8007a90:	429e      	cmp	r6, r3
 8007a92:	d900      	bls.n	8007a96 <__ssputs_r+0x8e>
 8007a94:	9e01      	ldr	r6, [sp, #4]
 8007a96:	0032      	movs	r2, r6
 8007a98:	9903      	ldr	r1, [sp, #12]
 8007a9a:	6820      	ldr	r0, [r4, #0]
 8007a9c:	f000 f968 	bl	8007d70 <memmove>
 8007aa0:	68a3      	ldr	r3, [r4, #8]
 8007aa2:	2000      	movs	r0, #0
 8007aa4:	1b9b      	subs	r3, r3, r6
 8007aa6:	60a3      	str	r3, [r4, #8]
 8007aa8:	6823      	ldr	r3, [r4, #0]
 8007aaa:	199e      	adds	r6, r3, r6
 8007aac:	6026      	str	r6, [r4, #0]
 8007aae:	e7da      	b.n	8007a66 <__ssputs_r+0x5e>
 8007ab0:	002a      	movs	r2, r5
 8007ab2:	0038      	movs	r0, r7
 8007ab4:	f000 f980 	bl	8007db8 <_realloc_r>
 8007ab8:	1e06      	subs	r6, r0, #0
 8007aba:	d1e0      	bne.n	8007a7e <__ssputs_r+0x76>
 8007abc:	0038      	movs	r0, r7
 8007abe:	6921      	ldr	r1, [r4, #16]
 8007ac0:	f7ff fec0 	bl	8007844 <_free_r>
 8007ac4:	e7c7      	b.n	8007a56 <__ssputs_r+0x4e>
 8007ac6:	46c0      	nop			; (mov r8, r8)
 8007ac8:	fffffb7f 	.word	0xfffffb7f

08007acc <_svfiprintf_r>:
 8007acc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007ace:	b0a1      	sub	sp, #132	; 0x84
 8007ad0:	9003      	str	r0, [sp, #12]
 8007ad2:	001d      	movs	r5, r3
 8007ad4:	898b      	ldrh	r3, [r1, #12]
 8007ad6:	000f      	movs	r7, r1
 8007ad8:	0016      	movs	r6, r2
 8007ada:	061b      	lsls	r3, r3, #24
 8007adc:	d511      	bpl.n	8007b02 <_svfiprintf_r+0x36>
 8007ade:	690b      	ldr	r3, [r1, #16]
 8007ae0:	2b00      	cmp	r3, #0
 8007ae2:	d10e      	bne.n	8007b02 <_svfiprintf_r+0x36>
 8007ae4:	2140      	movs	r1, #64	; 0x40
 8007ae6:	f7ff ff19 	bl	800791c <_malloc_r>
 8007aea:	6038      	str	r0, [r7, #0]
 8007aec:	6138      	str	r0, [r7, #16]
 8007aee:	2800      	cmp	r0, #0
 8007af0:	d105      	bne.n	8007afe <_svfiprintf_r+0x32>
 8007af2:	230c      	movs	r3, #12
 8007af4:	9a03      	ldr	r2, [sp, #12]
 8007af6:	3801      	subs	r0, #1
 8007af8:	6013      	str	r3, [r2, #0]
 8007afa:	b021      	add	sp, #132	; 0x84
 8007afc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007afe:	2340      	movs	r3, #64	; 0x40
 8007b00:	617b      	str	r3, [r7, #20]
 8007b02:	2300      	movs	r3, #0
 8007b04:	ac08      	add	r4, sp, #32
 8007b06:	6163      	str	r3, [r4, #20]
 8007b08:	3320      	adds	r3, #32
 8007b0a:	7663      	strb	r3, [r4, #25]
 8007b0c:	3310      	adds	r3, #16
 8007b0e:	76a3      	strb	r3, [r4, #26]
 8007b10:	9507      	str	r5, [sp, #28]
 8007b12:	0035      	movs	r5, r6
 8007b14:	782b      	ldrb	r3, [r5, #0]
 8007b16:	2b00      	cmp	r3, #0
 8007b18:	d001      	beq.n	8007b1e <_svfiprintf_r+0x52>
 8007b1a:	2b25      	cmp	r3, #37	; 0x25
 8007b1c:	d147      	bne.n	8007bae <_svfiprintf_r+0xe2>
 8007b1e:	1bab      	subs	r3, r5, r6
 8007b20:	9305      	str	r3, [sp, #20]
 8007b22:	42b5      	cmp	r5, r6
 8007b24:	d00c      	beq.n	8007b40 <_svfiprintf_r+0x74>
 8007b26:	0032      	movs	r2, r6
 8007b28:	0039      	movs	r1, r7
 8007b2a:	9803      	ldr	r0, [sp, #12]
 8007b2c:	f7ff ff6c 	bl	8007a08 <__ssputs_r>
 8007b30:	1c43      	adds	r3, r0, #1
 8007b32:	d100      	bne.n	8007b36 <_svfiprintf_r+0x6a>
 8007b34:	e0ae      	b.n	8007c94 <_svfiprintf_r+0x1c8>
 8007b36:	6962      	ldr	r2, [r4, #20]
 8007b38:	9b05      	ldr	r3, [sp, #20]
 8007b3a:	4694      	mov	ip, r2
 8007b3c:	4463      	add	r3, ip
 8007b3e:	6163      	str	r3, [r4, #20]
 8007b40:	782b      	ldrb	r3, [r5, #0]
 8007b42:	2b00      	cmp	r3, #0
 8007b44:	d100      	bne.n	8007b48 <_svfiprintf_r+0x7c>
 8007b46:	e0a5      	b.n	8007c94 <_svfiprintf_r+0x1c8>
 8007b48:	2201      	movs	r2, #1
 8007b4a:	2300      	movs	r3, #0
 8007b4c:	4252      	negs	r2, r2
 8007b4e:	6062      	str	r2, [r4, #4]
 8007b50:	a904      	add	r1, sp, #16
 8007b52:	3254      	adds	r2, #84	; 0x54
 8007b54:	1852      	adds	r2, r2, r1
 8007b56:	1c6e      	adds	r6, r5, #1
 8007b58:	6023      	str	r3, [r4, #0]
 8007b5a:	60e3      	str	r3, [r4, #12]
 8007b5c:	60a3      	str	r3, [r4, #8]
 8007b5e:	7013      	strb	r3, [r2, #0]
 8007b60:	65a3      	str	r3, [r4, #88]	; 0x58
 8007b62:	2205      	movs	r2, #5
 8007b64:	7831      	ldrb	r1, [r6, #0]
 8007b66:	4854      	ldr	r0, [pc, #336]	; (8007cb8 <_svfiprintf_r+0x1ec>)
 8007b68:	f7ff fa90 	bl	800708c <memchr>
 8007b6c:	1c75      	adds	r5, r6, #1
 8007b6e:	2800      	cmp	r0, #0
 8007b70:	d11f      	bne.n	8007bb2 <_svfiprintf_r+0xe6>
 8007b72:	6822      	ldr	r2, [r4, #0]
 8007b74:	06d3      	lsls	r3, r2, #27
 8007b76:	d504      	bpl.n	8007b82 <_svfiprintf_r+0xb6>
 8007b78:	2353      	movs	r3, #83	; 0x53
 8007b7a:	a904      	add	r1, sp, #16
 8007b7c:	185b      	adds	r3, r3, r1
 8007b7e:	2120      	movs	r1, #32
 8007b80:	7019      	strb	r1, [r3, #0]
 8007b82:	0713      	lsls	r3, r2, #28
 8007b84:	d504      	bpl.n	8007b90 <_svfiprintf_r+0xc4>
 8007b86:	2353      	movs	r3, #83	; 0x53
 8007b88:	a904      	add	r1, sp, #16
 8007b8a:	185b      	adds	r3, r3, r1
 8007b8c:	212b      	movs	r1, #43	; 0x2b
 8007b8e:	7019      	strb	r1, [r3, #0]
 8007b90:	7833      	ldrb	r3, [r6, #0]
 8007b92:	2b2a      	cmp	r3, #42	; 0x2a
 8007b94:	d016      	beq.n	8007bc4 <_svfiprintf_r+0xf8>
 8007b96:	0035      	movs	r5, r6
 8007b98:	2100      	movs	r1, #0
 8007b9a:	200a      	movs	r0, #10
 8007b9c:	68e3      	ldr	r3, [r4, #12]
 8007b9e:	782a      	ldrb	r2, [r5, #0]
 8007ba0:	1c6e      	adds	r6, r5, #1
 8007ba2:	3a30      	subs	r2, #48	; 0x30
 8007ba4:	2a09      	cmp	r2, #9
 8007ba6:	d94e      	bls.n	8007c46 <_svfiprintf_r+0x17a>
 8007ba8:	2900      	cmp	r1, #0
 8007baa:	d111      	bne.n	8007bd0 <_svfiprintf_r+0x104>
 8007bac:	e017      	b.n	8007bde <_svfiprintf_r+0x112>
 8007bae:	3501      	adds	r5, #1
 8007bb0:	e7b0      	b.n	8007b14 <_svfiprintf_r+0x48>
 8007bb2:	4b41      	ldr	r3, [pc, #260]	; (8007cb8 <_svfiprintf_r+0x1ec>)
 8007bb4:	6822      	ldr	r2, [r4, #0]
 8007bb6:	1ac0      	subs	r0, r0, r3
 8007bb8:	2301      	movs	r3, #1
 8007bba:	4083      	lsls	r3, r0
 8007bbc:	4313      	orrs	r3, r2
 8007bbe:	002e      	movs	r6, r5
 8007bc0:	6023      	str	r3, [r4, #0]
 8007bc2:	e7ce      	b.n	8007b62 <_svfiprintf_r+0x96>
 8007bc4:	9b07      	ldr	r3, [sp, #28]
 8007bc6:	1d19      	adds	r1, r3, #4
 8007bc8:	681b      	ldr	r3, [r3, #0]
 8007bca:	9107      	str	r1, [sp, #28]
 8007bcc:	2b00      	cmp	r3, #0
 8007bce:	db01      	blt.n	8007bd4 <_svfiprintf_r+0x108>
 8007bd0:	930b      	str	r3, [sp, #44]	; 0x2c
 8007bd2:	e004      	b.n	8007bde <_svfiprintf_r+0x112>
 8007bd4:	425b      	negs	r3, r3
 8007bd6:	60e3      	str	r3, [r4, #12]
 8007bd8:	2302      	movs	r3, #2
 8007bda:	4313      	orrs	r3, r2
 8007bdc:	6023      	str	r3, [r4, #0]
 8007bde:	782b      	ldrb	r3, [r5, #0]
 8007be0:	2b2e      	cmp	r3, #46	; 0x2e
 8007be2:	d10a      	bne.n	8007bfa <_svfiprintf_r+0x12e>
 8007be4:	786b      	ldrb	r3, [r5, #1]
 8007be6:	2b2a      	cmp	r3, #42	; 0x2a
 8007be8:	d135      	bne.n	8007c56 <_svfiprintf_r+0x18a>
 8007bea:	9b07      	ldr	r3, [sp, #28]
 8007bec:	3502      	adds	r5, #2
 8007bee:	1d1a      	adds	r2, r3, #4
 8007bf0:	681b      	ldr	r3, [r3, #0]
 8007bf2:	9207      	str	r2, [sp, #28]
 8007bf4:	2b00      	cmp	r3, #0
 8007bf6:	db2b      	blt.n	8007c50 <_svfiprintf_r+0x184>
 8007bf8:	9309      	str	r3, [sp, #36]	; 0x24
 8007bfa:	4e30      	ldr	r6, [pc, #192]	; (8007cbc <_svfiprintf_r+0x1f0>)
 8007bfc:	2203      	movs	r2, #3
 8007bfe:	0030      	movs	r0, r6
 8007c00:	7829      	ldrb	r1, [r5, #0]
 8007c02:	f7ff fa43 	bl	800708c <memchr>
 8007c06:	2800      	cmp	r0, #0
 8007c08:	d006      	beq.n	8007c18 <_svfiprintf_r+0x14c>
 8007c0a:	2340      	movs	r3, #64	; 0x40
 8007c0c:	1b80      	subs	r0, r0, r6
 8007c0e:	4083      	lsls	r3, r0
 8007c10:	6822      	ldr	r2, [r4, #0]
 8007c12:	3501      	adds	r5, #1
 8007c14:	4313      	orrs	r3, r2
 8007c16:	6023      	str	r3, [r4, #0]
 8007c18:	7829      	ldrb	r1, [r5, #0]
 8007c1a:	2206      	movs	r2, #6
 8007c1c:	4828      	ldr	r0, [pc, #160]	; (8007cc0 <_svfiprintf_r+0x1f4>)
 8007c1e:	1c6e      	adds	r6, r5, #1
 8007c20:	7621      	strb	r1, [r4, #24]
 8007c22:	f7ff fa33 	bl	800708c <memchr>
 8007c26:	2800      	cmp	r0, #0
 8007c28:	d03c      	beq.n	8007ca4 <_svfiprintf_r+0x1d8>
 8007c2a:	4b26      	ldr	r3, [pc, #152]	; (8007cc4 <_svfiprintf_r+0x1f8>)
 8007c2c:	2b00      	cmp	r3, #0
 8007c2e:	d125      	bne.n	8007c7c <_svfiprintf_r+0x1b0>
 8007c30:	2207      	movs	r2, #7
 8007c32:	9b07      	ldr	r3, [sp, #28]
 8007c34:	3307      	adds	r3, #7
 8007c36:	4393      	bics	r3, r2
 8007c38:	3308      	adds	r3, #8
 8007c3a:	9307      	str	r3, [sp, #28]
 8007c3c:	6963      	ldr	r3, [r4, #20]
 8007c3e:	9a04      	ldr	r2, [sp, #16]
 8007c40:	189b      	adds	r3, r3, r2
 8007c42:	6163      	str	r3, [r4, #20]
 8007c44:	e765      	b.n	8007b12 <_svfiprintf_r+0x46>
 8007c46:	4343      	muls	r3, r0
 8007c48:	0035      	movs	r5, r6
 8007c4a:	2101      	movs	r1, #1
 8007c4c:	189b      	adds	r3, r3, r2
 8007c4e:	e7a6      	b.n	8007b9e <_svfiprintf_r+0xd2>
 8007c50:	2301      	movs	r3, #1
 8007c52:	425b      	negs	r3, r3
 8007c54:	e7d0      	b.n	8007bf8 <_svfiprintf_r+0x12c>
 8007c56:	2300      	movs	r3, #0
 8007c58:	200a      	movs	r0, #10
 8007c5a:	001a      	movs	r2, r3
 8007c5c:	3501      	adds	r5, #1
 8007c5e:	6063      	str	r3, [r4, #4]
 8007c60:	7829      	ldrb	r1, [r5, #0]
 8007c62:	1c6e      	adds	r6, r5, #1
 8007c64:	3930      	subs	r1, #48	; 0x30
 8007c66:	2909      	cmp	r1, #9
 8007c68:	d903      	bls.n	8007c72 <_svfiprintf_r+0x1a6>
 8007c6a:	2b00      	cmp	r3, #0
 8007c6c:	d0c5      	beq.n	8007bfa <_svfiprintf_r+0x12e>
 8007c6e:	9209      	str	r2, [sp, #36]	; 0x24
 8007c70:	e7c3      	b.n	8007bfa <_svfiprintf_r+0x12e>
 8007c72:	4342      	muls	r2, r0
 8007c74:	0035      	movs	r5, r6
 8007c76:	2301      	movs	r3, #1
 8007c78:	1852      	adds	r2, r2, r1
 8007c7a:	e7f1      	b.n	8007c60 <_svfiprintf_r+0x194>
 8007c7c:	ab07      	add	r3, sp, #28
 8007c7e:	9300      	str	r3, [sp, #0]
 8007c80:	003a      	movs	r2, r7
 8007c82:	0021      	movs	r1, r4
 8007c84:	4b10      	ldr	r3, [pc, #64]	; (8007cc8 <_svfiprintf_r+0x1fc>)
 8007c86:	9803      	ldr	r0, [sp, #12]
 8007c88:	f7fd ff68 	bl	8005b5c <_printf_float>
 8007c8c:	9004      	str	r0, [sp, #16]
 8007c8e:	9b04      	ldr	r3, [sp, #16]
 8007c90:	3301      	adds	r3, #1
 8007c92:	d1d3      	bne.n	8007c3c <_svfiprintf_r+0x170>
 8007c94:	89bb      	ldrh	r3, [r7, #12]
 8007c96:	980d      	ldr	r0, [sp, #52]	; 0x34
 8007c98:	065b      	lsls	r3, r3, #25
 8007c9a:	d400      	bmi.n	8007c9e <_svfiprintf_r+0x1d2>
 8007c9c:	e72d      	b.n	8007afa <_svfiprintf_r+0x2e>
 8007c9e:	2001      	movs	r0, #1
 8007ca0:	4240      	negs	r0, r0
 8007ca2:	e72a      	b.n	8007afa <_svfiprintf_r+0x2e>
 8007ca4:	ab07      	add	r3, sp, #28
 8007ca6:	9300      	str	r3, [sp, #0]
 8007ca8:	003a      	movs	r2, r7
 8007caa:	0021      	movs	r1, r4
 8007cac:	4b06      	ldr	r3, [pc, #24]	; (8007cc8 <_svfiprintf_r+0x1fc>)
 8007cae:	9803      	ldr	r0, [sp, #12]
 8007cb0:	f7fe fa06 	bl	80060c0 <_printf_i>
 8007cb4:	e7ea      	b.n	8007c8c <_svfiprintf_r+0x1c0>
 8007cb6:	46c0      	nop			; (mov r8, r8)
 8007cb8:	08008ccc 	.word	0x08008ccc
 8007cbc:	08008cd2 	.word	0x08008cd2
 8007cc0:	08008cd6 	.word	0x08008cd6
 8007cc4:	08005b5d 	.word	0x08005b5d
 8007cc8:	08007a09 	.word	0x08007a09

08007ccc <_sbrk_r>:
 8007ccc:	2300      	movs	r3, #0
 8007cce:	b570      	push	{r4, r5, r6, lr}
 8007cd0:	4d06      	ldr	r5, [pc, #24]	; (8007cec <_sbrk_r+0x20>)
 8007cd2:	0004      	movs	r4, r0
 8007cd4:	0008      	movs	r0, r1
 8007cd6:	602b      	str	r3, [r5, #0]
 8007cd8:	f7fc faee 	bl	80042b8 <_sbrk>
 8007cdc:	1c43      	adds	r3, r0, #1
 8007cde:	d103      	bne.n	8007ce8 <_sbrk_r+0x1c>
 8007ce0:	682b      	ldr	r3, [r5, #0]
 8007ce2:	2b00      	cmp	r3, #0
 8007ce4:	d000      	beq.n	8007ce8 <_sbrk_r+0x1c>
 8007ce6:	6023      	str	r3, [r4, #0]
 8007ce8:	bd70      	pop	{r4, r5, r6, pc}
 8007cea:	46c0      	nop			; (mov r8, r8)
 8007cec:	20000290 	.word	0x20000290

08007cf0 <__assert_func>:
 8007cf0:	b530      	push	{r4, r5, lr}
 8007cf2:	0014      	movs	r4, r2
 8007cf4:	001a      	movs	r2, r3
 8007cf6:	4b09      	ldr	r3, [pc, #36]	; (8007d1c <__assert_func+0x2c>)
 8007cf8:	0005      	movs	r5, r0
 8007cfa:	681b      	ldr	r3, [r3, #0]
 8007cfc:	b085      	sub	sp, #20
 8007cfe:	68d8      	ldr	r0, [r3, #12]
 8007d00:	4b07      	ldr	r3, [pc, #28]	; (8007d20 <__assert_func+0x30>)
 8007d02:	2c00      	cmp	r4, #0
 8007d04:	d101      	bne.n	8007d0a <__assert_func+0x1a>
 8007d06:	4b07      	ldr	r3, [pc, #28]	; (8007d24 <__assert_func+0x34>)
 8007d08:	001c      	movs	r4, r3
 8007d0a:	9301      	str	r3, [sp, #4]
 8007d0c:	9100      	str	r1, [sp, #0]
 8007d0e:	002b      	movs	r3, r5
 8007d10:	4905      	ldr	r1, [pc, #20]	; (8007d28 <__assert_func+0x38>)
 8007d12:	9402      	str	r4, [sp, #8]
 8007d14:	f000 f80a 	bl	8007d2c <fiprintf>
 8007d18:	f000 faba 	bl	8008290 <abort>
 8007d1c:	2000000c 	.word	0x2000000c
 8007d20:	08008cdd 	.word	0x08008cdd
 8007d24:	08008d18 	.word	0x08008d18
 8007d28:	08008cea 	.word	0x08008cea

08007d2c <fiprintf>:
 8007d2c:	b40e      	push	{r1, r2, r3}
 8007d2e:	b503      	push	{r0, r1, lr}
 8007d30:	0001      	movs	r1, r0
 8007d32:	ab03      	add	r3, sp, #12
 8007d34:	4804      	ldr	r0, [pc, #16]	; (8007d48 <fiprintf+0x1c>)
 8007d36:	cb04      	ldmia	r3!, {r2}
 8007d38:	6800      	ldr	r0, [r0, #0]
 8007d3a:	9301      	str	r3, [sp, #4]
 8007d3c:	f000 f892 	bl	8007e64 <_vfiprintf_r>
 8007d40:	b002      	add	sp, #8
 8007d42:	bc08      	pop	{r3}
 8007d44:	b003      	add	sp, #12
 8007d46:	4718      	bx	r3
 8007d48:	2000000c 	.word	0x2000000c

08007d4c <__ascii_mbtowc>:
 8007d4c:	b082      	sub	sp, #8
 8007d4e:	2900      	cmp	r1, #0
 8007d50:	d100      	bne.n	8007d54 <__ascii_mbtowc+0x8>
 8007d52:	a901      	add	r1, sp, #4
 8007d54:	1e10      	subs	r0, r2, #0
 8007d56:	d006      	beq.n	8007d66 <__ascii_mbtowc+0x1a>
 8007d58:	2b00      	cmp	r3, #0
 8007d5a:	d006      	beq.n	8007d6a <__ascii_mbtowc+0x1e>
 8007d5c:	7813      	ldrb	r3, [r2, #0]
 8007d5e:	600b      	str	r3, [r1, #0]
 8007d60:	7810      	ldrb	r0, [r2, #0]
 8007d62:	1e43      	subs	r3, r0, #1
 8007d64:	4198      	sbcs	r0, r3
 8007d66:	b002      	add	sp, #8
 8007d68:	4770      	bx	lr
 8007d6a:	2002      	movs	r0, #2
 8007d6c:	4240      	negs	r0, r0
 8007d6e:	e7fa      	b.n	8007d66 <__ascii_mbtowc+0x1a>

08007d70 <memmove>:
 8007d70:	b510      	push	{r4, lr}
 8007d72:	4288      	cmp	r0, r1
 8007d74:	d902      	bls.n	8007d7c <memmove+0xc>
 8007d76:	188b      	adds	r3, r1, r2
 8007d78:	4298      	cmp	r0, r3
 8007d7a:	d303      	bcc.n	8007d84 <memmove+0x14>
 8007d7c:	2300      	movs	r3, #0
 8007d7e:	e007      	b.n	8007d90 <memmove+0x20>
 8007d80:	5c8b      	ldrb	r3, [r1, r2]
 8007d82:	5483      	strb	r3, [r0, r2]
 8007d84:	3a01      	subs	r2, #1
 8007d86:	d2fb      	bcs.n	8007d80 <memmove+0x10>
 8007d88:	bd10      	pop	{r4, pc}
 8007d8a:	5ccc      	ldrb	r4, [r1, r3]
 8007d8c:	54c4      	strb	r4, [r0, r3]
 8007d8e:	3301      	adds	r3, #1
 8007d90:	429a      	cmp	r2, r3
 8007d92:	d1fa      	bne.n	8007d8a <memmove+0x1a>
 8007d94:	e7f8      	b.n	8007d88 <memmove+0x18>
	...

08007d98 <__malloc_lock>:
 8007d98:	b510      	push	{r4, lr}
 8007d9a:	4802      	ldr	r0, [pc, #8]	; (8007da4 <__malloc_lock+0xc>)
 8007d9c:	f000 fc4f 	bl	800863e <__retarget_lock_acquire_recursive>
 8007da0:	bd10      	pop	{r4, pc}
 8007da2:	46c0      	nop			; (mov r8, r8)
 8007da4:	20000294 	.word	0x20000294

08007da8 <__malloc_unlock>:
 8007da8:	b510      	push	{r4, lr}
 8007daa:	4802      	ldr	r0, [pc, #8]	; (8007db4 <__malloc_unlock+0xc>)
 8007dac:	f000 fc48 	bl	8008640 <__retarget_lock_release_recursive>
 8007db0:	bd10      	pop	{r4, pc}
 8007db2:	46c0      	nop			; (mov r8, r8)
 8007db4:	20000294 	.word	0x20000294

08007db8 <_realloc_r>:
 8007db8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007dba:	0007      	movs	r7, r0
 8007dbc:	000e      	movs	r6, r1
 8007dbe:	0014      	movs	r4, r2
 8007dc0:	2900      	cmp	r1, #0
 8007dc2:	d105      	bne.n	8007dd0 <_realloc_r+0x18>
 8007dc4:	0011      	movs	r1, r2
 8007dc6:	f7ff fda9 	bl	800791c <_malloc_r>
 8007dca:	0005      	movs	r5, r0
 8007dcc:	0028      	movs	r0, r5
 8007dce:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007dd0:	2a00      	cmp	r2, #0
 8007dd2:	d103      	bne.n	8007ddc <_realloc_r+0x24>
 8007dd4:	f7ff fd36 	bl	8007844 <_free_r>
 8007dd8:	0025      	movs	r5, r4
 8007dda:	e7f7      	b.n	8007dcc <_realloc_r+0x14>
 8007ddc:	f000 fc9e 	bl	800871c <_malloc_usable_size_r>
 8007de0:	9001      	str	r0, [sp, #4]
 8007de2:	4284      	cmp	r4, r0
 8007de4:	d803      	bhi.n	8007dee <_realloc_r+0x36>
 8007de6:	0035      	movs	r5, r6
 8007de8:	0843      	lsrs	r3, r0, #1
 8007dea:	42a3      	cmp	r3, r4
 8007dec:	d3ee      	bcc.n	8007dcc <_realloc_r+0x14>
 8007dee:	0021      	movs	r1, r4
 8007df0:	0038      	movs	r0, r7
 8007df2:	f7ff fd93 	bl	800791c <_malloc_r>
 8007df6:	1e05      	subs	r5, r0, #0
 8007df8:	d0e8      	beq.n	8007dcc <_realloc_r+0x14>
 8007dfa:	9b01      	ldr	r3, [sp, #4]
 8007dfc:	0022      	movs	r2, r4
 8007dfe:	429c      	cmp	r4, r3
 8007e00:	d900      	bls.n	8007e04 <_realloc_r+0x4c>
 8007e02:	001a      	movs	r2, r3
 8007e04:	0031      	movs	r1, r6
 8007e06:	0028      	movs	r0, r5
 8007e08:	f7ff f94b 	bl	80070a2 <memcpy>
 8007e0c:	0031      	movs	r1, r6
 8007e0e:	0038      	movs	r0, r7
 8007e10:	f7ff fd18 	bl	8007844 <_free_r>
 8007e14:	e7da      	b.n	8007dcc <_realloc_r+0x14>

08007e16 <__sfputc_r>:
 8007e16:	6893      	ldr	r3, [r2, #8]
 8007e18:	b510      	push	{r4, lr}
 8007e1a:	3b01      	subs	r3, #1
 8007e1c:	6093      	str	r3, [r2, #8]
 8007e1e:	2b00      	cmp	r3, #0
 8007e20:	da04      	bge.n	8007e2c <__sfputc_r+0x16>
 8007e22:	6994      	ldr	r4, [r2, #24]
 8007e24:	42a3      	cmp	r3, r4
 8007e26:	db07      	blt.n	8007e38 <__sfputc_r+0x22>
 8007e28:	290a      	cmp	r1, #10
 8007e2a:	d005      	beq.n	8007e38 <__sfputc_r+0x22>
 8007e2c:	6813      	ldr	r3, [r2, #0]
 8007e2e:	1c58      	adds	r0, r3, #1
 8007e30:	6010      	str	r0, [r2, #0]
 8007e32:	7019      	strb	r1, [r3, #0]
 8007e34:	0008      	movs	r0, r1
 8007e36:	bd10      	pop	{r4, pc}
 8007e38:	f000 f94e 	bl	80080d8 <__swbuf_r>
 8007e3c:	0001      	movs	r1, r0
 8007e3e:	e7f9      	b.n	8007e34 <__sfputc_r+0x1e>

08007e40 <__sfputs_r>:
 8007e40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007e42:	0006      	movs	r6, r0
 8007e44:	000f      	movs	r7, r1
 8007e46:	0014      	movs	r4, r2
 8007e48:	18d5      	adds	r5, r2, r3
 8007e4a:	42ac      	cmp	r4, r5
 8007e4c:	d101      	bne.n	8007e52 <__sfputs_r+0x12>
 8007e4e:	2000      	movs	r0, #0
 8007e50:	e007      	b.n	8007e62 <__sfputs_r+0x22>
 8007e52:	7821      	ldrb	r1, [r4, #0]
 8007e54:	003a      	movs	r2, r7
 8007e56:	0030      	movs	r0, r6
 8007e58:	f7ff ffdd 	bl	8007e16 <__sfputc_r>
 8007e5c:	3401      	adds	r4, #1
 8007e5e:	1c43      	adds	r3, r0, #1
 8007e60:	d1f3      	bne.n	8007e4a <__sfputs_r+0xa>
 8007e62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007e64 <_vfiprintf_r>:
 8007e64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007e66:	b0a1      	sub	sp, #132	; 0x84
 8007e68:	0006      	movs	r6, r0
 8007e6a:	000c      	movs	r4, r1
 8007e6c:	001f      	movs	r7, r3
 8007e6e:	9203      	str	r2, [sp, #12]
 8007e70:	2800      	cmp	r0, #0
 8007e72:	d004      	beq.n	8007e7e <_vfiprintf_r+0x1a>
 8007e74:	6983      	ldr	r3, [r0, #24]
 8007e76:	2b00      	cmp	r3, #0
 8007e78:	d101      	bne.n	8007e7e <_vfiprintf_r+0x1a>
 8007e7a:	f000 fb3f 	bl	80084fc <__sinit>
 8007e7e:	4b8e      	ldr	r3, [pc, #568]	; (80080b8 <_vfiprintf_r+0x254>)
 8007e80:	429c      	cmp	r4, r3
 8007e82:	d11c      	bne.n	8007ebe <_vfiprintf_r+0x5a>
 8007e84:	6874      	ldr	r4, [r6, #4]
 8007e86:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007e88:	07db      	lsls	r3, r3, #31
 8007e8a:	d405      	bmi.n	8007e98 <_vfiprintf_r+0x34>
 8007e8c:	89a3      	ldrh	r3, [r4, #12]
 8007e8e:	059b      	lsls	r3, r3, #22
 8007e90:	d402      	bmi.n	8007e98 <_vfiprintf_r+0x34>
 8007e92:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007e94:	f000 fbd3 	bl	800863e <__retarget_lock_acquire_recursive>
 8007e98:	89a3      	ldrh	r3, [r4, #12]
 8007e9a:	071b      	lsls	r3, r3, #28
 8007e9c:	d502      	bpl.n	8007ea4 <_vfiprintf_r+0x40>
 8007e9e:	6923      	ldr	r3, [r4, #16]
 8007ea0:	2b00      	cmp	r3, #0
 8007ea2:	d11d      	bne.n	8007ee0 <_vfiprintf_r+0x7c>
 8007ea4:	0021      	movs	r1, r4
 8007ea6:	0030      	movs	r0, r6
 8007ea8:	f000 f97a 	bl	80081a0 <__swsetup_r>
 8007eac:	2800      	cmp	r0, #0
 8007eae:	d017      	beq.n	8007ee0 <_vfiprintf_r+0x7c>
 8007eb0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8007eb2:	07db      	lsls	r3, r3, #31
 8007eb4:	d50d      	bpl.n	8007ed2 <_vfiprintf_r+0x6e>
 8007eb6:	2001      	movs	r0, #1
 8007eb8:	4240      	negs	r0, r0
 8007eba:	b021      	add	sp, #132	; 0x84
 8007ebc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007ebe:	4b7f      	ldr	r3, [pc, #508]	; (80080bc <_vfiprintf_r+0x258>)
 8007ec0:	429c      	cmp	r4, r3
 8007ec2:	d101      	bne.n	8007ec8 <_vfiprintf_r+0x64>
 8007ec4:	68b4      	ldr	r4, [r6, #8]
 8007ec6:	e7de      	b.n	8007e86 <_vfiprintf_r+0x22>
 8007ec8:	4b7d      	ldr	r3, [pc, #500]	; (80080c0 <_vfiprintf_r+0x25c>)
 8007eca:	429c      	cmp	r4, r3
 8007ecc:	d1db      	bne.n	8007e86 <_vfiprintf_r+0x22>
 8007ece:	68f4      	ldr	r4, [r6, #12]
 8007ed0:	e7d9      	b.n	8007e86 <_vfiprintf_r+0x22>
 8007ed2:	89a3      	ldrh	r3, [r4, #12]
 8007ed4:	059b      	lsls	r3, r3, #22
 8007ed6:	d4ee      	bmi.n	8007eb6 <_vfiprintf_r+0x52>
 8007ed8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8007eda:	f000 fbb1 	bl	8008640 <__retarget_lock_release_recursive>
 8007ede:	e7ea      	b.n	8007eb6 <_vfiprintf_r+0x52>
 8007ee0:	2300      	movs	r3, #0
 8007ee2:	ad08      	add	r5, sp, #32
 8007ee4:	616b      	str	r3, [r5, #20]
 8007ee6:	3320      	adds	r3, #32
 8007ee8:	766b      	strb	r3, [r5, #25]
 8007eea:	3310      	adds	r3, #16
 8007eec:	76ab      	strb	r3, [r5, #26]
 8007eee:	9707      	str	r7, [sp, #28]
 8007ef0:	9f03      	ldr	r7, [sp, #12]
 8007ef2:	783b      	ldrb	r3, [r7, #0]
 8007ef4:	2b00      	cmp	r3, #0
 8007ef6:	d001      	beq.n	8007efc <_vfiprintf_r+0x98>
 8007ef8:	2b25      	cmp	r3, #37	; 0x25
 8007efa:	d14e      	bne.n	8007f9a <_vfiprintf_r+0x136>
 8007efc:	9b03      	ldr	r3, [sp, #12]
 8007efe:	1afb      	subs	r3, r7, r3
 8007f00:	9305      	str	r3, [sp, #20]
 8007f02:	9b03      	ldr	r3, [sp, #12]
 8007f04:	429f      	cmp	r7, r3
 8007f06:	d00d      	beq.n	8007f24 <_vfiprintf_r+0xc0>
 8007f08:	9b05      	ldr	r3, [sp, #20]
 8007f0a:	0021      	movs	r1, r4
 8007f0c:	0030      	movs	r0, r6
 8007f0e:	9a03      	ldr	r2, [sp, #12]
 8007f10:	f7ff ff96 	bl	8007e40 <__sfputs_r>
 8007f14:	1c43      	adds	r3, r0, #1
 8007f16:	d100      	bne.n	8007f1a <_vfiprintf_r+0xb6>
 8007f18:	e0b5      	b.n	8008086 <_vfiprintf_r+0x222>
 8007f1a:	696a      	ldr	r2, [r5, #20]
 8007f1c:	9b05      	ldr	r3, [sp, #20]
 8007f1e:	4694      	mov	ip, r2
 8007f20:	4463      	add	r3, ip
 8007f22:	616b      	str	r3, [r5, #20]
 8007f24:	783b      	ldrb	r3, [r7, #0]
 8007f26:	2b00      	cmp	r3, #0
 8007f28:	d100      	bne.n	8007f2c <_vfiprintf_r+0xc8>
 8007f2a:	e0ac      	b.n	8008086 <_vfiprintf_r+0x222>
 8007f2c:	2201      	movs	r2, #1
 8007f2e:	1c7b      	adds	r3, r7, #1
 8007f30:	9303      	str	r3, [sp, #12]
 8007f32:	2300      	movs	r3, #0
 8007f34:	4252      	negs	r2, r2
 8007f36:	606a      	str	r2, [r5, #4]
 8007f38:	a904      	add	r1, sp, #16
 8007f3a:	3254      	adds	r2, #84	; 0x54
 8007f3c:	1852      	adds	r2, r2, r1
 8007f3e:	602b      	str	r3, [r5, #0]
 8007f40:	60eb      	str	r3, [r5, #12]
 8007f42:	60ab      	str	r3, [r5, #8]
 8007f44:	7013      	strb	r3, [r2, #0]
 8007f46:	65ab      	str	r3, [r5, #88]	; 0x58
 8007f48:	9b03      	ldr	r3, [sp, #12]
 8007f4a:	2205      	movs	r2, #5
 8007f4c:	7819      	ldrb	r1, [r3, #0]
 8007f4e:	485d      	ldr	r0, [pc, #372]	; (80080c4 <_vfiprintf_r+0x260>)
 8007f50:	f7ff f89c 	bl	800708c <memchr>
 8007f54:	9b03      	ldr	r3, [sp, #12]
 8007f56:	1c5f      	adds	r7, r3, #1
 8007f58:	2800      	cmp	r0, #0
 8007f5a:	d120      	bne.n	8007f9e <_vfiprintf_r+0x13a>
 8007f5c:	682a      	ldr	r2, [r5, #0]
 8007f5e:	06d3      	lsls	r3, r2, #27
 8007f60:	d504      	bpl.n	8007f6c <_vfiprintf_r+0x108>
 8007f62:	2353      	movs	r3, #83	; 0x53
 8007f64:	a904      	add	r1, sp, #16
 8007f66:	185b      	adds	r3, r3, r1
 8007f68:	2120      	movs	r1, #32
 8007f6a:	7019      	strb	r1, [r3, #0]
 8007f6c:	0713      	lsls	r3, r2, #28
 8007f6e:	d504      	bpl.n	8007f7a <_vfiprintf_r+0x116>
 8007f70:	2353      	movs	r3, #83	; 0x53
 8007f72:	a904      	add	r1, sp, #16
 8007f74:	185b      	adds	r3, r3, r1
 8007f76:	212b      	movs	r1, #43	; 0x2b
 8007f78:	7019      	strb	r1, [r3, #0]
 8007f7a:	9b03      	ldr	r3, [sp, #12]
 8007f7c:	781b      	ldrb	r3, [r3, #0]
 8007f7e:	2b2a      	cmp	r3, #42	; 0x2a
 8007f80:	d016      	beq.n	8007fb0 <_vfiprintf_r+0x14c>
 8007f82:	2100      	movs	r1, #0
 8007f84:	68eb      	ldr	r3, [r5, #12]
 8007f86:	9f03      	ldr	r7, [sp, #12]
 8007f88:	783a      	ldrb	r2, [r7, #0]
 8007f8a:	1c78      	adds	r0, r7, #1
 8007f8c:	3a30      	subs	r2, #48	; 0x30
 8007f8e:	4684      	mov	ip, r0
 8007f90:	2a09      	cmp	r2, #9
 8007f92:	d94f      	bls.n	8008034 <_vfiprintf_r+0x1d0>
 8007f94:	2900      	cmp	r1, #0
 8007f96:	d111      	bne.n	8007fbc <_vfiprintf_r+0x158>
 8007f98:	e017      	b.n	8007fca <_vfiprintf_r+0x166>
 8007f9a:	3701      	adds	r7, #1
 8007f9c:	e7a9      	b.n	8007ef2 <_vfiprintf_r+0x8e>
 8007f9e:	4b49      	ldr	r3, [pc, #292]	; (80080c4 <_vfiprintf_r+0x260>)
 8007fa0:	682a      	ldr	r2, [r5, #0]
 8007fa2:	1ac0      	subs	r0, r0, r3
 8007fa4:	2301      	movs	r3, #1
 8007fa6:	4083      	lsls	r3, r0
 8007fa8:	4313      	orrs	r3, r2
 8007faa:	602b      	str	r3, [r5, #0]
 8007fac:	9703      	str	r7, [sp, #12]
 8007fae:	e7cb      	b.n	8007f48 <_vfiprintf_r+0xe4>
 8007fb0:	9b07      	ldr	r3, [sp, #28]
 8007fb2:	1d19      	adds	r1, r3, #4
 8007fb4:	681b      	ldr	r3, [r3, #0]
 8007fb6:	9107      	str	r1, [sp, #28]
 8007fb8:	2b00      	cmp	r3, #0
 8007fba:	db01      	blt.n	8007fc0 <_vfiprintf_r+0x15c>
 8007fbc:	930b      	str	r3, [sp, #44]	; 0x2c
 8007fbe:	e004      	b.n	8007fca <_vfiprintf_r+0x166>
 8007fc0:	425b      	negs	r3, r3
 8007fc2:	60eb      	str	r3, [r5, #12]
 8007fc4:	2302      	movs	r3, #2
 8007fc6:	4313      	orrs	r3, r2
 8007fc8:	602b      	str	r3, [r5, #0]
 8007fca:	783b      	ldrb	r3, [r7, #0]
 8007fcc:	2b2e      	cmp	r3, #46	; 0x2e
 8007fce:	d10a      	bne.n	8007fe6 <_vfiprintf_r+0x182>
 8007fd0:	787b      	ldrb	r3, [r7, #1]
 8007fd2:	2b2a      	cmp	r3, #42	; 0x2a
 8007fd4:	d137      	bne.n	8008046 <_vfiprintf_r+0x1e2>
 8007fd6:	9b07      	ldr	r3, [sp, #28]
 8007fd8:	3702      	adds	r7, #2
 8007fda:	1d1a      	adds	r2, r3, #4
 8007fdc:	681b      	ldr	r3, [r3, #0]
 8007fde:	9207      	str	r2, [sp, #28]
 8007fe0:	2b00      	cmp	r3, #0
 8007fe2:	db2d      	blt.n	8008040 <_vfiprintf_r+0x1dc>
 8007fe4:	9309      	str	r3, [sp, #36]	; 0x24
 8007fe6:	2203      	movs	r2, #3
 8007fe8:	7839      	ldrb	r1, [r7, #0]
 8007fea:	4837      	ldr	r0, [pc, #220]	; (80080c8 <_vfiprintf_r+0x264>)
 8007fec:	f7ff f84e 	bl	800708c <memchr>
 8007ff0:	2800      	cmp	r0, #0
 8007ff2:	d007      	beq.n	8008004 <_vfiprintf_r+0x1a0>
 8007ff4:	4b34      	ldr	r3, [pc, #208]	; (80080c8 <_vfiprintf_r+0x264>)
 8007ff6:	682a      	ldr	r2, [r5, #0]
 8007ff8:	1ac0      	subs	r0, r0, r3
 8007ffa:	2340      	movs	r3, #64	; 0x40
 8007ffc:	4083      	lsls	r3, r0
 8007ffe:	4313      	orrs	r3, r2
 8008000:	3701      	adds	r7, #1
 8008002:	602b      	str	r3, [r5, #0]
 8008004:	7839      	ldrb	r1, [r7, #0]
 8008006:	1c7b      	adds	r3, r7, #1
 8008008:	2206      	movs	r2, #6
 800800a:	4830      	ldr	r0, [pc, #192]	; (80080cc <_vfiprintf_r+0x268>)
 800800c:	9303      	str	r3, [sp, #12]
 800800e:	7629      	strb	r1, [r5, #24]
 8008010:	f7ff f83c 	bl	800708c <memchr>
 8008014:	2800      	cmp	r0, #0
 8008016:	d045      	beq.n	80080a4 <_vfiprintf_r+0x240>
 8008018:	4b2d      	ldr	r3, [pc, #180]	; (80080d0 <_vfiprintf_r+0x26c>)
 800801a:	2b00      	cmp	r3, #0
 800801c:	d127      	bne.n	800806e <_vfiprintf_r+0x20a>
 800801e:	2207      	movs	r2, #7
 8008020:	9b07      	ldr	r3, [sp, #28]
 8008022:	3307      	adds	r3, #7
 8008024:	4393      	bics	r3, r2
 8008026:	3308      	adds	r3, #8
 8008028:	9307      	str	r3, [sp, #28]
 800802a:	696b      	ldr	r3, [r5, #20]
 800802c:	9a04      	ldr	r2, [sp, #16]
 800802e:	189b      	adds	r3, r3, r2
 8008030:	616b      	str	r3, [r5, #20]
 8008032:	e75d      	b.n	8007ef0 <_vfiprintf_r+0x8c>
 8008034:	210a      	movs	r1, #10
 8008036:	434b      	muls	r3, r1
 8008038:	4667      	mov	r7, ip
 800803a:	189b      	adds	r3, r3, r2
 800803c:	3909      	subs	r1, #9
 800803e:	e7a3      	b.n	8007f88 <_vfiprintf_r+0x124>
 8008040:	2301      	movs	r3, #1
 8008042:	425b      	negs	r3, r3
 8008044:	e7ce      	b.n	8007fe4 <_vfiprintf_r+0x180>
 8008046:	2300      	movs	r3, #0
 8008048:	001a      	movs	r2, r3
 800804a:	3701      	adds	r7, #1
 800804c:	606b      	str	r3, [r5, #4]
 800804e:	7839      	ldrb	r1, [r7, #0]
 8008050:	1c78      	adds	r0, r7, #1
 8008052:	3930      	subs	r1, #48	; 0x30
 8008054:	4684      	mov	ip, r0
 8008056:	2909      	cmp	r1, #9
 8008058:	d903      	bls.n	8008062 <_vfiprintf_r+0x1fe>
 800805a:	2b00      	cmp	r3, #0
 800805c:	d0c3      	beq.n	8007fe6 <_vfiprintf_r+0x182>
 800805e:	9209      	str	r2, [sp, #36]	; 0x24
 8008060:	e7c1      	b.n	8007fe6 <_vfiprintf_r+0x182>
 8008062:	230a      	movs	r3, #10
 8008064:	435a      	muls	r2, r3
 8008066:	4667      	mov	r7, ip
 8008068:	1852      	adds	r2, r2, r1
 800806a:	3b09      	subs	r3, #9
 800806c:	e7ef      	b.n	800804e <_vfiprintf_r+0x1ea>
 800806e:	ab07      	add	r3, sp, #28
 8008070:	9300      	str	r3, [sp, #0]
 8008072:	0022      	movs	r2, r4
 8008074:	0029      	movs	r1, r5
 8008076:	0030      	movs	r0, r6
 8008078:	4b16      	ldr	r3, [pc, #88]	; (80080d4 <_vfiprintf_r+0x270>)
 800807a:	f7fd fd6f 	bl	8005b5c <_printf_float>
 800807e:	9004      	str	r0, [sp, #16]
 8008080:	9b04      	ldr	r3, [sp, #16]
 8008082:	3301      	adds	r3, #1
 8008084:	d1d1      	bne.n	800802a <_vfiprintf_r+0x1c6>
 8008086:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008088:	07db      	lsls	r3, r3, #31
 800808a:	d405      	bmi.n	8008098 <_vfiprintf_r+0x234>
 800808c:	89a3      	ldrh	r3, [r4, #12]
 800808e:	059b      	lsls	r3, r3, #22
 8008090:	d402      	bmi.n	8008098 <_vfiprintf_r+0x234>
 8008092:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008094:	f000 fad4 	bl	8008640 <__retarget_lock_release_recursive>
 8008098:	89a3      	ldrh	r3, [r4, #12]
 800809a:	065b      	lsls	r3, r3, #25
 800809c:	d500      	bpl.n	80080a0 <_vfiprintf_r+0x23c>
 800809e:	e70a      	b.n	8007eb6 <_vfiprintf_r+0x52>
 80080a0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80080a2:	e70a      	b.n	8007eba <_vfiprintf_r+0x56>
 80080a4:	ab07      	add	r3, sp, #28
 80080a6:	9300      	str	r3, [sp, #0]
 80080a8:	0022      	movs	r2, r4
 80080aa:	0029      	movs	r1, r5
 80080ac:	0030      	movs	r0, r6
 80080ae:	4b09      	ldr	r3, [pc, #36]	; (80080d4 <_vfiprintf_r+0x270>)
 80080b0:	f7fe f806 	bl	80060c0 <_printf_i>
 80080b4:	e7e3      	b.n	800807e <_vfiprintf_r+0x21a>
 80080b6:	46c0      	nop			; (mov r8, r8)
 80080b8:	08008e44 	.word	0x08008e44
 80080bc:	08008e64 	.word	0x08008e64
 80080c0:	08008e24 	.word	0x08008e24
 80080c4:	08008ccc 	.word	0x08008ccc
 80080c8:	08008cd2 	.word	0x08008cd2
 80080cc:	08008cd6 	.word	0x08008cd6
 80080d0:	08005b5d 	.word	0x08005b5d
 80080d4:	08007e41 	.word	0x08007e41

080080d8 <__swbuf_r>:
 80080d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80080da:	0005      	movs	r5, r0
 80080dc:	000e      	movs	r6, r1
 80080de:	0014      	movs	r4, r2
 80080e0:	2800      	cmp	r0, #0
 80080e2:	d004      	beq.n	80080ee <__swbuf_r+0x16>
 80080e4:	6983      	ldr	r3, [r0, #24]
 80080e6:	2b00      	cmp	r3, #0
 80080e8:	d101      	bne.n	80080ee <__swbuf_r+0x16>
 80080ea:	f000 fa07 	bl	80084fc <__sinit>
 80080ee:	4b22      	ldr	r3, [pc, #136]	; (8008178 <__swbuf_r+0xa0>)
 80080f0:	429c      	cmp	r4, r3
 80080f2:	d12e      	bne.n	8008152 <__swbuf_r+0x7a>
 80080f4:	686c      	ldr	r4, [r5, #4]
 80080f6:	69a3      	ldr	r3, [r4, #24]
 80080f8:	60a3      	str	r3, [r4, #8]
 80080fa:	89a3      	ldrh	r3, [r4, #12]
 80080fc:	071b      	lsls	r3, r3, #28
 80080fe:	d532      	bpl.n	8008166 <__swbuf_r+0x8e>
 8008100:	6923      	ldr	r3, [r4, #16]
 8008102:	2b00      	cmp	r3, #0
 8008104:	d02f      	beq.n	8008166 <__swbuf_r+0x8e>
 8008106:	6823      	ldr	r3, [r4, #0]
 8008108:	6922      	ldr	r2, [r4, #16]
 800810a:	b2f7      	uxtb	r7, r6
 800810c:	1a98      	subs	r0, r3, r2
 800810e:	6963      	ldr	r3, [r4, #20]
 8008110:	b2f6      	uxtb	r6, r6
 8008112:	4283      	cmp	r3, r0
 8008114:	dc05      	bgt.n	8008122 <__swbuf_r+0x4a>
 8008116:	0021      	movs	r1, r4
 8008118:	0028      	movs	r0, r5
 800811a:	f000 f94d 	bl	80083b8 <_fflush_r>
 800811e:	2800      	cmp	r0, #0
 8008120:	d127      	bne.n	8008172 <__swbuf_r+0x9a>
 8008122:	68a3      	ldr	r3, [r4, #8]
 8008124:	3001      	adds	r0, #1
 8008126:	3b01      	subs	r3, #1
 8008128:	60a3      	str	r3, [r4, #8]
 800812a:	6823      	ldr	r3, [r4, #0]
 800812c:	1c5a      	adds	r2, r3, #1
 800812e:	6022      	str	r2, [r4, #0]
 8008130:	701f      	strb	r7, [r3, #0]
 8008132:	6963      	ldr	r3, [r4, #20]
 8008134:	4283      	cmp	r3, r0
 8008136:	d004      	beq.n	8008142 <__swbuf_r+0x6a>
 8008138:	89a3      	ldrh	r3, [r4, #12]
 800813a:	07db      	lsls	r3, r3, #31
 800813c:	d507      	bpl.n	800814e <__swbuf_r+0x76>
 800813e:	2e0a      	cmp	r6, #10
 8008140:	d105      	bne.n	800814e <__swbuf_r+0x76>
 8008142:	0021      	movs	r1, r4
 8008144:	0028      	movs	r0, r5
 8008146:	f000 f937 	bl	80083b8 <_fflush_r>
 800814a:	2800      	cmp	r0, #0
 800814c:	d111      	bne.n	8008172 <__swbuf_r+0x9a>
 800814e:	0030      	movs	r0, r6
 8008150:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008152:	4b0a      	ldr	r3, [pc, #40]	; (800817c <__swbuf_r+0xa4>)
 8008154:	429c      	cmp	r4, r3
 8008156:	d101      	bne.n	800815c <__swbuf_r+0x84>
 8008158:	68ac      	ldr	r4, [r5, #8]
 800815a:	e7cc      	b.n	80080f6 <__swbuf_r+0x1e>
 800815c:	4b08      	ldr	r3, [pc, #32]	; (8008180 <__swbuf_r+0xa8>)
 800815e:	429c      	cmp	r4, r3
 8008160:	d1c9      	bne.n	80080f6 <__swbuf_r+0x1e>
 8008162:	68ec      	ldr	r4, [r5, #12]
 8008164:	e7c7      	b.n	80080f6 <__swbuf_r+0x1e>
 8008166:	0021      	movs	r1, r4
 8008168:	0028      	movs	r0, r5
 800816a:	f000 f819 	bl	80081a0 <__swsetup_r>
 800816e:	2800      	cmp	r0, #0
 8008170:	d0c9      	beq.n	8008106 <__swbuf_r+0x2e>
 8008172:	2601      	movs	r6, #1
 8008174:	4276      	negs	r6, r6
 8008176:	e7ea      	b.n	800814e <__swbuf_r+0x76>
 8008178:	08008e44 	.word	0x08008e44
 800817c:	08008e64 	.word	0x08008e64
 8008180:	08008e24 	.word	0x08008e24

08008184 <__ascii_wctomb>:
 8008184:	0003      	movs	r3, r0
 8008186:	1e08      	subs	r0, r1, #0
 8008188:	d005      	beq.n	8008196 <__ascii_wctomb+0x12>
 800818a:	2aff      	cmp	r2, #255	; 0xff
 800818c:	d904      	bls.n	8008198 <__ascii_wctomb+0x14>
 800818e:	228a      	movs	r2, #138	; 0x8a
 8008190:	2001      	movs	r0, #1
 8008192:	601a      	str	r2, [r3, #0]
 8008194:	4240      	negs	r0, r0
 8008196:	4770      	bx	lr
 8008198:	2001      	movs	r0, #1
 800819a:	700a      	strb	r2, [r1, #0]
 800819c:	e7fb      	b.n	8008196 <__ascii_wctomb+0x12>
	...

080081a0 <__swsetup_r>:
 80081a0:	4b37      	ldr	r3, [pc, #220]	; (8008280 <__swsetup_r+0xe0>)
 80081a2:	b570      	push	{r4, r5, r6, lr}
 80081a4:	681d      	ldr	r5, [r3, #0]
 80081a6:	0006      	movs	r6, r0
 80081a8:	000c      	movs	r4, r1
 80081aa:	2d00      	cmp	r5, #0
 80081ac:	d005      	beq.n	80081ba <__swsetup_r+0x1a>
 80081ae:	69ab      	ldr	r3, [r5, #24]
 80081b0:	2b00      	cmp	r3, #0
 80081b2:	d102      	bne.n	80081ba <__swsetup_r+0x1a>
 80081b4:	0028      	movs	r0, r5
 80081b6:	f000 f9a1 	bl	80084fc <__sinit>
 80081ba:	4b32      	ldr	r3, [pc, #200]	; (8008284 <__swsetup_r+0xe4>)
 80081bc:	429c      	cmp	r4, r3
 80081be:	d10f      	bne.n	80081e0 <__swsetup_r+0x40>
 80081c0:	686c      	ldr	r4, [r5, #4]
 80081c2:	230c      	movs	r3, #12
 80081c4:	5ee2      	ldrsh	r2, [r4, r3]
 80081c6:	b293      	uxth	r3, r2
 80081c8:	0711      	lsls	r1, r2, #28
 80081ca:	d42d      	bmi.n	8008228 <__swsetup_r+0x88>
 80081cc:	06d9      	lsls	r1, r3, #27
 80081ce:	d411      	bmi.n	80081f4 <__swsetup_r+0x54>
 80081d0:	2309      	movs	r3, #9
 80081d2:	2001      	movs	r0, #1
 80081d4:	6033      	str	r3, [r6, #0]
 80081d6:	3337      	adds	r3, #55	; 0x37
 80081d8:	4313      	orrs	r3, r2
 80081da:	81a3      	strh	r3, [r4, #12]
 80081dc:	4240      	negs	r0, r0
 80081de:	bd70      	pop	{r4, r5, r6, pc}
 80081e0:	4b29      	ldr	r3, [pc, #164]	; (8008288 <__swsetup_r+0xe8>)
 80081e2:	429c      	cmp	r4, r3
 80081e4:	d101      	bne.n	80081ea <__swsetup_r+0x4a>
 80081e6:	68ac      	ldr	r4, [r5, #8]
 80081e8:	e7eb      	b.n	80081c2 <__swsetup_r+0x22>
 80081ea:	4b28      	ldr	r3, [pc, #160]	; (800828c <__swsetup_r+0xec>)
 80081ec:	429c      	cmp	r4, r3
 80081ee:	d1e8      	bne.n	80081c2 <__swsetup_r+0x22>
 80081f0:	68ec      	ldr	r4, [r5, #12]
 80081f2:	e7e6      	b.n	80081c2 <__swsetup_r+0x22>
 80081f4:	075b      	lsls	r3, r3, #29
 80081f6:	d513      	bpl.n	8008220 <__swsetup_r+0x80>
 80081f8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80081fa:	2900      	cmp	r1, #0
 80081fc:	d008      	beq.n	8008210 <__swsetup_r+0x70>
 80081fe:	0023      	movs	r3, r4
 8008200:	3344      	adds	r3, #68	; 0x44
 8008202:	4299      	cmp	r1, r3
 8008204:	d002      	beq.n	800820c <__swsetup_r+0x6c>
 8008206:	0030      	movs	r0, r6
 8008208:	f7ff fb1c 	bl	8007844 <_free_r>
 800820c:	2300      	movs	r3, #0
 800820e:	6363      	str	r3, [r4, #52]	; 0x34
 8008210:	2224      	movs	r2, #36	; 0x24
 8008212:	89a3      	ldrh	r3, [r4, #12]
 8008214:	4393      	bics	r3, r2
 8008216:	81a3      	strh	r3, [r4, #12]
 8008218:	2300      	movs	r3, #0
 800821a:	6063      	str	r3, [r4, #4]
 800821c:	6923      	ldr	r3, [r4, #16]
 800821e:	6023      	str	r3, [r4, #0]
 8008220:	2308      	movs	r3, #8
 8008222:	89a2      	ldrh	r2, [r4, #12]
 8008224:	4313      	orrs	r3, r2
 8008226:	81a3      	strh	r3, [r4, #12]
 8008228:	6923      	ldr	r3, [r4, #16]
 800822a:	2b00      	cmp	r3, #0
 800822c:	d10b      	bne.n	8008246 <__swsetup_r+0xa6>
 800822e:	21a0      	movs	r1, #160	; 0xa0
 8008230:	2280      	movs	r2, #128	; 0x80
 8008232:	89a3      	ldrh	r3, [r4, #12]
 8008234:	0089      	lsls	r1, r1, #2
 8008236:	0092      	lsls	r2, r2, #2
 8008238:	400b      	ands	r3, r1
 800823a:	4293      	cmp	r3, r2
 800823c:	d003      	beq.n	8008246 <__swsetup_r+0xa6>
 800823e:	0021      	movs	r1, r4
 8008240:	0030      	movs	r0, r6
 8008242:	f000 fa27 	bl	8008694 <__smakebuf_r>
 8008246:	220c      	movs	r2, #12
 8008248:	5ea3      	ldrsh	r3, [r4, r2]
 800824a:	2001      	movs	r0, #1
 800824c:	001a      	movs	r2, r3
 800824e:	b299      	uxth	r1, r3
 8008250:	4002      	ands	r2, r0
 8008252:	4203      	tst	r3, r0
 8008254:	d00f      	beq.n	8008276 <__swsetup_r+0xd6>
 8008256:	2200      	movs	r2, #0
 8008258:	60a2      	str	r2, [r4, #8]
 800825a:	6962      	ldr	r2, [r4, #20]
 800825c:	4252      	negs	r2, r2
 800825e:	61a2      	str	r2, [r4, #24]
 8008260:	2000      	movs	r0, #0
 8008262:	6922      	ldr	r2, [r4, #16]
 8008264:	4282      	cmp	r2, r0
 8008266:	d1ba      	bne.n	80081de <__swsetup_r+0x3e>
 8008268:	060a      	lsls	r2, r1, #24
 800826a:	d5b8      	bpl.n	80081de <__swsetup_r+0x3e>
 800826c:	2240      	movs	r2, #64	; 0x40
 800826e:	4313      	orrs	r3, r2
 8008270:	81a3      	strh	r3, [r4, #12]
 8008272:	3801      	subs	r0, #1
 8008274:	e7b3      	b.n	80081de <__swsetup_r+0x3e>
 8008276:	0788      	lsls	r0, r1, #30
 8008278:	d400      	bmi.n	800827c <__swsetup_r+0xdc>
 800827a:	6962      	ldr	r2, [r4, #20]
 800827c:	60a2      	str	r2, [r4, #8]
 800827e:	e7ef      	b.n	8008260 <__swsetup_r+0xc0>
 8008280:	2000000c 	.word	0x2000000c
 8008284:	08008e44 	.word	0x08008e44
 8008288:	08008e64 	.word	0x08008e64
 800828c:	08008e24 	.word	0x08008e24

08008290 <abort>:
 8008290:	2006      	movs	r0, #6
 8008292:	b510      	push	{r4, lr}
 8008294:	f000 fa74 	bl	8008780 <raise>
 8008298:	2001      	movs	r0, #1
 800829a:	f7fb ff9c 	bl	80041d6 <_exit>
	...

080082a0 <__sflush_r>:
 80082a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80082a2:	898b      	ldrh	r3, [r1, #12]
 80082a4:	0005      	movs	r5, r0
 80082a6:	000c      	movs	r4, r1
 80082a8:	071a      	lsls	r2, r3, #28
 80082aa:	d45f      	bmi.n	800836c <__sflush_r+0xcc>
 80082ac:	684a      	ldr	r2, [r1, #4]
 80082ae:	2a00      	cmp	r2, #0
 80082b0:	dc04      	bgt.n	80082bc <__sflush_r+0x1c>
 80082b2:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 80082b4:	2a00      	cmp	r2, #0
 80082b6:	dc01      	bgt.n	80082bc <__sflush_r+0x1c>
 80082b8:	2000      	movs	r0, #0
 80082ba:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80082bc:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80082be:	2f00      	cmp	r7, #0
 80082c0:	d0fa      	beq.n	80082b8 <__sflush_r+0x18>
 80082c2:	2200      	movs	r2, #0
 80082c4:	2180      	movs	r1, #128	; 0x80
 80082c6:	682e      	ldr	r6, [r5, #0]
 80082c8:	602a      	str	r2, [r5, #0]
 80082ca:	001a      	movs	r2, r3
 80082cc:	0149      	lsls	r1, r1, #5
 80082ce:	400a      	ands	r2, r1
 80082d0:	420b      	tst	r3, r1
 80082d2:	d034      	beq.n	800833e <__sflush_r+0x9e>
 80082d4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80082d6:	89a3      	ldrh	r3, [r4, #12]
 80082d8:	075b      	lsls	r3, r3, #29
 80082da:	d506      	bpl.n	80082ea <__sflush_r+0x4a>
 80082dc:	6863      	ldr	r3, [r4, #4]
 80082de:	1ac0      	subs	r0, r0, r3
 80082e0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80082e2:	2b00      	cmp	r3, #0
 80082e4:	d001      	beq.n	80082ea <__sflush_r+0x4a>
 80082e6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80082e8:	1ac0      	subs	r0, r0, r3
 80082ea:	0002      	movs	r2, r0
 80082ec:	6a21      	ldr	r1, [r4, #32]
 80082ee:	2300      	movs	r3, #0
 80082f0:	0028      	movs	r0, r5
 80082f2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80082f4:	47b8      	blx	r7
 80082f6:	89a1      	ldrh	r1, [r4, #12]
 80082f8:	1c43      	adds	r3, r0, #1
 80082fa:	d106      	bne.n	800830a <__sflush_r+0x6a>
 80082fc:	682b      	ldr	r3, [r5, #0]
 80082fe:	2b1d      	cmp	r3, #29
 8008300:	d831      	bhi.n	8008366 <__sflush_r+0xc6>
 8008302:	4a2c      	ldr	r2, [pc, #176]	; (80083b4 <__sflush_r+0x114>)
 8008304:	40da      	lsrs	r2, r3
 8008306:	07d3      	lsls	r3, r2, #31
 8008308:	d52d      	bpl.n	8008366 <__sflush_r+0xc6>
 800830a:	2300      	movs	r3, #0
 800830c:	6063      	str	r3, [r4, #4]
 800830e:	6923      	ldr	r3, [r4, #16]
 8008310:	6023      	str	r3, [r4, #0]
 8008312:	04cb      	lsls	r3, r1, #19
 8008314:	d505      	bpl.n	8008322 <__sflush_r+0x82>
 8008316:	1c43      	adds	r3, r0, #1
 8008318:	d102      	bne.n	8008320 <__sflush_r+0x80>
 800831a:	682b      	ldr	r3, [r5, #0]
 800831c:	2b00      	cmp	r3, #0
 800831e:	d100      	bne.n	8008322 <__sflush_r+0x82>
 8008320:	6560      	str	r0, [r4, #84]	; 0x54
 8008322:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8008324:	602e      	str	r6, [r5, #0]
 8008326:	2900      	cmp	r1, #0
 8008328:	d0c6      	beq.n	80082b8 <__sflush_r+0x18>
 800832a:	0023      	movs	r3, r4
 800832c:	3344      	adds	r3, #68	; 0x44
 800832e:	4299      	cmp	r1, r3
 8008330:	d002      	beq.n	8008338 <__sflush_r+0x98>
 8008332:	0028      	movs	r0, r5
 8008334:	f7ff fa86 	bl	8007844 <_free_r>
 8008338:	2000      	movs	r0, #0
 800833a:	6360      	str	r0, [r4, #52]	; 0x34
 800833c:	e7bd      	b.n	80082ba <__sflush_r+0x1a>
 800833e:	2301      	movs	r3, #1
 8008340:	0028      	movs	r0, r5
 8008342:	6a21      	ldr	r1, [r4, #32]
 8008344:	47b8      	blx	r7
 8008346:	1c43      	adds	r3, r0, #1
 8008348:	d1c5      	bne.n	80082d6 <__sflush_r+0x36>
 800834a:	682b      	ldr	r3, [r5, #0]
 800834c:	2b00      	cmp	r3, #0
 800834e:	d0c2      	beq.n	80082d6 <__sflush_r+0x36>
 8008350:	2b1d      	cmp	r3, #29
 8008352:	d001      	beq.n	8008358 <__sflush_r+0xb8>
 8008354:	2b16      	cmp	r3, #22
 8008356:	d101      	bne.n	800835c <__sflush_r+0xbc>
 8008358:	602e      	str	r6, [r5, #0]
 800835a:	e7ad      	b.n	80082b8 <__sflush_r+0x18>
 800835c:	2340      	movs	r3, #64	; 0x40
 800835e:	89a2      	ldrh	r2, [r4, #12]
 8008360:	4313      	orrs	r3, r2
 8008362:	81a3      	strh	r3, [r4, #12]
 8008364:	e7a9      	b.n	80082ba <__sflush_r+0x1a>
 8008366:	2340      	movs	r3, #64	; 0x40
 8008368:	430b      	orrs	r3, r1
 800836a:	e7fa      	b.n	8008362 <__sflush_r+0xc2>
 800836c:	690f      	ldr	r7, [r1, #16]
 800836e:	2f00      	cmp	r7, #0
 8008370:	d0a2      	beq.n	80082b8 <__sflush_r+0x18>
 8008372:	680a      	ldr	r2, [r1, #0]
 8008374:	600f      	str	r7, [r1, #0]
 8008376:	1bd2      	subs	r2, r2, r7
 8008378:	9201      	str	r2, [sp, #4]
 800837a:	2200      	movs	r2, #0
 800837c:	079b      	lsls	r3, r3, #30
 800837e:	d100      	bne.n	8008382 <__sflush_r+0xe2>
 8008380:	694a      	ldr	r2, [r1, #20]
 8008382:	60a2      	str	r2, [r4, #8]
 8008384:	9b01      	ldr	r3, [sp, #4]
 8008386:	2b00      	cmp	r3, #0
 8008388:	dc00      	bgt.n	800838c <__sflush_r+0xec>
 800838a:	e795      	b.n	80082b8 <__sflush_r+0x18>
 800838c:	003a      	movs	r2, r7
 800838e:	0028      	movs	r0, r5
 8008390:	9b01      	ldr	r3, [sp, #4]
 8008392:	6a21      	ldr	r1, [r4, #32]
 8008394:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8008396:	47b0      	blx	r6
 8008398:	2800      	cmp	r0, #0
 800839a:	dc06      	bgt.n	80083aa <__sflush_r+0x10a>
 800839c:	2340      	movs	r3, #64	; 0x40
 800839e:	2001      	movs	r0, #1
 80083a0:	89a2      	ldrh	r2, [r4, #12]
 80083a2:	4240      	negs	r0, r0
 80083a4:	4313      	orrs	r3, r2
 80083a6:	81a3      	strh	r3, [r4, #12]
 80083a8:	e787      	b.n	80082ba <__sflush_r+0x1a>
 80083aa:	9b01      	ldr	r3, [sp, #4]
 80083ac:	183f      	adds	r7, r7, r0
 80083ae:	1a1b      	subs	r3, r3, r0
 80083b0:	9301      	str	r3, [sp, #4]
 80083b2:	e7e7      	b.n	8008384 <__sflush_r+0xe4>
 80083b4:	20400001 	.word	0x20400001

080083b8 <_fflush_r>:
 80083b8:	690b      	ldr	r3, [r1, #16]
 80083ba:	b570      	push	{r4, r5, r6, lr}
 80083bc:	0005      	movs	r5, r0
 80083be:	000c      	movs	r4, r1
 80083c0:	2b00      	cmp	r3, #0
 80083c2:	d102      	bne.n	80083ca <_fflush_r+0x12>
 80083c4:	2500      	movs	r5, #0
 80083c6:	0028      	movs	r0, r5
 80083c8:	bd70      	pop	{r4, r5, r6, pc}
 80083ca:	2800      	cmp	r0, #0
 80083cc:	d004      	beq.n	80083d8 <_fflush_r+0x20>
 80083ce:	6983      	ldr	r3, [r0, #24]
 80083d0:	2b00      	cmp	r3, #0
 80083d2:	d101      	bne.n	80083d8 <_fflush_r+0x20>
 80083d4:	f000 f892 	bl	80084fc <__sinit>
 80083d8:	4b14      	ldr	r3, [pc, #80]	; (800842c <_fflush_r+0x74>)
 80083da:	429c      	cmp	r4, r3
 80083dc:	d11b      	bne.n	8008416 <_fflush_r+0x5e>
 80083de:	686c      	ldr	r4, [r5, #4]
 80083e0:	220c      	movs	r2, #12
 80083e2:	5ea3      	ldrsh	r3, [r4, r2]
 80083e4:	2b00      	cmp	r3, #0
 80083e6:	d0ed      	beq.n	80083c4 <_fflush_r+0xc>
 80083e8:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80083ea:	07d2      	lsls	r2, r2, #31
 80083ec:	d404      	bmi.n	80083f8 <_fflush_r+0x40>
 80083ee:	059b      	lsls	r3, r3, #22
 80083f0:	d402      	bmi.n	80083f8 <_fflush_r+0x40>
 80083f2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80083f4:	f000 f923 	bl	800863e <__retarget_lock_acquire_recursive>
 80083f8:	0028      	movs	r0, r5
 80083fa:	0021      	movs	r1, r4
 80083fc:	f7ff ff50 	bl	80082a0 <__sflush_r>
 8008400:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008402:	0005      	movs	r5, r0
 8008404:	07db      	lsls	r3, r3, #31
 8008406:	d4de      	bmi.n	80083c6 <_fflush_r+0xe>
 8008408:	89a3      	ldrh	r3, [r4, #12]
 800840a:	059b      	lsls	r3, r3, #22
 800840c:	d4db      	bmi.n	80083c6 <_fflush_r+0xe>
 800840e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008410:	f000 f916 	bl	8008640 <__retarget_lock_release_recursive>
 8008414:	e7d7      	b.n	80083c6 <_fflush_r+0xe>
 8008416:	4b06      	ldr	r3, [pc, #24]	; (8008430 <_fflush_r+0x78>)
 8008418:	429c      	cmp	r4, r3
 800841a:	d101      	bne.n	8008420 <_fflush_r+0x68>
 800841c:	68ac      	ldr	r4, [r5, #8]
 800841e:	e7df      	b.n	80083e0 <_fflush_r+0x28>
 8008420:	4b04      	ldr	r3, [pc, #16]	; (8008434 <_fflush_r+0x7c>)
 8008422:	429c      	cmp	r4, r3
 8008424:	d1dc      	bne.n	80083e0 <_fflush_r+0x28>
 8008426:	68ec      	ldr	r4, [r5, #12]
 8008428:	e7da      	b.n	80083e0 <_fflush_r+0x28>
 800842a:	46c0      	nop			; (mov r8, r8)
 800842c:	08008e44 	.word	0x08008e44
 8008430:	08008e64 	.word	0x08008e64
 8008434:	08008e24 	.word	0x08008e24

08008438 <std>:
 8008438:	2300      	movs	r3, #0
 800843a:	b510      	push	{r4, lr}
 800843c:	0004      	movs	r4, r0
 800843e:	6003      	str	r3, [r0, #0]
 8008440:	6043      	str	r3, [r0, #4]
 8008442:	6083      	str	r3, [r0, #8]
 8008444:	8181      	strh	r1, [r0, #12]
 8008446:	6643      	str	r3, [r0, #100]	; 0x64
 8008448:	0019      	movs	r1, r3
 800844a:	81c2      	strh	r2, [r0, #14]
 800844c:	6103      	str	r3, [r0, #16]
 800844e:	6143      	str	r3, [r0, #20]
 8008450:	6183      	str	r3, [r0, #24]
 8008452:	2208      	movs	r2, #8
 8008454:	305c      	adds	r0, #92	; 0x5c
 8008456:	f7fd facf 	bl	80059f8 <memset>
 800845a:	4b05      	ldr	r3, [pc, #20]	; (8008470 <std+0x38>)
 800845c:	6224      	str	r4, [r4, #32]
 800845e:	6263      	str	r3, [r4, #36]	; 0x24
 8008460:	4b04      	ldr	r3, [pc, #16]	; (8008474 <std+0x3c>)
 8008462:	62a3      	str	r3, [r4, #40]	; 0x28
 8008464:	4b04      	ldr	r3, [pc, #16]	; (8008478 <std+0x40>)
 8008466:	62e3      	str	r3, [r4, #44]	; 0x2c
 8008468:	4b04      	ldr	r3, [pc, #16]	; (800847c <std+0x44>)
 800846a:	6323      	str	r3, [r4, #48]	; 0x30
 800846c:	bd10      	pop	{r4, pc}
 800846e:	46c0      	nop			; (mov r8, r8)
 8008470:	080087c1 	.word	0x080087c1
 8008474:	080087e9 	.word	0x080087e9
 8008478:	08008821 	.word	0x08008821
 800847c:	0800884d 	.word	0x0800884d

08008480 <_cleanup_r>:
 8008480:	b510      	push	{r4, lr}
 8008482:	4902      	ldr	r1, [pc, #8]	; (800848c <_cleanup_r+0xc>)
 8008484:	f000 f8ba 	bl	80085fc <_fwalk_reent>
 8008488:	bd10      	pop	{r4, pc}
 800848a:	46c0      	nop			; (mov r8, r8)
 800848c:	080083b9 	.word	0x080083b9

08008490 <__sfmoreglue>:
 8008490:	b570      	push	{r4, r5, r6, lr}
 8008492:	2568      	movs	r5, #104	; 0x68
 8008494:	1e4a      	subs	r2, r1, #1
 8008496:	4355      	muls	r5, r2
 8008498:	000e      	movs	r6, r1
 800849a:	0029      	movs	r1, r5
 800849c:	3174      	adds	r1, #116	; 0x74
 800849e:	f7ff fa3d 	bl	800791c <_malloc_r>
 80084a2:	1e04      	subs	r4, r0, #0
 80084a4:	d008      	beq.n	80084b8 <__sfmoreglue+0x28>
 80084a6:	2100      	movs	r1, #0
 80084a8:	002a      	movs	r2, r5
 80084aa:	6001      	str	r1, [r0, #0]
 80084ac:	6046      	str	r6, [r0, #4]
 80084ae:	300c      	adds	r0, #12
 80084b0:	60a0      	str	r0, [r4, #8]
 80084b2:	3268      	adds	r2, #104	; 0x68
 80084b4:	f7fd faa0 	bl	80059f8 <memset>
 80084b8:	0020      	movs	r0, r4
 80084ba:	bd70      	pop	{r4, r5, r6, pc}

080084bc <__sfp_lock_acquire>:
 80084bc:	b510      	push	{r4, lr}
 80084be:	4802      	ldr	r0, [pc, #8]	; (80084c8 <__sfp_lock_acquire+0xc>)
 80084c0:	f000 f8bd 	bl	800863e <__retarget_lock_acquire_recursive>
 80084c4:	bd10      	pop	{r4, pc}
 80084c6:	46c0      	nop			; (mov r8, r8)
 80084c8:	20000295 	.word	0x20000295

080084cc <__sfp_lock_release>:
 80084cc:	b510      	push	{r4, lr}
 80084ce:	4802      	ldr	r0, [pc, #8]	; (80084d8 <__sfp_lock_release+0xc>)
 80084d0:	f000 f8b6 	bl	8008640 <__retarget_lock_release_recursive>
 80084d4:	bd10      	pop	{r4, pc}
 80084d6:	46c0      	nop			; (mov r8, r8)
 80084d8:	20000295 	.word	0x20000295

080084dc <__sinit_lock_acquire>:
 80084dc:	b510      	push	{r4, lr}
 80084de:	4802      	ldr	r0, [pc, #8]	; (80084e8 <__sinit_lock_acquire+0xc>)
 80084e0:	f000 f8ad 	bl	800863e <__retarget_lock_acquire_recursive>
 80084e4:	bd10      	pop	{r4, pc}
 80084e6:	46c0      	nop			; (mov r8, r8)
 80084e8:	20000296 	.word	0x20000296

080084ec <__sinit_lock_release>:
 80084ec:	b510      	push	{r4, lr}
 80084ee:	4802      	ldr	r0, [pc, #8]	; (80084f8 <__sinit_lock_release+0xc>)
 80084f0:	f000 f8a6 	bl	8008640 <__retarget_lock_release_recursive>
 80084f4:	bd10      	pop	{r4, pc}
 80084f6:	46c0      	nop			; (mov r8, r8)
 80084f8:	20000296 	.word	0x20000296

080084fc <__sinit>:
 80084fc:	b513      	push	{r0, r1, r4, lr}
 80084fe:	0004      	movs	r4, r0
 8008500:	f7ff ffec 	bl	80084dc <__sinit_lock_acquire>
 8008504:	69a3      	ldr	r3, [r4, #24]
 8008506:	2b00      	cmp	r3, #0
 8008508:	d002      	beq.n	8008510 <__sinit+0x14>
 800850a:	f7ff ffef 	bl	80084ec <__sinit_lock_release>
 800850e:	bd13      	pop	{r0, r1, r4, pc}
 8008510:	64a3      	str	r3, [r4, #72]	; 0x48
 8008512:	64e3      	str	r3, [r4, #76]	; 0x4c
 8008514:	6523      	str	r3, [r4, #80]	; 0x50
 8008516:	4b13      	ldr	r3, [pc, #76]	; (8008564 <__sinit+0x68>)
 8008518:	4a13      	ldr	r2, [pc, #76]	; (8008568 <__sinit+0x6c>)
 800851a:	681b      	ldr	r3, [r3, #0]
 800851c:	62a2      	str	r2, [r4, #40]	; 0x28
 800851e:	9301      	str	r3, [sp, #4]
 8008520:	42a3      	cmp	r3, r4
 8008522:	d101      	bne.n	8008528 <__sinit+0x2c>
 8008524:	2301      	movs	r3, #1
 8008526:	61a3      	str	r3, [r4, #24]
 8008528:	0020      	movs	r0, r4
 800852a:	f000 f81f 	bl	800856c <__sfp>
 800852e:	6060      	str	r0, [r4, #4]
 8008530:	0020      	movs	r0, r4
 8008532:	f000 f81b 	bl	800856c <__sfp>
 8008536:	60a0      	str	r0, [r4, #8]
 8008538:	0020      	movs	r0, r4
 800853a:	f000 f817 	bl	800856c <__sfp>
 800853e:	2200      	movs	r2, #0
 8008540:	2104      	movs	r1, #4
 8008542:	60e0      	str	r0, [r4, #12]
 8008544:	6860      	ldr	r0, [r4, #4]
 8008546:	f7ff ff77 	bl	8008438 <std>
 800854a:	2201      	movs	r2, #1
 800854c:	2109      	movs	r1, #9
 800854e:	68a0      	ldr	r0, [r4, #8]
 8008550:	f7ff ff72 	bl	8008438 <std>
 8008554:	2202      	movs	r2, #2
 8008556:	2112      	movs	r1, #18
 8008558:	68e0      	ldr	r0, [r4, #12]
 800855a:	f7ff ff6d 	bl	8008438 <std>
 800855e:	2301      	movs	r3, #1
 8008560:	61a3      	str	r3, [r4, #24]
 8008562:	e7d2      	b.n	800850a <__sinit+0xe>
 8008564:	08008aa8 	.word	0x08008aa8
 8008568:	08008481 	.word	0x08008481

0800856c <__sfp>:
 800856c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800856e:	0007      	movs	r7, r0
 8008570:	f7ff ffa4 	bl	80084bc <__sfp_lock_acquire>
 8008574:	4b1f      	ldr	r3, [pc, #124]	; (80085f4 <__sfp+0x88>)
 8008576:	681e      	ldr	r6, [r3, #0]
 8008578:	69b3      	ldr	r3, [r6, #24]
 800857a:	2b00      	cmp	r3, #0
 800857c:	d102      	bne.n	8008584 <__sfp+0x18>
 800857e:	0030      	movs	r0, r6
 8008580:	f7ff ffbc 	bl	80084fc <__sinit>
 8008584:	3648      	adds	r6, #72	; 0x48
 8008586:	68b4      	ldr	r4, [r6, #8]
 8008588:	6873      	ldr	r3, [r6, #4]
 800858a:	3b01      	subs	r3, #1
 800858c:	d504      	bpl.n	8008598 <__sfp+0x2c>
 800858e:	6833      	ldr	r3, [r6, #0]
 8008590:	2b00      	cmp	r3, #0
 8008592:	d022      	beq.n	80085da <__sfp+0x6e>
 8008594:	6836      	ldr	r6, [r6, #0]
 8008596:	e7f6      	b.n	8008586 <__sfp+0x1a>
 8008598:	220c      	movs	r2, #12
 800859a:	5ea5      	ldrsh	r5, [r4, r2]
 800859c:	2d00      	cmp	r5, #0
 800859e:	d11a      	bne.n	80085d6 <__sfp+0x6a>
 80085a0:	0020      	movs	r0, r4
 80085a2:	4b15      	ldr	r3, [pc, #84]	; (80085f8 <__sfp+0x8c>)
 80085a4:	3058      	adds	r0, #88	; 0x58
 80085a6:	60e3      	str	r3, [r4, #12]
 80085a8:	6665      	str	r5, [r4, #100]	; 0x64
 80085aa:	f000 f847 	bl	800863c <__retarget_lock_init_recursive>
 80085ae:	f7ff ff8d 	bl	80084cc <__sfp_lock_release>
 80085b2:	0020      	movs	r0, r4
 80085b4:	2208      	movs	r2, #8
 80085b6:	0029      	movs	r1, r5
 80085b8:	6025      	str	r5, [r4, #0]
 80085ba:	60a5      	str	r5, [r4, #8]
 80085bc:	6065      	str	r5, [r4, #4]
 80085be:	6125      	str	r5, [r4, #16]
 80085c0:	6165      	str	r5, [r4, #20]
 80085c2:	61a5      	str	r5, [r4, #24]
 80085c4:	305c      	adds	r0, #92	; 0x5c
 80085c6:	f7fd fa17 	bl	80059f8 <memset>
 80085ca:	6365      	str	r5, [r4, #52]	; 0x34
 80085cc:	63a5      	str	r5, [r4, #56]	; 0x38
 80085ce:	64a5      	str	r5, [r4, #72]	; 0x48
 80085d0:	64e5      	str	r5, [r4, #76]	; 0x4c
 80085d2:	0020      	movs	r0, r4
 80085d4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80085d6:	3468      	adds	r4, #104	; 0x68
 80085d8:	e7d7      	b.n	800858a <__sfp+0x1e>
 80085da:	2104      	movs	r1, #4
 80085dc:	0038      	movs	r0, r7
 80085de:	f7ff ff57 	bl	8008490 <__sfmoreglue>
 80085e2:	1e04      	subs	r4, r0, #0
 80085e4:	6030      	str	r0, [r6, #0]
 80085e6:	d1d5      	bne.n	8008594 <__sfp+0x28>
 80085e8:	f7ff ff70 	bl	80084cc <__sfp_lock_release>
 80085ec:	230c      	movs	r3, #12
 80085ee:	603b      	str	r3, [r7, #0]
 80085f0:	e7ef      	b.n	80085d2 <__sfp+0x66>
 80085f2:	46c0      	nop			; (mov r8, r8)
 80085f4:	08008aa8 	.word	0x08008aa8
 80085f8:	ffff0001 	.word	0xffff0001

080085fc <_fwalk_reent>:
 80085fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80085fe:	0004      	movs	r4, r0
 8008600:	0006      	movs	r6, r0
 8008602:	2700      	movs	r7, #0
 8008604:	9101      	str	r1, [sp, #4]
 8008606:	3448      	adds	r4, #72	; 0x48
 8008608:	6863      	ldr	r3, [r4, #4]
 800860a:	68a5      	ldr	r5, [r4, #8]
 800860c:	9300      	str	r3, [sp, #0]
 800860e:	9b00      	ldr	r3, [sp, #0]
 8008610:	3b01      	subs	r3, #1
 8008612:	9300      	str	r3, [sp, #0]
 8008614:	d504      	bpl.n	8008620 <_fwalk_reent+0x24>
 8008616:	6824      	ldr	r4, [r4, #0]
 8008618:	2c00      	cmp	r4, #0
 800861a:	d1f5      	bne.n	8008608 <_fwalk_reent+0xc>
 800861c:	0038      	movs	r0, r7
 800861e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008620:	89ab      	ldrh	r3, [r5, #12]
 8008622:	2b01      	cmp	r3, #1
 8008624:	d908      	bls.n	8008638 <_fwalk_reent+0x3c>
 8008626:	220e      	movs	r2, #14
 8008628:	5eab      	ldrsh	r3, [r5, r2]
 800862a:	3301      	adds	r3, #1
 800862c:	d004      	beq.n	8008638 <_fwalk_reent+0x3c>
 800862e:	0029      	movs	r1, r5
 8008630:	0030      	movs	r0, r6
 8008632:	9b01      	ldr	r3, [sp, #4]
 8008634:	4798      	blx	r3
 8008636:	4307      	orrs	r7, r0
 8008638:	3568      	adds	r5, #104	; 0x68
 800863a:	e7e8      	b.n	800860e <_fwalk_reent+0x12>

0800863c <__retarget_lock_init_recursive>:
 800863c:	4770      	bx	lr

0800863e <__retarget_lock_acquire_recursive>:
 800863e:	4770      	bx	lr

08008640 <__retarget_lock_release_recursive>:
 8008640:	4770      	bx	lr
	...

08008644 <__swhatbuf_r>:
 8008644:	b570      	push	{r4, r5, r6, lr}
 8008646:	000e      	movs	r6, r1
 8008648:	001d      	movs	r5, r3
 800864a:	230e      	movs	r3, #14
 800864c:	5ec9      	ldrsh	r1, [r1, r3]
 800864e:	0014      	movs	r4, r2
 8008650:	b096      	sub	sp, #88	; 0x58
 8008652:	2900      	cmp	r1, #0
 8008654:	da08      	bge.n	8008668 <__swhatbuf_r+0x24>
 8008656:	220c      	movs	r2, #12
 8008658:	5eb3      	ldrsh	r3, [r6, r2]
 800865a:	2200      	movs	r2, #0
 800865c:	602a      	str	r2, [r5, #0]
 800865e:	061b      	lsls	r3, r3, #24
 8008660:	d411      	bmi.n	8008686 <__swhatbuf_r+0x42>
 8008662:	2380      	movs	r3, #128	; 0x80
 8008664:	00db      	lsls	r3, r3, #3
 8008666:	e00f      	b.n	8008688 <__swhatbuf_r+0x44>
 8008668:	466a      	mov	r2, sp
 800866a:	f000 f91b 	bl	80088a4 <_fstat_r>
 800866e:	2800      	cmp	r0, #0
 8008670:	dbf1      	blt.n	8008656 <__swhatbuf_r+0x12>
 8008672:	23f0      	movs	r3, #240	; 0xf0
 8008674:	9901      	ldr	r1, [sp, #4]
 8008676:	021b      	lsls	r3, r3, #8
 8008678:	4019      	ands	r1, r3
 800867a:	4b05      	ldr	r3, [pc, #20]	; (8008690 <__swhatbuf_r+0x4c>)
 800867c:	18c9      	adds	r1, r1, r3
 800867e:	424b      	negs	r3, r1
 8008680:	4159      	adcs	r1, r3
 8008682:	6029      	str	r1, [r5, #0]
 8008684:	e7ed      	b.n	8008662 <__swhatbuf_r+0x1e>
 8008686:	2340      	movs	r3, #64	; 0x40
 8008688:	2000      	movs	r0, #0
 800868a:	6023      	str	r3, [r4, #0]
 800868c:	b016      	add	sp, #88	; 0x58
 800868e:	bd70      	pop	{r4, r5, r6, pc}
 8008690:	ffffe000 	.word	0xffffe000

08008694 <__smakebuf_r>:
 8008694:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008696:	2602      	movs	r6, #2
 8008698:	898b      	ldrh	r3, [r1, #12]
 800869a:	0005      	movs	r5, r0
 800869c:	000c      	movs	r4, r1
 800869e:	4233      	tst	r3, r6
 80086a0:	d006      	beq.n	80086b0 <__smakebuf_r+0x1c>
 80086a2:	0023      	movs	r3, r4
 80086a4:	3347      	adds	r3, #71	; 0x47
 80086a6:	6023      	str	r3, [r4, #0]
 80086a8:	6123      	str	r3, [r4, #16]
 80086aa:	2301      	movs	r3, #1
 80086ac:	6163      	str	r3, [r4, #20]
 80086ae:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 80086b0:	466a      	mov	r2, sp
 80086b2:	ab01      	add	r3, sp, #4
 80086b4:	f7ff ffc6 	bl	8008644 <__swhatbuf_r>
 80086b8:	9900      	ldr	r1, [sp, #0]
 80086ba:	0007      	movs	r7, r0
 80086bc:	0028      	movs	r0, r5
 80086be:	f7ff f92d 	bl	800791c <_malloc_r>
 80086c2:	2800      	cmp	r0, #0
 80086c4:	d108      	bne.n	80086d8 <__smakebuf_r+0x44>
 80086c6:	220c      	movs	r2, #12
 80086c8:	5ea3      	ldrsh	r3, [r4, r2]
 80086ca:	059a      	lsls	r2, r3, #22
 80086cc:	d4ef      	bmi.n	80086ae <__smakebuf_r+0x1a>
 80086ce:	2203      	movs	r2, #3
 80086d0:	4393      	bics	r3, r2
 80086d2:	431e      	orrs	r6, r3
 80086d4:	81a6      	strh	r6, [r4, #12]
 80086d6:	e7e4      	b.n	80086a2 <__smakebuf_r+0xe>
 80086d8:	4b0f      	ldr	r3, [pc, #60]	; (8008718 <__smakebuf_r+0x84>)
 80086da:	62ab      	str	r3, [r5, #40]	; 0x28
 80086dc:	2380      	movs	r3, #128	; 0x80
 80086de:	89a2      	ldrh	r2, [r4, #12]
 80086e0:	6020      	str	r0, [r4, #0]
 80086e2:	4313      	orrs	r3, r2
 80086e4:	81a3      	strh	r3, [r4, #12]
 80086e6:	9b00      	ldr	r3, [sp, #0]
 80086e8:	6120      	str	r0, [r4, #16]
 80086ea:	6163      	str	r3, [r4, #20]
 80086ec:	9b01      	ldr	r3, [sp, #4]
 80086ee:	2b00      	cmp	r3, #0
 80086f0:	d00d      	beq.n	800870e <__smakebuf_r+0x7a>
 80086f2:	0028      	movs	r0, r5
 80086f4:	230e      	movs	r3, #14
 80086f6:	5ee1      	ldrsh	r1, [r4, r3]
 80086f8:	f000 f8e6 	bl	80088c8 <_isatty_r>
 80086fc:	2800      	cmp	r0, #0
 80086fe:	d006      	beq.n	800870e <__smakebuf_r+0x7a>
 8008700:	2203      	movs	r2, #3
 8008702:	89a3      	ldrh	r3, [r4, #12]
 8008704:	4393      	bics	r3, r2
 8008706:	001a      	movs	r2, r3
 8008708:	2301      	movs	r3, #1
 800870a:	4313      	orrs	r3, r2
 800870c:	81a3      	strh	r3, [r4, #12]
 800870e:	89a0      	ldrh	r0, [r4, #12]
 8008710:	4307      	orrs	r7, r0
 8008712:	81a7      	strh	r7, [r4, #12]
 8008714:	e7cb      	b.n	80086ae <__smakebuf_r+0x1a>
 8008716:	46c0      	nop			; (mov r8, r8)
 8008718:	08008481 	.word	0x08008481

0800871c <_malloc_usable_size_r>:
 800871c:	1f0b      	subs	r3, r1, #4
 800871e:	681b      	ldr	r3, [r3, #0]
 8008720:	1f18      	subs	r0, r3, #4
 8008722:	2b00      	cmp	r3, #0
 8008724:	da01      	bge.n	800872a <_malloc_usable_size_r+0xe>
 8008726:	580b      	ldr	r3, [r1, r0]
 8008728:	18c0      	adds	r0, r0, r3
 800872a:	4770      	bx	lr

0800872c <_raise_r>:
 800872c:	b570      	push	{r4, r5, r6, lr}
 800872e:	0004      	movs	r4, r0
 8008730:	000d      	movs	r5, r1
 8008732:	291f      	cmp	r1, #31
 8008734:	d904      	bls.n	8008740 <_raise_r+0x14>
 8008736:	2316      	movs	r3, #22
 8008738:	6003      	str	r3, [r0, #0]
 800873a:	2001      	movs	r0, #1
 800873c:	4240      	negs	r0, r0
 800873e:	bd70      	pop	{r4, r5, r6, pc}
 8008740:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8008742:	2b00      	cmp	r3, #0
 8008744:	d004      	beq.n	8008750 <_raise_r+0x24>
 8008746:	008a      	lsls	r2, r1, #2
 8008748:	189b      	adds	r3, r3, r2
 800874a:	681a      	ldr	r2, [r3, #0]
 800874c:	2a00      	cmp	r2, #0
 800874e:	d108      	bne.n	8008762 <_raise_r+0x36>
 8008750:	0020      	movs	r0, r4
 8008752:	f000 f831 	bl	80087b8 <_getpid_r>
 8008756:	002a      	movs	r2, r5
 8008758:	0001      	movs	r1, r0
 800875a:	0020      	movs	r0, r4
 800875c:	f000 f81a 	bl	8008794 <_kill_r>
 8008760:	e7ed      	b.n	800873e <_raise_r+0x12>
 8008762:	2000      	movs	r0, #0
 8008764:	2a01      	cmp	r2, #1
 8008766:	d0ea      	beq.n	800873e <_raise_r+0x12>
 8008768:	1c51      	adds	r1, r2, #1
 800876a:	d103      	bne.n	8008774 <_raise_r+0x48>
 800876c:	2316      	movs	r3, #22
 800876e:	3001      	adds	r0, #1
 8008770:	6023      	str	r3, [r4, #0]
 8008772:	e7e4      	b.n	800873e <_raise_r+0x12>
 8008774:	2400      	movs	r4, #0
 8008776:	0028      	movs	r0, r5
 8008778:	601c      	str	r4, [r3, #0]
 800877a:	4790      	blx	r2
 800877c:	0020      	movs	r0, r4
 800877e:	e7de      	b.n	800873e <_raise_r+0x12>

08008780 <raise>:
 8008780:	b510      	push	{r4, lr}
 8008782:	4b03      	ldr	r3, [pc, #12]	; (8008790 <raise+0x10>)
 8008784:	0001      	movs	r1, r0
 8008786:	6818      	ldr	r0, [r3, #0]
 8008788:	f7ff ffd0 	bl	800872c <_raise_r>
 800878c:	bd10      	pop	{r4, pc}
 800878e:	46c0      	nop			; (mov r8, r8)
 8008790:	2000000c 	.word	0x2000000c

08008794 <_kill_r>:
 8008794:	2300      	movs	r3, #0
 8008796:	b570      	push	{r4, r5, r6, lr}
 8008798:	4d06      	ldr	r5, [pc, #24]	; (80087b4 <_kill_r+0x20>)
 800879a:	0004      	movs	r4, r0
 800879c:	0008      	movs	r0, r1
 800879e:	0011      	movs	r1, r2
 80087a0:	602b      	str	r3, [r5, #0]
 80087a2:	f7fb fd08 	bl	80041b6 <_kill>
 80087a6:	1c43      	adds	r3, r0, #1
 80087a8:	d103      	bne.n	80087b2 <_kill_r+0x1e>
 80087aa:	682b      	ldr	r3, [r5, #0]
 80087ac:	2b00      	cmp	r3, #0
 80087ae:	d000      	beq.n	80087b2 <_kill_r+0x1e>
 80087b0:	6023      	str	r3, [r4, #0]
 80087b2:	bd70      	pop	{r4, r5, r6, pc}
 80087b4:	20000290 	.word	0x20000290

080087b8 <_getpid_r>:
 80087b8:	b510      	push	{r4, lr}
 80087ba:	f7fb fcf6 	bl	80041aa <_getpid>
 80087be:	bd10      	pop	{r4, pc}

080087c0 <__sread>:
 80087c0:	b570      	push	{r4, r5, r6, lr}
 80087c2:	000c      	movs	r4, r1
 80087c4:	250e      	movs	r5, #14
 80087c6:	5f49      	ldrsh	r1, [r1, r5]
 80087c8:	f000 f8a4 	bl	8008914 <_read_r>
 80087cc:	2800      	cmp	r0, #0
 80087ce:	db03      	blt.n	80087d8 <__sread+0x18>
 80087d0:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80087d2:	181b      	adds	r3, r3, r0
 80087d4:	6563      	str	r3, [r4, #84]	; 0x54
 80087d6:	bd70      	pop	{r4, r5, r6, pc}
 80087d8:	89a3      	ldrh	r3, [r4, #12]
 80087da:	4a02      	ldr	r2, [pc, #8]	; (80087e4 <__sread+0x24>)
 80087dc:	4013      	ands	r3, r2
 80087de:	81a3      	strh	r3, [r4, #12]
 80087e0:	e7f9      	b.n	80087d6 <__sread+0x16>
 80087e2:	46c0      	nop			; (mov r8, r8)
 80087e4:	ffffefff 	.word	0xffffefff

080087e8 <__swrite>:
 80087e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80087ea:	001f      	movs	r7, r3
 80087ec:	898b      	ldrh	r3, [r1, #12]
 80087ee:	0005      	movs	r5, r0
 80087f0:	000c      	movs	r4, r1
 80087f2:	0016      	movs	r6, r2
 80087f4:	05db      	lsls	r3, r3, #23
 80087f6:	d505      	bpl.n	8008804 <__swrite+0x1c>
 80087f8:	230e      	movs	r3, #14
 80087fa:	5ec9      	ldrsh	r1, [r1, r3]
 80087fc:	2200      	movs	r2, #0
 80087fe:	2302      	movs	r3, #2
 8008800:	f000 f874 	bl	80088ec <_lseek_r>
 8008804:	89a3      	ldrh	r3, [r4, #12]
 8008806:	4a05      	ldr	r2, [pc, #20]	; (800881c <__swrite+0x34>)
 8008808:	0028      	movs	r0, r5
 800880a:	4013      	ands	r3, r2
 800880c:	81a3      	strh	r3, [r4, #12]
 800880e:	0032      	movs	r2, r6
 8008810:	230e      	movs	r3, #14
 8008812:	5ee1      	ldrsh	r1, [r4, r3]
 8008814:	003b      	movs	r3, r7
 8008816:	f000 f81f 	bl	8008858 <_write_r>
 800881a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800881c:	ffffefff 	.word	0xffffefff

08008820 <__sseek>:
 8008820:	b570      	push	{r4, r5, r6, lr}
 8008822:	000c      	movs	r4, r1
 8008824:	250e      	movs	r5, #14
 8008826:	5f49      	ldrsh	r1, [r1, r5]
 8008828:	f000 f860 	bl	80088ec <_lseek_r>
 800882c:	89a3      	ldrh	r3, [r4, #12]
 800882e:	1c42      	adds	r2, r0, #1
 8008830:	d103      	bne.n	800883a <__sseek+0x1a>
 8008832:	4a05      	ldr	r2, [pc, #20]	; (8008848 <__sseek+0x28>)
 8008834:	4013      	ands	r3, r2
 8008836:	81a3      	strh	r3, [r4, #12]
 8008838:	bd70      	pop	{r4, r5, r6, pc}
 800883a:	2280      	movs	r2, #128	; 0x80
 800883c:	0152      	lsls	r2, r2, #5
 800883e:	4313      	orrs	r3, r2
 8008840:	81a3      	strh	r3, [r4, #12]
 8008842:	6560      	str	r0, [r4, #84]	; 0x54
 8008844:	e7f8      	b.n	8008838 <__sseek+0x18>
 8008846:	46c0      	nop			; (mov r8, r8)
 8008848:	ffffefff 	.word	0xffffefff

0800884c <__sclose>:
 800884c:	b510      	push	{r4, lr}
 800884e:	230e      	movs	r3, #14
 8008850:	5ec9      	ldrsh	r1, [r1, r3]
 8008852:	f000 f815 	bl	8008880 <_close_r>
 8008856:	bd10      	pop	{r4, pc}

08008858 <_write_r>:
 8008858:	b570      	push	{r4, r5, r6, lr}
 800885a:	0004      	movs	r4, r0
 800885c:	0008      	movs	r0, r1
 800885e:	0011      	movs	r1, r2
 8008860:	001a      	movs	r2, r3
 8008862:	2300      	movs	r3, #0
 8008864:	4d05      	ldr	r5, [pc, #20]	; (800887c <_write_r+0x24>)
 8008866:	602b      	str	r3, [r5, #0]
 8008868:	f7fb fcde 	bl	8004228 <_write>
 800886c:	1c43      	adds	r3, r0, #1
 800886e:	d103      	bne.n	8008878 <_write_r+0x20>
 8008870:	682b      	ldr	r3, [r5, #0]
 8008872:	2b00      	cmp	r3, #0
 8008874:	d000      	beq.n	8008878 <_write_r+0x20>
 8008876:	6023      	str	r3, [r4, #0]
 8008878:	bd70      	pop	{r4, r5, r6, pc}
 800887a:	46c0      	nop			; (mov r8, r8)
 800887c:	20000290 	.word	0x20000290

08008880 <_close_r>:
 8008880:	2300      	movs	r3, #0
 8008882:	b570      	push	{r4, r5, r6, lr}
 8008884:	4d06      	ldr	r5, [pc, #24]	; (80088a0 <_close_r+0x20>)
 8008886:	0004      	movs	r4, r0
 8008888:	0008      	movs	r0, r1
 800888a:	602b      	str	r3, [r5, #0]
 800888c:	f7fb fce8 	bl	8004260 <_close>
 8008890:	1c43      	adds	r3, r0, #1
 8008892:	d103      	bne.n	800889c <_close_r+0x1c>
 8008894:	682b      	ldr	r3, [r5, #0]
 8008896:	2b00      	cmp	r3, #0
 8008898:	d000      	beq.n	800889c <_close_r+0x1c>
 800889a:	6023      	str	r3, [r4, #0]
 800889c:	bd70      	pop	{r4, r5, r6, pc}
 800889e:	46c0      	nop			; (mov r8, r8)
 80088a0:	20000290 	.word	0x20000290

080088a4 <_fstat_r>:
 80088a4:	2300      	movs	r3, #0
 80088a6:	b570      	push	{r4, r5, r6, lr}
 80088a8:	4d06      	ldr	r5, [pc, #24]	; (80088c4 <_fstat_r+0x20>)
 80088aa:	0004      	movs	r4, r0
 80088ac:	0008      	movs	r0, r1
 80088ae:	0011      	movs	r1, r2
 80088b0:	602b      	str	r3, [r5, #0]
 80088b2:	f7fb fcdf 	bl	8004274 <_fstat>
 80088b6:	1c43      	adds	r3, r0, #1
 80088b8:	d103      	bne.n	80088c2 <_fstat_r+0x1e>
 80088ba:	682b      	ldr	r3, [r5, #0]
 80088bc:	2b00      	cmp	r3, #0
 80088be:	d000      	beq.n	80088c2 <_fstat_r+0x1e>
 80088c0:	6023      	str	r3, [r4, #0]
 80088c2:	bd70      	pop	{r4, r5, r6, pc}
 80088c4:	20000290 	.word	0x20000290

080088c8 <_isatty_r>:
 80088c8:	2300      	movs	r3, #0
 80088ca:	b570      	push	{r4, r5, r6, lr}
 80088cc:	4d06      	ldr	r5, [pc, #24]	; (80088e8 <_isatty_r+0x20>)
 80088ce:	0004      	movs	r4, r0
 80088d0:	0008      	movs	r0, r1
 80088d2:	602b      	str	r3, [r5, #0]
 80088d4:	f7fb fcdc 	bl	8004290 <_isatty>
 80088d8:	1c43      	adds	r3, r0, #1
 80088da:	d103      	bne.n	80088e4 <_isatty_r+0x1c>
 80088dc:	682b      	ldr	r3, [r5, #0]
 80088de:	2b00      	cmp	r3, #0
 80088e0:	d000      	beq.n	80088e4 <_isatty_r+0x1c>
 80088e2:	6023      	str	r3, [r4, #0]
 80088e4:	bd70      	pop	{r4, r5, r6, pc}
 80088e6:	46c0      	nop			; (mov r8, r8)
 80088e8:	20000290 	.word	0x20000290

080088ec <_lseek_r>:
 80088ec:	b570      	push	{r4, r5, r6, lr}
 80088ee:	0004      	movs	r4, r0
 80088f0:	0008      	movs	r0, r1
 80088f2:	0011      	movs	r1, r2
 80088f4:	001a      	movs	r2, r3
 80088f6:	2300      	movs	r3, #0
 80088f8:	4d05      	ldr	r5, [pc, #20]	; (8008910 <_lseek_r+0x24>)
 80088fa:	602b      	str	r3, [r5, #0]
 80088fc:	f7fb fcd1 	bl	80042a2 <_lseek>
 8008900:	1c43      	adds	r3, r0, #1
 8008902:	d103      	bne.n	800890c <_lseek_r+0x20>
 8008904:	682b      	ldr	r3, [r5, #0]
 8008906:	2b00      	cmp	r3, #0
 8008908:	d000      	beq.n	800890c <_lseek_r+0x20>
 800890a:	6023      	str	r3, [r4, #0]
 800890c:	bd70      	pop	{r4, r5, r6, pc}
 800890e:	46c0      	nop			; (mov r8, r8)
 8008910:	20000290 	.word	0x20000290

08008914 <_read_r>:
 8008914:	b570      	push	{r4, r5, r6, lr}
 8008916:	0004      	movs	r4, r0
 8008918:	0008      	movs	r0, r1
 800891a:	0011      	movs	r1, r2
 800891c:	001a      	movs	r2, r3
 800891e:	2300      	movs	r3, #0
 8008920:	4d05      	ldr	r5, [pc, #20]	; (8008938 <_read_r+0x24>)
 8008922:	602b      	str	r3, [r5, #0]
 8008924:	f7fb fc63 	bl	80041ee <_read>
 8008928:	1c43      	adds	r3, r0, #1
 800892a:	d103      	bne.n	8008934 <_read_r+0x20>
 800892c:	682b      	ldr	r3, [r5, #0]
 800892e:	2b00      	cmp	r3, #0
 8008930:	d000      	beq.n	8008934 <_read_r+0x20>
 8008932:	6023      	str	r3, [r4, #0]
 8008934:	bd70      	pop	{r4, r5, r6, pc}
 8008936:	46c0      	nop			; (mov r8, r8)
 8008938:	20000290 	.word	0x20000290

0800893c <_init>:
 800893c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800893e:	46c0      	nop			; (mov r8, r8)
 8008940:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008942:	bc08      	pop	{r3}
 8008944:	469e      	mov	lr, r3
 8008946:	4770      	bx	lr

08008948 <_fini>:
 8008948:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800894a:	46c0      	nop			; (mov r8, r8)
 800894c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800894e:	bc08      	pop	{r3}
 8008950:	469e      	mov	lr, r3
 8008952:	4770      	bx	lr
