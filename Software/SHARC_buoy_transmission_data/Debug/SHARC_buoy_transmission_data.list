
SHARC_buoy_transmission_data.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00008a44  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000554  08008b08  08008b08  00018b08  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800905c  0800905c  000201dc  2**0
                  CONTENTS
  4 .ARM          00000000  0800905c  0800905c  000201dc  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800905c  0800905c  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800905c  0800905c  0001905c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08009060  08009060  00019060  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  08009064  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000bc  200001dc  08009240  000201dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000298  08009240  00020298  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00007aa4  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001422  00000000  00000000  00027ca8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000660  00000000  00000000  000290d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000005d8  00000000  00000000  00029730  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00012271  00000000  00000000  00029d08  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000085af  00000000  00000000  0003bf79  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00069f5f  00000000  00000000  00044528  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000ae487  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000027fc  00000000  00000000  000ae4d8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001dc 	.word	0x200001dc
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08008aec 	.word	0x08008aec

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001e0 	.word	0x200001e0
 8000104:	08008aec 	.word	0x08008aec

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	; 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	; 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f001 f96b 	bl	8001718 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f001 f8bb 	bl	80015c8 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 f95d 	bl	8001718 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 f953 	bl	8001718 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f001 f8e3 	bl	800164c <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f001 f8d9 	bl	800164c <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_cfrcmple>:
 80004a8:	4684      	mov	ip, r0
 80004aa:	0008      	movs	r0, r1
 80004ac:	4661      	mov	r1, ip
 80004ae:	e7ff      	b.n	80004b0 <__aeabi_cfcmpeq>

080004b0 <__aeabi_cfcmpeq>:
 80004b0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80004b2:	f000 f89f 	bl	80005f4 <__lesf2>
 80004b6:	2800      	cmp	r0, #0
 80004b8:	d401      	bmi.n	80004be <__aeabi_cfcmpeq+0xe>
 80004ba:	2100      	movs	r1, #0
 80004bc:	42c8      	cmn	r0, r1
 80004be:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

080004c0 <__aeabi_fcmpeq>:
 80004c0:	b510      	push	{r4, lr}
 80004c2:	f000 f82b 	bl	800051c <__eqsf2>
 80004c6:	4240      	negs	r0, r0
 80004c8:	3001      	adds	r0, #1
 80004ca:	bd10      	pop	{r4, pc}

080004cc <__aeabi_fcmplt>:
 80004cc:	b510      	push	{r4, lr}
 80004ce:	f000 f891 	bl	80005f4 <__lesf2>
 80004d2:	2800      	cmp	r0, #0
 80004d4:	db01      	blt.n	80004da <__aeabi_fcmplt+0xe>
 80004d6:	2000      	movs	r0, #0
 80004d8:	bd10      	pop	{r4, pc}
 80004da:	2001      	movs	r0, #1
 80004dc:	bd10      	pop	{r4, pc}
 80004de:	46c0      	nop			; (mov r8, r8)

080004e0 <__aeabi_fcmple>:
 80004e0:	b510      	push	{r4, lr}
 80004e2:	f000 f887 	bl	80005f4 <__lesf2>
 80004e6:	2800      	cmp	r0, #0
 80004e8:	dd01      	ble.n	80004ee <__aeabi_fcmple+0xe>
 80004ea:	2000      	movs	r0, #0
 80004ec:	bd10      	pop	{r4, pc}
 80004ee:	2001      	movs	r0, #1
 80004f0:	bd10      	pop	{r4, pc}
 80004f2:	46c0      	nop			; (mov r8, r8)

080004f4 <__aeabi_fcmpgt>:
 80004f4:	b510      	push	{r4, lr}
 80004f6:	f000 f837 	bl	8000568 <__gesf2>
 80004fa:	2800      	cmp	r0, #0
 80004fc:	dc01      	bgt.n	8000502 <__aeabi_fcmpgt+0xe>
 80004fe:	2000      	movs	r0, #0
 8000500:	bd10      	pop	{r4, pc}
 8000502:	2001      	movs	r0, #1
 8000504:	bd10      	pop	{r4, pc}
 8000506:	46c0      	nop			; (mov r8, r8)

08000508 <__aeabi_fcmpge>:
 8000508:	b510      	push	{r4, lr}
 800050a:	f000 f82d 	bl	8000568 <__gesf2>
 800050e:	2800      	cmp	r0, #0
 8000510:	da01      	bge.n	8000516 <__aeabi_fcmpge+0xe>
 8000512:	2000      	movs	r0, #0
 8000514:	bd10      	pop	{r4, pc}
 8000516:	2001      	movs	r0, #1
 8000518:	bd10      	pop	{r4, pc}
 800051a:	46c0      	nop			; (mov r8, r8)

0800051c <__eqsf2>:
 800051c:	b570      	push	{r4, r5, r6, lr}
 800051e:	0042      	lsls	r2, r0, #1
 8000520:	0245      	lsls	r5, r0, #9
 8000522:	024e      	lsls	r6, r1, #9
 8000524:	004c      	lsls	r4, r1, #1
 8000526:	0fc3      	lsrs	r3, r0, #31
 8000528:	0a6d      	lsrs	r5, r5, #9
 800052a:	2001      	movs	r0, #1
 800052c:	0e12      	lsrs	r2, r2, #24
 800052e:	0a76      	lsrs	r6, r6, #9
 8000530:	0e24      	lsrs	r4, r4, #24
 8000532:	0fc9      	lsrs	r1, r1, #31
 8000534:	2aff      	cmp	r2, #255	; 0xff
 8000536:	d006      	beq.n	8000546 <__eqsf2+0x2a>
 8000538:	2cff      	cmp	r4, #255	; 0xff
 800053a:	d003      	beq.n	8000544 <__eqsf2+0x28>
 800053c:	42a2      	cmp	r2, r4
 800053e:	d101      	bne.n	8000544 <__eqsf2+0x28>
 8000540:	42b5      	cmp	r5, r6
 8000542:	d006      	beq.n	8000552 <__eqsf2+0x36>
 8000544:	bd70      	pop	{r4, r5, r6, pc}
 8000546:	2d00      	cmp	r5, #0
 8000548:	d1fc      	bne.n	8000544 <__eqsf2+0x28>
 800054a:	2cff      	cmp	r4, #255	; 0xff
 800054c:	d1fa      	bne.n	8000544 <__eqsf2+0x28>
 800054e:	2e00      	cmp	r6, #0
 8000550:	d1f8      	bne.n	8000544 <__eqsf2+0x28>
 8000552:	428b      	cmp	r3, r1
 8000554:	d006      	beq.n	8000564 <__eqsf2+0x48>
 8000556:	2001      	movs	r0, #1
 8000558:	2a00      	cmp	r2, #0
 800055a:	d1f3      	bne.n	8000544 <__eqsf2+0x28>
 800055c:	0028      	movs	r0, r5
 800055e:	1e43      	subs	r3, r0, #1
 8000560:	4198      	sbcs	r0, r3
 8000562:	e7ef      	b.n	8000544 <__eqsf2+0x28>
 8000564:	2000      	movs	r0, #0
 8000566:	e7ed      	b.n	8000544 <__eqsf2+0x28>

08000568 <__gesf2>:
 8000568:	b570      	push	{r4, r5, r6, lr}
 800056a:	0042      	lsls	r2, r0, #1
 800056c:	0245      	lsls	r5, r0, #9
 800056e:	024e      	lsls	r6, r1, #9
 8000570:	004c      	lsls	r4, r1, #1
 8000572:	0fc3      	lsrs	r3, r0, #31
 8000574:	0a6d      	lsrs	r5, r5, #9
 8000576:	0e12      	lsrs	r2, r2, #24
 8000578:	0a76      	lsrs	r6, r6, #9
 800057a:	0e24      	lsrs	r4, r4, #24
 800057c:	0fc8      	lsrs	r0, r1, #31
 800057e:	2aff      	cmp	r2, #255	; 0xff
 8000580:	d01b      	beq.n	80005ba <__gesf2+0x52>
 8000582:	2cff      	cmp	r4, #255	; 0xff
 8000584:	d00e      	beq.n	80005a4 <__gesf2+0x3c>
 8000586:	2a00      	cmp	r2, #0
 8000588:	d11b      	bne.n	80005c2 <__gesf2+0x5a>
 800058a:	2c00      	cmp	r4, #0
 800058c:	d101      	bne.n	8000592 <__gesf2+0x2a>
 800058e:	2e00      	cmp	r6, #0
 8000590:	d01c      	beq.n	80005cc <__gesf2+0x64>
 8000592:	2d00      	cmp	r5, #0
 8000594:	d00c      	beq.n	80005b0 <__gesf2+0x48>
 8000596:	4283      	cmp	r3, r0
 8000598:	d01c      	beq.n	80005d4 <__gesf2+0x6c>
 800059a:	2102      	movs	r1, #2
 800059c:	1e58      	subs	r0, r3, #1
 800059e:	4008      	ands	r0, r1
 80005a0:	3801      	subs	r0, #1
 80005a2:	bd70      	pop	{r4, r5, r6, pc}
 80005a4:	2e00      	cmp	r6, #0
 80005a6:	d122      	bne.n	80005ee <__gesf2+0x86>
 80005a8:	2a00      	cmp	r2, #0
 80005aa:	d1f4      	bne.n	8000596 <__gesf2+0x2e>
 80005ac:	2d00      	cmp	r5, #0
 80005ae:	d1f2      	bne.n	8000596 <__gesf2+0x2e>
 80005b0:	2800      	cmp	r0, #0
 80005b2:	d1f6      	bne.n	80005a2 <__gesf2+0x3a>
 80005b4:	2001      	movs	r0, #1
 80005b6:	4240      	negs	r0, r0
 80005b8:	e7f3      	b.n	80005a2 <__gesf2+0x3a>
 80005ba:	2d00      	cmp	r5, #0
 80005bc:	d117      	bne.n	80005ee <__gesf2+0x86>
 80005be:	2cff      	cmp	r4, #255	; 0xff
 80005c0:	d0f0      	beq.n	80005a4 <__gesf2+0x3c>
 80005c2:	2c00      	cmp	r4, #0
 80005c4:	d1e7      	bne.n	8000596 <__gesf2+0x2e>
 80005c6:	2e00      	cmp	r6, #0
 80005c8:	d1e5      	bne.n	8000596 <__gesf2+0x2e>
 80005ca:	e7e6      	b.n	800059a <__gesf2+0x32>
 80005cc:	2000      	movs	r0, #0
 80005ce:	2d00      	cmp	r5, #0
 80005d0:	d0e7      	beq.n	80005a2 <__gesf2+0x3a>
 80005d2:	e7e2      	b.n	800059a <__gesf2+0x32>
 80005d4:	42a2      	cmp	r2, r4
 80005d6:	dc05      	bgt.n	80005e4 <__gesf2+0x7c>
 80005d8:	dbea      	blt.n	80005b0 <__gesf2+0x48>
 80005da:	42b5      	cmp	r5, r6
 80005dc:	d802      	bhi.n	80005e4 <__gesf2+0x7c>
 80005de:	d3e7      	bcc.n	80005b0 <__gesf2+0x48>
 80005e0:	2000      	movs	r0, #0
 80005e2:	e7de      	b.n	80005a2 <__gesf2+0x3a>
 80005e4:	4243      	negs	r3, r0
 80005e6:	4158      	adcs	r0, r3
 80005e8:	0040      	lsls	r0, r0, #1
 80005ea:	3801      	subs	r0, #1
 80005ec:	e7d9      	b.n	80005a2 <__gesf2+0x3a>
 80005ee:	2002      	movs	r0, #2
 80005f0:	4240      	negs	r0, r0
 80005f2:	e7d6      	b.n	80005a2 <__gesf2+0x3a>

080005f4 <__lesf2>:
 80005f4:	b570      	push	{r4, r5, r6, lr}
 80005f6:	0042      	lsls	r2, r0, #1
 80005f8:	0245      	lsls	r5, r0, #9
 80005fa:	024e      	lsls	r6, r1, #9
 80005fc:	004c      	lsls	r4, r1, #1
 80005fe:	0fc3      	lsrs	r3, r0, #31
 8000600:	0a6d      	lsrs	r5, r5, #9
 8000602:	0e12      	lsrs	r2, r2, #24
 8000604:	0a76      	lsrs	r6, r6, #9
 8000606:	0e24      	lsrs	r4, r4, #24
 8000608:	0fc8      	lsrs	r0, r1, #31
 800060a:	2aff      	cmp	r2, #255	; 0xff
 800060c:	d00b      	beq.n	8000626 <__lesf2+0x32>
 800060e:	2cff      	cmp	r4, #255	; 0xff
 8000610:	d00d      	beq.n	800062e <__lesf2+0x3a>
 8000612:	2a00      	cmp	r2, #0
 8000614:	d11f      	bne.n	8000656 <__lesf2+0x62>
 8000616:	2c00      	cmp	r4, #0
 8000618:	d116      	bne.n	8000648 <__lesf2+0x54>
 800061a:	2e00      	cmp	r6, #0
 800061c:	d114      	bne.n	8000648 <__lesf2+0x54>
 800061e:	2000      	movs	r0, #0
 8000620:	2d00      	cmp	r5, #0
 8000622:	d010      	beq.n	8000646 <__lesf2+0x52>
 8000624:	e009      	b.n	800063a <__lesf2+0x46>
 8000626:	2d00      	cmp	r5, #0
 8000628:	d10c      	bne.n	8000644 <__lesf2+0x50>
 800062a:	2cff      	cmp	r4, #255	; 0xff
 800062c:	d113      	bne.n	8000656 <__lesf2+0x62>
 800062e:	2e00      	cmp	r6, #0
 8000630:	d108      	bne.n	8000644 <__lesf2+0x50>
 8000632:	2a00      	cmp	r2, #0
 8000634:	d008      	beq.n	8000648 <__lesf2+0x54>
 8000636:	4283      	cmp	r3, r0
 8000638:	d012      	beq.n	8000660 <__lesf2+0x6c>
 800063a:	2102      	movs	r1, #2
 800063c:	1e58      	subs	r0, r3, #1
 800063e:	4008      	ands	r0, r1
 8000640:	3801      	subs	r0, #1
 8000642:	e000      	b.n	8000646 <__lesf2+0x52>
 8000644:	2002      	movs	r0, #2
 8000646:	bd70      	pop	{r4, r5, r6, pc}
 8000648:	2d00      	cmp	r5, #0
 800064a:	d1f4      	bne.n	8000636 <__lesf2+0x42>
 800064c:	2800      	cmp	r0, #0
 800064e:	d1fa      	bne.n	8000646 <__lesf2+0x52>
 8000650:	2001      	movs	r0, #1
 8000652:	4240      	negs	r0, r0
 8000654:	e7f7      	b.n	8000646 <__lesf2+0x52>
 8000656:	2c00      	cmp	r4, #0
 8000658:	d1ed      	bne.n	8000636 <__lesf2+0x42>
 800065a:	2e00      	cmp	r6, #0
 800065c:	d1eb      	bne.n	8000636 <__lesf2+0x42>
 800065e:	e7ec      	b.n	800063a <__lesf2+0x46>
 8000660:	42a2      	cmp	r2, r4
 8000662:	dc05      	bgt.n	8000670 <__lesf2+0x7c>
 8000664:	dbf2      	blt.n	800064c <__lesf2+0x58>
 8000666:	42b5      	cmp	r5, r6
 8000668:	d802      	bhi.n	8000670 <__lesf2+0x7c>
 800066a:	d3ef      	bcc.n	800064c <__lesf2+0x58>
 800066c:	2000      	movs	r0, #0
 800066e:	e7ea      	b.n	8000646 <__lesf2+0x52>
 8000670:	4243      	negs	r3, r0
 8000672:	4158      	adcs	r0, r3
 8000674:	0040      	lsls	r0, r0, #1
 8000676:	3801      	subs	r0, #1
 8000678:	e7e5      	b.n	8000646 <__lesf2+0x52>
 800067a:	46c0      	nop			; (mov r8, r8)

0800067c <__aeabi_fmul>:
 800067c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800067e:	464f      	mov	r7, r9
 8000680:	4646      	mov	r6, r8
 8000682:	46d6      	mov	lr, sl
 8000684:	0244      	lsls	r4, r0, #9
 8000686:	0045      	lsls	r5, r0, #1
 8000688:	b5c0      	push	{r6, r7, lr}
 800068a:	0a64      	lsrs	r4, r4, #9
 800068c:	1c0f      	adds	r7, r1, #0
 800068e:	0e2d      	lsrs	r5, r5, #24
 8000690:	0fc6      	lsrs	r6, r0, #31
 8000692:	2d00      	cmp	r5, #0
 8000694:	d100      	bne.n	8000698 <__aeabi_fmul+0x1c>
 8000696:	e08d      	b.n	80007b4 <__aeabi_fmul+0x138>
 8000698:	2dff      	cmp	r5, #255	; 0xff
 800069a:	d100      	bne.n	800069e <__aeabi_fmul+0x22>
 800069c:	e092      	b.n	80007c4 <__aeabi_fmul+0x148>
 800069e:	2300      	movs	r3, #0
 80006a0:	2080      	movs	r0, #128	; 0x80
 80006a2:	4699      	mov	r9, r3
 80006a4:	469a      	mov	sl, r3
 80006a6:	00e4      	lsls	r4, r4, #3
 80006a8:	04c0      	lsls	r0, r0, #19
 80006aa:	4304      	orrs	r4, r0
 80006ac:	3d7f      	subs	r5, #127	; 0x7f
 80006ae:	0278      	lsls	r0, r7, #9
 80006b0:	0a43      	lsrs	r3, r0, #9
 80006b2:	4698      	mov	r8, r3
 80006b4:	007b      	lsls	r3, r7, #1
 80006b6:	0e1b      	lsrs	r3, r3, #24
 80006b8:	0fff      	lsrs	r7, r7, #31
 80006ba:	2b00      	cmp	r3, #0
 80006bc:	d100      	bne.n	80006c0 <__aeabi_fmul+0x44>
 80006be:	e070      	b.n	80007a2 <__aeabi_fmul+0x126>
 80006c0:	2bff      	cmp	r3, #255	; 0xff
 80006c2:	d100      	bne.n	80006c6 <__aeabi_fmul+0x4a>
 80006c4:	e086      	b.n	80007d4 <__aeabi_fmul+0x158>
 80006c6:	4642      	mov	r2, r8
 80006c8:	00d0      	lsls	r0, r2, #3
 80006ca:	2280      	movs	r2, #128	; 0x80
 80006cc:	3b7f      	subs	r3, #127	; 0x7f
 80006ce:	18ed      	adds	r5, r5, r3
 80006d0:	2300      	movs	r3, #0
 80006d2:	04d2      	lsls	r2, r2, #19
 80006d4:	4302      	orrs	r2, r0
 80006d6:	4690      	mov	r8, r2
 80006d8:	469c      	mov	ip, r3
 80006da:	0031      	movs	r1, r6
 80006dc:	464b      	mov	r3, r9
 80006de:	4079      	eors	r1, r7
 80006e0:	1c68      	adds	r0, r5, #1
 80006e2:	2b0f      	cmp	r3, #15
 80006e4:	d81c      	bhi.n	8000720 <__aeabi_fmul+0xa4>
 80006e6:	4a76      	ldr	r2, [pc, #472]	; (80008c0 <__aeabi_fmul+0x244>)
 80006e8:	009b      	lsls	r3, r3, #2
 80006ea:	58d3      	ldr	r3, [r2, r3]
 80006ec:	469f      	mov	pc, r3
 80006ee:	0039      	movs	r1, r7
 80006f0:	4644      	mov	r4, r8
 80006f2:	46e2      	mov	sl, ip
 80006f4:	4653      	mov	r3, sl
 80006f6:	2b02      	cmp	r3, #2
 80006f8:	d00f      	beq.n	800071a <__aeabi_fmul+0x9e>
 80006fa:	2b03      	cmp	r3, #3
 80006fc:	d100      	bne.n	8000700 <__aeabi_fmul+0x84>
 80006fe:	e0d7      	b.n	80008b0 <__aeabi_fmul+0x234>
 8000700:	2b01      	cmp	r3, #1
 8000702:	d137      	bne.n	8000774 <__aeabi_fmul+0xf8>
 8000704:	2000      	movs	r0, #0
 8000706:	2400      	movs	r4, #0
 8000708:	05c0      	lsls	r0, r0, #23
 800070a:	4320      	orrs	r0, r4
 800070c:	07c9      	lsls	r1, r1, #31
 800070e:	4308      	orrs	r0, r1
 8000710:	bce0      	pop	{r5, r6, r7}
 8000712:	46ba      	mov	sl, r7
 8000714:	46b1      	mov	r9, r6
 8000716:	46a8      	mov	r8, r5
 8000718:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800071a:	20ff      	movs	r0, #255	; 0xff
 800071c:	2400      	movs	r4, #0
 800071e:	e7f3      	b.n	8000708 <__aeabi_fmul+0x8c>
 8000720:	0c26      	lsrs	r6, r4, #16
 8000722:	0424      	lsls	r4, r4, #16
 8000724:	0c22      	lsrs	r2, r4, #16
 8000726:	4644      	mov	r4, r8
 8000728:	0424      	lsls	r4, r4, #16
 800072a:	0c24      	lsrs	r4, r4, #16
 800072c:	4643      	mov	r3, r8
 800072e:	0027      	movs	r7, r4
 8000730:	0c1b      	lsrs	r3, r3, #16
 8000732:	4357      	muls	r7, r2
 8000734:	4374      	muls	r4, r6
 8000736:	435a      	muls	r2, r3
 8000738:	435e      	muls	r6, r3
 800073a:	1912      	adds	r2, r2, r4
 800073c:	0c3b      	lsrs	r3, r7, #16
 800073e:	189b      	adds	r3, r3, r2
 8000740:	429c      	cmp	r4, r3
 8000742:	d903      	bls.n	800074c <__aeabi_fmul+0xd0>
 8000744:	2280      	movs	r2, #128	; 0x80
 8000746:	0252      	lsls	r2, r2, #9
 8000748:	4694      	mov	ip, r2
 800074a:	4466      	add	r6, ip
 800074c:	043f      	lsls	r7, r7, #16
 800074e:	041a      	lsls	r2, r3, #16
 8000750:	0c3f      	lsrs	r7, r7, #16
 8000752:	19d2      	adds	r2, r2, r7
 8000754:	0194      	lsls	r4, r2, #6
 8000756:	1e67      	subs	r7, r4, #1
 8000758:	41bc      	sbcs	r4, r7
 800075a:	0c1b      	lsrs	r3, r3, #16
 800075c:	0e92      	lsrs	r2, r2, #26
 800075e:	199b      	adds	r3, r3, r6
 8000760:	4314      	orrs	r4, r2
 8000762:	019b      	lsls	r3, r3, #6
 8000764:	431c      	orrs	r4, r3
 8000766:	011b      	lsls	r3, r3, #4
 8000768:	d400      	bmi.n	800076c <__aeabi_fmul+0xf0>
 800076a:	e09b      	b.n	80008a4 <__aeabi_fmul+0x228>
 800076c:	2301      	movs	r3, #1
 800076e:	0862      	lsrs	r2, r4, #1
 8000770:	401c      	ands	r4, r3
 8000772:	4314      	orrs	r4, r2
 8000774:	0002      	movs	r2, r0
 8000776:	327f      	adds	r2, #127	; 0x7f
 8000778:	2a00      	cmp	r2, #0
 800077a:	dd64      	ble.n	8000846 <__aeabi_fmul+0x1ca>
 800077c:	0763      	lsls	r3, r4, #29
 800077e:	d004      	beq.n	800078a <__aeabi_fmul+0x10e>
 8000780:	230f      	movs	r3, #15
 8000782:	4023      	ands	r3, r4
 8000784:	2b04      	cmp	r3, #4
 8000786:	d000      	beq.n	800078a <__aeabi_fmul+0x10e>
 8000788:	3404      	adds	r4, #4
 800078a:	0123      	lsls	r3, r4, #4
 800078c:	d503      	bpl.n	8000796 <__aeabi_fmul+0x11a>
 800078e:	0002      	movs	r2, r0
 8000790:	4b4c      	ldr	r3, [pc, #304]	; (80008c4 <__aeabi_fmul+0x248>)
 8000792:	3280      	adds	r2, #128	; 0x80
 8000794:	401c      	ands	r4, r3
 8000796:	2afe      	cmp	r2, #254	; 0xfe
 8000798:	dcbf      	bgt.n	800071a <__aeabi_fmul+0x9e>
 800079a:	01a4      	lsls	r4, r4, #6
 800079c:	0a64      	lsrs	r4, r4, #9
 800079e:	b2d0      	uxtb	r0, r2
 80007a0:	e7b2      	b.n	8000708 <__aeabi_fmul+0x8c>
 80007a2:	4643      	mov	r3, r8
 80007a4:	2b00      	cmp	r3, #0
 80007a6:	d13d      	bne.n	8000824 <__aeabi_fmul+0x1a8>
 80007a8:	464a      	mov	r2, r9
 80007aa:	3301      	adds	r3, #1
 80007ac:	431a      	orrs	r2, r3
 80007ae:	4691      	mov	r9, r2
 80007b0:	469c      	mov	ip, r3
 80007b2:	e792      	b.n	80006da <__aeabi_fmul+0x5e>
 80007b4:	2c00      	cmp	r4, #0
 80007b6:	d129      	bne.n	800080c <__aeabi_fmul+0x190>
 80007b8:	2304      	movs	r3, #4
 80007ba:	4699      	mov	r9, r3
 80007bc:	3b03      	subs	r3, #3
 80007be:	2500      	movs	r5, #0
 80007c0:	469a      	mov	sl, r3
 80007c2:	e774      	b.n	80006ae <__aeabi_fmul+0x32>
 80007c4:	2c00      	cmp	r4, #0
 80007c6:	d11b      	bne.n	8000800 <__aeabi_fmul+0x184>
 80007c8:	2308      	movs	r3, #8
 80007ca:	4699      	mov	r9, r3
 80007cc:	3b06      	subs	r3, #6
 80007ce:	25ff      	movs	r5, #255	; 0xff
 80007d0:	469a      	mov	sl, r3
 80007d2:	e76c      	b.n	80006ae <__aeabi_fmul+0x32>
 80007d4:	4643      	mov	r3, r8
 80007d6:	35ff      	adds	r5, #255	; 0xff
 80007d8:	2b00      	cmp	r3, #0
 80007da:	d10b      	bne.n	80007f4 <__aeabi_fmul+0x178>
 80007dc:	2302      	movs	r3, #2
 80007de:	464a      	mov	r2, r9
 80007e0:	431a      	orrs	r2, r3
 80007e2:	4691      	mov	r9, r2
 80007e4:	469c      	mov	ip, r3
 80007e6:	e778      	b.n	80006da <__aeabi_fmul+0x5e>
 80007e8:	4653      	mov	r3, sl
 80007ea:	0031      	movs	r1, r6
 80007ec:	2b02      	cmp	r3, #2
 80007ee:	d000      	beq.n	80007f2 <__aeabi_fmul+0x176>
 80007f0:	e783      	b.n	80006fa <__aeabi_fmul+0x7e>
 80007f2:	e792      	b.n	800071a <__aeabi_fmul+0x9e>
 80007f4:	2303      	movs	r3, #3
 80007f6:	464a      	mov	r2, r9
 80007f8:	431a      	orrs	r2, r3
 80007fa:	4691      	mov	r9, r2
 80007fc:	469c      	mov	ip, r3
 80007fe:	e76c      	b.n	80006da <__aeabi_fmul+0x5e>
 8000800:	230c      	movs	r3, #12
 8000802:	4699      	mov	r9, r3
 8000804:	3b09      	subs	r3, #9
 8000806:	25ff      	movs	r5, #255	; 0xff
 8000808:	469a      	mov	sl, r3
 800080a:	e750      	b.n	80006ae <__aeabi_fmul+0x32>
 800080c:	0020      	movs	r0, r4
 800080e:	f001 fed7 	bl	80025c0 <__clzsi2>
 8000812:	2576      	movs	r5, #118	; 0x76
 8000814:	1f43      	subs	r3, r0, #5
 8000816:	409c      	lsls	r4, r3
 8000818:	2300      	movs	r3, #0
 800081a:	426d      	negs	r5, r5
 800081c:	4699      	mov	r9, r3
 800081e:	469a      	mov	sl, r3
 8000820:	1a2d      	subs	r5, r5, r0
 8000822:	e744      	b.n	80006ae <__aeabi_fmul+0x32>
 8000824:	4640      	mov	r0, r8
 8000826:	f001 fecb 	bl	80025c0 <__clzsi2>
 800082a:	4642      	mov	r2, r8
 800082c:	1f43      	subs	r3, r0, #5
 800082e:	409a      	lsls	r2, r3
 8000830:	2300      	movs	r3, #0
 8000832:	1a2d      	subs	r5, r5, r0
 8000834:	4690      	mov	r8, r2
 8000836:	469c      	mov	ip, r3
 8000838:	3d76      	subs	r5, #118	; 0x76
 800083a:	e74e      	b.n	80006da <__aeabi_fmul+0x5e>
 800083c:	2480      	movs	r4, #128	; 0x80
 800083e:	2100      	movs	r1, #0
 8000840:	20ff      	movs	r0, #255	; 0xff
 8000842:	03e4      	lsls	r4, r4, #15
 8000844:	e760      	b.n	8000708 <__aeabi_fmul+0x8c>
 8000846:	2301      	movs	r3, #1
 8000848:	1a9b      	subs	r3, r3, r2
 800084a:	2b1b      	cmp	r3, #27
 800084c:	dd00      	ble.n	8000850 <__aeabi_fmul+0x1d4>
 800084e:	e759      	b.n	8000704 <__aeabi_fmul+0x88>
 8000850:	0022      	movs	r2, r4
 8000852:	309e      	adds	r0, #158	; 0x9e
 8000854:	40da      	lsrs	r2, r3
 8000856:	4084      	lsls	r4, r0
 8000858:	0013      	movs	r3, r2
 800085a:	1e62      	subs	r2, r4, #1
 800085c:	4194      	sbcs	r4, r2
 800085e:	431c      	orrs	r4, r3
 8000860:	0763      	lsls	r3, r4, #29
 8000862:	d004      	beq.n	800086e <__aeabi_fmul+0x1f2>
 8000864:	230f      	movs	r3, #15
 8000866:	4023      	ands	r3, r4
 8000868:	2b04      	cmp	r3, #4
 800086a:	d000      	beq.n	800086e <__aeabi_fmul+0x1f2>
 800086c:	3404      	adds	r4, #4
 800086e:	0163      	lsls	r3, r4, #5
 8000870:	d51a      	bpl.n	80008a8 <__aeabi_fmul+0x22c>
 8000872:	2001      	movs	r0, #1
 8000874:	2400      	movs	r4, #0
 8000876:	e747      	b.n	8000708 <__aeabi_fmul+0x8c>
 8000878:	2080      	movs	r0, #128	; 0x80
 800087a:	03c0      	lsls	r0, r0, #15
 800087c:	4204      	tst	r4, r0
 800087e:	d009      	beq.n	8000894 <__aeabi_fmul+0x218>
 8000880:	4643      	mov	r3, r8
 8000882:	4203      	tst	r3, r0
 8000884:	d106      	bne.n	8000894 <__aeabi_fmul+0x218>
 8000886:	4644      	mov	r4, r8
 8000888:	4304      	orrs	r4, r0
 800088a:	0264      	lsls	r4, r4, #9
 800088c:	0039      	movs	r1, r7
 800088e:	20ff      	movs	r0, #255	; 0xff
 8000890:	0a64      	lsrs	r4, r4, #9
 8000892:	e739      	b.n	8000708 <__aeabi_fmul+0x8c>
 8000894:	2080      	movs	r0, #128	; 0x80
 8000896:	03c0      	lsls	r0, r0, #15
 8000898:	4304      	orrs	r4, r0
 800089a:	0264      	lsls	r4, r4, #9
 800089c:	0031      	movs	r1, r6
 800089e:	20ff      	movs	r0, #255	; 0xff
 80008a0:	0a64      	lsrs	r4, r4, #9
 80008a2:	e731      	b.n	8000708 <__aeabi_fmul+0x8c>
 80008a4:	0028      	movs	r0, r5
 80008a6:	e765      	b.n	8000774 <__aeabi_fmul+0xf8>
 80008a8:	01a4      	lsls	r4, r4, #6
 80008aa:	2000      	movs	r0, #0
 80008ac:	0a64      	lsrs	r4, r4, #9
 80008ae:	e72b      	b.n	8000708 <__aeabi_fmul+0x8c>
 80008b0:	2080      	movs	r0, #128	; 0x80
 80008b2:	03c0      	lsls	r0, r0, #15
 80008b4:	4304      	orrs	r4, r0
 80008b6:	0264      	lsls	r4, r4, #9
 80008b8:	20ff      	movs	r0, #255	; 0xff
 80008ba:	0a64      	lsrs	r4, r4, #9
 80008bc:	e724      	b.n	8000708 <__aeabi_fmul+0x8c>
 80008be:	46c0      	nop			; (mov r8, r8)
 80008c0:	08008bac 	.word	0x08008bac
 80008c4:	f7ffffff 	.word	0xf7ffffff

080008c8 <__aeabi_i2f>:
 80008c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ca:	2800      	cmp	r0, #0
 80008cc:	d013      	beq.n	80008f6 <__aeabi_i2f+0x2e>
 80008ce:	17c3      	asrs	r3, r0, #31
 80008d0:	18c6      	adds	r6, r0, r3
 80008d2:	405e      	eors	r6, r3
 80008d4:	0fc4      	lsrs	r4, r0, #31
 80008d6:	0030      	movs	r0, r6
 80008d8:	f001 fe72 	bl	80025c0 <__clzsi2>
 80008dc:	239e      	movs	r3, #158	; 0x9e
 80008de:	0005      	movs	r5, r0
 80008e0:	1a1b      	subs	r3, r3, r0
 80008e2:	2b96      	cmp	r3, #150	; 0x96
 80008e4:	dc0f      	bgt.n	8000906 <__aeabi_i2f+0x3e>
 80008e6:	2808      	cmp	r0, #8
 80008e8:	dd01      	ble.n	80008ee <__aeabi_i2f+0x26>
 80008ea:	3d08      	subs	r5, #8
 80008ec:	40ae      	lsls	r6, r5
 80008ee:	0276      	lsls	r6, r6, #9
 80008f0:	0a76      	lsrs	r6, r6, #9
 80008f2:	b2d8      	uxtb	r0, r3
 80008f4:	e002      	b.n	80008fc <__aeabi_i2f+0x34>
 80008f6:	2400      	movs	r4, #0
 80008f8:	2000      	movs	r0, #0
 80008fa:	2600      	movs	r6, #0
 80008fc:	05c0      	lsls	r0, r0, #23
 80008fe:	4330      	orrs	r0, r6
 8000900:	07e4      	lsls	r4, r4, #31
 8000902:	4320      	orrs	r0, r4
 8000904:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000906:	2b99      	cmp	r3, #153	; 0x99
 8000908:	dd0c      	ble.n	8000924 <__aeabi_i2f+0x5c>
 800090a:	2205      	movs	r2, #5
 800090c:	0031      	movs	r1, r6
 800090e:	1a12      	subs	r2, r2, r0
 8000910:	40d1      	lsrs	r1, r2
 8000912:	000a      	movs	r2, r1
 8000914:	0001      	movs	r1, r0
 8000916:	0030      	movs	r0, r6
 8000918:	311b      	adds	r1, #27
 800091a:	4088      	lsls	r0, r1
 800091c:	1e41      	subs	r1, r0, #1
 800091e:	4188      	sbcs	r0, r1
 8000920:	4302      	orrs	r2, r0
 8000922:	0016      	movs	r6, r2
 8000924:	2d05      	cmp	r5, #5
 8000926:	dc12      	bgt.n	800094e <__aeabi_i2f+0x86>
 8000928:	0031      	movs	r1, r6
 800092a:	4f0d      	ldr	r7, [pc, #52]	; (8000960 <__aeabi_i2f+0x98>)
 800092c:	4039      	ands	r1, r7
 800092e:	0772      	lsls	r2, r6, #29
 8000930:	d009      	beq.n	8000946 <__aeabi_i2f+0x7e>
 8000932:	200f      	movs	r0, #15
 8000934:	4030      	ands	r0, r6
 8000936:	2804      	cmp	r0, #4
 8000938:	d005      	beq.n	8000946 <__aeabi_i2f+0x7e>
 800093a:	3104      	adds	r1, #4
 800093c:	014a      	lsls	r2, r1, #5
 800093e:	d502      	bpl.n	8000946 <__aeabi_i2f+0x7e>
 8000940:	239f      	movs	r3, #159	; 0x9f
 8000942:	4039      	ands	r1, r7
 8000944:	1b5b      	subs	r3, r3, r5
 8000946:	0189      	lsls	r1, r1, #6
 8000948:	0a4e      	lsrs	r6, r1, #9
 800094a:	b2d8      	uxtb	r0, r3
 800094c:	e7d6      	b.n	80008fc <__aeabi_i2f+0x34>
 800094e:	1f6a      	subs	r2, r5, #5
 8000950:	4096      	lsls	r6, r2
 8000952:	0031      	movs	r1, r6
 8000954:	4f02      	ldr	r7, [pc, #8]	; (8000960 <__aeabi_i2f+0x98>)
 8000956:	4039      	ands	r1, r7
 8000958:	0772      	lsls	r2, r6, #29
 800095a:	d0f4      	beq.n	8000946 <__aeabi_i2f+0x7e>
 800095c:	e7e9      	b.n	8000932 <__aeabi_i2f+0x6a>
 800095e:	46c0      	nop			; (mov r8, r8)
 8000960:	fbffffff 	.word	0xfbffffff

08000964 <__aeabi_dadd>:
 8000964:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000966:	464f      	mov	r7, r9
 8000968:	4646      	mov	r6, r8
 800096a:	46d6      	mov	lr, sl
 800096c:	000d      	movs	r5, r1
 800096e:	0004      	movs	r4, r0
 8000970:	b5c0      	push	{r6, r7, lr}
 8000972:	001f      	movs	r7, r3
 8000974:	0011      	movs	r1, r2
 8000976:	0328      	lsls	r0, r5, #12
 8000978:	0f62      	lsrs	r2, r4, #29
 800097a:	0a40      	lsrs	r0, r0, #9
 800097c:	4310      	orrs	r0, r2
 800097e:	007a      	lsls	r2, r7, #1
 8000980:	0d52      	lsrs	r2, r2, #21
 8000982:	00e3      	lsls	r3, r4, #3
 8000984:	033c      	lsls	r4, r7, #12
 8000986:	4691      	mov	r9, r2
 8000988:	0a64      	lsrs	r4, r4, #9
 800098a:	0ffa      	lsrs	r2, r7, #31
 800098c:	0f4f      	lsrs	r7, r1, #29
 800098e:	006e      	lsls	r6, r5, #1
 8000990:	4327      	orrs	r7, r4
 8000992:	4692      	mov	sl, r2
 8000994:	46b8      	mov	r8, r7
 8000996:	0d76      	lsrs	r6, r6, #21
 8000998:	0fed      	lsrs	r5, r5, #31
 800099a:	00c9      	lsls	r1, r1, #3
 800099c:	4295      	cmp	r5, r2
 800099e:	d100      	bne.n	80009a2 <__aeabi_dadd+0x3e>
 80009a0:	e099      	b.n	8000ad6 <__aeabi_dadd+0x172>
 80009a2:	464c      	mov	r4, r9
 80009a4:	1b34      	subs	r4, r6, r4
 80009a6:	46a4      	mov	ip, r4
 80009a8:	2c00      	cmp	r4, #0
 80009aa:	dc00      	bgt.n	80009ae <__aeabi_dadd+0x4a>
 80009ac:	e07c      	b.n	8000aa8 <__aeabi_dadd+0x144>
 80009ae:	464a      	mov	r2, r9
 80009b0:	2a00      	cmp	r2, #0
 80009b2:	d100      	bne.n	80009b6 <__aeabi_dadd+0x52>
 80009b4:	e0b8      	b.n	8000b28 <__aeabi_dadd+0x1c4>
 80009b6:	4ac5      	ldr	r2, [pc, #788]	; (8000ccc <__aeabi_dadd+0x368>)
 80009b8:	4296      	cmp	r6, r2
 80009ba:	d100      	bne.n	80009be <__aeabi_dadd+0x5a>
 80009bc:	e11c      	b.n	8000bf8 <__aeabi_dadd+0x294>
 80009be:	2280      	movs	r2, #128	; 0x80
 80009c0:	003c      	movs	r4, r7
 80009c2:	0412      	lsls	r2, r2, #16
 80009c4:	4314      	orrs	r4, r2
 80009c6:	46a0      	mov	r8, r4
 80009c8:	4662      	mov	r2, ip
 80009ca:	2a38      	cmp	r2, #56	; 0x38
 80009cc:	dd00      	ble.n	80009d0 <__aeabi_dadd+0x6c>
 80009ce:	e161      	b.n	8000c94 <__aeabi_dadd+0x330>
 80009d0:	2a1f      	cmp	r2, #31
 80009d2:	dd00      	ble.n	80009d6 <__aeabi_dadd+0x72>
 80009d4:	e1cc      	b.n	8000d70 <__aeabi_dadd+0x40c>
 80009d6:	4664      	mov	r4, ip
 80009d8:	2220      	movs	r2, #32
 80009da:	1b12      	subs	r2, r2, r4
 80009dc:	4644      	mov	r4, r8
 80009de:	4094      	lsls	r4, r2
 80009e0:	000f      	movs	r7, r1
 80009e2:	46a1      	mov	r9, r4
 80009e4:	4664      	mov	r4, ip
 80009e6:	4091      	lsls	r1, r2
 80009e8:	40e7      	lsrs	r7, r4
 80009ea:	464c      	mov	r4, r9
 80009ec:	1e4a      	subs	r2, r1, #1
 80009ee:	4191      	sbcs	r1, r2
 80009f0:	433c      	orrs	r4, r7
 80009f2:	4642      	mov	r2, r8
 80009f4:	4321      	orrs	r1, r4
 80009f6:	4664      	mov	r4, ip
 80009f8:	40e2      	lsrs	r2, r4
 80009fa:	1a80      	subs	r0, r0, r2
 80009fc:	1a5c      	subs	r4, r3, r1
 80009fe:	42a3      	cmp	r3, r4
 8000a00:	419b      	sbcs	r3, r3
 8000a02:	425f      	negs	r7, r3
 8000a04:	1bc7      	subs	r7, r0, r7
 8000a06:	023b      	lsls	r3, r7, #8
 8000a08:	d400      	bmi.n	8000a0c <__aeabi_dadd+0xa8>
 8000a0a:	e0d0      	b.n	8000bae <__aeabi_dadd+0x24a>
 8000a0c:	027f      	lsls	r7, r7, #9
 8000a0e:	0a7f      	lsrs	r7, r7, #9
 8000a10:	2f00      	cmp	r7, #0
 8000a12:	d100      	bne.n	8000a16 <__aeabi_dadd+0xb2>
 8000a14:	e0ff      	b.n	8000c16 <__aeabi_dadd+0x2b2>
 8000a16:	0038      	movs	r0, r7
 8000a18:	f001 fdd2 	bl	80025c0 <__clzsi2>
 8000a1c:	0001      	movs	r1, r0
 8000a1e:	3908      	subs	r1, #8
 8000a20:	2320      	movs	r3, #32
 8000a22:	0022      	movs	r2, r4
 8000a24:	1a5b      	subs	r3, r3, r1
 8000a26:	408f      	lsls	r7, r1
 8000a28:	40da      	lsrs	r2, r3
 8000a2a:	408c      	lsls	r4, r1
 8000a2c:	4317      	orrs	r7, r2
 8000a2e:	42b1      	cmp	r1, r6
 8000a30:	da00      	bge.n	8000a34 <__aeabi_dadd+0xd0>
 8000a32:	e0ff      	b.n	8000c34 <__aeabi_dadd+0x2d0>
 8000a34:	1b89      	subs	r1, r1, r6
 8000a36:	1c4b      	adds	r3, r1, #1
 8000a38:	2b1f      	cmp	r3, #31
 8000a3a:	dd00      	ble.n	8000a3e <__aeabi_dadd+0xda>
 8000a3c:	e0a8      	b.n	8000b90 <__aeabi_dadd+0x22c>
 8000a3e:	2220      	movs	r2, #32
 8000a40:	0039      	movs	r1, r7
 8000a42:	1ad2      	subs	r2, r2, r3
 8000a44:	0020      	movs	r0, r4
 8000a46:	4094      	lsls	r4, r2
 8000a48:	4091      	lsls	r1, r2
 8000a4a:	40d8      	lsrs	r0, r3
 8000a4c:	1e62      	subs	r2, r4, #1
 8000a4e:	4194      	sbcs	r4, r2
 8000a50:	40df      	lsrs	r7, r3
 8000a52:	2600      	movs	r6, #0
 8000a54:	4301      	orrs	r1, r0
 8000a56:	430c      	orrs	r4, r1
 8000a58:	0763      	lsls	r3, r4, #29
 8000a5a:	d009      	beq.n	8000a70 <__aeabi_dadd+0x10c>
 8000a5c:	230f      	movs	r3, #15
 8000a5e:	4023      	ands	r3, r4
 8000a60:	2b04      	cmp	r3, #4
 8000a62:	d005      	beq.n	8000a70 <__aeabi_dadd+0x10c>
 8000a64:	1d23      	adds	r3, r4, #4
 8000a66:	42a3      	cmp	r3, r4
 8000a68:	41a4      	sbcs	r4, r4
 8000a6a:	4264      	negs	r4, r4
 8000a6c:	193f      	adds	r7, r7, r4
 8000a6e:	001c      	movs	r4, r3
 8000a70:	023b      	lsls	r3, r7, #8
 8000a72:	d400      	bmi.n	8000a76 <__aeabi_dadd+0x112>
 8000a74:	e09e      	b.n	8000bb4 <__aeabi_dadd+0x250>
 8000a76:	4b95      	ldr	r3, [pc, #596]	; (8000ccc <__aeabi_dadd+0x368>)
 8000a78:	3601      	adds	r6, #1
 8000a7a:	429e      	cmp	r6, r3
 8000a7c:	d100      	bne.n	8000a80 <__aeabi_dadd+0x11c>
 8000a7e:	e0b7      	b.n	8000bf0 <__aeabi_dadd+0x28c>
 8000a80:	4a93      	ldr	r2, [pc, #588]	; (8000cd0 <__aeabi_dadd+0x36c>)
 8000a82:	08e4      	lsrs	r4, r4, #3
 8000a84:	4017      	ands	r7, r2
 8000a86:	077b      	lsls	r3, r7, #29
 8000a88:	0571      	lsls	r1, r6, #21
 8000a8a:	027f      	lsls	r7, r7, #9
 8000a8c:	4323      	orrs	r3, r4
 8000a8e:	0b3f      	lsrs	r7, r7, #12
 8000a90:	0d4a      	lsrs	r2, r1, #21
 8000a92:	0512      	lsls	r2, r2, #20
 8000a94:	433a      	orrs	r2, r7
 8000a96:	07ed      	lsls	r5, r5, #31
 8000a98:	432a      	orrs	r2, r5
 8000a9a:	0018      	movs	r0, r3
 8000a9c:	0011      	movs	r1, r2
 8000a9e:	bce0      	pop	{r5, r6, r7}
 8000aa0:	46ba      	mov	sl, r7
 8000aa2:	46b1      	mov	r9, r6
 8000aa4:	46a8      	mov	r8, r5
 8000aa6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000aa8:	2c00      	cmp	r4, #0
 8000aaa:	d04b      	beq.n	8000b44 <__aeabi_dadd+0x1e0>
 8000aac:	464c      	mov	r4, r9
 8000aae:	1ba4      	subs	r4, r4, r6
 8000ab0:	46a4      	mov	ip, r4
 8000ab2:	2e00      	cmp	r6, #0
 8000ab4:	d000      	beq.n	8000ab8 <__aeabi_dadd+0x154>
 8000ab6:	e123      	b.n	8000d00 <__aeabi_dadd+0x39c>
 8000ab8:	0004      	movs	r4, r0
 8000aba:	431c      	orrs	r4, r3
 8000abc:	d100      	bne.n	8000ac0 <__aeabi_dadd+0x15c>
 8000abe:	e1af      	b.n	8000e20 <__aeabi_dadd+0x4bc>
 8000ac0:	4662      	mov	r2, ip
 8000ac2:	1e54      	subs	r4, r2, #1
 8000ac4:	2a01      	cmp	r2, #1
 8000ac6:	d100      	bne.n	8000aca <__aeabi_dadd+0x166>
 8000ac8:	e215      	b.n	8000ef6 <__aeabi_dadd+0x592>
 8000aca:	4d80      	ldr	r5, [pc, #512]	; (8000ccc <__aeabi_dadd+0x368>)
 8000acc:	45ac      	cmp	ip, r5
 8000ace:	d100      	bne.n	8000ad2 <__aeabi_dadd+0x16e>
 8000ad0:	e1c8      	b.n	8000e64 <__aeabi_dadd+0x500>
 8000ad2:	46a4      	mov	ip, r4
 8000ad4:	e11b      	b.n	8000d0e <__aeabi_dadd+0x3aa>
 8000ad6:	464a      	mov	r2, r9
 8000ad8:	1ab2      	subs	r2, r6, r2
 8000ada:	4694      	mov	ip, r2
 8000adc:	2a00      	cmp	r2, #0
 8000ade:	dc00      	bgt.n	8000ae2 <__aeabi_dadd+0x17e>
 8000ae0:	e0ac      	b.n	8000c3c <__aeabi_dadd+0x2d8>
 8000ae2:	464a      	mov	r2, r9
 8000ae4:	2a00      	cmp	r2, #0
 8000ae6:	d043      	beq.n	8000b70 <__aeabi_dadd+0x20c>
 8000ae8:	4a78      	ldr	r2, [pc, #480]	; (8000ccc <__aeabi_dadd+0x368>)
 8000aea:	4296      	cmp	r6, r2
 8000aec:	d100      	bne.n	8000af0 <__aeabi_dadd+0x18c>
 8000aee:	e1af      	b.n	8000e50 <__aeabi_dadd+0x4ec>
 8000af0:	2280      	movs	r2, #128	; 0x80
 8000af2:	003c      	movs	r4, r7
 8000af4:	0412      	lsls	r2, r2, #16
 8000af6:	4314      	orrs	r4, r2
 8000af8:	46a0      	mov	r8, r4
 8000afa:	4662      	mov	r2, ip
 8000afc:	2a38      	cmp	r2, #56	; 0x38
 8000afe:	dc67      	bgt.n	8000bd0 <__aeabi_dadd+0x26c>
 8000b00:	2a1f      	cmp	r2, #31
 8000b02:	dc00      	bgt.n	8000b06 <__aeabi_dadd+0x1a2>
 8000b04:	e15f      	b.n	8000dc6 <__aeabi_dadd+0x462>
 8000b06:	4647      	mov	r7, r8
 8000b08:	3a20      	subs	r2, #32
 8000b0a:	40d7      	lsrs	r7, r2
 8000b0c:	4662      	mov	r2, ip
 8000b0e:	2a20      	cmp	r2, #32
 8000b10:	d005      	beq.n	8000b1e <__aeabi_dadd+0x1ba>
 8000b12:	4664      	mov	r4, ip
 8000b14:	2240      	movs	r2, #64	; 0x40
 8000b16:	1b12      	subs	r2, r2, r4
 8000b18:	4644      	mov	r4, r8
 8000b1a:	4094      	lsls	r4, r2
 8000b1c:	4321      	orrs	r1, r4
 8000b1e:	1e4a      	subs	r2, r1, #1
 8000b20:	4191      	sbcs	r1, r2
 8000b22:	000c      	movs	r4, r1
 8000b24:	433c      	orrs	r4, r7
 8000b26:	e057      	b.n	8000bd8 <__aeabi_dadd+0x274>
 8000b28:	003a      	movs	r2, r7
 8000b2a:	430a      	orrs	r2, r1
 8000b2c:	d100      	bne.n	8000b30 <__aeabi_dadd+0x1cc>
 8000b2e:	e105      	b.n	8000d3c <__aeabi_dadd+0x3d8>
 8000b30:	0022      	movs	r2, r4
 8000b32:	3a01      	subs	r2, #1
 8000b34:	2c01      	cmp	r4, #1
 8000b36:	d100      	bne.n	8000b3a <__aeabi_dadd+0x1d6>
 8000b38:	e182      	b.n	8000e40 <__aeabi_dadd+0x4dc>
 8000b3a:	4c64      	ldr	r4, [pc, #400]	; (8000ccc <__aeabi_dadd+0x368>)
 8000b3c:	45a4      	cmp	ip, r4
 8000b3e:	d05b      	beq.n	8000bf8 <__aeabi_dadd+0x294>
 8000b40:	4694      	mov	ip, r2
 8000b42:	e741      	b.n	80009c8 <__aeabi_dadd+0x64>
 8000b44:	4c63      	ldr	r4, [pc, #396]	; (8000cd4 <__aeabi_dadd+0x370>)
 8000b46:	1c77      	adds	r7, r6, #1
 8000b48:	4227      	tst	r7, r4
 8000b4a:	d000      	beq.n	8000b4e <__aeabi_dadd+0x1ea>
 8000b4c:	e0c4      	b.n	8000cd8 <__aeabi_dadd+0x374>
 8000b4e:	0004      	movs	r4, r0
 8000b50:	431c      	orrs	r4, r3
 8000b52:	2e00      	cmp	r6, #0
 8000b54:	d000      	beq.n	8000b58 <__aeabi_dadd+0x1f4>
 8000b56:	e169      	b.n	8000e2c <__aeabi_dadd+0x4c8>
 8000b58:	2c00      	cmp	r4, #0
 8000b5a:	d100      	bne.n	8000b5e <__aeabi_dadd+0x1fa>
 8000b5c:	e1bf      	b.n	8000ede <__aeabi_dadd+0x57a>
 8000b5e:	4644      	mov	r4, r8
 8000b60:	430c      	orrs	r4, r1
 8000b62:	d000      	beq.n	8000b66 <__aeabi_dadd+0x202>
 8000b64:	e1d0      	b.n	8000f08 <__aeabi_dadd+0x5a4>
 8000b66:	0742      	lsls	r2, r0, #29
 8000b68:	08db      	lsrs	r3, r3, #3
 8000b6a:	4313      	orrs	r3, r2
 8000b6c:	08c0      	lsrs	r0, r0, #3
 8000b6e:	e029      	b.n	8000bc4 <__aeabi_dadd+0x260>
 8000b70:	003a      	movs	r2, r7
 8000b72:	430a      	orrs	r2, r1
 8000b74:	d100      	bne.n	8000b78 <__aeabi_dadd+0x214>
 8000b76:	e170      	b.n	8000e5a <__aeabi_dadd+0x4f6>
 8000b78:	4662      	mov	r2, ip
 8000b7a:	4664      	mov	r4, ip
 8000b7c:	3a01      	subs	r2, #1
 8000b7e:	2c01      	cmp	r4, #1
 8000b80:	d100      	bne.n	8000b84 <__aeabi_dadd+0x220>
 8000b82:	e0e0      	b.n	8000d46 <__aeabi_dadd+0x3e2>
 8000b84:	4c51      	ldr	r4, [pc, #324]	; (8000ccc <__aeabi_dadd+0x368>)
 8000b86:	45a4      	cmp	ip, r4
 8000b88:	d100      	bne.n	8000b8c <__aeabi_dadd+0x228>
 8000b8a:	e161      	b.n	8000e50 <__aeabi_dadd+0x4ec>
 8000b8c:	4694      	mov	ip, r2
 8000b8e:	e7b4      	b.n	8000afa <__aeabi_dadd+0x196>
 8000b90:	003a      	movs	r2, r7
 8000b92:	391f      	subs	r1, #31
 8000b94:	40ca      	lsrs	r2, r1
 8000b96:	0011      	movs	r1, r2
 8000b98:	2b20      	cmp	r3, #32
 8000b9a:	d003      	beq.n	8000ba4 <__aeabi_dadd+0x240>
 8000b9c:	2240      	movs	r2, #64	; 0x40
 8000b9e:	1ad3      	subs	r3, r2, r3
 8000ba0:	409f      	lsls	r7, r3
 8000ba2:	433c      	orrs	r4, r7
 8000ba4:	1e63      	subs	r3, r4, #1
 8000ba6:	419c      	sbcs	r4, r3
 8000ba8:	2700      	movs	r7, #0
 8000baa:	2600      	movs	r6, #0
 8000bac:	430c      	orrs	r4, r1
 8000bae:	0763      	lsls	r3, r4, #29
 8000bb0:	d000      	beq.n	8000bb4 <__aeabi_dadd+0x250>
 8000bb2:	e753      	b.n	8000a5c <__aeabi_dadd+0xf8>
 8000bb4:	46b4      	mov	ip, r6
 8000bb6:	08e4      	lsrs	r4, r4, #3
 8000bb8:	077b      	lsls	r3, r7, #29
 8000bba:	4323      	orrs	r3, r4
 8000bbc:	08f8      	lsrs	r0, r7, #3
 8000bbe:	4a43      	ldr	r2, [pc, #268]	; (8000ccc <__aeabi_dadd+0x368>)
 8000bc0:	4594      	cmp	ip, r2
 8000bc2:	d01d      	beq.n	8000c00 <__aeabi_dadd+0x29c>
 8000bc4:	4662      	mov	r2, ip
 8000bc6:	0307      	lsls	r7, r0, #12
 8000bc8:	0552      	lsls	r2, r2, #21
 8000bca:	0b3f      	lsrs	r7, r7, #12
 8000bcc:	0d52      	lsrs	r2, r2, #21
 8000bce:	e760      	b.n	8000a92 <__aeabi_dadd+0x12e>
 8000bd0:	4644      	mov	r4, r8
 8000bd2:	430c      	orrs	r4, r1
 8000bd4:	1e62      	subs	r2, r4, #1
 8000bd6:	4194      	sbcs	r4, r2
 8000bd8:	18e4      	adds	r4, r4, r3
 8000bda:	429c      	cmp	r4, r3
 8000bdc:	419b      	sbcs	r3, r3
 8000bde:	425f      	negs	r7, r3
 8000be0:	183f      	adds	r7, r7, r0
 8000be2:	023b      	lsls	r3, r7, #8
 8000be4:	d5e3      	bpl.n	8000bae <__aeabi_dadd+0x24a>
 8000be6:	4b39      	ldr	r3, [pc, #228]	; (8000ccc <__aeabi_dadd+0x368>)
 8000be8:	3601      	adds	r6, #1
 8000bea:	429e      	cmp	r6, r3
 8000bec:	d000      	beq.n	8000bf0 <__aeabi_dadd+0x28c>
 8000bee:	e0b5      	b.n	8000d5c <__aeabi_dadd+0x3f8>
 8000bf0:	0032      	movs	r2, r6
 8000bf2:	2700      	movs	r7, #0
 8000bf4:	2300      	movs	r3, #0
 8000bf6:	e74c      	b.n	8000a92 <__aeabi_dadd+0x12e>
 8000bf8:	0742      	lsls	r2, r0, #29
 8000bfa:	08db      	lsrs	r3, r3, #3
 8000bfc:	4313      	orrs	r3, r2
 8000bfe:	08c0      	lsrs	r0, r0, #3
 8000c00:	001a      	movs	r2, r3
 8000c02:	4302      	orrs	r2, r0
 8000c04:	d100      	bne.n	8000c08 <__aeabi_dadd+0x2a4>
 8000c06:	e1e1      	b.n	8000fcc <__aeabi_dadd+0x668>
 8000c08:	2780      	movs	r7, #128	; 0x80
 8000c0a:	033f      	lsls	r7, r7, #12
 8000c0c:	4307      	orrs	r7, r0
 8000c0e:	033f      	lsls	r7, r7, #12
 8000c10:	4a2e      	ldr	r2, [pc, #184]	; (8000ccc <__aeabi_dadd+0x368>)
 8000c12:	0b3f      	lsrs	r7, r7, #12
 8000c14:	e73d      	b.n	8000a92 <__aeabi_dadd+0x12e>
 8000c16:	0020      	movs	r0, r4
 8000c18:	f001 fcd2 	bl	80025c0 <__clzsi2>
 8000c1c:	0001      	movs	r1, r0
 8000c1e:	3118      	adds	r1, #24
 8000c20:	291f      	cmp	r1, #31
 8000c22:	dc00      	bgt.n	8000c26 <__aeabi_dadd+0x2c2>
 8000c24:	e6fc      	b.n	8000a20 <__aeabi_dadd+0xbc>
 8000c26:	3808      	subs	r0, #8
 8000c28:	4084      	lsls	r4, r0
 8000c2a:	0027      	movs	r7, r4
 8000c2c:	2400      	movs	r4, #0
 8000c2e:	42b1      	cmp	r1, r6
 8000c30:	db00      	blt.n	8000c34 <__aeabi_dadd+0x2d0>
 8000c32:	e6ff      	b.n	8000a34 <__aeabi_dadd+0xd0>
 8000c34:	4a26      	ldr	r2, [pc, #152]	; (8000cd0 <__aeabi_dadd+0x36c>)
 8000c36:	1a76      	subs	r6, r6, r1
 8000c38:	4017      	ands	r7, r2
 8000c3a:	e70d      	b.n	8000a58 <__aeabi_dadd+0xf4>
 8000c3c:	2a00      	cmp	r2, #0
 8000c3e:	d02f      	beq.n	8000ca0 <__aeabi_dadd+0x33c>
 8000c40:	464a      	mov	r2, r9
 8000c42:	1b92      	subs	r2, r2, r6
 8000c44:	4694      	mov	ip, r2
 8000c46:	2e00      	cmp	r6, #0
 8000c48:	d100      	bne.n	8000c4c <__aeabi_dadd+0x2e8>
 8000c4a:	e0ad      	b.n	8000da8 <__aeabi_dadd+0x444>
 8000c4c:	4a1f      	ldr	r2, [pc, #124]	; (8000ccc <__aeabi_dadd+0x368>)
 8000c4e:	4591      	cmp	r9, r2
 8000c50:	d100      	bne.n	8000c54 <__aeabi_dadd+0x2f0>
 8000c52:	e10f      	b.n	8000e74 <__aeabi_dadd+0x510>
 8000c54:	2280      	movs	r2, #128	; 0x80
 8000c56:	0412      	lsls	r2, r2, #16
 8000c58:	4310      	orrs	r0, r2
 8000c5a:	4662      	mov	r2, ip
 8000c5c:	2a38      	cmp	r2, #56	; 0x38
 8000c5e:	dd00      	ble.n	8000c62 <__aeabi_dadd+0x2fe>
 8000c60:	e10f      	b.n	8000e82 <__aeabi_dadd+0x51e>
 8000c62:	2a1f      	cmp	r2, #31
 8000c64:	dd00      	ble.n	8000c68 <__aeabi_dadd+0x304>
 8000c66:	e180      	b.n	8000f6a <__aeabi_dadd+0x606>
 8000c68:	4664      	mov	r4, ip
 8000c6a:	2220      	movs	r2, #32
 8000c6c:	001e      	movs	r6, r3
 8000c6e:	1b12      	subs	r2, r2, r4
 8000c70:	4667      	mov	r7, ip
 8000c72:	0004      	movs	r4, r0
 8000c74:	4093      	lsls	r3, r2
 8000c76:	4094      	lsls	r4, r2
 8000c78:	40fe      	lsrs	r6, r7
 8000c7a:	1e5a      	subs	r2, r3, #1
 8000c7c:	4193      	sbcs	r3, r2
 8000c7e:	40f8      	lsrs	r0, r7
 8000c80:	4334      	orrs	r4, r6
 8000c82:	431c      	orrs	r4, r3
 8000c84:	4480      	add	r8, r0
 8000c86:	1864      	adds	r4, r4, r1
 8000c88:	428c      	cmp	r4, r1
 8000c8a:	41bf      	sbcs	r7, r7
 8000c8c:	427f      	negs	r7, r7
 8000c8e:	464e      	mov	r6, r9
 8000c90:	4447      	add	r7, r8
 8000c92:	e7a6      	b.n	8000be2 <__aeabi_dadd+0x27e>
 8000c94:	4642      	mov	r2, r8
 8000c96:	430a      	orrs	r2, r1
 8000c98:	0011      	movs	r1, r2
 8000c9a:	1e4a      	subs	r2, r1, #1
 8000c9c:	4191      	sbcs	r1, r2
 8000c9e:	e6ad      	b.n	80009fc <__aeabi_dadd+0x98>
 8000ca0:	4c0c      	ldr	r4, [pc, #48]	; (8000cd4 <__aeabi_dadd+0x370>)
 8000ca2:	1c72      	adds	r2, r6, #1
 8000ca4:	4222      	tst	r2, r4
 8000ca6:	d000      	beq.n	8000caa <__aeabi_dadd+0x346>
 8000ca8:	e0a1      	b.n	8000dee <__aeabi_dadd+0x48a>
 8000caa:	0002      	movs	r2, r0
 8000cac:	431a      	orrs	r2, r3
 8000cae:	2e00      	cmp	r6, #0
 8000cb0:	d000      	beq.n	8000cb4 <__aeabi_dadd+0x350>
 8000cb2:	e0fa      	b.n	8000eaa <__aeabi_dadd+0x546>
 8000cb4:	2a00      	cmp	r2, #0
 8000cb6:	d100      	bne.n	8000cba <__aeabi_dadd+0x356>
 8000cb8:	e145      	b.n	8000f46 <__aeabi_dadd+0x5e2>
 8000cba:	003a      	movs	r2, r7
 8000cbc:	430a      	orrs	r2, r1
 8000cbe:	d000      	beq.n	8000cc2 <__aeabi_dadd+0x35e>
 8000cc0:	e146      	b.n	8000f50 <__aeabi_dadd+0x5ec>
 8000cc2:	0742      	lsls	r2, r0, #29
 8000cc4:	08db      	lsrs	r3, r3, #3
 8000cc6:	4313      	orrs	r3, r2
 8000cc8:	08c0      	lsrs	r0, r0, #3
 8000cca:	e77b      	b.n	8000bc4 <__aeabi_dadd+0x260>
 8000ccc:	000007ff 	.word	0x000007ff
 8000cd0:	ff7fffff 	.word	0xff7fffff
 8000cd4:	000007fe 	.word	0x000007fe
 8000cd8:	4647      	mov	r7, r8
 8000cda:	1a5c      	subs	r4, r3, r1
 8000cdc:	1bc2      	subs	r2, r0, r7
 8000cde:	42a3      	cmp	r3, r4
 8000ce0:	41bf      	sbcs	r7, r7
 8000ce2:	427f      	negs	r7, r7
 8000ce4:	46b9      	mov	r9, r7
 8000ce6:	0017      	movs	r7, r2
 8000ce8:	464a      	mov	r2, r9
 8000cea:	1abf      	subs	r7, r7, r2
 8000cec:	023a      	lsls	r2, r7, #8
 8000cee:	d500      	bpl.n	8000cf2 <__aeabi_dadd+0x38e>
 8000cf0:	e08d      	b.n	8000e0e <__aeabi_dadd+0x4aa>
 8000cf2:	0023      	movs	r3, r4
 8000cf4:	433b      	orrs	r3, r7
 8000cf6:	d000      	beq.n	8000cfa <__aeabi_dadd+0x396>
 8000cf8:	e68a      	b.n	8000a10 <__aeabi_dadd+0xac>
 8000cfa:	2000      	movs	r0, #0
 8000cfc:	2500      	movs	r5, #0
 8000cfe:	e761      	b.n	8000bc4 <__aeabi_dadd+0x260>
 8000d00:	4cb4      	ldr	r4, [pc, #720]	; (8000fd4 <__aeabi_dadd+0x670>)
 8000d02:	45a1      	cmp	r9, r4
 8000d04:	d100      	bne.n	8000d08 <__aeabi_dadd+0x3a4>
 8000d06:	e0ad      	b.n	8000e64 <__aeabi_dadd+0x500>
 8000d08:	2480      	movs	r4, #128	; 0x80
 8000d0a:	0424      	lsls	r4, r4, #16
 8000d0c:	4320      	orrs	r0, r4
 8000d0e:	4664      	mov	r4, ip
 8000d10:	2c38      	cmp	r4, #56	; 0x38
 8000d12:	dc3d      	bgt.n	8000d90 <__aeabi_dadd+0x42c>
 8000d14:	4662      	mov	r2, ip
 8000d16:	2c1f      	cmp	r4, #31
 8000d18:	dd00      	ble.n	8000d1c <__aeabi_dadd+0x3b8>
 8000d1a:	e0b7      	b.n	8000e8c <__aeabi_dadd+0x528>
 8000d1c:	2520      	movs	r5, #32
 8000d1e:	001e      	movs	r6, r3
 8000d20:	1b2d      	subs	r5, r5, r4
 8000d22:	0004      	movs	r4, r0
 8000d24:	40ab      	lsls	r3, r5
 8000d26:	40ac      	lsls	r4, r5
 8000d28:	40d6      	lsrs	r6, r2
 8000d2a:	40d0      	lsrs	r0, r2
 8000d2c:	4642      	mov	r2, r8
 8000d2e:	1e5d      	subs	r5, r3, #1
 8000d30:	41ab      	sbcs	r3, r5
 8000d32:	4334      	orrs	r4, r6
 8000d34:	1a12      	subs	r2, r2, r0
 8000d36:	4690      	mov	r8, r2
 8000d38:	4323      	orrs	r3, r4
 8000d3a:	e02c      	b.n	8000d96 <__aeabi_dadd+0x432>
 8000d3c:	0742      	lsls	r2, r0, #29
 8000d3e:	08db      	lsrs	r3, r3, #3
 8000d40:	4313      	orrs	r3, r2
 8000d42:	08c0      	lsrs	r0, r0, #3
 8000d44:	e73b      	b.n	8000bbe <__aeabi_dadd+0x25a>
 8000d46:	185c      	adds	r4, r3, r1
 8000d48:	429c      	cmp	r4, r3
 8000d4a:	419b      	sbcs	r3, r3
 8000d4c:	4440      	add	r0, r8
 8000d4e:	425b      	negs	r3, r3
 8000d50:	18c7      	adds	r7, r0, r3
 8000d52:	2601      	movs	r6, #1
 8000d54:	023b      	lsls	r3, r7, #8
 8000d56:	d400      	bmi.n	8000d5a <__aeabi_dadd+0x3f6>
 8000d58:	e729      	b.n	8000bae <__aeabi_dadd+0x24a>
 8000d5a:	2602      	movs	r6, #2
 8000d5c:	4a9e      	ldr	r2, [pc, #632]	; (8000fd8 <__aeabi_dadd+0x674>)
 8000d5e:	0863      	lsrs	r3, r4, #1
 8000d60:	4017      	ands	r7, r2
 8000d62:	2201      	movs	r2, #1
 8000d64:	4014      	ands	r4, r2
 8000d66:	431c      	orrs	r4, r3
 8000d68:	07fb      	lsls	r3, r7, #31
 8000d6a:	431c      	orrs	r4, r3
 8000d6c:	087f      	lsrs	r7, r7, #1
 8000d6e:	e673      	b.n	8000a58 <__aeabi_dadd+0xf4>
 8000d70:	4644      	mov	r4, r8
 8000d72:	3a20      	subs	r2, #32
 8000d74:	40d4      	lsrs	r4, r2
 8000d76:	4662      	mov	r2, ip
 8000d78:	2a20      	cmp	r2, #32
 8000d7a:	d005      	beq.n	8000d88 <__aeabi_dadd+0x424>
 8000d7c:	4667      	mov	r7, ip
 8000d7e:	2240      	movs	r2, #64	; 0x40
 8000d80:	1bd2      	subs	r2, r2, r7
 8000d82:	4647      	mov	r7, r8
 8000d84:	4097      	lsls	r7, r2
 8000d86:	4339      	orrs	r1, r7
 8000d88:	1e4a      	subs	r2, r1, #1
 8000d8a:	4191      	sbcs	r1, r2
 8000d8c:	4321      	orrs	r1, r4
 8000d8e:	e635      	b.n	80009fc <__aeabi_dadd+0x98>
 8000d90:	4303      	orrs	r3, r0
 8000d92:	1e58      	subs	r0, r3, #1
 8000d94:	4183      	sbcs	r3, r0
 8000d96:	1acc      	subs	r4, r1, r3
 8000d98:	42a1      	cmp	r1, r4
 8000d9a:	41bf      	sbcs	r7, r7
 8000d9c:	4643      	mov	r3, r8
 8000d9e:	427f      	negs	r7, r7
 8000da0:	4655      	mov	r5, sl
 8000da2:	464e      	mov	r6, r9
 8000da4:	1bdf      	subs	r7, r3, r7
 8000da6:	e62e      	b.n	8000a06 <__aeabi_dadd+0xa2>
 8000da8:	0002      	movs	r2, r0
 8000daa:	431a      	orrs	r2, r3
 8000dac:	d100      	bne.n	8000db0 <__aeabi_dadd+0x44c>
 8000dae:	e0bd      	b.n	8000f2c <__aeabi_dadd+0x5c8>
 8000db0:	4662      	mov	r2, ip
 8000db2:	4664      	mov	r4, ip
 8000db4:	3a01      	subs	r2, #1
 8000db6:	2c01      	cmp	r4, #1
 8000db8:	d100      	bne.n	8000dbc <__aeabi_dadd+0x458>
 8000dba:	e0e5      	b.n	8000f88 <__aeabi_dadd+0x624>
 8000dbc:	4c85      	ldr	r4, [pc, #532]	; (8000fd4 <__aeabi_dadd+0x670>)
 8000dbe:	45a4      	cmp	ip, r4
 8000dc0:	d058      	beq.n	8000e74 <__aeabi_dadd+0x510>
 8000dc2:	4694      	mov	ip, r2
 8000dc4:	e749      	b.n	8000c5a <__aeabi_dadd+0x2f6>
 8000dc6:	4664      	mov	r4, ip
 8000dc8:	2220      	movs	r2, #32
 8000dca:	1b12      	subs	r2, r2, r4
 8000dcc:	4644      	mov	r4, r8
 8000dce:	4094      	lsls	r4, r2
 8000dd0:	000f      	movs	r7, r1
 8000dd2:	46a1      	mov	r9, r4
 8000dd4:	4664      	mov	r4, ip
 8000dd6:	4091      	lsls	r1, r2
 8000dd8:	40e7      	lsrs	r7, r4
 8000dda:	464c      	mov	r4, r9
 8000ddc:	1e4a      	subs	r2, r1, #1
 8000dde:	4191      	sbcs	r1, r2
 8000de0:	433c      	orrs	r4, r7
 8000de2:	4642      	mov	r2, r8
 8000de4:	430c      	orrs	r4, r1
 8000de6:	4661      	mov	r1, ip
 8000de8:	40ca      	lsrs	r2, r1
 8000dea:	1880      	adds	r0, r0, r2
 8000dec:	e6f4      	b.n	8000bd8 <__aeabi_dadd+0x274>
 8000dee:	4c79      	ldr	r4, [pc, #484]	; (8000fd4 <__aeabi_dadd+0x670>)
 8000df0:	42a2      	cmp	r2, r4
 8000df2:	d100      	bne.n	8000df6 <__aeabi_dadd+0x492>
 8000df4:	e6fd      	b.n	8000bf2 <__aeabi_dadd+0x28e>
 8000df6:	1859      	adds	r1, r3, r1
 8000df8:	4299      	cmp	r1, r3
 8000dfa:	419b      	sbcs	r3, r3
 8000dfc:	4440      	add	r0, r8
 8000dfe:	425f      	negs	r7, r3
 8000e00:	19c7      	adds	r7, r0, r7
 8000e02:	07fc      	lsls	r4, r7, #31
 8000e04:	0849      	lsrs	r1, r1, #1
 8000e06:	0016      	movs	r6, r2
 8000e08:	430c      	orrs	r4, r1
 8000e0a:	087f      	lsrs	r7, r7, #1
 8000e0c:	e6cf      	b.n	8000bae <__aeabi_dadd+0x24a>
 8000e0e:	1acc      	subs	r4, r1, r3
 8000e10:	42a1      	cmp	r1, r4
 8000e12:	41bf      	sbcs	r7, r7
 8000e14:	4643      	mov	r3, r8
 8000e16:	427f      	negs	r7, r7
 8000e18:	1a18      	subs	r0, r3, r0
 8000e1a:	4655      	mov	r5, sl
 8000e1c:	1bc7      	subs	r7, r0, r7
 8000e1e:	e5f7      	b.n	8000a10 <__aeabi_dadd+0xac>
 8000e20:	08c9      	lsrs	r1, r1, #3
 8000e22:	077b      	lsls	r3, r7, #29
 8000e24:	4655      	mov	r5, sl
 8000e26:	430b      	orrs	r3, r1
 8000e28:	08f8      	lsrs	r0, r7, #3
 8000e2a:	e6c8      	b.n	8000bbe <__aeabi_dadd+0x25a>
 8000e2c:	2c00      	cmp	r4, #0
 8000e2e:	d000      	beq.n	8000e32 <__aeabi_dadd+0x4ce>
 8000e30:	e081      	b.n	8000f36 <__aeabi_dadd+0x5d2>
 8000e32:	4643      	mov	r3, r8
 8000e34:	430b      	orrs	r3, r1
 8000e36:	d115      	bne.n	8000e64 <__aeabi_dadd+0x500>
 8000e38:	2080      	movs	r0, #128	; 0x80
 8000e3a:	2500      	movs	r5, #0
 8000e3c:	0300      	lsls	r0, r0, #12
 8000e3e:	e6e3      	b.n	8000c08 <__aeabi_dadd+0x2a4>
 8000e40:	1a5c      	subs	r4, r3, r1
 8000e42:	42a3      	cmp	r3, r4
 8000e44:	419b      	sbcs	r3, r3
 8000e46:	1bc7      	subs	r7, r0, r7
 8000e48:	425b      	negs	r3, r3
 8000e4a:	2601      	movs	r6, #1
 8000e4c:	1aff      	subs	r7, r7, r3
 8000e4e:	e5da      	b.n	8000a06 <__aeabi_dadd+0xa2>
 8000e50:	0742      	lsls	r2, r0, #29
 8000e52:	08db      	lsrs	r3, r3, #3
 8000e54:	4313      	orrs	r3, r2
 8000e56:	08c0      	lsrs	r0, r0, #3
 8000e58:	e6d2      	b.n	8000c00 <__aeabi_dadd+0x29c>
 8000e5a:	0742      	lsls	r2, r0, #29
 8000e5c:	08db      	lsrs	r3, r3, #3
 8000e5e:	4313      	orrs	r3, r2
 8000e60:	08c0      	lsrs	r0, r0, #3
 8000e62:	e6ac      	b.n	8000bbe <__aeabi_dadd+0x25a>
 8000e64:	4643      	mov	r3, r8
 8000e66:	4642      	mov	r2, r8
 8000e68:	08c9      	lsrs	r1, r1, #3
 8000e6a:	075b      	lsls	r3, r3, #29
 8000e6c:	4655      	mov	r5, sl
 8000e6e:	430b      	orrs	r3, r1
 8000e70:	08d0      	lsrs	r0, r2, #3
 8000e72:	e6c5      	b.n	8000c00 <__aeabi_dadd+0x29c>
 8000e74:	4643      	mov	r3, r8
 8000e76:	4642      	mov	r2, r8
 8000e78:	075b      	lsls	r3, r3, #29
 8000e7a:	08c9      	lsrs	r1, r1, #3
 8000e7c:	430b      	orrs	r3, r1
 8000e7e:	08d0      	lsrs	r0, r2, #3
 8000e80:	e6be      	b.n	8000c00 <__aeabi_dadd+0x29c>
 8000e82:	4303      	orrs	r3, r0
 8000e84:	001c      	movs	r4, r3
 8000e86:	1e63      	subs	r3, r4, #1
 8000e88:	419c      	sbcs	r4, r3
 8000e8a:	e6fc      	b.n	8000c86 <__aeabi_dadd+0x322>
 8000e8c:	0002      	movs	r2, r0
 8000e8e:	3c20      	subs	r4, #32
 8000e90:	40e2      	lsrs	r2, r4
 8000e92:	0014      	movs	r4, r2
 8000e94:	4662      	mov	r2, ip
 8000e96:	2a20      	cmp	r2, #32
 8000e98:	d003      	beq.n	8000ea2 <__aeabi_dadd+0x53e>
 8000e9a:	2540      	movs	r5, #64	; 0x40
 8000e9c:	1aad      	subs	r5, r5, r2
 8000e9e:	40a8      	lsls	r0, r5
 8000ea0:	4303      	orrs	r3, r0
 8000ea2:	1e58      	subs	r0, r3, #1
 8000ea4:	4183      	sbcs	r3, r0
 8000ea6:	4323      	orrs	r3, r4
 8000ea8:	e775      	b.n	8000d96 <__aeabi_dadd+0x432>
 8000eaa:	2a00      	cmp	r2, #0
 8000eac:	d0e2      	beq.n	8000e74 <__aeabi_dadd+0x510>
 8000eae:	003a      	movs	r2, r7
 8000eb0:	430a      	orrs	r2, r1
 8000eb2:	d0cd      	beq.n	8000e50 <__aeabi_dadd+0x4ec>
 8000eb4:	0742      	lsls	r2, r0, #29
 8000eb6:	08db      	lsrs	r3, r3, #3
 8000eb8:	4313      	orrs	r3, r2
 8000eba:	2280      	movs	r2, #128	; 0x80
 8000ebc:	08c0      	lsrs	r0, r0, #3
 8000ebe:	0312      	lsls	r2, r2, #12
 8000ec0:	4210      	tst	r0, r2
 8000ec2:	d006      	beq.n	8000ed2 <__aeabi_dadd+0x56e>
 8000ec4:	08fc      	lsrs	r4, r7, #3
 8000ec6:	4214      	tst	r4, r2
 8000ec8:	d103      	bne.n	8000ed2 <__aeabi_dadd+0x56e>
 8000eca:	0020      	movs	r0, r4
 8000ecc:	08cb      	lsrs	r3, r1, #3
 8000ece:	077a      	lsls	r2, r7, #29
 8000ed0:	4313      	orrs	r3, r2
 8000ed2:	0f5a      	lsrs	r2, r3, #29
 8000ed4:	00db      	lsls	r3, r3, #3
 8000ed6:	0752      	lsls	r2, r2, #29
 8000ed8:	08db      	lsrs	r3, r3, #3
 8000eda:	4313      	orrs	r3, r2
 8000edc:	e690      	b.n	8000c00 <__aeabi_dadd+0x29c>
 8000ede:	4643      	mov	r3, r8
 8000ee0:	430b      	orrs	r3, r1
 8000ee2:	d100      	bne.n	8000ee6 <__aeabi_dadd+0x582>
 8000ee4:	e709      	b.n	8000cfa <__aeabi_dadd+0x396>
 8000ee6:	4643      	mov	r3, r8
 8000ee8:	4642      	mov	r2, r8
 8000eea:	08c9      	lsrs	r1, r1, #3
 8000eec:	075b      	lsls	r3, r3, #29
 8000eee:	4655      	mov	r5, sl
 8000ef0:	430b      	orrs	r3, r1
 8000ef2:	08d0      	lsrs	r0, r2, #3
 8000ef4:	e666      	b.n	8000bc4 <__aeabi_dadd+0x260>
 8000ef6:	1acc      	subs	r4, r1, r3
 8000ef8:	42a1      	cmp	r1, r4
 8000efa:	4189      	sbcs	r1, r1
 8000efc:	1a3f      	subs	r7, r7, r0
 8000efe:	4249      	negs	r1, r1
 8000f00:	4655      	mov	r5, sl
 8000f02:	2601      	movs	r6, #1
 8000f04:	1a7f      	subs	r7, r7, r1
 8000f06:	e57e      	b.n	8000a06 <__aeabi_dadd+0xa2>
 8000f08:	4642      	mov	r2, r8
 8000f0a:	1a5c      	subs	r4, r3, r1
 8000f0c:	1a87      	subs	r7, r0, r2
 8000f0e:	42a3      	cmp	r3, r4
 8000f10:	4192      	sbcs	r2, r2
 8000f12:	4252      	negs	r2, r2
 8000f14:	1abf      	subs	r7, r7, r2
 8000f16:	023a      	lsls	r2, r7, #8
 8000f18:	d53d      	bpl.n	8000f96 <__aeabi_dadd+0x632>
 8000f1a:	1acc      	subs	r4, r1, r3
 8000f1c:	42a1      	cmp	r1, r4
 8000f1e:	4189      	sbcs	r1, r1
 8000f20:	4643      	mov	r3, r8
 8000f22:	4249      	negs	r1, r1
 8000f24:	1a1f      	subs	r7, r3, r0
 8000f26:	4655      	mov	r5, sl
 8000f28:	1a7f      	subs	r7, r7, r1
 8000f2a:	e595      	b.n	8000a58 <__aeabi_dadd+0xf4>
 8000f2c:	077b      	lsls	r3, r7, #29
 8000f2e:	08c9      	lsrs	r1, r1, #3
 8000f30:	430b      	orrs	r3, r1
 8000f32:	08f8      	lsrs	r0, r7, #3
 8000f34:	e643      	b.n	8000bbe <__aeabi_dadd+0x25a>
 8000f36:	4644      	mov	r4, r8
 8000f38:	08db      	lsrs	r3, r3, #3
 8000f3a:	430c      	orrs	r4, r1
 8000f3c:	d130      	bne.n	8000fa0 <__aeabi_dadd+0x63c>
 8000f3e:	0742      	lsls	r2, r0, #29
 8000f40:	4313      	orrs	r3, r2
 8000f42:	08c0      	lsrs	r0, r0, #3
 8000f44:	e65c      	b.n	8000c00 <__aeabi_dadd+0x29c>
 8000f46:	077b      	lsls	r3, r7, #29
 8000f48:	08c9      	lsrs	r1, r1, #3
 8000f4a:	430b      	orrs	r3, r1
 8000f4c:	08f8      	lsrs	r0, r7, #3
 8000f4e:	e639      	b.n	8000bc4 <__aeabi_dadd+0x260>
 8000f50:	185c      	adds	r4, r3, r1
 8000f52:	429c      	cmp	r4, r3
 8000f54:	419b      	sbcs	r3, r3
 8000f56:	4440      	add	r0, r8
 8000f58:	425b      	negs	r3, r3
 8000f5a:	18c7      	adds	r7, r0, r3
 8000f5c:	023b      	lsls	r3, r7, #8
 8000f5e:	d400      	bmi.n	8000f62 <__aeabi_dadd+0x5fe>
 8000f60:	e625      	b.n	8000bae <__aeabi_dadd+0x24a>
 8000f62:	4b1d      	ldr	r3, [pc, #116]	; (8000fd8 <__aeabi_dadd+0x674>)
 8000f64:	2601      	movs	r6, #1
 8000f66:	401f      	ands	r7, r3
 8000f68:	e621      	b.n	8000bae <__aeabi_dadd+0x24a>
 8000f6a:	0004      	movs	r4, r0
 8000f6c:	3a20      	subs	r2, #32
 8000f6e:	40d4      	lsrs	r4, r2
 8000f70:	4662      	mov	r2, ip
 8000f72:	2a20      	cmp	r2, #32
 8000f74:	d004      	beq.n	8000f80 <__aeabi_dadd+0x61c>
 8000f76:	2240      	movs	r2, #64	; 0x40
 8000f78:	4666      	mov	r6, ip
 8000f7a:	1b92      	subs	r2, r2, r6
 8000f7c:	4090      	lsls	r0, r2
 8000f7e:	4303      	orrs	r3, r0
 8000f80:	1e5a      	subs	r2, r3, #1
 8000f82:	4193      	sbcs	r3, r2
 8000f84:	431c      	orrs	r4, r3
 8000f86:	e67e      	b.n	8000c86 <__aeabi_dadd+0x322>
 8000f88:	185c      	adds	r4, r3, r1
 8000f8a:	428c      	cmp	r4, r1
 8000f8c:	4189      	sbcs	r1, r1
 8000f8e:	4440      	add	r0, r8
 8000f90:	4249      	negs	r1, r1
 8000f92:	1847      	adds	r7, r0, r1
 8000f94:	e6dd      	b.n	8000d52 <__aeabi_dadd+0x3ee>
 8000f96:	0023      	movs	r3, r4
 8000f98:	433b      	orrs	r3, r7
 8000f9a:	d100      	bne.n	8000f9e <__aeabi_dadd+0x63a>
 8000f9c:	e6ad      	b.n	8000cfa <__aeabi_dadd+0x396>
 8000f9e:	e606      	b.n	8000bae <__aeabi_dadd+0x24a>
 8000fa0:	0744      	lsls	r4, r0, #29
 8000fa2:	4323      	orrs	r3, r4
 8000fa4:	2480      	movs	r4, #128	; 0x80
 8000fa6:	08c0      	lsrs	r0, r0, #3
 8000fa8:	0324      	lsls	r4, r4, #12
 8000faa:	4220      	tst	r0, r4
 8000fac:	d008      	beq.n	8000fc0 <__aeabi_dadd+0x65c>
 8000fae:	4642      	mov	r2, r8
 8000fb0:	08d6      	lsrs	r6, r2, #3
 8000fb2:	4226      	tst	r6, r4
 8000fb4:	d104      	bne.n	8000fc0 <__aeabi_dadd+0x65c>
 8000fb6:	4655      	mov	r5, sl
 8000fb8:	0030      	movs	r0, r6
 8000fba:	08cb      	lsrs	r3, r1, #3
 8000fbc:	0751      	lsls	r1, r2, #29
 8000fbe:	430b      	orrs	r3, r1
 8000fc0:	0f5a      	lsrs	r2, r3, #29
 8000fc2:	00db      	lsls	r3, r3, #3
 8000fc4:	08db      	lsrs	r3, r3, #3
 8000fc6:	0752      	lsls	r2, r2, #29
 8000fc8:	4313      	orrs	r3, r2
 8000fca:	e619      	b.n	8000c00 <__aeabi_dadd+0x29c>
 8000fcc:	2300      	movs	r3, #0
 8000fce:	4a01      	ldr	r2, [pc, #4]	; (8000fd4 <__aeabi_dadd+0x670>)
 8000fd0:	001f      	movs	r7, r3
 8000fd2:	e55e      	b.n	8000a92 <__aeabi_dadd+0x12e>
 8000fd4:	000007ff 	.word	0x000007ff
 8000fd8:	ff7fffff 	.word	0xff7fffff

08000fdc <__aeabi_ddiv>:
 8000fdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000fde:	4657      	mov	r7, sl
 8000fe0:	464e      	mov	r6, r9
 8000fe2:	4645      	mov	r5, r8
 8000fe4:	46de      	mov	lr, fp
 8000fe6:	b5e0      	push	{r5, r6, r7, lr}
 8000fe8:	4681      	mov	r9, r0
 8000fea:	0005      	movs	r5, r0
 8000fec:	030c      	lsls	r4, r1, #12
 8000fee:	0048      	lsls	r0, r1, #1
 8000ff0:	4692      	mov	sl, r2
 8000ff2:	001f      	movs	r7, r3
 8000ff4:	b085      	sub	sp, #20
 8000ff6:	0b24      	lsrs	r4, r4, #12
 8000ff8:	0d40      	lsrs	r0, r0, #21
 8000ffa:	0fce      	lsrs	r6, r1, #31
 8000ffc:	2800      	cmp	r0, #0
 8000ffe:	d100      	bne.n	8001002 <__aeabi_ddiv+0x26>
 8001000:	e156      	b.n	80012b0 <__aeabi_ddiv+0x2d4>
 8001002:	4bd4      	ldr	r3, [pc, #848]	; (8001354 <__aeabi_ddiv+0x378>)
 8001004:	4298      	cmp	r0, r3
 8001006:	d100      	bne.n	800100a <__aeabi_ddiv+0x2e>
 8001008:	e172      	b.n	80012f0 <__aeabi_ddiv+0x314>
 800100a:	0f6b      	lsrs	r3, r5, #29
 800100c:	00e4      	lsls	r4, r4, #3
 800100e:	431c      	orrs	r4, r3
 8001010:	2380      	movs	r3, #128	; 0x80
 8001012:	041b      	lsls	r3, r3, #16
 8001014:	4323      	orrs	r3, r4
 8001016:	4698      	mov	r8, r3
 8001018:	4bcf      	ldr	r3, [pc, #828]	; (8001358 <__aeabi_ddiv+0x37c>)
 800101a:	00ed      	lsls	r5, r5, #3
 800101c:	469b      	mov	fp, r3
 800101e:	2300      	movs	r3, #0
 8001020:	4699      	mov	r9, r3
 8001022:	4483      	add	fp, r0
 8001024:	9300      	str	r3, [sp, #0]
 8001026:	033c      	lsls	r4, r7, #12
 8001028:	007b      	lsls	r3, r7, #1
 800102a:	4650      	mov	r0, sl
 800102c:	0b24      	lsrs	r4, r4, #12
 800102e:	0d5b      	lsrs	r3, r3, #21
 8001030:	0fff      	lsrs	r7, r7, #31
 8001032:	2b00      	cmp	r3, #0
 8001034:	d100      	bne.n	8001038 <__aeabi_ddiv+0x5c>
 8001036:	e11f      	b.n	8001278 <__aeabi_ddiv+0x29c>
 8001038:	4ac6      	ldr	r2, [pc, #792]	; (8001354 <__aeabi_ddiv+0x378>)
 800103a:	4293      	cmp	r3, r2
 800103c:	d100      	bne.n	8001040 <__aeabi_ddiv+0x64>
 800103e:	e162      	b.n	8001306 <__aeabi_ddiv+0x32a>
 8001040:	49c5      	ldr	r1, [pc, #788]	; (8001358 <__aeabi_ddiv+0x37c>)
 8001042:	0f42      	lsrs	r2, r0, #29
 8001044:	468c      	mov	ip, r1
 8001046:	00e4      	lsls	r4, r4, #3
 8001048:	4659      	mov	r1, fp
 800104a:	4314      	orrs	r4, r2
 800104c:	2280      	movs	r2, #128	; 0x80
 800104e:	4463      	add	r3, ip
 8001050:	0412      	lsls	r2, r2, #16
 8001052:	1acb      	subs	r3, r1, r3
 8001054:	4314      	orrs	r4, r2
 8001056:	469b      	mov	fp, r3
 8001058:	00c2      	lsls	r2, r0, #3
 800105a:	2000      	movs	r0, #0
 800105c:	0033      	movs	r3, r6
 800105e:	407b      	eors	r3, r7
 8001060:	469a      	mov	sl, r3
 8001062:	464b      	mov	r3, r9
 8001064:	2b0f      	cmp	r3, #15
 8001066:	d827      	bhi.n	80010b8 <__aeabi_ddiv+0xdc>
 8001068:	49bc      	ldr	r1, [pc, #752]	; (800135c <__aeabi_ddiv+0x380>)
 800106a:	009b      	lsls	r3, r3, #2
 800106c:	58cb      	ldr	r3, [r1, r3]
 800106e:	469f      	mov	pc, r3
 8001070:	46b2      	mov	sl, r6
 8001072:	9b00      	ldr	r3, [sp, #0]
 8001074:	2b02      	cmp	r3, #2
 8001076:	d016      	beq.n	80010a6 <__aeabi_ddiv+0xca>
 8001078:	2b03      	cmp	r3, #3
 800107a:	d100      	bne.n	800107e <__aeabi_ddiv+0xa2>
 800107c:	e28e      	b.n	800159c <__aeabi_ddiv+0x5c0>
 800107e:	2b01      	cmp	r3, #1
 8001080:	d000      	beq.n	8001084 <__aeabi_ddiv+0xa8>
 8001082:	e0d9      	b.n	8001238 <__aeabi_ddiv+0x25c>
 8001084:	2300      	movs	r3, #0
 8001086:	2400      	movs	r4, #0
 8001088:	2500      	movs	r5, #0
 800108a:	4652      	mov	r2, sl
 800108c:	051b      	lsls	r3, r3, #20
 800108e:	4323      	orrs	r3, r4
 8001090:	07d2      	lsls	r2, r2, #31
 8001092:	4313      	orrs	r3, r2
 8001094:	0028      	movs	r0, r5
 8001096:	0019      	movs	r1, r3
 8001098:	b005      	add	sp, #20
 800109a:	bcf0      	pop	{r4, r5, r6, r7}
 800109c:	46bb      	mov	fp, r7
 800109e:	46b2      	mov	sl, r6
 80010a0:	46a9      	mov	r9, r5
 80010a2:	46a0      	mov	r8, r4
 80010a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80010a6:	2400      	movs	r4, #0
 80010a8:	2500      	movs	r5, #0
 80010aa:	4baa      	ldr	r3, [pc, #680]	; (8001354 <__aeabi_ddiv+0x378>)
 80010ac:	e7ed      	b.n	800108a <__aeabi_ddiv+0xae>
 80010ae:	46ba      	mov	sl, r7
 80010b0:	46a0      	mov	r8, r4
 80010b2:	0015      	movs	r5, r2
 80010b4:	9000      	str	r0, [sp, #0]
 80010b6:	e7dc      	b.n	8001072 <__aeabi_ddiv+0x96>
 80010b8:	4544      	cmp	r4, r8
 80010ba:	d200      	bcs.n	80010be <__aeabi_ddiv+0xe2>
 80010bc:	e1c7      	b.n	800144e <__aeabi_ddiv+0x472>
 80010be:	d100      	bne.n	80010c2 <__aeabi_ddiv+0xe6>
 80010c0:	e1c2      	b.n	8001448 <__aeabi_ddiv+0x46c>
 80010c2:	2301      	movs	r3, #1
 80010c4:	425b      	negs	r3, r3
 80010c6:	469c      	mov	ip, r3
 80010c8:	002e      	movs	r6, r5
 80010ca:	4640      	mov	r0, r8
 80010cc:	2500      	movs	r5, #0
 80010ce:	44e3      	add	fp, ip
 80010d0:	0223      	lsls	r3, r4, #8
 80010d2:	0e14      	lsrs	r4, r2, #24
 80010d4:	431c      	orrs	r4, r3
 80010d6:	0c1b      	lsrs	r3, r3, #16
 80010d8:	4699      	mov	r9, r3
 80010da:	0423      	lsls	r3, r4, #16
 80010dc:	0c1f      	lsrs	r7, r3, #16
 80010de:	0212      	lsls	r2, r2, #8
 80010e0:	4649      	mov	r1, r9
 80010e2:	9200      	str	r2, [sp, #0]
 80010e4:	9701      	str	r7, [sp, #4]
 80010e6:	f7ff f8b1 	bl	800024c <__aeabi_uidivmod>
 80010ea:	0002      	movs	r2, r0
 80010ec:	437a      	muls	r2, r7
 80010ee:	040b      	lsls	r3, r1, #16
 80010f0:	0c31      	lsrs	r1, r6, #16
 80010f2:	4680      	mov	r8, r0
 80010f4:	4319      	orrs	r1, r3
 80010f6:	428a      	cmp	r2, r1
 80010f8:	d907      	bls.n	800110a <__aeabi_ddiv+0x12e>
 80010fa:	2301      	movs	r3, #1
 80010fc:	425b      	negs	r3, r3
 80010fe:	469c      	mov	ip, r3
 8001100:	1909      	adds	r1, r1, r4
 8001102:	44e0      	add	r8, ip
 8001104:	428c      	cmp	r4, r1
 8001106:	d800      	bhi.n	800110a <__aeabi_ddiv+0x12e>
 8001108:	e207      	b.n	800151a <__aeabi_ddiv+0x53e>
 800110a:	1a88      	subs	r0, r1, r2
 800110c:	4649      	mov	r1, r9
 800110e:	f7ff f89d 	bl	800024c <__aeabi_uidivmod>
 8001112:	0409      	lsls	r1, r1, #16
 8001114:	468c      	mov	ip, r1
 8001116:	0431      	lsls	r1, r6, #16
 8001118:	4666      	mov	r6, ip
 800111a:	9a01      	ldr	r2, [sp, #4]
 800111c:	0c09      	lsrs	r1, r1, #16
 800111e:	4342      	muls	r2, r0
 8001120:	0003      	movs	r3, r0
 8001122:	4331      	orrs	r1, r6
 8001124:	428a      	cmp	r2, r1
 8001126:	d904      	bls.n	8001132 <__aeabi_ddiv+0x156>
 8001128:	1909      	adds	r1, r1, r4
 800112a:	3b01      	subs	r3, #1
 800112c:	428c      	cmp	r4, r1
 800112e:	d800      	bhi.n	8001132 <__aeabi_ddiv+0x156>
 8001130:	e1ed      	b.n	800150e <__aeabi_ddiv+0x532>
 8001132:	1a88      	subs	r0, r1, r2
 8001134:	4642      	mov	r2, r8
 8001136:	0412      	lsls	r2, r2, #16
 8001138:	431a      	orrs	r2, r3
 800113a:	4690      	mov	r8, r2
 800113c:	4641      	mov	r1, r8
 800113e:	9b00      	ldr	r3, [sp, #0]
 8001140:	040e      	lsls	r6, r1, #16
 8001142:	0c1b      	lsrs	r3, r3, #16
 8001144:	001f      	movs	r7, r3
 8001146:	9302      	str	r3, [sp, #8]
 8001148:	9b00      	ldr	r3, [sp, #0]
 800114a:	0c36      	lsrs	r6, r6, #16
 800114c:	041b      	lsls	r3, r3, #16
 800114e:	0c19      	lsrs	r1, r3, #16
 8001150:	000b      	movs	r3, r1
 8001152:	4373      	muls	r3, r6
 8001154:	0c12      	lsrs	r2, r2, #16
 8001156:	437e      	muls	r6, r7
 8001158:	9103      	str	r1, [sp, #12]
 800115a:	4351      	muls	r1, r2
 800115c:	437a      	muls	r2, r7
 800115e:	0c1f      	lsrs	r7, r3, #16
 8001160:	46bc      	mov	ip, r7
 8001162:	1876      	adds	r6, r6, r1
 8001164:	4466      	add	r6, ip
 8001166:	42b1      	cmp	r1, r6
 8001168:	d903      	bls.n	8001172 <__aeabi_ddiv+0x196>
 800116a:	2180      	movs	r1, #128	; 0x80
 800116c:	0249      	lsls	r1, r1, #9
 800116e:	468c      	mov	ip, r1
 8001170:	4462      	add	r2, ip
 8001172:	0c31      	lsrs	r1, r6, #16
 8001174:	188a      	adds	r2, r1, r2
 8001176:	0431      	lsls	r1, r6, #16
 8001178:	041e      	lsls	r6, r3, #16
 800117a:	0c36      	lsrs	r6, r6, #16
 800117c:	198e      	adds	r6, r1, r6
 800117e:	4290      	cmp	r0, r2
 8001180:	d302      	bcc.n	8001188 <__aeabi_ddiv+0x1ac>
 8001182:	d112      	bne.n	80011aa <__aeabi_ddiv+0x1ce>
 8001184:	42b5      	cmp	r5, r6
 8001186:	d210      	bcs.n	80011aa <__aeabi_ddiv+0x1ce>
 8001188:	4643      	mov	r3, r8
 800118a:	1e59      	subs	r1, r3, #1
 800118c:	9b00      	ldr	r3, [sp, #0]
 800118e:	469c      	mov	ip, r3
 8001190:	4465      	add	r5, ip
 8001192:	001f      	movs	r7, r3
 8001194:	429d      	cmp	r5, r3
 8001196:	419b      	sbcs	r3, r3
 8001198:	425b      	negs	r3, r3
 800119a:	191b      	adds	r3, r3, r4
 800119c:	18c0      	adds	r0, r0, r3
 800119e:	4284      	cmp	r4, r0
 80011a0:	d200      	bcs.n	80011a4 <__aeabi_ddiv+0x1c8>
 80011a2:	e1a0      	b.n	80014e6 <__aeabi_ddiv+0x50a>
 80011a4:	d100      	bne.n	80011a8 <__aeabi_ddiv+0x1cc>
 80011a6:	e19b      	b.n	80014e0 <__aeabi_ddiv+0x504>
 80011a8:	4688      	mov	r8, r1
 80011aa:	1bae      	subs	r6, r5, r6
 80011ac:	42b5      	cmp	r5, r6
 80011ae:	41ad      	sbcs	r5, r5
 80011b0:	1a80      	subs	r0, r0, r2
 80011b2:	426d      	negs	r5, r5
 80011b4:	1b40      	subs	r0, r0, r5
 80011b6:	4284      	cmp	r4, r0
 80011b8:	d100      	bne.n	80011bc <__aeabi_ddiv+0x1e0>
 80011ba:	e1d5      	b.n	8001568 <__aeabi_ddiv+0x58c>
 80011bc:	4649      	mov	r1, r9
 80011be:	f7ff f845 	bl	800024c <__aeabi_uidivmod>
 80011c2:	9a01      	ldr	r2, [sp, #4]
 80011c4:	040b      	lsls	r3, r1, #16
 80011c6:	4342      	muls	r2, r0
 80011c8:	0c31      	lsrs	r1, r6, #16
 80011ca:	0005      	movs	r5, r0
 80011cc:	4319      	orrs	r1, r3
 80011ce:	428a      	cmp	r2, r1
 80011d0:	d900      	bls.n	80011d4 <__aeabi_ddiv+0x1f8>
 80011d2:	e16c      	b.n	80014ae <__aeabi_ddiv+0x4d2>
 80011d4:	1a88      	subs	r0, r1, r2
 80011d6:	4649      	mov	r1, r9
 80011d8:	f7ff f838 	bl	800024c <__aeabi_uidivmod>
 80011dc:	9a01      	ldr	r2, [sp, #4]
 80011de:	0436      	lsls	r6, r6, #16
 80011e0:	4342      	muls	r2, r0
 80011e2:	0409      	lsls	r1, r1, #16
 80011e4:	0c36      	lsrs	r6, r6, #16
 80011e6:	0003      	movs	r3, r0
 80011e8:	430e      	orrs	r6, r1
 80011ea:	42b2      	cmp	r2, r6
 80011ec:	d900      	bls.n	80011f0 <__aeabi_ddiv+0x214>
 80011ee:	e153      	b.n	8001498 <__aeabi_ddiv+0x4bc>
 80011f0:	9803      	ldr	r0, [sp, #12]
 80011f2:	1ab6      	subs	r6, r6, r2
 80011f4:	0002      	movs	r2, r0
 80011f6:	042d      	lsls	r5, r5, #16
 80011f8:	431d      	orrs	r5, r3
 80011fa:	9f02      	ldr	r7, [sp, #8]
 80011fc:	042b      	lsls	r3, r5, #16
 80011fe:	0c1b      	lsrs	r3, r3, #16
 8001200:	435a      	muls	r2, r3
 8001202:	437b      	muls	r3, r7
 8001204:	469c      	mov	ip, r3
 8001206:	0c29      	lsrs	r1, r5, #16
 8001208:	4348      	muls	r0, r1
 800120a:	0c13      	lsrs	r3, r2, #16
 800120c:	4484      	add	ip, r0
 800120e:	4463      	add	r3, ip
 8001210:	4379      	muls	r1, r7
 8001212:	4298      	cmp	r0, r3
 8001214:	d903      	bls.n	800121e <__aeabi_ddiv+0x242>
 8001216:	2080      	movs	r0, #128	; 0x80
 8001218:	0240      	lsls	r0, r0, #9
 800121a:	4684      	mov	ip, r0
 800121c:	4461      	add	r1, ip
 800121e:	0c18      	lsrs	r0, r3, #16
 8001220:	0412      	lsls	r2, r2, #16
 8001222:	041b      	lsls	r3, r3, #16
 8001224:	0c12      	lsrs	r2, r2, #16
 8001226:	1841      	adds	r1, r0, r1
 8001228:	189b      	adds	r3, r3, r2
 800122a:	428e      	cmp	r6, r1
 800122c:	d200      	bcs.n	8001230 <__aeabi_ddiv+0x254>
 800122e:	e0ff      	b.n	8001430 <__aeabi_ddiv+0x454>
 8001230:	d100      	bne.n	8001234 <__aeabi_ddiv+0x258>
 8001232:	e0fa      	b.n	800142a <__aeabi_ddiv+0x44e>
 8001234:	2301      	movs	r3, #1
 8001236:	431d      	orrs	r5, r3
 8001238:	4a49      	ldr	r2, [pc, #292]	; (8001360 <__aeabi_ddiv+0x384>)
 800123a:	445a      	add	r2, fp
 800123c:	2a00      	cmp	r2, #0
 800123e:	dc00      	bgt.n	8001242 <__aeabi_ddiv+0x266>
 8001240:	e0aa      	b.n	8001398 <__aeabi_ddiv+0x3bc>
 8001242:	076b      	lsls	r3, r5, #29
 8001244:	d000      	beq.n	8001248 <__aeabi_ddiv+0x26c>
 8001246:	e13d      	b.n	80014c4 <__aeabi_ddiv+0x4e8>
 8001248:	08ed      	lsrs	r5, r5, #3
 800124a:	4643      	mov	r3, r8
 800124c:	01db      	lsls	r3, r3, #7
 800124e:	d506      	bpl.n	800125e <__aeabi_ddiv+0x282>
 8001250:	4642      	mov	r2, r8
 8001252:	4b44      	ldr	r3, [pc, #272]	; (8001364 <__aeabi_ddiv+0x388>)
 8001254:	401a      	ands	r2, r3
 8001256:	4690      	mov	r8, r2
 8001258:	2280      	movs	r2, #128	; 0x80
 800125a:	00d2      	lsls	r2, r2, #3
 800125c:	445a      	add	r2, fp
 800125e:	4b42      	ldr	r3, [pc, #264]	; (8001368 <__aeabi_ddiv+0x38c>)
 8001260:	429a      	cmp	r2, r3
 8001262:	dd00      	ble.n	8001266 <__aeabi_ddiv+0x28a>
 8001264:	e71f      	b.n	80010a6 <__aeabi_ddiv+0xca>
 8001266:	4643      	mov	r3, r8
 8001268:	075b      	lsls	r3, r3, #29
 800126a:	431d      	orrs	r5, r3
 800126c:	4643      	mov	r3, r8
 800126e:	0552      	lsls	r2, r2, #21
 8001270:	025c      	lsls	r4, r3, #9
 8001272:	0b24      	lsrs	r4, r4, #12
 8001274:	0d53      	lsrs	r3, r2, #21
 8001276:	e708      	b.n	800108a <__aeabi_ddiv+0xae>
 8001278:	4652      	mov	r2, sl
 800127a:	4322      	orrs	r2, r4
 800127c:	d100      	bne.n	8001280 <__aeabi_ddiv+0x2a4>
 800127e:	e07b      	b.n	8001378 <__aeabi_ddiv+0x39c>
 8001280:	2c00      	cmp	r4, #0
 8001282:	d100      	bne.n	8001286 <__aeabi_ddiv+0x2aa>
 8001284:	e0fa      	b.n	800147c <__aeabi_ddiv+0x4a0>
 8001286:	0020      	movs	r0, r4
 8001288:	f001 f99a 	bl	80025c0 <__clzsi2>
 800128c:	0002      	movs	r2, r0
 800128e:	3a0b      	subs	r2, #11
 8001290:	231d      	movs	r3, #29
 8001292:	0001      	movs	r1, r0
 8001294:	1a9b      	subs	r3, r3, r2
 8001296:	4652      	mov	r2, sl
 8001298:	3908      	subs	r1, #8
 800129a:	40da      	lsrs	r2, r3
 800129c:	408c      	lsls	r4, r1
 800129e:	4314      	orrs	r4, r2
 80012a0:	4652      	mov	r2, sl
 80012a2:	408a      	lsls	r2, r1
 80012a4:	4b31      	ldr	r3, [pc, #196]	; (800136c <__aeabi_ddiv+0x390>)
 80012a6:	4458      	add	r0, fp
 80012a8:	469b      	mov	fp, r3
 80012aa:	4483      	add	fp, r0
 80012ac:	2000      	movs	r0, #0
 80012ae:	e6d5      	b.n	800105c <__aeabi_ddiv+0x80>
 80012b0:	464b      	mov	r3, r9
 80012b2:	4323      	orrs	r3, r4
 80012b4:	4698      	mov	r8, r3
 80012b6:	d044      	beq.n	8001342 <__aeabi_ddiv+0x366>
 80012b8:	2c00      	cmp	r4, #0
 80012ba:	d100      	bne.n	80012be <__aeabi_ddiv+0x2e2>
 80012bc:	e0ce      	b.n	800145c <__aeabi_ddiv+0x480>
 80012be:	0020      	movs	r0, r4
 80012c0:	f001 f97e 	bl	80025c0 <__clzsi2>
 80012c4:	0001      	movs	r1, r0
 80012c6:	0002      	movs	r2, r0
 80012c8:	390b      	subs	r1, #11
 80012ca:	231d      	movs	r3, #29
 80012cc:	1a5b      	subs	r3, r3, r1
 80012ce:	4649      	mov	r1, r9
 80012d0:	0010      	movs	r0, r2
 80012d2:	40d9      	lsrs	r1, r3
 80012d4:	3808      	subs	r0, #8
 80012d6:	4084      	lsls	r4, r0
 80012d8:	000b      	movs	r3, r1
 80012da:	464d      	mov	r5, r9
 80012dc:	4323      	orrs	r3, r4
 80012de:	4698      	mov	r8, r3
 80012e0:	4085      	lsls	r5, r0
 80012e2:	4823      	ldr	r0, [pc, #140]	; (8001370 <__aeabi_ddiv+0x394>)
 80012e4:	1a83      	subs	r3, r0, r2
 80012e6:	469b      	mov	fp, r3
 80012e8:	2300      	movs	r3, #0
 80012ea:	4699      	mov	r9, r3
 80012ec:	9300      	str	r3, [sp, #0]
 80012ee:	e69a      	b.n	8001026 <__aeabi_ddiv+0x4a>
 80012f0:	464b      	mov	r3, r9
 80012f2:	4323      	orrs	r3, r4
 80012f4:	4698      	mov	r8, r3
 80012f6:	d11d      	bne.n	8001334 <__aeabi_ddiv+0x358>
 80012f8:	2308      	movs	r3, #8
 80012fa:	4699      	mov	r9, r3
 80012fc:	3b06      	subs	r3, #6
 80012fe:	2500      	movs	r5, #0
 8001300:	4683      	mov	fp, r0
 8001302:	9300      	str	r3, [sp, #0]
 8001304:	e68f      	b.n	8001026 <__aeabi_ddiv+0x4a>
 8001306:	4652      	mov	r2, sl
 8001308:	4322      	orrs	r2, r4
 800130a:	d109      	bne.n	8001320 <__aeabi_ddiv+0x344>
 800130c:	2302      	movs	r3, #2
 800130e:	4649      	mov	r1, r9
 8001310:	4319      	orrs	r1, r3
 8001312:	4b18      	ldr	r3, [pc, #96]	; (8001374 <__aeabi_ddiv+0x398>)
 8001314:	4689      	mov	r9, r1
 8001316:	469c      	mov	ip, r3
 8001318:	2400      	movs	r4, #0
 800131a:	2002      	movs	r0, #2
 800131c:	44e3      	add	fp, ip
 800131e:	e69d      	b.n	800105c <__aeabi_ddiv+0x80>
 8001320:	2303      	movs	r3, #3
 8001322:	464a      	mov	r2, r9
 8001324:	431a      	orrs	r2, r3
 8001326:	4b13      	ldr	r3, [pc, #76]	; (8001374 <__aeabi_ddiv+0x398>)
 8001328:	4691      	mov	r9, r2
 800132a:	469c      	mov	ip, r3
 800132c:	4652      	mov	r2, sl
 800132e:	2003      	movs	r0, #3
 8001330:	44e3      	add	fp, ip
 8001332:	e693      	b.n	800105c <__aeabi_ddiv+0x80>
 8001334:	230c      	movs	r3, #12
 8001336:	4699      	mov	r9, r3
 8001338:	3b09      	subs	r3, #9
 800133a:	46a0      	mov	r8, r4
 800133c:	4683      	mov	fp, r0
 800133e:	9300      	str	r3, [sp, #0]
 8001340:	e671      	b.n	8001026 <__aeabi_ddiv+0x4a>
 8001342:	2304      	movs	r3, #4
 8001344:	4699      	mov	r9, r3
 8001346:	2300      	movs	r3, #0
 8001348:	469b      	mov	fp, r3
 800134a:	3301      	adds	r3, #1
 800134c:	2500      	movs	r5, #0
 800134e:	9300      	str	r3, [sp, #0]
 8001350:	e669      	b.n	8001026 <__aeabi_ddiv+0x4a>
 8001352:	46c0      	nop			; (mov r8, r8)
 8001354:	000007ff 	.word	0x000007ff
 8001358:	fffffc01 	.word	0xfffffc01
 800135c:	08008bec 	.word	0x08008bec
 8001360:	000003ff 	.word	0x000003ff
 8001364:	feffffff 	.word	0xfeffffff
 8001368:	000007fe 	.word	0x000007fe
 800136c:	000003f3 	.word	0x000003f3
 8001370:	fffffc0d 	.word	0xfffffc0d
 8001374:	fffff801 	.word	0xfffff801
 8001378:	4649      	mov	r1, r9
 800137a:	2301      	movs	r3, #1
 800137c:	4319      	orrs	r1, r3
 800137e:	4689      	mov	r9, r1
 8001380:	2400      	movs	r4, #0
 8001382:	2001      	movs	r0, #1
 8001384:	e66a      	b.n	800105c <__aeabi_ddiv+0x80>
 8001386:	2300      	movs	r3, #0
 8001388:	2480      	movs	r4, #128	; 0x80
 800138a:	469a      	mov	sl, r3
 800138c:	2500      	movs	r5, #0
 800138e:	4b8a      	ldr	r3, [pc, #552]	; (80015b8 <__aeabi_ddiv+0x5dc>)
 8001390:	0324      	lsls	r4, r4, #12
 8001392:	e67a      	b.n	800108a <__aeabi_ddiv+0xae>
 8001394:	2501      	movs	r5, #1
 8001396:	426d      	negs	r5, r5
 8001398:	2301      	movs	r3, #1
 800139a:	1a9b      	subs	r3, r3, r2
 800139c:	2b38      	cmp	r3, #56	; 0x38
 800139e:	dd00      	ble.n	80013a2 <__aeabi_ddiv+0x3c6>
 80013a0:	e670      	b.n	8001084 <__aeabi_ddiv+0xa8>
 80013a2:	2b1f      	cmp	r3, #31
 80013a4:	dc00      	bgt.n	80013a8 <__aeabi_ddiv+0x3cc>
 80013a6:	e0bf      	b.n	8001528 <__aeabi_ddiv+0x54c>
 80013a8:	211f      	movs	r1, #31
 80013aa:	4249      	negs	r1, r1
 80013ac:	1a8a      	subs	r2, r1, r2
 80013ae:	4641      	mov	r1, r8
 80013b0:	40d1      	lsrs	r1, r2
 80013b2:	000a      	movs	r2, r1
 80013b4:	2b20      	cmp	r3, #32
 80013b6:	d004      	beq.n	80013c2 <__aeabi_ddiv+0x3e6>
 80013b8:	4641      	mov	r1, r8
 80013ba:	4b80      	ldr	r3, [pc, #512]	; (80015bc <__aeabi_ddiv+0x5e0>)
 80013bc:	445b      	add	r3, fp
 80013be:	4099      	lsls	r1, r3
 80013c0:	430d      	orrs	r5, r1
 80013c2:	1e6b      	subs	r3, r5, #1
 80013c4:	419d      	sbcs	r5, r3
 80013c6:	2307      	movs	r3, #7
 80013c8:	432a      	orrs	r2, r5
 80013ca:	001d      	movs	r5, r3
 80013cc:	2400      	movs	r4, #0
 80013ce:	4015      	ands	r5, r2
 80013d0:	4213      	tst	r3, r2
 80013d2:	d100      	bne.n	80013d6 <__aeabi_ddiv+0x3fa>
 80013d4:	e0d4      	b.n	8001580 <__aeabi_ddiv+0x5a4>
 80013d6:	210f      	movs	r1, #15
 80013d8:	2300      	movs	r3, #0
 80013da:	4011      	ands	r1, r2
 80013dc:	2904      	cmp	r1, #4
 80013de:	d100      	bne.n	80013e2 <__aeabi_ddiv+0x406>
 80013e0:	e0cb      	b.n	800157a <__aeabi_ddiv+0x59e>
 80013e2:	1d11      	adds	r1, r2, #4
 80013e4:	4291      	cmp	r1, r2
 80013e6:	4192      	sbcs	r2, r2
 80013e8:	4252      	negs	r2, r2
 80013ea:	189b      	adds	r3, r3, r2
 80013ec:	000a      	movs	r2, r1
 80013ee:	0219      	lsls	r1, r3, #8
 80013f0:	d400      	bmi.n	80013f4 <__aeabi_ddiv+0x418>
 80013f2:	e0c2      	b.n	800157a <__aeabi_ddiv+0x59e>
 80013f4:	2301      	movs	r3, #1
 80013f6:	2400      	movs	r4, #0
 80013f8:	2500      	movs	r5, #0
 80013fa:	e646      	b.n	800108a <__aeabi_ddiv+0xae>
 80013fc:	2380      	movs	r3, #128	; 0x80
 80013fe:	4641      	mov	r1, r8
 8001400:	031b      	lsls	r3, r3, #12
 8001402:	4219      	tst	r1, r3
 8001404:	d008      	beq.n	8001418 <__aeabi_ddiv+0x43c>
 8001406:	421c      	tst	r4, r3
 8001408:	d106      	bne.n	8001418 <__aeabi_ddiv+0x43c>
 800140a:	431c      	orrs	r4, r3
 800140c:	0324      	lsls	r4, r4, #12
 800140e:	46ba      	mov	sl, r7
 8001410:	0015      	movs	r5, r2
 8001412:	4b69      	ldr	r3, [pc, #420]	; (80015b8 <__aeabi_ddiv+0x5dc>)
 8001414:	0b24      	lsrs	r4, r4, #12
 8001416:	e638      	b.n	800108a <__aeabi_ddiv+0xae>
 8001418:	2480      	movs	r4, #128	; 0x80
 800141a:	4643      	mov	r3, r8
 800141c:	0324      	lsls	r4, r4, #12
 800141e:	431c      	orrs	r4, r3
 8001420:	0324      	lsls	r4, r4, #12
 8001422:	46b2      	mov	sl, r6
 8001424:	4b64      	ldr	r3, [pc, #400]	; (80015b8 <__aeabi_ddiv+0x5dc>)
 8001426:	0b24      	lsrs	r4, r4, #12
 8001428:	e62f      	b.n	800108a <__aeabi_ddiv+0xae>
 800142a:	2b00      	cmp	r3, #0
 800142c:	d100      	bne.n	8001430 <__aeabi_ddiv+0x454>
 800142e:	e703      	b.n	8001238 <__aeabi_ddiv+0x25c>
 8001430:	19a6      	adds	r6, r4, r6
 8001432:	1e68      	subs	r0, r5, #1
 8001434:	42a6      	cmp	r6, r4
 8001436:	d200      	bcs.n	800143a <__aeabi_ddiv+0x45e>
 8001438:	e08d      	b.n	8001556 <__aeabi_ddiv+0x57a>
 800143a:	428e      	cmp	r6, r1
 800143c:	d200      	bcs.n	8001440 <__aeabi_ddiv+0x464>
 800143e:	e0a3      	b.n	8001588 <__aeabi_ddiv+0x5ac>
 8001440:	d100      	bne.n	8001444 <__aeabi_ddiv+0x468>
 8001442:	e0b3      	b.n	80015ac <__aeabi_ddiv+0x5d0>
 8001444:	0005      	movs	r5, r0
 8001446:	e6f5      	b.n	8001234 <__aeabi_ddiv+0x258>
 8001448:	42aa      	cmp	r2, r5
 800144a:	d900      	bls.n	800144e <__aeabi_ddiv+0x472>
 800144c:	e639      	b.n	80010c2 <__aeabi_ddiv+0xe6>
 800144e:	4643      	mov	r3, r8
 8001450:	07de      	lsls	r6, r3, #31
 8001452:	0858      	lsrs	r0, r3, #1
 8001454:	086b      	lsrs	r3, r5, #1
 8001456:	431e      	orrs	r6, r3
 8001458:	07ed      	lsls	r5, r5, #31
 800145a:	e639      	b.n	80010d0 <__aeabi_ddiv+0xf4>
 800145c:	4648      	mov	r0, r9
 800145e:	f001 f8af 	bl	80025c0 <__clzsi2>
 8001462:	0001      	movs	r1, r0
 8001464:	0002      	movs	r2, r0
 8001466:	3115      	adds	r1, #21
 8001468:	3220      	adds	r2, #32
 800146a:	291c      	cmp	r1, #28
 800146c:	dc00      	bgt.n	8001470 <__aeabi_ddiv+0x494>
 800146e:	e72c      	b.n	80012ca <__aeabi_ddiv+0x2ee>
 8001470:	464b      	mov	r3, r9
 8001472:	3808      	subs	r0, #8
 8001474:	4083      	lsls	r3, r0
 8001476:	2500      	movs	r5, #0
 8001478:	4698      	mov	r8, r3
 800147a:	e732      	b.n	80012e2 <__aeabi_ddiv+0x306>
 800147c:	f001 f8a0 	bl	80025c0 <__clzsi2>
 8001480:	0003      	movs	r3, r0
 8001482:	001a      	movs	r2, r3
 8001484:	3215      	adds	r2, #21
 8001486:	3020      	adds	r0, #32
 8001488:	2a1c      	cmp	r2, #28
 800148a:	dc00      	bgt.n	800148e <__aeabi_ddiv+0x4b2>
 800148c:	e700      	b.n	8001290 <__aeabi_ddiv+0x2b4>
 800148e:	4654      	mov	r4, sl
 8001490:	3b08      	subs	r3, #8
 8001492:	2200      	movs	r2, #0
 8001494:	409c      	lsls	r4, r3
 8001496:	e705      	b.n	80012a4 <__aeabi_ddiv+0x2c8>
 8001498:	1936      	adds	r6, r6, r4
 800149a:	3b01      	subs	r3, #1
 800149c:	42b4      	cmp	r4, r6
 800149e:	d900      	bls.n	80014a2 <__aeabi_ddiv+0x4c6>
 80014a0:	e6a6      	b.n	80011f0 <__aeabi_ddiv+0x214>
 80014a2:	42b2      	cmp	r2, r6
 80014a4:	d800      	bhi.n	80014a8 <__aeabi_ddiv+0x4cc>
 80014a6:	e6a3      	b.n	80011f0 <__aeabi_ddiv+0x214>
 80014a8:	1e83      	subs	r3, r0, #2
 80014aa:	1936      	adds	r6, r6, r4
 80014ac:	e6a0      	b.n	80011f0 <__aeabi_ddiv+0x214>
 80014ae:	1909      	adds	r1, r1, r4
 80014b0:	3d01      	subs	r5, #1
 80014b2:	428c      	cmp	r4, r1
 80014b4:	d900      	bls.n	80014b8 <__aeabi_ddiv+0x4dc>
 80014b6:	e68d      	b.n	80011d4 <__aeabi_ddiv+0x1f8>
 80014b8:	428a      	cmp	r2, r1
 80014ba:	d800      	bhi.n	80014be <__aeabi_ddiv+0x4e2>
 80014bc:	e68a      	b.n	80011d4 <__aeabi_ddiv+0x1f8>
 80014be:	1e85      	subs	r5, r0, #2
 80014c0:	1909      	adds	r1, r1, r4
 80014c2:	e687      	b.n	80011d4 <__aeabi_ddiv+0x1f8>
 80014c4:	230f      	movs	r3, #15
 80014c6:	402b      	ands	r3, r5
 80014c8:	2b04      	cmp	r3, #4
 80014ca:	d100      	bne.n	80014ce <__aeabi_ddiv+0x4f2>
 80014cc:	e6bc      	b.n	8001248 <__aeabi_ddiv+0x26c>
 80014ce:	2305      	movs	r3, #5
 80014d0:	425b      	negs	r3, r3
 80014d2:	42ab      	cmp	r3, r5
 80014d4:	419b      	sbcs	r3, r3
 80014d6:	3504      	adds	r5, #4
 80014d8:	425b      	negs	r3, r3
 80014da:	08ed      	lsrs	r5, r5, #3
 80014dc:	4498      	add	r8, r3
 80014de:	e6b4      	b.n	800124a <__aeabi_ddiv+0x26e>
 80014e0:	42af      	cmp	r7, r5
 80014e2:	d900      	bls.n	80014e6 <__aeabi_ddiv+0x50a>
 80014e4:	e660      	b.n	80011a8 <__aeabi_ddiv+0x1cc>
 80014e6:	4282      	cmp	r2, r0
 80014e8:	d804      	bhi.n	80014f4 <__aeabi_ddiv+0x518>
 80014ea:	d000      	beq.n	80014ee <__aeabi_ddiv+0x512>
 80014ec:	e65c      	b.n	80011a8 <__aeabi_ddiv+0x1cc>
 80014ee:	42ae      	cmp	r6, r5
 80014f0:	d800      	bhi.n	80014f4 <__aeabi_ddiv+0x518>
 80014f2:	e659      	b.n	80011a8 <__aeabi_ddiv+0x1cc>
 80014f4:	2302      	movs	r3, #2
 80014f6:	425b      	negs	r3, r3
 80014f8:	469c      	mov	ip, r3
 80014fa:	9b00      	ldr	r3, [sp, #0]
 80014fc:	44e0      	add	r8, ip
 80014fe:	469c      	mov	ip, r3
 8001500:	4465      	add	r5, ip
 8001502:	429d      	cmp	r5, r3
 8001504:	419b      	sbcs	r3, r3
 8001506:	425b      	negs	r3, r3
 8001508:	191b      	adds	r3, r3, r4
 800150a:	18c0      	adds	r0, r0, r3
 800150c:	e64d      	b.n	80011aa <__aeabi_ddiv+0x1ce>
 800150e:	428a      	cmp	r2, r1
 8001510:	d800      	bhi.n	8001514 <__aeabi_ddiv+0x538>
 8001512:	e60e      	b.n	8001132 <__aeabi_ddiv+0x156>
 8001514:	1e83      	subs	r3, r0, #2
 8001516:	1909      	adds	r1, r1, r4
 8001518:	e60b      	b.n	8001132 <__aeabi_ddiv+0x156>
 800151a:	428a      	cmp	r2, r1
 800151c:	d800      	bhi.n	8001520 <__aeabi_ddiv+0x544>
 800151e:	e5f4      	b.n	800110a <__aeabi_ddiv+0x12e>
 8001520:	1e83      	subs	r3, r0, #2
 8001522:	4698      	mov	r8, r3
 8001524:	1909      	adds	r1, r1, r4
 8001526:	e5f0      	b.n	800110a <__aeabi_ddiv+0x12e>
 8001528:	4925      	ldr	r1, [pc, #148]	; (80015c0 <__aeabi_ddiv+0x5e4>)
 800152a:	0028      	movs	r0, r5
 800152c:	4459      	add	r1, fp
 800152e:	408d      	lsls	r5, r1
 8001530:	4642      	mov	r2, r8
 8001532:	408a      	lsls	r2, r1
 8001534:	1e69      	subs	r1, r5, #1
 8001536:	418d      	sbcs	r5, r1
 8001538:	4641      	mov	r1, r8
 800153a:	40d8      	lsrs	r0, r3
 800153c:	40d9      	lsrs	r1, r3
 800153e:	4302      	orrs	r2, r0
 8001540:	432a      	orrs	r2, r5
 8001542:	000b      	movs	r3, r1
 8001544:	0751      	lsls	r1, r2, #29
 8001546:	d100      	bne.n	800154a <__aeabi_ddiv+0x56e>
 8001548:	e751      	b.n	80013ee <__aeabi_ddiv+0x412>
 800154a:	210f      	movs	r1, #15
 800154c:	4011      	ands	r1, r2
 800154e:	2904      	cmp	r1, #4
 8001550:	d000      	beq.n	8001554 <__aeabi_ddiv+0x578>
 8001552:	e746      	b.n	80013e2 <__aeabi_ddiv+0x406>
 8001554:	e74b      	b.n	80013ee <__aeabi_ddiv+0x412>
 8001556:	0005      	movs	r5, r0
 8001558:	428e      	cmp	r6, r1
 800155a:	d000      	beq.n	800155e <__aeabi_ddiv+0x582>
 800155c:	e66a      	b.n	8001234 <__aeabi_ddiv+0x258>
 800155e:	9a00      	ldr	r2, [sp, #0]
 8001560:	4293      	cmp	r3, r2
 8001562:	d000      	beq.n	8001566 <__aeabi_ddiv+0x58a>
 8001564:	e666      	b.n	8001234 <__aeabi_ddiv+0x258>
 8001566:	e667      	b.n	8001238 <__aeabi_ddiv+0x25c>
 8001568:	4a16      	ldr	r2, [pc, #88]	; (80015c4 <__aeabi_ddiv+0x5e8>)
 800156a:	445a      	add	r2, fp
 800156c:	2a00      	cmp	r2, #0
 800156e:	dc00      	bgt.n	8001572 <__aeabi_ddiv+0x596>
 8001570:	e710      	b.n	8001394 <__aeabi_ddiv+0x3b8>
 8001572:	2301      	movs	r3, #1
 8001574:	2500      	movs	r5, #0
 8001576:	4498      	add	r8, r3
 8001578:	e667      	b.n	800124a <__aeabi_ddiv+0x26e>
 800157a:	075d      	lsls	r5, r3, #29
 800157c:	025b      	lsls	r3, r3, #9
 800157e:	0b1c      	lsrs	r4, r3, #12
 8001580:	08d2      	lsrs	r2, r2, #3
 8001582:	2300      	movs	r3, #0
 8001584:	4315      	orrs	r5, r2
 8001586:	e580      	b.n	800108a <__aeabi_ddiv+0xae>
 8001588:	9800      	ldr	r0, [sp, #0]
 800158a:	3d02      	subs	r5, #2
 800158c:	0042      	lsls	r2, r0, #1
 800158e:	4282      	cmp	r2, r0
 8001590:	41bf      	sbcs	r7, r7
 8001592:	427f      	negs	r7, r7
 8001594:	193c      	adds	r4, r7, r4
 8001596:	1936      	adds	r6, r6, r4
 8001598:	9200      	str	r2, [sp, #0]
 800159a:	e7dd      	b.n	8001558 <__aeabi_ddiv+0x57c>
 800159c:	2480      	movs	r4, #128	; 0x80
 800159e:	4643      	mov	r3, r8
 80015a0:	0324      	lsls	r4, r4, #12
 80015a2:	431c      	orrs	r4, r3
 80015a4:	0324      	lsls	r4, r4, #12
 80015a6:	4b04      	ldr	r3, [pc, #16]	; (80015b8 <__aeabi_ddiv+0x5dc>)
 80015a8:	0b24      	lsrs	r4, r4, #12
 80015aa:	e56e      	b.n	800108a <__aeabi_ddiv+0xae>
 80015ac:	9a00      	ldr	r2, [sp, #0]
 80015ae:	429a      	cmp	r2, r3
 80015b0:	d3ea      	bcc.n	8001588 <__aeabi_ddiv+0x5ac>
 80015b2:	0005      	movs	r5, r0
 80015b4:	e7d3      	b.n	800155e <__aeabi_ddiv+0x582>
 80015b6:	46c0      	nop			; (mov r8, r8)
 80015b8:	000007ff 	.word	0x000007ff
 80015bc:	0000043e 	.word	0x0000043e
 80015c0:	0000041e 	.word	0x0000041e
 80015c4:	000003ff 	.word	0x000003ff

080015c8 <__eqdf2>:
 80015c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80015ca:	464e      	mov	r6, r9
 80015cc:	4645      	mov	r5, r8
 80015ce:	46de      	mov	lr, fp
 80015d0:	4657      	mov	r7, sl
 80015d2:	4690      	mov	r8, r2
 80015d4:	b5e0      	push	{r5, r6, r7, lr}
 80015d6:	0017      	movs	r7, r2
 80015d8:	031a      	lsls	r2, r3, #12
 80015da:	0b12      	lsrs	r2, r2, #12
 80015dc:	0005      	movs	r5, r0
 80015de:	4684      	mov	ip, r0
 80015e0:	4819      	ldr	r0, [pc, #100]	; (8001648 <__eqdf2+0x80>)
 80015e2:	030e      	lsls	r6, r1, #12
 80015e4:	004c      	lsls	r4, r1, #1
 80015e6:	4691      	mov	r9, r2
 80015e8:	005a      	lsls	r2, r3, #1
 80015ea:	0fdb      	lsrs	r3, r3, #31
 80015ec:	469b      	mov	fp, r3
 80015ee:	0b36      	lsrs	r6, r6, #12
 80015f0:	0d64      	lsrs	r4, r4, #21
 80015f2:	0fc9      	lsrs	r1, r1, #31
 80015f4:	0d52      	lsrs	r2, r2, #21
 80015f6:	4284      	cmp	r4, r0
 80015f8:	d019      	beq.n	800162e <__eqdf2+0x66>
 80015fa:	4282      	cmp	r2, r0
 80015fc:	d010      	beq.n	8001620 <__eqdf2+0x58>
 80015fe:	2001      	movs	r0, #1
 8001600:	4294      	cmp	r4, r2
 8001602:	d10e      	bne.n	8001622 <__eqdf2+0x5a>
 8001604:	454e      	cmp	r6, r9
 8001606:	d10c      	bne.n	8001622 <__eqdf2+0x5a>
 8001608:	2001      	movs	r0, #1
 800160a:	45c4      	cmp	ip, r8
 800160c:	d109      	bne.n	8001622 <__eqdf2+0x5a>
 800160e:	4559      	cmp	r1, fp
 8001610:	d017      	beq.n	8001642 <__eqdf2+0x7a>
 8001612:	2c00      	cmp	r4, #0
 8001614:	d105      	bne.n	8001622 <__eqdf2+0x5a>
 8001616:	0030      	movs	r0, r6
 8001618:	4328      	orrs	r0, r5
 800161a:	1e43      	subs	r3, r0, #1
 800161c:	4198      	sbcs	r0, r3
 800161e:	e000      	b.n	8001622 <__eqdf2+0x5a>
 8001620:	2001      	movs	r0, #1
 8001622:	bcf0      	pop	{r4, r5, r6, r7}
 8001624:	46bb      	mov	fp, r7
 8001626:	46b2      	mov	sl, r6
 8001628:	46a9      	mov	r9, r5
 800162a:	46a0      	mov	r8, r4
 800162c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800162e:	0033      	movs	r3, r6
 8001630:	2001      	movs	r0, #1
 8001632:	432b      	orrs	r3, r5
 8001634:	d1f5      	bne.n	8001622 <__eqdf2+0x5a>
 8001636:	42a2      	cmp	r2, r4
 8001638:	d1f3      	bne.n	8001622 <__eqdf2+0x5a>
 800163a:	464b      	mov	r3, r9
 800163c:	433b      	orrs	r3, r7
 800163e:	d1f0      	bne.n	8001622 <__eqdf2+0x5a>
 8001640:	e7e2      	b.n	8001608 <__eqdf2+0x40>
 8001642:	2000      	movs	r0, #0
 8001644:	e7ed      	b.n	8001622 <__eqdf2+0x5a>
 8001646:	46c0      	nop			; (mov r8, r8)
 8001648:	000007ff 	.word	0x000007ff

0800164c <__gedf2>:
 800164c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800164e:	4647      	mov	r7, r8
 8001650:	46ce      	mov	lr, r9
 8001652:	0004      	movs	r4, r0
 8001654:	0018      	movs	r0, r3
 8001656:	0016      	movs	r6, r2
 8001658:	031b      	lsls	r3, r3, #12
 800165a:	0b1b      	lsrs	r3, r3, #12
 800165c:	4d2d      	ldr	r5, [pc, #180]	; (8001714 <__gedf2+0xc8>)
 800165e:	004a      	lsls	r2, r1, #1
 8001660:	4699      	mov	r9, r3
 8001662:	b580      	push	{r7, lr}
 8001664:	0043      	lsls	r3, r0, #1
 8001666:	030f      	lsls	r7, r1, #12
 8001668:	46a4      	mov	ip, r4
 800166a:	46b0      	mov	r8, r6
 800166c:	0b3f      	lsrs	r7, r7, #12
 800166e:	0d52      	lsrs	r2, r2, #21
 8001670:	0fc9      	lsrs	r1, r1, #31
 8001672:	0d5b      	lsrs	r3, r3, #21
 8001674:	0fc0      	lsrs	r0, r0, #31
 8001676:	42aa      	cmp	r2, r5
 8001678:	d021      	beq.n	80016be <__gedf2+0x72>
 800167a:	42ab      	cmp	r3, r5
 800167c:	d013      	beq.n	80016a6 <__gedf2+0x5a>
 800167e:	2a00      	cmp	r2, #0
 8001680:	d122      	bne.n	80016c8 <__gedf2+0x7c>
 8001682:	433c      	orrs	r4, r7
 8001684:	2b00      	cmp	r3, #0
 8001686:	d102      	bne.n	800168e <__gedf2+0x42>
 8001688:	464d      	mov	r5, r9
 800168a:	432e      	orrs	r6, r5
 800168c:	d022      	beq.n	80016d4 <__gedf2+0x88>
 800168e:	2c00      	cmp	r4, #0
 8001690:	d010      	beq.n	80016b4 <__gedf2+0x68>
 8001692:	4281      	cmp	r1, r0
 8001694:	d022      	beq.n	80016dc <__gedf2+0x90>
 8001696:	2002      	movs	r0, #2
 8001698:	3901      	subs	r1, #1
 800169a:	4008      	ands	r0, r1
 800169c:	3801      	subs	r0, #1
 800169e:	bcc0      	pop	{r6, r7}
 80016a0:	46b9      	mov	r9, r7
 80016a2:	46b0      	mov	r8, r6
 80016a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016a6:	464d      	mov	r5, r9
 80016a8:	432e      	orrs	r6, r5
 80016aa:	d129      	bne.n	8001700 <__gedf2+0xb4>
 80016ac:	2a00      	cmp	r2, #0
 80016ae:	d1f0      	bne.n	8001692 <__gedf2+0x46>
 80016b0:	433c      	orrs	r4, r7
 80016b2:	d1ee      	bne.n	8001692 <__gedf2+0x46>
 80016b4:	2800      	cmp	r0, #0
 80016b6:	d1f2      	bne.n	800169e <__gedf2+0x52>
 80016b8:	2001      	movs	r0, #1
 80016ba:	4240      	negs	r0, r0
 80016bc:	e7ef      	b.n	800169e <__gedf2+0x52>
 80016be:	003d      	movs	r5, r7
 80016c0:	4325      	orrs	r5, r4
 80016c2:	d11d      	bne.n	8001700 <__gedf2+0xb4>
 80016c4:	4293      	cmp	r3, r2
 80016c6:	d0ee      	beq.n	80016a6 <__gedf2+0x5a>
 80016c8:	2b00      	cmp	r3, #0
 80016ca:	d1e2      	bne.n	8001692 <__gedf2+0x46>
 80016cc:	464c      	mov	r4, r9
 80016ce:	4326      	orrs	r6, r4
 80016d0:	d1df      	bne.n	8001692 <__gedf2+0x46>
 80016d2:	e7e0      	b.n	8001696 <__gedf2+0x4a>
 80016d4:	2000      	movs	r0, #0
 80016d6:	2c00      	cmp	r4, #0
 80016d8:	d0e1      	beq.n	800169e <__gedf2+0x52>
 80016da:	e7dc      	b.n	8001696 <__gedf2+0x4a>
 80016dc:	429a      	cmp	r2, r3
 80016de:	dc0a      	bgt.n	80016f6 <__gedf2+0xaa>
 80016e0:	dbe8      	blt.n	80016b4 <__gedf2+0x68>
 80016e2:	454f      	cmp	r7, r9
 80016e4:	d8d7      	bhi.n	8001696 <__gedf2+0x4a>
 80016e6:	d00e      	beq.n	8001706 <__gedf2+0xba>
 80016e8:	2000      	movs	r0, #0
 80016ea:	454f      	cmp	r7, r9
 80016ec:	d2d7      	bcs.n	800169e <__gedf2+0x52>
 80016ee:	2900      	cmp	r1, #0
 80016f0:	d0e2      	beq.n	80016b8 <__gedf2+0x6c>
 80016f2:	0008      	movs	r0, r1
 80016f4:	e7d3      	b.n	800169e <__gedf2+0x52>
 80016f6:	4243      	negs	r3, r0
 80016f8:	4158      	adcs	r0, r3
 80016fa:	0040      	lsls	r0, r0, #1
 80016fc:	3801      	subs	r0, #1
 80016fe:	e7ce      	b.n	800169e <__gedf2+0x52>
 8001700:	2002      	movs	r0, #2
 8001702:	4240      	negs	r0, r0
 8001704:	e7cb      	b.n	800169e <__gedf2+0x52>
 8001706:	45c4      	cmp	ip, r8
 8001708:	d8c5      	bhi.n	8001696 <__gedf2+0x4a>
 800170a:	2000      	movs	r0, #0
 800170c:	45c4      	cmp	ip, r8
 800170e:	d2c6      	bcs.n	800169e <__gedf2+0x52>
 8001710:	e7ed      	b.n	80016ee <__gedf2+0xa2>
 8001712:	46c0      	nop			; (mov r8, r8)
 8001714:	000007ff 	.word	0x000007ff

08001718 <__ledf2>:
 8001718:	b5f0      	push	{r4, r5, r6, r7, lr}
 800171a:	4647      	mov	r7, r8
 800171c:	46ce      	mov	lr, r9
 800171e:	0004      	movs	r4, r0
 8001720:	0018      	movs	r0, r3
 8001722:	0016      	movs	r6, r2
 8001724:	031b      	lsls	r3, r3, #12
 8001726:	0b1b      	lsrs	r3, r3, #12
 8001728:	4d2c      	ldr	r5, [pc, #176]	; (80017dc <__ledf2+0xc4>)
 800172a:	004a      	lsls	r2, r1, #1
 800172c:	4699      	mov	r9, r3
 800172e:	b580      	push	{r7, lr}
 8001730:	0043      	lsls	r3, r0, #1
 8001732:	030f      	lsls	r7, r1, #12
 8001734:	46a4      	mov	ip, r4
 8001736:	46b0      	mov	r8, r6
 8001738:	0b3f      	lsrs	r7, r7, #12
 800173a:	0d52      	lsrs	r2, r2, #21
 800173c:	0fc9      	lsrs	r1, r1, #31
 800173e:	0d5b      	lsrs	r3, r3, #21
 8001740:	0fc0      	lsrs	r0, r0, #31
 8001742:	42aa      	cmp	r2, r5
 8001744:	d00d      	beq.n	8001762 <__ledf2+0x4a>
 8001746:	42ab      	cmp	r3, r5
 8001748:	d010      	beq.n	800176c <__ledf2+0x54>
 800174a:	2a00      	cmp	r2, #0
 800174c:	d127      	bne.n	800179e <__ledf2+0x86>
 800174e:	433c      	orrs	r4, r7
 8001750:	2b00      	cmp	r3, #0
 8001752:	d111      	bne.n	8001778 <__ledf2+0x60>
 8001754:	464d      	mov	r5, r9
 8001756:	432e      	orrs	r6, r5
 8001758:	d10e      	bne.n	8001778 <__ledf2+0x60>
 800175a:	2000      	movs	r0, #0
 800175c:	2c00      	cmp	r4, #0
 800175e:	d015      	beq.n	800178c <__ledf2+0x74>
 8001760:	e00e      	b.n	8001780 <__ledf2+0x68>
 8001762:	003d      	movs	r5, r7
 8001764:	4325      	orrs	r5, r4
 8001766:	d110      	bne.n	800178a <__ledf2+0x72>
 8001768:	4293      	cmp	r3, r2
 800176a:	d118      	bne.n	800179e <__ledf2+0x86>
 800176c:	464d      	mov	r5, r9
 800176e:	432e      	orrs	r6, r5
 8001770:	d10b      	bne.n	800178a <__ledf2+0x72>
 8001772:	2a00      	cmp	r2, #0
 8001774:	d102      	bne.n	800177c <__ledf2+0x64>
 8001776:	433c      	orrs	r4, r7
 8001778:	2c00      	cmp	r4, #0
 800177a:	d00b      	beq.n	8001794 <__ledf2+0x7c>
 800177c:	4281      	cmp	r1, r0
 800177e:	d014      	beq.n	80017aa <__ledf2+0x92>
 8001780:	2002      	movs	r0, #2
 8001782:	3901      	subs	r1, #1
 8001784:	4008      	ands	r0, r1
 8001786:	3801      	subs	r0, #1
 8001788:	e000      	b.n	800178c <__ledf2+0x74>
 800178a:	2002      	movs	r0, #2
 800178c:	bcc0      	pop	{r6, r7}
 800178e:	46b9      	mov	r9, r7
 8001790:	46b0      	mov	r8, r6
 8001792:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001794:	2800      	cmp	r0, #0
 8001796:	d1f9      	bne.n	800178c <__ledf2+0x74>
 8001798:	2001      	movs	r0, #1
 800179a:	4240      	negs	r0, r0
 800179c:	e7f6      	b.n	800178c <__ledf2+0x74>
 800179e:	2b00      	cmp	r3, #0
 80017a0:	d1ec      	bne.n	800177c <__ledf2+0x64>
 80017a2:	464c      	mov	r4, r9
 80017a4:	4326      	orrs	r6, r4
 80017a6:	d1e9      	bne.n	800177c <__ledf2+0x64>
 80017a8:	e7ea      	b.n	8001780 <__ledf2+0x68>
 80017aa:	429a      	cmp	r2, r3
 80017ac:	dd04      	ble.n	80017b8 <__ledf2+0xa0>
 80017ae:	4243      	negs	r3, r0
 80017b0:	4158      	adcs	r0, r3
 80017b2:	0040      	lsls	r0, r0, #1
 80017b4:	3801      	subs	r0, #1
 80017b6:	e7e9      	b.n	800178c <__ledf2+0x74>
 80017b8:	429a      	cmp	r2, r3
 80017ba:	dbeb      	blt.n	8001794 <__ledf2+0x7c>
 80017bc:	454f      	cmp	r7, r9
 80017be:	d8df      	bhi.n	8001780 <__ledf2+0x68>
 80017c0:	d006      	beq.n	80017d0 <__ledf2+0xb8>
 80017c2:	2000      	movs	r0, #0
 80017c4:	454f      	cmp	r7, r9
 80017c6:	d2e1      	bcs.n	800178c <__ledf2+0x74>
 80017c8:	2900      	cmp	r1, #0
 80017ca:	d0e5      	beq.n	8001798 <__ledf2+0x80>
 80017cc:	0008      	movs	r0, r1
 80017ce:	e7dd      	b.n	800178c <__ledf2+0x74>
 80017d0:	45c4      	cmp	ip, r8
 80017d2:	d8d5      	bhi.n	8001780 <__ledf2+0x68>
 80017d4:	2000      	movs	r0, #0
 80017d6:	45c4      	cmp	ip, r8
 80017d8:	d2d8      	bcs.n	800178c <__ledf2+0x74>
 80017da:	e7f5      	b.n	80017c8 <__ledf2+0xb0>
 80017dc:	000007ff 	.word	0x000007ff

080017e0 <__aeabi_dmul>:
 80017e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80017e2:	4657      	mov	r7, sl
 80017e4:	464e      	mov	r6, r9
 80017e6:	4645      	mov	r5, r8
 80017e8:	46de      	mov	lr, fp
 80017ea:	b5e0      	push	{r5, r6, r7, lr}
 80017ec:	4698      	mov	r8, r3
 80017ee:	030c      	lsls	r4, r1, #12
 80017f0:	004b      	lsls	r3, r1, #1
 80017f2:	0006      	movs	r6, r0
 80017f4:	4692      	mov	sl, r2
 80017f6:	b087      	sub	sp, #28
 80017f8:	0b24      	lsrs	r4, r4, #12
 80017fa:	0d5b      	lsrs	r3, r3, #21
 80017fc:	0fcf      	lsrs	r7, r1, #31
 80017fe:	2b00      	cmp	r3, #0
 8001800:	d100      	bne.n	8001804 <__aeabi_dmul+0x24>
 8001802:	e15c      	b.n	8001abe <__aeabi_dmul+0x2de>
 8001804:	4ad9      	ldr	r2, [pc, #868]	; (8001b6c <__aeabi_dmul+0x38c>)
 8001806:	4293      	cmp	r3, r2
 8001808:	d100      	bne.n	800180c <__aeabi_dmul+0x2c>
 800180a:	e175      	b.n	8001af8 <__aeabi_dmul+0x318>
 800180c:	0f42      	lsrs	r2, r0, #29
 800180e:	00e4      	lsls	r4, r4, #3
 8001810:	4314      	orrs	r4, r2
 8001812:	2280      	movs	r2, #128	; 0x80
 8001814:	0412      	lsls	r2, r2, #16
 8001816:	4314      	orrs	r4, r2
 8001818:	4ad5      	ldr	r2, [pc, #852]	; (8001b70 <__aeabi_dmul+0x390>)
 800181a:	00c5      	lsls	r5, r0, #3
 800181c:	4694      	mov	ip, r2
 800181e:	4463      	add	r3, ip
 8001820:	9300      	str	r3, [sp, #0]
 8001822:	2300      	movs	r3, #0
 8001824:	4699      	mov	r9, r3
 8001826:	469b      	mov	fp, r3
 8001828:	4643      	mov	r3, r8
 800182a:	4642      	mov	r2, r8
 800182c:	031e      	lsls	r6, r3, #12
 800182e:	0fd2      	lsrs	r2, r2, #31
 8001830:	005b      	lsls	r3, r3, #1
 8001832:	4650      	mov	r0, sl
 8001834:	4690      	mov	r8, r2
 8001836:	0b36      	lsrs	r6, r6, #12
 8001838:	0d5b      	lsrs	r3, r3, #21
 800183a:	d100      	bne.n	800183e <__aeabi_dmul+0x5e>
 800183c:	e120      	b.n	8001a80 <__aeabi_dmul+0x2a0>
 800183e:	4acb      	ldr	r2, [pc, #812]	; (8001b6c <__aeabi_dmul+0x38c>)
 8001840:	4293      	cmp	r3, r2
 8001842:	d100      	bne.n	8001846 <__aeabi_dmul+0x66>
 8001844:	e162      	b.n	8001b0c <__aeabi_dmul+0x32c>
 8001846:	49ca      	ldr	r1, [pc, #808]	; (8001b70 <__aeabi_dmul+0x390>)
 8001848:	0f42      	lsrs	r2, r0, #29
 800184a:	468c      	mov	ip, r1
 800184c:	9900      	ldr	r1, [sp, #0]
 800184e:	4463      	add	r3, ip
 8001850:	00f6      	lsls	r6, r6, #3
 8001852:	468c      	mov	ip, r1
 8001854:	4316      	orrs	r6, r2
 8001856:	2280      	movs	r2, #128	; 0x80
 8001858:	449c      	add	ip, r3
 800185a:	0412      	lsls	r2, r2, #16
 800185c:	4663      	mov	r3, ip
 800185e:	4316      	orrs	r6, r2
 8001860:	00c2      	lsls	r2, r0, #3
 8001862:	2000      	movs	r0, #0
 8001864:	9300      	str	r3, [sp, #0]
 8001866:	9900      	ldr	r1, [sp, #0]
 8001868:	4643      	mov	r3, r8
 800186a:	3101      	adds	r1, #1
 800186c:	468c      	mov	ip, r1
 800186e:	4649      	mov	r1, r9
 8001870:	407b      	eors	r3, r7
 8001872:	9301      	str	r3, [sp, #4]
 8001874:	290f      	cmp	r1, #15
 8001876:	d826      	bhi.n	80018c6 <__aeabi_dmul+0xe6>
 8001878:	4bbe      	ldr	r3, [pc, #760]	; (8001b74 <__aeabi_dmul+0x394>)
 800187a:	0089      	lsls	r1, r1, #2
 800187c:	5859      	ldr	r1, [r3, r1]
 800187e:	468f      	mov	pc, r1
 8001880:	4643      	mov	r3, r8
 8001882:	9301      	str	r3, [sp, #4]
 8001884:	0034      	movs	r4, r6
 8001886:	0015      	movs	r5, r2
 8001888:	4683      	mov	fp, r0
 800188a:	465b      	mov	r3, fp
 800188c:	2b02      	cmp	r3, #2
 800188e:	d016      	beq.n	80018be <__aeabi_dmul+0xde>
 8001890:	2b03      	cmp	r3, #3
 8001892:	d100      	bne.n	8001896 <__aeabi_dmul+0xb6>
 8001894:	e203      	b.n	8001c9e <__aeabi_dmul+0x4be>
 8001896:	2b01      	cmp	r3, #1
 8001898:	d000      	beq.n	800189c <__aeabi_dmul+0xbc>
 800189a:	e0cd      	b.n	8001a38 <__aeabi_dmul+0x258>
 800189c:	2200      	movs	r2, #0
 800189e:	2400      	movs	r4, #0
 80018a0:	2500      	movs	r5, #0
 80018a2:	9b01      	ldr	r3, [sp, #4]
 80018a4:	0512      	lsls	r2, r2, #20
 80018a6:	4322      	orrs	r2, r4
 80018a8:	07db      	lsls	r3, r3, #31
 80018aa:	431a      	orrs	r2, r3
 80018ac:	0028      	movs	r0, r5
 80018ae:	0011      	movs	r1, r2
 80018b0:	b007      	add	sp, #28
 80018b2:	bcf0      	pop	{r4, r5, r6, r7}
 80018b4:	46bb      	mov	fp, r7
 80018b6:	46b2      	mov	sl, r6
 80018b8:	46a9      	mov	r9, r5
 80018ba:	46a0      	mov	r8, r4
 80018bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80018be:	2400      	movs	r4, #0
 80018c0:	2500      	movs	r5, #0
 80018c2:	4aaa      	ldr	r2, [pc, #680]	; (8001b6c <__aeabi_dmul+0x38c>)
 80018c4:	e7ed      	b.n	80018a2 <__aeabi_dmul+0xc2>
 80018c6:	0c28      	lsrs	r0, r5, #16
 80018c8:	042d      	lsls	r5, r5, #16
 80018ca:	0c2d      	lsrs	r5, r5, #16
 80018cc:	002b      	movs	r3, r5
 80018ce:	0c11      	lsrs	r1, r2, #16
 80018d0:	0412      	lsls	r2, r2, #16
 80018d2:	0c12      	lsrs	r2, r2, #16
 80018d4:	4353      	muls	r3, r2
 80018d6:	4698      	mov	r8, r3
 80018d8:	0013      	movs	r3, r2
 80018da:	002f      	movs	r7, r5
 80018dc:	4343      	muls	r3, r0
 80018de:	4699      	mov	r9, r3
 80018e0:	434f      	muls	r7, r1
 80018e2:	444f      	add	r7, r9
 80018e4:	46bb      	mov	fp, r7
 80018e6:	4647      	mov	r7, r8
 80018e8:	000b      	movs	r3, r1
 80018ea:	0c3f      	lsrs	r7, r7, #16
 80018ec:	46ba      	mov	sl, r7
 80018ee:	4343      	muls	r3, r0
 80018f0:	44da      	add	sl, fp
 80018f2:	9302      	str	r3, [sp, #8]
 80018f4:	45d1      	cmp	r9, sl
 80018f6:	d904      	bls.n	8001902 <__aeabi_dmul+0x122>
 80018f8:	2780      	movs	r7, #128	; 0x80
 80018fa:	027f      	lsls	r7, r7, #9
 80018fc:	46b9      	mov	r9, r7
 80018fe:	444b      	add	r3, r9
 8001900:	9302      	str	r3, [sp, #8]
 8001902:	4653      	mov	r3, sl
 8001904:	0c1b      	lsrs	r3, r3, #16
 8001906:	469b      	mov	fp, r3
 8001908:	4653      	mov	r3, sl
 800190a:	041f      	lsls	r7, r3, #16
 800190c:	4643      	mov	r3, r8
 800190e:	041b      	lsls	r3, r3, #16
 8001910:	0c1b      	lsrs	r3, r3, #16
 8001912:	4698      	mov	r8, r3
 8001914:	003b      	movs	r3, r7
 8001916:	4443      	add	r3, r8
 8001918:	9304      	str	r3, [sp, #16]
 800191a:	0c33      	lsrs	r3, r6, #16
 800191c:	0436      	lsls	r6, r6, #16
 800191e:	0c36      	lsrs	r6, r6, #16
 8001920:	4698      	mov	r8, r3
 8001922:	0033      	movs	r3, r6
 8001924:	4343      	muls	r3, r0
 8001926:	4699      	mov	r9, r3
 8001928:	4643      	mov	r3, r8
 800192a:	4343      	muls	r3, r0
 800192c:	002f      	movs	r7, r5
 800192e:	469a      	mov	sl, r3
 8001930:	4643      	mov	r3, r8
 8001932:	4377      	muls	r7, r6
 8001934:	435d      	muls	r5, r3
 8001936:	0c38      	lsrs	r0, r7, #16
 8001938:	444d      	add	r5, r9
 800193a:	1945      	adds	r5, r0, r5
 800193c:	45a9      	cmp	r9, r5
 800193e:	d903      	bls.n	8001948 <__aeabi_dmul+0x168>
 8001940:	2380      	movs	r3, #128	; 0x80
 8001942:	025b      	lsls	r3, r3, #9
 8001944:	4699      	mov	r9, r3
 8001946:	44ca      	add	sl, r9
 8001948:	043f      	lsls	r7, r7, #16
 800194a:	0c28      	lsrs	r0, r5, #16
 800194c:	0c3f      	lsrs	r7, r7, #16
 800194e:	042d      	lsls	r5, r5, #16
 8001950:	19ed      	adds	r5, r5, r7
 8001952:	0c27      	lsrs	r7, r4, #16
 8001954:	0424      	lsls	r4, r4, #16
 8001956:	0c24      	lsrs	r4, r4, #16
 8001958:	0003      	movs	r3, r0
 800195a:	0020      	movs	r0, r4
 800195c:	4350      	muls	r0, r2
 800195e:	437a      	muls	r2, r7
 8001960:	4691      	mov	r9, r2
 8001962:	003a      	movs	r2, r7
 8001964:	4453      	add	r3, sl
 8001966:	9305      	str	r3, [sp, #20]
 8001968:	0c03      	lsrs	r3, r0, #16
 800196a:	469a      	mov	sl, r3
 800196c:	434a      	muls	r2, r1
 800196e:	4361      	muls	r1, r4
 8001970:	4449      	add	r1, r9
 8001972:	4451      	add	r1, sl
 8001974:	44ab      	add	fp, r5
 8001976:	4589      	cmp	r9, r1
 8001978:	d903      	bls.n	8001982 <__aeabi_dmul+0x1a2>
 800197a:	2380      	movs	r3, #128	; 0x80
 800197c:	025b      	lsls	r3, r3, #9
 800197e:	4699      	mov	r9, r3
 8001980:	444a      	add	r2, r9
 8001982:	0400      	lsls	r0, r0, #16
 8001984:	0c0b      	lsrs	r3, r1, #16
 8001986:	0c00      	lsrs	r0, r0, #16
 8001988:	0409      	lsls	r1, r1, #16
 800198a:	1809      	adds	r1, r1, r0
 800198c:	0020      	movs	r0, r4
 800198e:	4699      	mov	r9, r3
 8001990:	4643      	mov	r3, r8
 8001992:	4370      	muls	r0, r6
 8001994:	435c      	muls	r4, r3
 8001996:	437e      	muls	r6, r7
 8001998:	435f      	muls	r7, r3
 800199a:	0c03      	lsrs	r3, r0, #16
 800199c:	4698      	mov	r8, r3
 800199e:	19a4      	adds	r4, r4, r6
 80019a0:	4444      	add	r4, r8
 80019a2:	444a      	add	r2, r9
 80019a4:	9703      	str	r7, [sp, #12]
 80019a6:	42a6      	cmp	r6, r4
 80019a8:	d904      	bls.n	80019b4 <__aeabi_dmul+0x1d4>
 80019aa:	2380      	movs	r3, #128	; 0x80
 80019ac:	025b      	lsls	r3, r3, #9
 80019ae:	4698      	mov	r8, r3
 80019b0:	4447      	add	r7, r8
 80019b2:	9703      	str	r7, [sp, #12]
 80019b4:	0423      	lsls	r3, r4, #16
 80019b6:	9e02      	ldr	r6, [sp, #8]
 80019b8:	469a      	mov	sl, r3
 80019ba:	9b05      	ldr	r3, [sp, #20]
 80019bc:	445e      	add	r6, fp
 80019be:	4698      	mov	r8, r3
 80019c0:	42ae      	cmp	r6, r5
 80019c2:	41ad      	sbcs	r5, r5
 80019c4:	1876      	adds	r6, r6, r1
 80019c6:	428e      	cmp	r6, r1
 80019c8:	4189      	sbcs	r1, r1
 80019ca:	0400      	lsls	r0, r0, #16
 80019cc:	0c00      	lsrs	r0, r0, #16
 80019ce:	4450      	add	r0, sl
 80019d0:	4440      	add	r0, r8
 80019d2:	426d      	negs	r5, r5
 80019d4:	1947      	adds	r7, r0, r5
 80019d6:	46b8      	mov	r8, r7
 80019d8:	4693      	mov	fp, r2
 80019da:	4249      	negs	r1, r1
 80019dc:	4689      	mov	r9, r1
 80019de:	44c3      	add	fp, r8
 80019e0:	44d9      	add	r9, fp
 80019e2:	4298      	cmp	r0, r3
 80019e4:	4180      	sbcs	r0, r0
 80019e6:	45a8      	cmp	r8, r5
 80019e8:	41ad      	sbcs	r5, r5
 80019ea:	4593      	cmp	fp, r2
 80019ec:	4192      	sbcs	r2, r2
 80019ee:	4589      	cmp	r9, r1
 80019f0:	4189      	sbcs	r1, r1
 80019f2:	426d      	negs	r5, r5
 80019f4:	4240      	negs	r0, r0
 80019f6:	4328      	orrs	r0, r5
 80019f8:	0c24      	lsrs	r4, r4, #16
 80019fa:	4252      	negs	r2, r2
 80019fc:	4249      	negs	r1, r1
 80019fe:	430a      	orrs	r2, r1
 8001a00:	9b03      	ldr	r3, [sp, #12]
 8001a02:	1900      	adds	r0, r0, r4
 8001a04:	1880      	adds	r0, r0, r2
 8001a06:	18c7      	adds	r7, r0, r3
 8001a08:	464b      	mov	r3, r9
 8001a0a:	0ddc      	lsrs	r4, r3, #23
 8001a0c:	9b04      	ldr	r3, [sp, #16]
 8001a0e:	0275      	lsls	r5, r6, #9
 8001a10:	431d      	orrs	r5, r3
 8001a12:	1e6a      	subs	r2, r5, #1
 8001a14:	4195      	sbcs	r5, r2
 8001a16:	464b      	mov	r3, r9
 8001a18:	0df6      	lsrs	r6, r6, #23
 8001a1a:	027f      	lsls	r7, r7, #9
 8001a1c:	4335      	orrs	r5, r6
 8001a1e:	025a      	lsls	r2, r3, #9
 8001a20:	433c      	orrs	r4, r7
 8001a22:	4315      	orrs	r5, r2
 8001a24:	01fb      	lsls	r3, r7, #7
 8001a26:	d400      	bmi.n	8001a2a <__aeabi_dmul+0x24a>
 8001a28:	e11c      	b.n	8001c64 <__aeabi_dmul+0x484>
 8001a2a:	2101      	movs	r1, #1
 8001a2c:	086a      	lsrs	r2, r5, #1
 8001a2e:	400d      	ands	r5, r1
 8001a30:	4315      	orrs	r5, r2
 8001a32:	07e2      	lsls	r2, r4, #31
 8001a34:	4315      	orrs	r5, r2
 8001a36:	0864      	lsrs	r4, r4, #1
 8001a38:	494f      	ldr	r1, [pc, #316]	; (8001b78 <__aeabi_dmul+0x398>)
 8001a3a:	4461      	add	r1, ip
 8001a3c:	2900      	cmp	r1, #0
 8001a3e:	dc00      	bgt.n	8001a42 <__aeabi_dmul+0x262>
 8001a40:	e0b0      	b.n	8001ba4 <__aeabi_dmul+0x3c4>
 8001a42:	076b      	lsls	r3, r5, #29
 8001a44:	d009      	beq.n	8001a5a <__aeabi_dmul+0x27a>
 8001a46:	220f      	movs	r2, #15
 8001a48:	402a      	ands	r2, r5
 8001a4a:	2a04      	cmp	r2, #4
 8001a4c:	d005      	beq.n	8001a5a <__aeabi_dmul+0x27a>
 8001a4e:	1d2a      	adds	r2, r5, #4
 8001a50:	42aa      	cmp	r2, r5
 8001a52:	41ad      	sbcs	r5, r5
 8001a54:	426d      	negs	r5, r5
 8001a56:	1964      	adds	r4, r4, r5
 8001a58:	0015      	movs	r5, r2
 8001a5a:	01e3      	lsls	r3, r4, #7
 8001a5c:	d504      	bpl.n	8001a68 <__aeabi_dmul+0x288>
 8001a5e:	2180      	movs	r1, #128	; 0x80
 8001a60:	4a46      	ldr	r2, [pc, #280]	; (8001b7c <__aeabi_dmul+0x39c>)
 8001a62:	00c9      	lsls	r1, r1, #3
 8001a64:	4014      	ands	r4, r2
 8001a66:	4461      	add	r1, ip
 8001a68:	4a45      	ldr	r2, [pc, #276]	; (8001b80 <__aeabi_dmul+0x3a0>)
 8001a6a:	4291      	cmp	r1, r2
 8001a6c:	dd00      	ble.n	8001a70 <__aeabi_dmul+0x290>
 8001a6e:	e726      	b.n	80018be <__aeabi_dmul+0xde>
 8001a70:	0762      	lsls	r2, r4, #29
 8001a72:	08ed      	lsrs	r5, r5, #3
 8001a74:	0264      	lsls	r4, r4, #9
 8001a76:	0549      	lsls	r1, r1, #21
 8001a78:	4315      	orrs	r5, r2
 8001a7a:	0b24      	lsrs	r4, r4, #12
 8001a7c:	0d4a      	lsrs	r2, r1, #21
 8001a7e:	e710      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001a80:	4652      	mov	r2, sl
 8001a82:	4332      	orrs	r2, r6
 8001a84:	d100      	bne.n	8001a88 <__aeabi_dmul+0x2a8>
 8001a86:	e07f      	b.n	8001b88 <__aeabi_dmul+0x3a8>
 8001a88:	2e00      	cmp	r6, #0
 8001a8a:	d100      	bne.n	8001a8e <__aeabi_dmul+0x2ae>
 8001a8c:	e0dc      	b.n	8001c48 <__aeabi_dmul+0x468>
 8001a8e:	0030      	movs	r0, r6
 8001a90:	f000 fd96 	bl	80025c0 <__clzsi2>
 8001a94:	0002      	movs	r2, r0
 8001a96:	3a0b      	subs	r2, #11
 8001a98:	231d      	movs	r3, #29
 8001a9a:	0001      	movs	r1, r0
 8001a9c:	1a9b      	subs	r3, r3, r2
 8001a9e:	4652      	mov	r2, sl
 8001aa0:	3908      	subs	r1, #8
 8001aa2:	40da      	lsrs	r2, r3
 8001aa4:	408e      	lsls	r6, r1
 8001aa6:	4316      	orrs	r6, r2
 8001aa8:	4652      	mov	r2, sl
 8001aaa:	408a      	lsls	r2, r1
 8001aac:	9b00      	ldr	r3, [sp, #0]
 8001aae:	4935      	ldr	r1, [pc, #212]	; (8001b84 <__aeabi_dmul+0x3a4>)
 8001ab0:	1a18      	subs	r0, r3, r0
 8001ab2:	0003      	movs	r3, r0
 8001ab4:	468c      	mov	ip, r1
 8001ab6:	4463      	add	r3, ip
 8001ab8:	2000      	movs	r0, #0
 8001aba:	9300      	str	r3, [sp, #0]
 8001abc:	e6d3      	b.n	8001866 <__aeabi_dmul+0x86>
 8001abe:	0025      	movs	r5, r4
 8001ac0:	4305      	orrs	r5, r0
 8001ac2:	d04a      	beq.n	8001b5a <__aeabi_dmul+0x37a>
 8001ac4:	2c00      	cmp	r4, #0
 8001ac6:	d100      	bne.n	8001aca <__aeabi_dmul+0x2ea>
 8001ac8:	e0b0      	b.n	8001c2c <__aeabi_dmul+0x44c>
 8001aca:	0020      	movs	r0, r4
 8001acc:	f000 fd78 	bl	80025c0 <__clzsi2>
 8001ad0:	0001      	movs	r1, r0
 8001ad2:	0002      	movs	r2, r0
 8001ad4:	390b      	subs	r1, #11
 8001ad6:	231d      	movs	r3, #29
 8001ad8:	0010      	movs	r0, r2
 8001ada:	1a5b      	subs	r3, r3, r1
 8001adc:	0031      	movs	r1, r6
 8001ade:	0035      	movs	r5, r6
 8001ae0:	3808      	subs	r0, #8
 8001ae2:	4084      	lsls	r4, r0
 8001ae4:	40d9      	lsrs	r1, r3
 8001ae6:	4085      	lsls	r5, r0
 8001ae8:	430c      	orrs	r4, r1
 8001aea:	4826      	ldr	r0, [pc, #152]	; (8001b84 <__aeabi_dmul+0x3a4>)
 8001aec:	1a83      	subs	r3, r0, r2
 8001aee:	9300      	str	r3, [sp, #0]
 8001af0:	2300      	movs	r3, #0
 8001af2:	4699      	mov	r9, r3
 8001af4:	469b      	mov	fp, r3
 8001af6:	e697      	b.n	8001828 <__aeabi_dmul+0x48>
 8001af8:	0005      	movs	r5, r0
 8001afa:	4325      	orrs	r5, r4
 8001afc:	d126      	bne.n	8001b4c <__aeabi_dmul+0x36c>
 8001afe:	2208      	movs	r2, #8
 8001b00:	9300      	str	r3, [sp, #0]
 8001b02:	2302      	movs	r3, #2
 8001b04:	2400      	movs	r4, #0
 8001b06:	4691      	mov	r9, r2
 8001b08:	469b      	mov	fp, r3
 8001b0a:	e68d      	b.n	8001828 <__aeabi_dmul+0x48>
 8001b0c:	4652      	mov	r2, sl
 8001b0e:	9b00      	ldr	r3, [sp, #0]
 8001b10:	4332      	orrs	r2, r6
 8001b12:	d110      	bne.n	8001b36 <__aeabi_dmul+0x356>
 8001b14:	4915      	ldr	r1, [pc, #84]	; (8001b6c <__aeabi_dmul+0x38c>)
 8001b16:	2600      	movs	r6, #0
 8001b18:	468c      	mov	ip, r1
 8001b1a:	4463      	add	r3, ip
 8001b1c:	4649      	mov	r1, r9
 8001b1e:	9300      	str	r3, [sp, #0]
 8001b20:	2302      	movs	r3, #2
 8001b22:	4319      	orrs	r1, r3
 8001b24:	4689      	mov	r9, r1
 8001b26:	2002      	movs	r0, #2
 8001b28:	e69d      	b.n	8001866 <__aeabi_dmul+0x86>
 8001b2a:	465b      	mov	r3, fp
 8001b2c:	9701      	str	r7, [sp, #4]
 8001b2e:	2b02      	cmp	r3, #2
 8001b30:	d000      	beq.n	8001b34 <__aeabi_dmul+0x354>
 8001b32:	e6ad      	b.n	8001890 <__aeabi_dmul+0xb0>
 8001b34:	e6c3      	b.n	80018be <__aeabi_dmul+0xde>
 8001b36:	4a0d      	ldr	r2, [pc, #52]	; (8001b6c <__aeabi_dmul+0x38c>)
 8001b38:	2003      	movs	r0, #3
 8001b3a:	4694      	mov	ip, r2
 8001b3c:	4463      	add	r3, ip
 8001b3e:	464a      	mov	r2, r9
 8001b40:	9300      	str	r3, [sp, #0]
 8001b42:	2303      	movs	r3, #3
 8001b44:	431a      	orrs	r2, r3
 8001b46:	4691      	mov	r9, r2
 8001b48:	4652      	mov	r2, sl
 8001b4a:	e68c      	b.n	8001866 <__aeabi_dmul+0x86>
 8001b4c:	220c      	movs	r2, #12
 8001b4e:	9300      	str	r3, [sp, #0]
 8001b50:	2303      	movs	r3, #3
 8001b52:	0005      	movs	r5, r0
 8001b54:	4691      	mov	r9, r2
 8001b56:	469b      	mov	fp, r3
 8001b58:	e666      	b.n	8001828 <__aeabi_dmul+0x48>
 8001b5a:	2304      	movs	r3, #4
 8001b5c:	4699      	mov	r9, r3
 8001b5e:	2300      	movs	r3, #0
 8001b60:	9300      	str	r3, [sp, #0]
 8001b62:	3301      	adds	r3, #1
 8001b64:	2400      	movs	r4, #0
 8001b66:	469b      	mov	fp, r3
 8001b68:	e65e      	b.n	8001828 <__aeabi_dmul+0x48>
 8001b6a:	46c0      	nop			; (mov r8, r8)
 8001b6c:	000007ff 	.word	0x000007ff
 8001b70:	fffffc01 	.word	0xfffffc01
 8001b74:	08008c2c 	.word	0x08008c2c
 8001b78:	000003ff 	.word	0x000003ff
 8001b7c:	feffffff 	.word	0xfeffffff
 8001b80:	000007fe 	.word	0x000007fe
 8001b84:	fffffc0d 	.word	0xfffffc0d
 8001b88:	4649      	mov	r1, r9
 8001b8a:	2301      	movs	r3, #1
 8001b8c:	4319      	orrs	r1, r3
 8001b8e:	4689      	mov	r9, r1
 8001b90:	2600      	movs	r6, #0
 8001b92:	2001      	movs	r0, #1
 8001b94:	e667      	b.n	8001866 <__aeabi_dmul+0x86>
 8001b96:	2300      	movs	r3, #0
 8001b98:	2480      	movs	r4, #128	; 0x80
 8001b9a:	2500      	movs	r5, #0
 8001b9c:	4a43      	ldr	r2, [pc, #268]	; (8001cac <__aeabi_dmul+0x4cc>)
 8001b9e:	9301      	str	r3, [sp, #4]
 8001ba0:	0324      	lsls	r4, r4, #12
 8001ba2:	e67e      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001ba4:	2001      	movs	r0, #1
 8001ba6:	1a40      	subs	r0, r0, r1
 8001ba8:	2838      	cmp	r0, #56	; 0x38
 8001baa:	dd00      	ble.n	8001bae <__aeabi_dmul+0x3ce>
 8001bac:	e676      	b.n	800189c <__aeabi_dmul+0xbc>
 8001bae:	281f      	cmp	r0, #31
 8001bb0:	dd5b      	ble.n	8001c6a <__aeabi_dmul+0x48a>
 8001bb2:	221f      	movs	r2, #31
 8001bb4:	0023      	movs	r3, r4
 8001bb6:	4252      	negs	r2, r2
 8001bb8:	1a51      	subs	r1, r2, r1
 8001bba:	40cb      	lsrs	r3, r1
 8001bbc:	0019      	movs	r1, r3
 8001bbe:	2820      	cmp	r0, #32
 8001bc0:	d003      	beq.n	8001bca <__aeabi_dmul+0x3ea>
 8001bc2:	4a3b      	ldr	r2, [pc, #236]	; (8001cb0 <__aeabi_dmul+0x4d0>)
 8001bc4:	4462      	add	r2, ip
 8001bc6:	4094      	lsls	r4, r2
 8001bc8:	4325      	orrs	r5, r4
 8001bca:	1e6a      	subs	r2, r5, #1
 8001bcc:	4195      	sbcs	r5, r2
 8001bce:	002a      	movs	r2, r5
 8001bd0:	430a      	orrs	r2, r1
 8001bd2:	2107      	movs	r1, #7
 8001bd4:	000d      	movs	r5, r1
 8001bd6:	2400      	movs	r4, #0
 8001bd8:	4015      	ands	r5, r2
 8001bda:	4211      	tst	r1, r2
 8001bdc:	d05b      	beq.n	8001c96 <__aeabi_dmul+0x4b6>
 8001bde:	210f      	movs	r1, #15
 8001be0:	2400      	movs	r4, #0
 8001be2:	4011      	ands	r1, r2
 8001be4:	2904      	cmp	r1, #4
 8001be6:	d053      	beq.n	8001c90 <__aeabi_dmul+0x4b0>
 8001be8:	1d11      	adds	r1, r2, #4
 8001bea:	4291      	cmp	r1, r2
 8001bec:	4192      	sbcs	r2, r2
 8001bee:	4252      	negs	r2, r2
 8001bf0:	18a4      	adds	r4, r4, r2
 8001bf2:	000a      	movs	r2, r1
 8001bf4:	0223      	lsls	r3, r4, #8
 8001bf6:	d54b      	bpl.n	8001c90 <__aeabi_dmul+0x4b0>
 8001bf8:	2201      	movs	r2, #1
 8001bfa:	2400      	movs	r4, #0
 8001bfc:	2500      	movs	r5, #0
 8001bfe:	e650      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001c00:	2380      	movs	r3, #128	; 0x80
 8001c02:	031b      	lsls	r3, r3, #12
 8001c04:	421c      	tst	r4, r3
 8001c06:	d009      	beq.n	8001c1c <__aeabi_dmul+0x43c>
 8001c08:	421e      	tst	r6, r3
 8001c0a:	d107      	bne.n	8001c1c <__aeabi_dmul+0x43c>
 8001c0c:	4333      	orrs	r3, r6
 8001c0e:	031c      	lsls	r4, r3, #12
 8001c10:	4643      	mov	r3, r8
 8001c12:	0015      	movs	r5, r2
 8001c14:	0b24      	lsrs	r4, r4, #12
 8001c16:	4a25      	ldr	r2, [pc, #148]	; (8001cac <__aeabi_dmul+0x4cc>)
 8001c18:	9301      	str	r3, [sp, #4]
 8001c1a:	e642      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001c1c:	2280      	movs	r2, #128	; 0x80
 8001c1e:	0312      	lsls	r2, r2, #12
 8001c20:	4314      	orrs	r4, r2
 8001c22:	0324      	lsls	r4, r4, #12
 8001c24:	4a21      	ldr	r2, [pc, #132]	; (8001cac <__aeabi_dmul+0x4cc>)
 8001c26:	0b24      	lsrs	r4, r4, #12
 8001c28:	9701      	str	r7, [sp, #4]
 8001c2a:	e63a      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001c2c:	f000 fcc8 	bl	80025c0 <__clzsi2>
 8001c30:	0001      	movs	r1, r0
 8001c32:	0002      	movs	r2, r0
 8001c34:	3115      	adds	r1, #21
 8001c36:	3220      	adds	r2, #32
 8001c38:	291c      	cmp	r1, #28
 8001c3a:	dc00      	bgt.n	8001c3e <__aeabi_dmul+0x45e>
 8001c3c:	e74b      	b.n	8001ad6 <__aeabi_dmul+0x2f6>
 8001c3e:	0034      	movs	r4, r6
 8001c40:	3808      	subs	r0, #8
 8001c42:	2500      	movs	r5, #0
 8001c44:	4084      	lsls	r4, r0
 8001c46:	e750      	b.n	8001aea <__aeabi_dmul+0x30a>
 8001c48:	f000 fcba 	bl	80025c0 <__clzsi2>
 8001c4c:	0003      	movs	r3, r0
 8001c4e:	001a      	movs	r2, r3
 8001c50:	3215      	adds	r2, #21
 8001c52:	3020      	adds	r0, #32
 8001c54:	2a1c      	cmp	r2, #28
 8001c56:	dc00      	bgt.n	8001c5a <__aeabi_dmul+0x47a>
 8001c58:	e71e      	b.n	8001a98 <__aeabi_dmul+0x2b8>
 8001c5a:	4656      	mov	r6, sl
 8001c5c:	3b08      	subs	r3, #8
 8001c5e:	2200      	movs	r2, #0
 8001c60:	409e      	lsls	r6, r3
 8001c62:	e723      	b.n	8001aac <__aeabi_dmul+0x2cc>
 8001c64:	9b00      	ldr	r3, [sp, #0]
 8001c66:	469c      	mov	ip, r3
 8001c68:	e6e6      	b.n	8001a38 <__aeabi_dmul+0x258>
 8001c6a:	4912      	ldr	r1, [pc, #72]	; (8001cb4 <__aeabi_dmul+0x4d4>)
 8001c6c:	0022      	movs	r2, r4
 8001c6e:	4461      	add	r1, ip
 8001c70:	002e      	movs	r6, r5
 8001c72:	408d      	lsls	r5, r1
 8001c74:	408a      	lsls	r2, r1
 8001c76:	40c6      	lsrs	r6, r0
 8001c78:	1e69      	subs	r1, r5, #1
 8001c7a:	418d      	sbcs	r5, r1
 8001c7c:	4332      	orrs	r2, r6
 8001c7e:	432a      	orrs	r2, r5
 8001c80:	40c4      	lsrs	r4, r0
 8001c82:	0753      	lsls	r3, r2, #29
 8001c84:	d0b6      	beq.n	8001bf4 <__aeabi_dmul+0x414>
 8001c86:	210f      	movs	r1, #15
 8001c88:	4011      	ands	r1, r2
 8001c8a:	2904      	cmp	r1, #4
 8001c8c:	d1ac      	bne.n	8001be8 <__aeabi_dmul+0x408>
 8001c8e:	e7b1      	b.n	8001bf4 <__aeabi_dmul+0x414>
 8001c90:	0765      	lsls	r5, r4, #29
 8001c92:	0264      	lsls	r4, r4, #9
 8001c94:	0b24      	lsrs	r4, r4, #12
 8001c96:	08d2      	lsrs	r2, r2, #3
 8001c98:	4315      	orrs	r5, r2
 8001c9a:	2200      	movs	r2, #0
 8001c9c:	e601      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001c9e:	2280      	movs	r2, #128	; 0x80
 8001ca0:	0312      	lsls	r2, r2, #12
 8001ca2:	4314      	orrs	r4, r2
 8001ca4:	0324      	lsls	r4, r4, #12
 8001ca6:	4a01      	ldr	r2, [pc, #4]	; (8001cac <__aeabi_dmul+0x4cc>)
 8001ca8:	0b24      	lsrs	r4, r4, #12
 8001caa:	e5fa      	b.n	80018a2 <__aeabi_dmul+0xc2>
 8001cac:	000007ff 	.word	0x000007ff
 8001cb0:	0000043e 	.word	0x0000043e
 8001cb4:	0000041e 	.word	0x0000041e

08001cb8 <__aeabi_dsub>:
 8001cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001cba:	4657      	mov	r7, sl
 8001cbc:	464e      	mov	r6, r9
 8001cbe:	4645      	mov	r5, r8
 8001cc0:	46de      	mov	lr, fp
 8001cc2:	b5e0      	push	{r5, r6, r7, lr}
 8001cc4:	001e      	movs	r6, r3
 8001cc6:	0017      	movs	r7, r2
 8001cc8:	004a      	lsls	r2, r1, #1
 8001cca:	030b      	lsls	r3, r1, #12
 8001ccc:	0d52      	lsrs	r2, r2, #21
 8001cce:	0a5b      	lsrs	r3, r3, #9
 8001cd0:	4690      	mov	r8, r2
 8001cd2:	0f42      	lsrs	r2, r0, #29
 8001cd4:	431a      	orrs	r2, r3
 8001cd6:	0fcd      	lsrs	r5, r1, #31
 8001cd8:	4ccd      	ldr	r4, [pc, #820]	; (8002010 <__aeabi_dsub+0x358>)
 8001cda:	0331      	lsls	r1, r6, #12
 8001cdc:	00c3      	lsls	r3, r0, #3
 8001cde:	4694      	mov	ip, r2
 8001ce0:	0070      	lsls	r0, r6, #1
 8001ce2:	0f7a      	lsrs	r2, r7, #29
 8001ce4:	0a49      	lsrs	r1, r1, #9
 8001ce6:	00ff      	lsls	r7, r7, #3
 8001ce8:	469a      	mov	sl, r3
 8001cea:	46b9      	mov	r9, r7
 8001cec:	0d40      	lsrs	r0, r0, #21
 8001cee:	0ff6      	lsrs	r6, r6, #31
 8001cf0:	4311      	orrs	r1, r2
 8001cf2:	42a0      	cmp	r0, r4
 8001cf4:	d100      	bne.n	8001cf8 <__aeabi_dsub+0x40>
 8001cf6:	e0b1      	b.n	8001e5c <__aeabi_dsub+0x1a4>
 8001cf8:	2201      	movs	r2, #1
 8001cfa:	4056      	eors	r6, r2
 8001cfc:	46b3      	mov	fp, r6
 8001cfe:	42b5      	cmp	r5, r6
 8001d00:	d100      	bne.n	8001d04 <__aeabi_dsub+0x4c>
 8001d02:	e088      	b.n	8001e16 <__aeabi_dsub+0x15e>
 8001d04:	4642      	mov	r2, r8
 8001d06:	1a12      	subs	r2, r2, r0
 8001d08:	2a00      	cmp	r2, #0
 8001d0a:	dc00      	bgt.n	8001d0e <__aeabi_dsub+0x56>
 8001d0c:	e0ae      	b.n	8001e6c <__aeabi_dsub+0x1b4>
 8001d0e:	2800      	cmp	r0, #0
 8001d10:	d100      	bne.n	8001d14 <__aeabi_dsub+0x5c>
 8001d12:	e0c1      	b.n	8001e98 <__aeabi_dsub+0x1e0>
 8001d14:	48be      	ldr	r0, [pc, #760]	; (8002010 <__aeabi_dsub+0x358>)
 8001d16:	4580      	cmp	r8, r0
 8001d18:	d100      	bne.n	8001d1c <__aeabi_dsub+0x64>
 8001d1a:	e151      	b.n	8001fc0 <__aeabi_dsub+0x308>
 8001d1c:	2080      	movs	r0, #128	; 0x80
 8001d1e:	0400      	lsls	r0, r0, #16
 8001d20:	4301      	orrs	r1, r0
 8001d22:	2a38      	cmp	r2, #56	; 0x38
 8001d24:	dd00      	ble.n	8001d28 <__aeabi_dsub+0x70>
 8001d26:	e17b      	b.n	8002020 <__aeabi_dsub+0x368>
 8001d28:	2a1f      	cmp	r2, #31
 8001d2a:	dd00      	ble.n	8001d2e <__aeabi_dsub+0x76>
 8001d2c:	e1ee      	b.n	800210c <__aeabi_dsub+0x454>
 8001d2e:	2020      	movs	r0, #32
 8001d30:	003e      	movs	r6, r7
 8001d32:	1a80      	subs	r0, r0, r2
 8001d34:	000c      	movs	r4, r1
 8001d36:	40d6      	lsrs	r6, r2
 8001d38:	40d1      	lsrs	r1, r2
 8001d3a:	4087      	lsls	r7, r0
 8001d3c:	4662      	mov	r2, ip
 8001d3e:	4084      	lsls	r4, r0
 8001d40:	1a52      	subs	r2, r2, r1
 8001d42:	1e78      	subs	r0, r7, #1
 8001d44:	4187      	sbcs	r7, r0
 8001d46:	4694      	mov	ip, r2
 8001d48:	4334      	orrs	r4, r6
 8001d4a:	4327      	orrs	r7, r4
 8001d4c:	1bdc      	subs	r4, r3, r7
 8001d4e:	42a3      	cmp	r3, r4
 8001d50:	419b      	sbcs	r3, r3
 8001d52:	4662      	mov	r2, ip
 8001d54:	425b      	negs	r3, r3
 8001d56:	1ad3      	subs	r3, r2, r3
 8001d58:	4699      	mov	r9, r3
 8001d5a:	464b      	mov	r3, r9
 8001d5c:	021b      	lsls	r3, r3, #8
 8001d5e:	d400      	bmi.n	8001d62 <__aeabi_dsub+0xaa>
 8001d60:	e118      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 8001d62:	464b      	mov	r3, r9
 8001d64:	0258      	lsls	r0, r3, #9
 8001d66:	0a43      	lsrs	r3, r0, #9
 8001d68:	4699      	mov	r9, r3
 8001d6a:	464b      	mov	r3, r9
 8001d6c:	2b00      	cmp	r3, #0
 8001d6e:	d100      	bne.n	8001d72 <__aeabi_dsub+0xba>
 8001d70:	e137      	b.n	8001fe2 <__aeabi_dsub+0x32a>
 8001d72:	4648      	mov	r0, r9
 8001d74:	f000 fc24 	bl	80025c0 <__clzsi2>
 8001d78:	0001      	movs	r1, r0
 8001d7a:	3908      	subs	r1, #8
 8001d7c:	2320      	movs	r3, #32
 8001d7e:	0022      	movs	r2, r4
 8001d80:	4648      	mov	r0, r9
 8001d82:	1a5b      	subs	r3, r3, r1
 8001d84:	40da      	lsrs	r2, r3
 8001d86:	4088      	lsls	r0, r1
 8001d88:	408c      	lsls	r4, r1
 8001d8a:	4643      	mov	r3, r8
 8001d8c:	4310      	orrs	r0, r2
 8001d8e:	4588      	cmp	r8, r1
 8001d90:	dd00      	ble.n	8001d94 <__aeabi_dsub+0xdc>
 8001d92:	e136      	b.n	8002002 <__aeabi_dsub+0x34a>
 8001d94:	1ac9      	subs	r1, r1, r3
 8001d96:	1c4b      	adds	r3, r1, #1
 8001d98:	2b1f      	cmp	r3, #31
 8001d9a:	dd00      	ble.n	8001d9e <__aeabi_dsub+0xe6>
 8001d9c:	e0ea      	b.n	8001f74 <__aeabi_dsub+0x2bc>
 8001d9e:	2220      	movs	r2, #32
 8001da0:	0026      	movs	r6, r4
 8001da2:	1ad2      	subs	r2, r2, r3
 8001da4:	0001      	movs	r1, r0
 8001da6:	4094      	lsls	r4, r2
 8001da8:	40de      	lsrs	r6, r3
 8001daa:	40d8      	lsrs	r0, r3
 8001dac:	2300      	movs	r3, #0
 8001dae:	4091      	lsls	r1, r2
 8001db0:	1e62      	subs	r2, r4, #1
 8001db2:	4194      	sbcs	r4, r2
 8001db4:	4681      	mov	r9, r0
 8001db6:	4698      	mov	r8, r3
 8001db8:	4331      	orrs	r1, r6
 8001dba:	430c      	orrs	r4, r1
 8001dbc:	0763      	lsls	r3, r4, #29
 8001dbe:	d009      	beq.n	8001dd4 <__aeabi_dsub+0x11c>
 8001dc0:	230f      	movs	r3, #15
 8001dc2:	4023      	ands	r3, r4
 8001dc4:	2b04      	cmp	r3, #4
 8001dc6:	d005      	beq.n	8001dd4 <__aeabi_dsub+0x11c>
 8001dc8:	1d23      	adds	r3, r4, #4
 8001dca:	42a3      	cmp	r3, r4
 8001dcc:	41a4      	sbcs	r4, r4
 8001dce:	4264      	negs	r4, r4
 8001dd0:	44a1      	add	r9, r4
 8001dd2:	001c      	movs	r4, r3
 8001dd4:	464b      	mov	r3, r9
 8001dd6:	021b      	lsls	r3, r3, #8
 8001dd8:	d400      	bmi.n	8001ddc <__aeabi_dsub+0x124>
 8001dda:	e0de      	b.n	8001f9a <__aeabi_dsub+0x2e2>
 8001ddc:	4641      	mov	r1, r8
 8001dde:	4b8c      	ldr	r3, [pc, #560]	; (8002010 <__aeabi_dsub+0x358>)
 8001de0:	3101      	adds	r1, #1
 8001de2:	4299      	cmp	r1, r3
 8001de4:	d100      	bne.n	8001de8 <__aeabi_dsub+0x130>
 8001de6:	e0e7      	b.n	8001fb8 <__aeabi_dsub+0x300>
 8001de8:	464b      	mov	r3, r9
 8001dea:	488a      	ldr	r0, [pc, #552]	; (8002014 <__aeabi_dsub+0x35c>)
 8001dec:	08e4      	lsrs	r4, r4, #3
 8001dee:	4003      	ands	r3, r0
 8001df0:	0018      	movs	r0, r3
 8001df2:	0549      	lsls	r1, r1, #21
 8001df4:	075b      	lsls	r3, r3, #29
 8001df6:	0240      	lsls	r0, r0, #9
 8001df8:	4323      	orrs	r3, r4
 8001dfa:	0d4a      	lsrs	r2, r1, #21
 8001dfc:	0b04      	lsrs	r4, r0, #12
 8001dfe:	0512      	lsls	r2, r2, #20
 8001e00:	07ed      	lsls	r5, r5, #31
 8001e02:	4322      	orrs	r2, r4
 8001e04:	432a      	orrs	r2, r5
 8001e06:	0018      	movs	r0, r3
 8001e08:	0011      	movs	r1, r2
 8001e0a:	bcf0      	pop	{r4, r5, r6, r7}
 8001e0c:	46bb      	mov	fp, r7
 8001e0e:	46b2      	mov	sl, r6
 8001e10:	46a9      	mov	r9, r5
 8001e12:	46a0      	mov	r8, r4
 8001e14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001e16:	4642      	mov	r2, r8
 8001e18:	1a12      	subs	r2, r2, r0
 8001e1a:	2a00      	cmp	r2, #0
 8001e1c:	dd52      	ble.n	8001ec4 <__aeabi_dsub+0x20c>
 8001e1e:	2800      	cmp	r0, #0
 8001e20:	d100      	bne.n	8001e24 <__aeabi_dsub+0x16c>
 8001e22:	e09c      	b.n	8001f5e <__aeabi_dsub+0x2a6>
 8001e24:	45a0      	cmp	r8, r4
 8001e26:	d100      	bne.n	8001e2a <__aeabi_dsub+0x172>
 8001e28:	e0ca      	b.n	8001fc0 <__aeabi_dsub+0x308>
 8001e2a:	2080      	movs	r0, #128	; 0x80
 8001e2c:	0400      	lsls	r0, r0, #16
 8001e2e:	4301      	orrs	r1, r0
 8001e30:	2a38      	cmp	r2, #56	; 0x38
 8001e32:	dd00      	ble.n	8001e36 <__aeabi_dsub+0x17e>
 8001e34:	e149      	b.n	80020ca <__aeabi_dsub+0x412>
 8001e36:	2a1f      	cmp	r2, #31
 8001e38:	dc00      	bgt.n	8001e3c <__aeabi_dsub+0x184>
 8001e3a:	e197      	b.n	800216c <__aeabi_dsub+0x4b4>
 8001e3c:	0010      	movs	r0, r2
 8001e3e:	000e      	movs	r6, r1
 8001e40:	3820      	subs	r0, #32
 8001e42:	40c6      	lsrs	r6, r0
 8001e44:	2a20      	cmp	r2, #32
 8001e46:	d004      	beq.n	8001e52 <__aeabi_dsub+0x19a>
 8001e48:	2040      	movs	r0, #64	; 0x40
 8001e4a:	1a82      	subs	r2, r0, r2
 8001e4c:	4091      	lsls	r1, r2
 8001e4e:	430f      	orrs	r7, r1
 8001e50:	46b9      	mov	r9, r7
 8001e52:	464c      	mov	r4, r9
 8001e54:	1e62      	subs	r2, r4, #1
 8001e56:	4194      	sbcs	r4, r2
 8001e58:	4334      	orrs	r4, r6
 8001e5a:	e13a      	b.n	80020d2 <__aeabi_dsub+0x41a>
 8001e5c:	000a      	movs	r2, r1
 8001e5e:	433a      	orrs	r2, r7
 8001e60:	d028      	beq.n	8001eb4 <__aeabi_dsub+0x1fc>
 8001e62:	46b3      	mov	fp, r6
 8001e64:	42b5      	cmp	r5, r6
 8001e66:	d02b      	beq.n	8001ec0 <__aeabi_dsub+0x208>
 8001e68:	4a6b      	ldr	r2, [pc, #428]	; (8002018 <__aeabi_dsub+0x360>)
 8001e6a:	4442      	add	r2, r8
 8001e6c:	2a00      	cmp	r2, #0
 8001e6e:	d05d      	beq.n	8001f2c <__aeabi_dsub+0x274>
 8001e70:	4642      	mov	r2, r8
 8001e72:	4644      	mov	r4, r8
 8001e74:	1a82      	subs	r2, r0, r2
 8001e76:	2c00      	cmp	r4, #0
 8001e78:	d000      	beq.n	8001e7c <__aeabi_dsub+0x1c4>
 8001e7a:	e0f5      	b.n	8002068 <__aeabi_dsub+0x3b0>
 8001e7c:	4665      	mov	r5, ip
 8001e7e:	431d      	orrs	r5, r3
 8001e80:	d100      	bne.n	8001e84 <__aeabi_dsub+0x1cc>
 8001e82:	e19c      	b.n	80021be <__aeabi_dsub+0x506>
 8001e84:	1e55      	subs	r5, r2, #1
 8001e86:	2a01      	cmp	r2, #1
 8001e88:	d100      	bne.n	8001e8c <__aeabi_dsub+0x1d4>
 8001e8a:	e1fb      	b.n	8002284 <__aeabi_dsub+0x5cc>
 8001e8c:	4c60      	ldr	r4, [pc, #384]	; (8002010 <__aeabi_dsub+0x358>)
 8001e8e:	42a2      	cmp	r2, r4
 8001e90:	d100      	bne.n	8001e94 <__aeabi_dsub+0x1dc>
 8001e92:	e1bd      	b.n	8002210 <__aeabi_dsub+0x558>
 8001e94:	002a      	movs	r2, r5
 8001e96:	e0f0      	b.n	800207a <__aeabi_dsub+0x3c2>
 8001e98:	0008      	movs	r0, r1
 8001e9a:	4338      	orrs	r0, r7
 8001e9c:	d100      	bne.n	8001ea0 <__aeabi_dsub+0x1e8>
 8001e9e:	e0c3      	b.n	8002028 <__aeabi_dsub+0x370>
 8001ea0:	1e50      	subs	r0, r2, #1
 8001ea2:	2a01      	cmp	r2, #1
 8001ea4:	d100      	bne.n	8001ea8 <__aeabi_dsub+0x1f0>
 8001ea6:	e1a8      	b.n	80021fa <__aeabi_dsub+0x542>
 8001ea8:	4c59      	ldr	r4, [pc, #356]	; (8002010 <__aeabi_dsub+0x358>)
 8001eaa:	42a2      	cmp	r2, r4
 8001eac:	d100      	bne.n	8001eb0 <__aeabi_dsub+0x1f8>
 8001eae:	e087      	b.n	8001fc0 <__aeabi_dsub+0x308>
 8001eb0:	0002      	movs	r2, r0
 8001eb2:	e736      	b.n	8001d22 <__aeabi_dsub+0x6a>
 8001eb4:	2201      	movs	r2, #1
 8001eb6:	4056      	eors	r6, r2
 8001eb8:	46b3      	mov	fp, r6
 8001eba:	42b5      	cmp	r5, r6
 8001ebc:	d000      	beq.n	8001ec0 <__aeabi_dsub+0x208>
 8001ebe:	e721      	b.n	8001d04 <__aeabi_dsub+0x4c>
 8001ec0:	4a55      	ldr	r2, [pc, #340]	; (8002018 <__aeabi_dsub+0x360>)
 8001ec2:	4442      	add	r2, r8
 8001ec4:	2a00      	cmp	r2, #0
 8001ec6:	d100      	bne.n	8001eca <__aeabi_dsub+0x212>
 8001ec8:	e0b5      	b.n	8002036 <__aeabi_dsub+0x37e>
 8001eca:	4642      	mov	r2, r8
 8001ecc:	4644      	mov	r4, r8
 8001ece:	1a82      	subs	r2, r0, r2
 8001ed0:	2c00      	cmp	r4, #0
 8001ed2:	d100      	bne.n	8001ed6 <__aeabi_dsub+0x21e>
 8001ed4:	e138      	b.n	8002148 <__aeabi_dsub+0x490>
 8001ed6:	4e4e      	ldr	r6, [pc, #312]	; (8002010 <__aeabi_dsub+0x358>)
 8001ed8:	42b0      	cmp	r0, r6
 8001eda:	d100      	bne.n	8001ede <__aeabi_dsub+0x226>
 8001edc:	e1de      	b.n	800229c <__aeabi_dsub+0x5e4>
 8001ede:	2680      	movs	r6, #128	; 0x80
 8001ee0:	4664      	mov	r4, ip
 8001ee2:	0436      	lsls	r6, r6, #16
 8001ee4:	4334      	orrs	r4, r6
 8001ee6:	46a4      	mov	ip, r4
 8001ee8:	2a38      	cmp	r2, #56	; 0x38
 8001eea:	dd00      	ble.n	8001eee <__aeabi_dsub+0x236>
 8001eec:	e196      	b.n	800221c <__aeabi_dsub+0x564>
 8001eee:	2a1f      	cmp	r2, #31
 8001ef0:	dd00      	ble.n	8001ef4 <__aeabi_dsub+0x23c>
 8001ef2:	e224      	b.n	800233e <__aeabi_dsub+0x686>
 8001ef4:	2620      	movs	r6, #32
 8001ef6:	1ab4      	subs	r4, r6, r2
 8001ef8:	46a2      	mov	sl, r4
 8001efa:	4664      	mov	r4, ip
 8001efc:	4656      	mov	r6, sl
 8001efe:	40b4      	lsls	r4, r6
 8001f00:	46a1      	mov	r9, r4
 8001f02:	001c      	movs	r4, r3
 8001f04:	464e      	mov	r6, r9
 8001f06:	40d4      	lsrs	r4, r2
 8001f08:	4326      	orrs	r6, r4
 8001f0a:	0034      	movs	r4, r6
 8001f0c:	4656      	mov	r6, sl
 8001f0e:	40b3      	lsls	r3, r6
 8001f10:	1e5e      	subs	r6, r3, #1
 8001f12:	41b3      	sbcs	r3, r6
 8001f14:	431c      	orrs	r4, r3
 8001f16:	4663      	mov	r3, ip
 8001f18:	40d3      	lsrs	r3, r2
 8001f1a:	18c9      	adds	r1, r1, r3
 8001f1c:	19e4      	adds	r4, r4, r7
 8001f1e:	42bc      	cmp	r4, r7
 8001f20:	41bf      	sbcs	r7, r7
 8001f22:	427f      	negs	r7, r7
 8001f24:	46b9      	mov	r9, r7
 8001f26:	4680      	mov	r8, r0
 8001f28:	4489      	add	r9, r1
 8001f2a:	e0d8      	b.n	80020de <__aeabi_dsub+0x426>
 8001f2c:	4640      	mov	r0, r8
 8001f2e:	4c3b      	ldr	r4, [pc, #236]	; (800201c <__aeabi_dsub+0x364>)
 8001f30:	3001      	adds	r0, #1
 8001f32:	4220      	tst	r0, r4
 8001f34:	d000      	beq.n	8001f38 <__aeabi_dsub+0x280>
 8001f36:	e0b4      	b.n	80020a2 <__aeabi_dsub+0x3ea>
 8001f38:	4640      	mov	r0, r8
 8001f3a:	2800      	cmp	r0, #0
 8001f3c:	d000      	beq.n	8001f40 <__aeabi_dsub+0x288>
 8001f3e:	e144      	b.n	80021ca <__aeabi_dsub+0x512>
 8001f40:	4660      	mov	r0, ip
 8001f42:	4318      	orrs	r0, r3
 8001f44:	d100      	bne.n	8001f48 <__aeabi_dsub+0x290>
 8001f46:	e190      	b.n	800226a <__aeabi_dsub+0x5b2>
 8001f48:	0008      	movs	r0, r1
 8001f4a:	4338      	orrs	r0, r7
 8001f4c:	d000      	beq.n	8001f50 <__aeabi_dsub+0x298>
 8001f4e:	e1aa      	b.n	80022a6 <__aeabi_dsub+0x5ee>
 8001f50:	4661      	mov	r1, ip
 8001f52:	08db      	lsrs	r3, r3, #3
 8001f54:	0749      	lsls	r1, r1, #29
 8001f56:	430b      	orrs	r3, r1
 8001f58:	4661      	mov	r1, ip
 8001f5a:	08cc      	lsrs	r4, r1, #3
 8001f5c:	e027      	b.n	8001fae <__aeabi_dsub+0x2f6>
 8001f5e:	0008      	movs	r0, r1
 8001f60:	4338      	orrs	r0, r7
 8001f62:	d061      	beq.n	8002028 <__aeabi_dsub+0x370>
 8001f64:	1e50      	subs	r0, r2, #1
 8001f66:	2a01      	cmp	r2, #1
 8001f68:	d100      	bne.n	8001f6c <__aeabi_dsub+0x2b4>
 8001f6a:	e139      	b.n	80021e0 <__aeabi_dsub+0x528>
 8001f6c:	42a2      	cmp	r2, r4
 8001f6e:	d027      	beq.n	8001fc0 <__aeabi_dsub+0x308>
 8001f70:	0002      	movs	r2, r0
 8001f72:	e75d      	b.n	8001e30 <__aeabi_dsub+0x178>
 8001f74:	0002      	movs	r2, r0
 8001f76:	391f      	subs	r1, #31
 8001f78:	40ca      	lsrs	r2, r1
 8001f7a:	0011      	movs	r1, r2
 8001f7c:	2b20      	cmp	r3, #32
 8001f7e:	d003      	beq.n	8001f88 <__aeabi_dsub+0x2d0>
 8001f80:	2240      	movs	r2, #64	; 0x40
 8001f82:	1ad3      	subs	r3, r2, r3
 8001f84:	4098      	lsls	r0, r3
 8001f86:	4304      	orrs	r4, r0
 8001f88:	1e63      	subs	r3, r4, #1
 8001f8a:	419c      	sbcs	r4, r3
 8001f8c:	2300      	movs	r3, #0
 8001f8e:	4699      	mov	r9, r3
 8001f90:	4698      	mov	r8, r3
 8001f92:	430c      	orrs	r4, r1
 8001f94:	0763      	lsls	r3, r4, #29
 8001f96:	d000      	beq.n	8001f9a <__aeabi_dsub+0x2e2>
 8001f98:	e712      	b.n	8001dc0 <__aeabi_dsub+0x108>
 8001f9a:	464b      	mov	r3, r9
 8001f9c:	464a      	mov	r2, r9
 8001f9e:	08e4      	lsrs	r4, r4, #3
 8001fa0:	075b      	lsls	r3, r3, #29
 8001fa2:	4323      	orrs	r3, r4
 8001fa4:	08d4      	lsrs	r4, r2, #3
 8001fa6:	4642      	mov	r2, r8
 8001fa8:	4919      	ldr	r1, [pc, #100]	; (8002010 <__aeabi_dsub+0x358>)
 8001faa:	428a      	cmp	r2, r1
 8001fac:	d00e      	beq.n	8001fcc <__aeabi_dsub+0x314>
 8001fae:	0324      	lsls	r4, r4, #12
 8001fb0:	0552      	lsls	r2, r2, #21
 8001fb2:	0b24      	lsrs	r4, r4, #12
 8001fb4:	0d52      	lsrs	r2, r2, #21
 8001fb6:	e722      	b.n	8001dfe <__aeabi_dsub+0x146>
 8001fb8:	000a      	movs	r2, r1
 8001fba:	2400      	movs	r4, #0
 8001fbc:	2300      	movs	r3, #0
 8001fbe:	e71e      	b.n	8001dfe <__aeabi_dsub+0x146>
 8001fc0:	08db      	lsrs	r3, r3, #3
 8001fc2:	4662      	mov	r2, ip
 8001fc4:	0752      	lsls	r2, r2, #29
 8001fc6:	4313      	orrs	r3, r2
 8001fc8:	4662      	mov	r2, ip
 8001fca:	08d4      	lsrs	r4, r2, #3
 8001fcc:	001a      	movs	r2, r3
 8001fce:	4322      	orrs	r2, r4
 8001fd0:	d100      	bne.n	8001fd4 <__aeabi_dsub+0x31c>
 8001fd2:	e1fc      	b.n	80023ce <__aeabi_dsub+0x716>
 8001fd4:	2280      	movs	r2, #128	; 0x80
 8001fd6:	0312      	lsls	r2, r2, #12
 8001fd8:	4314      	orrs	r4, r2
 8001fda:	0324      	lsls	r4, r4, #12
 8001fdc:	4a0c      	ldr	r2, [pc, #48]	; (8002010 <__aeabi_dsub+0x358>)
 8001fde:	0b24      	lsrs	r4, r4, #12
 8001fe0:	e70d      	b.n	8001dfe <__aeabi_dsub+0x146>
 8001fe2:	0020      	movs	r0, r4
 8001fe4:	f000 faec 	bl	80025c0 <__clzsi2>
 8001fe8:	0001      	movs	r1, r0
 8001fea:	3118      	adds	r1, #24
 8001fec:	291f      	cmp	r1, #31
 8001fee:	dc00      	bgt.n	8001ff2 <__aeabi_dsub+0x33a>
 8001ff0:	e6c4      	b.n	8001d7c <__aeabi_dsub+0xc4>
 8001ff2:	3808      	subs	r0, #8
 8001ff4:	4084      	lsls	r4, r0
 8001ff6:	4643      	mov	r3, r8
 8001ff8:	0020      	movs	r0, r4
 8001ffa:	2400      	movs	r4, #0
 8001ffc:	4588      	cmp	r8, r1
 8001ffe:	dc00      	bgt.n	8002002 <__aeabi_dsub+0x34a>
 8002000:	e6c8      	b.n	8001d94 <__aeabi_dsub+0xdc>
 8002002:	4a04      	ldr	r2, [pc, #16]	; (8002014 <__aeabi_dsub+0x35c>)
 8002004:	1a5b      	subs	r3, r3, r1
 8002006:	4010      	ands	r0, r2
 8002008:	4698      	mov	r8, r3
 800200a:	4681      	mov	r9, r0
 800200c:	e6d6      	b.n	8001dbc <__aeabi_dsub+0x104>
 800200e:	46c0      	nop			; (mov r8, r8)
 8002010:	000007ff 	.word	0x000007ff
 8002014:	ff7fffff 	.word	0xff7fffff
 8002018:	fffff801 	.word	0xfffff801
 800201c:	000007fe 	.word	0x000007fe
 8002020:	430f      	orrs	r7, r1
 8002022:	1e7a      	subs	r2, r7, #1
 8002024:	4197      	sbcs	r7, r2
 8002026:	e691      	b.n	8001d4c <__aeabi_dsub+0x94>
 8002028:	4661      	mov	r1, ip
 800202a:	08db      	lsrs	r3, r3, #3
 800202c:	0749      	lsls	r1, r1, #29
 800202e:	430b      	orrs	r3, r1
 8002030:	4661      	mov	r1, ip
 8002032:	08cc      	lsrs	r4, r1, #3
 8002034:	e7b8      	b.n	8001fa8 <__aeabi_dsub+0x2f0>
 8002036:	4640      	mov	r0, r8
 8002038:	4cd3      	ldr	r4, [pc, #844]	; (8002388 <__aeabi_dsub+0x6d0>)
 800203a:	3001      	adds	r0, #1
 800203c:	4220      	tst	r0, r4
 800203e:	d000      	beq.n	8002042 <__aeabi_dsub+0x38a>
 8002040:	e0a2      	b.n	8002188 <__aeabi_dsub+0x4d0>
 8002042:	4640      	mov	r0, r8
 8002044:	2800      	cmp	r0, #0
 8002046:	d000      	beq.n	800204a <__aeabi_dsub+0x392>
 8002048:	e101      	b.n	800224e <__aeabi_dsub+0x596>
 800204a:	4660      	mov	r0, ip
 800204c:	4318      	orrs	r0, r3
 800204e:	d100      	bne.n	8002052 <__aeabi_dsub+0x39a>
 8002050:	e15e      	b.n	8002310 <__aeabi_dsub+0x658>
 8002052:	0008      	movs	r0, r1
 8002054:	4338      	orrs	r0, r7
 8002056:	d000      	beq.n	800205a <__aeabi_dsub+0x3a2>
 8002058:	e15f      	b.n	800231a <__aeabi_dsub+0x662>
 800205a:	4661      	mov	r1, ip
 800205c:	08db      	lsrs	r3, r3, #3
 800205e:	0749      	lsls	r1, r1, #29
 8002060:	430b      	orrs	r3, r1
 8002062:	4661      	mov	r1, ip
 8002064:	08cc      	lsrs	r4, r1, #3
 8002066:	e7a2      	b.n	8001fae <__aeabi_dsub+0x2f6>
 8002068:	4dc8      	ldr	r5, [pc, #800]	; (800238c <__aeabi_dsub+0x6d4>)
 800206a:	42a8      	cmp	r0, r5
 800206c:	d100      	bne.n	8002070 <__aeabi_dsub+0x3b8>
 800206e:	e0cf      	b.n	8002210 <__aeabi_dsub+0x558>
 8002070:	2580      	movs	r5, #128	; 0x80
 8002072:	4664      	mov	r4, ip
 8002074:	042d      	lsls	r5, r5, #16
 8002076:	432c      	orrs	r4, r5
 8002078:	46a4      	mov	ip, r4
 800207a:	2a38      	cmp	r2, #56	; 0x38
 800207c:	dc56      	bgt.n	800212c <__aeabi_dsub+0x474>
 800207e:	2a1f      	cmp	r2, #31
 8002080:	dd00      	ble.n	8002084 <__aeabi_dsub+0x3cc>
 8002082:	e0d1      	b.n	8002228 <__aeabi_dsub+0x570>
 8002084:	2520      	movs	r5, #32
 8002086:	001e      	movs	r6, r3
 8002088:	1aad      	subs	r5, r5, r2
 800208a:	4664      	mov	r4, ip
 800208c:	40ab      	lsls	r3, r5
 800208e:	40ac      	lsls	r4, r5
 8002090:	40d6      	lsrs	r6, r2
 8002092:	1e5d      	subs	r5, r3, #1
 8002094:	41ab      	sbcs	r3, r5
 8002096:	4334      	orrs	r4, r6
 8002098:	4323      	orrs	r3, r4
 800209a:	4664      	mov	r4, ip
 800209c:	40d4      	lsrs	r4, r2
 800209e:	1b09      	subs	r1, r1, r4
 80020a0:	e049      	b.n	8002136 <__aeabi_dsub+0x47e>
 80020a2:	4660      	mov	r0, ip
 80020a4:	1bdc      	subs	r4, r3, r7
 80020a6:	1a46      	subs	r6, r0, r1
 80020a8:	42a3      	cmp	r3, r4
 80020aa:	4180      	sbcs	r0, r0
 80020ac:	4240      	negs	r0, r0
 80020ae:	4681      	mov	r9, r0
 80020b0:	0030      	movs	r0, r6
 80020b2:	464e      	mov	r6, r9
 80020b4:	1b80      	subs	r0, r0, r6
 80020b6:	4681      	mov	r9, r0
 80020b8:	0200      	lsls	r0, r0, #8
 80020ba:	d476      	bmi.n	80021aa <__aeabi_dsub+0x4f2>
 80020bc:	464b      	mov	r3, r9
 80020be:	4323      	orrs	r3, r4
 80020c0:	d000      	beq.n	80020c4 <__aeabi_dsub+0x40c>
 80020c2:	e652      	b.n	8001d6a <__aeabi_dsub+0xb2>
 80020c4:	2400      	movs	r4, #0
 80020c6:	2500      	movs	r5, #0
 80020c8:	e771      	b.n	8001fae <__aeabi_dsub+0x2f6>
 80020ca:	4339      	orrs	r1, r7
 80020cc:	000c      	movs	r4, r1
 80020ce:	1e62      	subs	r2, r4, #1
 80020d0:	4194      	sbcs	r4, r2
 80020d2:	18e4      	adds	r4, r4, r3
 80020d4:	429c      	cmp	r4, r3
 80020d6:	419b      	sbcs	r3, r3
 80020d8:	425b      	negs	r3, r3
 80020da:	4463      	add	r3, ip
 80020dc:	4699      	mov	r9, r3
 80020de:	464b      	mov	r3, r9
 80020e0:	021b      	lsls	r3, r3, #8
 80020e2:	d400      	bmi.n	80020e6 <__aeabi_dsub+0x42e>
 80020e4:	e756      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 80020e6:	2301      	movs	r3, #1
 80020e8:	469c      	mov	ip, r3
 80020ea:	4ba8      	ldr	r3, [pc, #672]	; (800238c <__aeabi_dsub+0x6d4>)
 80020ec:	44e0      	add	r8, ip
 80020ee:	4598      	cmp	r8, r3
 80020f0:	d038      	beq.n	8002164 <__aeabi_dsub+0x4ac>
 80020f2:	464b      	mov	r3, r9
 80020f4:	48a6      	ldr	r0, [pc, #664]	; (8002390 <__aeabi_dsub+0x6d8>)
 80020f6:	2201      	movs	r2, #1
 80020f8:	4003      	ands	r3, r0
 80020fa:	0018      	movs	r0, r3
 80020fc:	0863      	lsrs	r3, r4, #1
 80020fe:	4014      	ands	r4, r2
 8002100:	431c      	orrs	r4, r3
 8002102:	07c3      	lsls	r3, r0, #31
 8002104:	431c      	orrs	r4, r3
 8002106:	0843      	lsrs	r3, r0, #1
 8002108:	4699      	mov	r9, r3
 800210a:	e657      	b.n	8001dbc <__aeabi_dsub+0x104>
 800210c:	0010      	movs	r0, r2
 800210e:	000e      	movs	r6, r1
 8002110:	3820      	subs	r0, #32
 8002112:	40c6      	lsrs	r6, r0
 8002114:	2a20      	cmp	r2, #32
 8002116:	d004      	beq.n	8002122 <__aeabi_dsub+0x46a>
 8002118:	2040      	movs	r0, #64	; 0x40
 800211a:	1a82      	subs	r2, r0, r2
 800211c:	4091      	lsls	r1, r2
 800211e:	430f      	orrs	r7, r1
 8002120:	46b9      	mov	r9, r7
 8002122:	464f      	mov	r7, r9
 8002124:	1e7a      	subs	r2, r7, #1
 8002126:	4197      	sbcs	r7, r2
 8002128:	4337      	orrs	r7, r6
 800212a:	e60f      	b.n	8001d4c <__aeabi_dsub+0x94>
 800212c:	4662      	mov	r2, ip
 800212e:	431a      	orrs	r2, r3
 8002130:	0013      	movs	r3, r2
 8002132:	1e5a      	subs	r2, r3, #1
 8002134:	4193      	sbcs	r3, r2
 8002136:	1afc      	subs	r4, r7, r3
 8002138:	42a7      	cmp	r7, r4
 800213a:	41bf      	sbcs	r7, r7
 800213c:	427f      	negs	r7, r7
 800213e:	1bcb      	subs	r3, r1, r7
 8002140:	4699      	mov	r9, r3
 8002142:	465d      	mov	r5, fp
 8002144:	4680      	mov	r8, r0
 8002146:	e608      	b.n	8001d5a <__aeabi_dsub+0xa2>
 8002148:	4666      	mov	r6, ip
 800214a:	431e      	orrs	r6, r3
 800214c:	d100      	bne.n	8002150 <__aeabi_dsub+0x498>
 800214e:	e0be      	b.n	80022ce <__aeabi_dsub+0x616>
 8002150:	1e56      	subs	r6, r2, #1
 8002152:	2a01      	cmp	r2, #1
 8002154:	d100      	bne.n	8002158 <__aeabi_dsub+0x4a0>
 8002156:	e109      	b.n	800236c <__aeabi_dsub+0x6b4>
 8002158:	4c8c      	ldr	r4, [pc, #560]	; (800238c <__aeabi_dsub+0x6d4>)
 800215a:	42a2      	cmp	r2, r4
 800215c:	d100      	bne.n	8002160 <__aeabi_dsub+0x4a8>
 800215e:	e119      	b.n	8002394 <__aeabi_dsub+0x6dc>
 8002160:	0032      	movs	r2, r6
 8002162:	e6c1      	b.n	8001ee8 <__aeabi_dsub+0x230>
 8002164:	4642      	mov	r2, r8
 8002166:	2400      	movs	r4, #0
 8002168:	2300      	movs	r3, #0
 800216a:	e648      	b.n	8001dfe <__aeabi_dsub+0x146>
 800216c:	2020      	movs	r0, #32
 800216e:	000c      	movs	r4, r1
 8002170:	1a80      	subs	r0, r0, r2
 8002172:	003e      	movs	r6, r7
 8002174:	4087      	lsls	r7, r0
 8002176:	4084      	lsls	r4, r0
 8002178:	40d6      	lsrs	r6, r2
 800217a:	1e78      	subs	r0, r7, #1
 800217c:	4187      	sbcs	r7, r0
 800217e:	40d1      	lsrs	r1, r2
 8002180:	4334      	orrs	r4, r6
 8002182:	433c      	orrs	r4, r7
 8002184:	448c      	add	ip, r1
 8002186:	e7a4      	b.n	80020d2 <__aeabi_dsub+0x41a>
 8002188:	4a80      	ldr	r2, [pc, #512]	; (800238c <__aeabi_dsub+0x6d4>)
 800218a:	4290      	cmp	r0, r2
 800218c:	d100      	bne.n	8002190 <__aeabi_dsub+0x4d8>
 800218e:	e0e9      	b.n	8002364 <__aeabi_dsub+0x6ac>
 8002190:	19df      	adds	r7, r3, r7
 8002192:	429f      	cmp	r7, r3
 8002194:	419b      	sbcs	r3, r3
 8002196:	4461      	add	r1, ip
 8002198:	425b      	negs	r3, r3
 800219a:	18c9      	adds	r1, r1, r3
 800219c:	07cc      	lsls	r4, r1, #31
 800219e:	087f      	lsrs	r7, r7, #1
 80021a0:	084b      	lsrs	r3, r1, #1
 80021a2:	4699      	mov	r9, r3
 80021a4:	4680      	mov	r8, r0
 80021a6:	433c      	orrs	r4, r7
 80021a8:	e6f4      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 80021aa:	1afc      	subs	r4, r7, r3
 80021ac:	42a7      	cmp	r7, r4
 80021ae:	41bf      	sbcs	r7, r7
 80021b0:	4663      	mov	r3, ip
 80021b2:	427f      	negs	r7, r7
 80021b4:	1ac9      	subs	r1, r1, r3
 80021b6:	1bcb      	subs	r3, r1, r7
 80021b8:	4699      	mov	r9, r3
 80021ba:	465d      	mov	r5, fp
 80021bc:	e5d5      	b.n	8001d6a <__aeabi_dsub+0xb2>
 80021be:	08ff      	lsrs	r7, r7, #3
 80021c0:	074b      	lsls	r3, r1, #29
 80021c2:	465d      	mov	r5, fp
 80021c4:	433b      	orrs	r3, r7
 80021c6:	08cc      	lsrs	r4, r1, #3
 80021c8:	e6ee      	b.n	8001fa8 <__aeabi_dsub+0x2f0>
 80021ca:	4662      	mov	r2, ip
 80021cc:	431a      	orrs	r2, r3
 80021ce:	d000      	beq.n	80021d2 <__aeabi_dsub+0x51a>
 80021d0:	e082      	b.n	80022d8 <__aeabi_dsub+0x620>
 80021d2:	000b      	movs	r3, r1
 80021d4:	433b      	orrs	r3, r7
 80021d6:	d11b      	bne.n	8002210 <__aeabi_dsub+0x558>
 80021d8:	2480      	movs	r4, #128	; 0x80
 80021da:	2500      	movs	r5, #0
 80021dc:	0324      	lsls	r4, r4, #12
 80021de:	e6f9      	b.n	8001fd4 <__aeabi_dsub+0x31c>
 80021e0:	19dc      	adds	r4, r3, r7
 80021e2:	429c      	cmp	r4, r3
 80021e4:	419b      	sbcs	r3, r3
 80021e6:	4461      	add	r1, ip
 80021e8:	4689      	mov	r9, r1
 80021ea:	425b      	negs	r3, r3
 80021ec:	4499      	add	r9, r3
 80021ee:	464b      	mov	r3, r9
 80021f0:	021b      	lsls	r3, r3, #8
 80021f2:	d444      	bmi.n	800227e <__aeabi_dsub+0x5c6>
 80021f4:	2301      	movs	r3, #1
 80021f6:	4698      	mov	r8, r3
 80021f8:	e6cc      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 80021fa:	1bdc      	subs	r4, r3, r7
 80021fc:	4662      	mov	r2, ip
 80021fe:	42a3      	cmp	r3, r4
 8002200:	419b      	sbcs	r3, r3
 8002202:	1a51      	subs	r1, r2, r1
 8002204:	425b      	negs	r3, r3
 8002206:	1acb      	subs	r3, r1, r3
 8002208:	4699      	mov	r9, r3
 800220a:	2301      	movs	r3, #1
 800220c:	4698      	mov	r8, r3
 800220e:	e5a4      	b.n	8001d5a <__aeabi_dsub+0xa2>
 8002210:	08ff      	lsrs	r7, r7, #3
 8002212:	074b      	lsls	r3, r1, #29
 8002214:	465d      	mov	r5, fp
 8002216:	433b      	orrs	r3, r7
 8002218:	08cc      	lsrs	r4, r1, #3
 800221a:	e6d7      	b.n	8001fcc <__aeabi_dsub+0x314>
 800221c:	4662      	mov	r2, ip
 800221e:	431a      	orrs	r2, r3
 8002220:	0014      	movs	r4, r2
 8002222:	1e63      	subs	r3, r4, #1
 8002224:	419c      	sbcs	r4, r3
 8002226:	e679      	b.n	8001f1c <__aeabi_dsub+0x264>
 8002228:	0015      	movs	r5, r2
 800222a:	4664      	mov	r4, ip
 800222c:	3d20      	subs	r5, #32
 800222e:	40ec      	lsrs	r4, r5
 8002230:	46a0      	mov	r8, r4
 8002232:	2a20      	cmp	r2, #32
 8002234:	d005      	beq.n	8002242 <__aeabi_dsub+0x58a>
 8002236:	2540      	movs	r5, #64	; 0x40
 8002238:	4664      	mov	r4, ip
 800223a:	1aaa      	subs	r2, r5, r2
 800223c:	4094      	lsls	r4, r2
 800223e:	4323      	orrs	r3, r4
 8002240:	469a      	mov	sl, r3
 8002242:	4654      	mov	r4, sl
 8002244:	1e63      	subs	r3, r4, #1
 8002246:	419c      	sbcs	r4, r3
 8002248:	4643      	mov	r3, r8
 800224a:	4323      	orrs	r3, r4
 800224c:	e773      	b.n	8002136 <__aeabi_dsub+0x47e>
 800224e:	4662      	mov	r2, ip
 8002250:	431a      	orrs	r2, r3
 8002252:	d023      	beq.n	800229c <__aeabi_dsub+0x5e4>
 8002254:	000a      	movs	r2, r1
 8002256:	433a      	orrs	r2, r7
 8002258:	d000      	beq.n	800225c <__aeabi_dsub+0x5a4>
 800225a:	e0a0      	b.n	800239e <__aeabi_dsub+0x6e6>
 800225c:	4662      	mov	r2, ip
 800225e:	08db      	lsrs	r3, r3, #3
 8002260:	0752      	lsls	r2, r2, #29
 8002262:	4313      	orrs	r3, r2
 8002264:	4662      	mov	r2, ip
 8002266:	08d4      	lsrs	r4, r2, #3
 8002268:	e6b0      	b.n	8001fcc <__aeabi_dsub+0x314>
 800226a:	000b      	movs	r3, r1
 800226c:	433b      	orrs	r3, r7
 800226e:	d100      	bne.n	8002272 <__aeabi_dsub+0x5ba>
 8002270:	e728      	b.n	80020c4 <__aeabi_dsub+0x40c>
 8002272:	08ff      	lsrs	r7, r7, #3
 8002274:	074b      	lsls	r3, r1, #29
 8002276:	465d      	mov	r5, fp
 8002278:	433b      	orrs	r3, r7
 800227a:	08cc      	lsrs	r4, r1, #3
 800227c:	e697      	b.n	8001fae <__aeabi_dsub+0x2f6>
 800227e:	2302      	movs	r3, #2
 8002280:	4698      	mov	r8, r3
 8002282:	e736      	b.n	80020f2 <__aeabi_dsub+0x43a>
 8002284:	1afc      	subs	r4, r7, r3
 8002286:	42a7      	cmp	r7, r4
 8002288:	41bf      	sbcs	r7, r7
 800228a:	4663      	mov	r3, ip
 800228c:	427f      	negs	r7, r7
 800228e:	1ac9      	subs	r1, r1, r3
 8002290:	1bcb      	subs	r3, r1, r7
 8002292:	4699      	mov	r9, r3
 8002294:	2301      	movs	r3, #1
 8002296:	465d      	mov	r5, fp
 8002298:	4698      	mov	r8, r3
 800229a:	e55e      	b.n	8001d5a <__aeabi_dsub+0xa2>
 800229c:	074b      	lsls	r3, r1, #29
 800229e:	08ff      	lsrs	r7, r7, #3
 80022a0:	433b      	orrs	r3, r7
 80022a2:	08cc      	lsrs	r4, r1, #3
 80022a4:	e692      	b.n	8001fcc <__aeabi_dsub+0x314>
 80022a6:	1bdc      	subs	r4, r3, r7
 80022a8:	4660      	mov	r0, ip
 80022aa:	42a3      	cmp	r3, r4
 80022ac:	41b6      	sbcs	r6, r6
 80022ae:	1a40      	subs	r0, r0, r1
 80022b0:	4276      	negs	r6, r6
 80022b2:	1b80      	subs	r0, r0, r6
 80022b4:	4681      	mov	r9, r0
 80022b6:	0200      	lsls	r0, r0, #8
 80022b8:	d560      	bpl.n	800237c <__aeabi_dsub+0x6c4>
 80022ba:	1afc      	subs	r4, r7, r3
 80022bc:	42a7      	cmp	r7, r4
 80022be:	41bf      	sbcs	r7, r7
 80022c0:	4663      	mov	r3, ip
 80022c2:	427f      	negs	r7, r7
 80022c4:	1ac9      	subs	r1, r1, r3
 80022c6:	1bcb      	subs	r3, r1, r7
 80022c8:	4699      	mov	r9, r3
 80022ca:	465d      	mov	r5, fp
 80022cc:	e576      	b.n	8001dbc <__aeabi_dsub+0x104>
 80022ce:	08ff      	lsrs	r7, r7, #3
 80022d0:	074b      	lsls	r3, r1, #29
 80022d2:	433b      	orrs	r3, r7
 80022d4:	08cc      	lsrs	r4, r1, #3
 80022d6:	e667      	b.n	8001fa8 <__aeabi_dsub+0x2f0>
 80022d8:	000a      	movs	r2, r1
 80022da:	08db      	lsrs	r3, r3, #3
 80022dc:	433a      	orrs	r2, r7
 80022de:	d100      	bne.n	80022e2 <__aeabi_dsub+0x62a>
 80022e0:	e66f      	b.n	8001fc2 <__aeabi_dsub+0x30a>
 80022e2:	4662      	mov	r2, ip
 80022e4:	0752      	lsls	r2, r2, #29
 80022e6:	4313      	orrs	r3, r2
 80022e8:	4662      	mov	r2, ip
 80022ea:	08d4      	lsrs	r4, r2, #3
 80022ec:	2280      	movs	r2, #128	; 0x80
 80022ee:	0312      	lsls	r2, r2, #12
 80022f0:	4214      	tst	r4, r2
 80022f2:	d007      	beq.n	8002304 <__aeabi_dsub+0x64c>
 80022f4:	08c8      	lsrs	r0, r1, #3
 80022f6:	4210      	tst	r0, r2
 80022f8:	d104      	bne.n	8002304 <__aeabi_dsub+0x64c>
 80022fa:	465d      	mov	r5, fp
 80022fc:	0004      	movs	r4, r0
 80022fe:	08fb      	lsrs	r3, r7, #3
 8002300:	0749      	lsls	r1, r1, #29
 8002302:	430b      	orrs	r3, r1
 8002304:	0f5a      	lsrs	r2, r3, #29
 8002306:	00db      	lsls	r3, r3, #3
 8002308:	08db      	lsrs	r3, r3, #3
 800230a:	0752      	lsls	r2, r2, #29
 800230c:	4313      	orrs	r3, r2
 800230e:	e65d      	b.n	8001fcc <__aeabi_dsub+0x314>
 8002310:	074b      	lsls	r3, r1, #29
 8002312:	08ff      	lsrs	r7, r7, #3
 8002314:	433b      	orrs	r3, r7
 8002316:	08cc      	lsrs	r4, r1, #3
 8002318:	e649      	b.n	8001fae <__aeabi_dsub+0x2f6>
 800231a:	19dc      	adds	r4, r3, r7
 800231c:	429c      	cmp	r4, r3
 800231e:	419b      	sbcs	r3, r3
 8002320:	4461      	add	r1, ip
 8002322:	4689      	mov	r9, r1
 8002324:	425b      	negs	r3, r3
 8002326:	4499      	add	r9, r3
 8002328:	464b      	mov	r3, r9
 800232a:	021b      	lsls	r3, r3, #8
 800232c:	d400      	bmi.n	8002330 <__aeabi_dsub+0x678>
 800232e:	e631      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 8002330:	464a      	mov	r2, r9
 8002332:	4b17      	ldr	r3, [pc, #92]	; (8002390 <__aeabi_dsub+0x6d8>)
 8002334:	401a      	ands	r2, r3
 8002336:	2301      	movs	r3, #1
 8002338:	4691      	mov	r9, r2
 800233a:	4698      	mov	r8, r3
 800233c:	e62a      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 800233e:	0016      	movs	r6, r2
 8002340:	4664      	mov	r4, ip
 8002342:	3e20      	subs	r6, #32
 8002344:	40f4      	lsrs	r4, r6
 8002346:	46a0      	mov	r8, r4
 8002348:	2a20      	cmp	r2, #32
 800234a:	d005      	beq.n	8002358 <__aeabi_dsub+0x6a0>
 800234c:	2640      	movs	r6, #64	; 0x40
 800234e:	4664      	mov	r4, ip
 8002350:	1ab2      	subs	r2, r6, r2
 8002352:	4094      	lsls	r4, r2
 8002354:	4323      	orrs	r3, r4
 8002356:	469a      	mov	sl, r3
 8002358:	4654      	mov	r4, sl
 800235a:	1e63      	subs	r3, r4, #1
 800235c:	419c      	sbcs	r4, r3
 800235e:	4643      	mov	r3, r8
 8002360:	431c      	orrs	r4, r3
 8002362:	e5db      	b.n	8001f1c <__aeabi_dsub+0x264>
 8002364:	0002      	movs	r2, r0
 8002366:	2400      	movs	r4, #0
 8002368:	2300      	movs	r3, #0
 800236a:	e548      	b.n	8001dfe <__aeabi_dsub+0x146>
 800236c:	19dc      	adds	r4, r3, r7
 800236e:	42bc      	cmp	r4, r7
 8002370:	41bf      	sbcs	r7, r7
 8002372:	4461      	add	r1, ip
 8002374:	4689      	mov	r9, r1
 8002376:	427f      	negs	r7, r7
 8002378:	44b9      	add	r9, r7
 800237a:	e738      	b.n	80021ee <__aeabi_dsub+0x536>
 800237c:	464b      	mov	r3, r9
 800237e:	4323      	orrs	r3, r4
 8002380:	d100      	bne.n	8002384 <__aeabi_dsub+0x6cc>
 8002382:	e69f      	b.n	80020c4 <__aeabi_dsub+0x40c>
 8002384:	e606      	b.n	8001f94 <__aeabi_dsub+0x2dc>
 8002386:	46c0      	nop			; (mov r8, r8)
 8002388:	000007fe 	.word	0x000007fe
 800238c:	000007ff 	.word	0x000007ff
 8002390:	ff7fffff 	.word	0xff7fffff
 8002394:	08ff      	lsrs	r7, r7, #3
 8002396:	074b      	lsls	r3, r1, #29
 8002398:	433b      	orrs	r3, r7
 800239a:	08cc      	lsrs	r4, r1, #3
 800239c:	e616      	b.n	8001fcc <__aeabi_dsub+0x314>
 800239e:	4662      	mov	r2, ip
 80023a0:	08db      	lsrs	r3, r3, #3
 80023a2:	0752      	lsls	r2, r2, #29
 80023a4:	4313      	orrs	r3, r2
 80023a6:	4662      	mov	r2, ip
 80023a8:	08d4      	lsrs	r4, r2, #3
 80023aa:	2280      	movs	r2, #128	; 0x80
 80023ac:	0312      	lsls	r2, r2, #12
 80023ae:	4214      	tst	r4, r2
 80023b0:	d007      	beq.n	80023c2 <__aeabi_dsub+0x70a>
 80023b2:	08c8      	lsrs	r0, r1, #3
 80023b4:	4210      	tst	r0, r2
 80023b6:	d104      	bne.n	80023c2 <__aeabi_dsub+0x70a>
 80023b8:	465d      	mov	r5, fp
 80023ba:	0004      	movs	r4, r0
 80023bc:	08fb      	lsrs	r3, r7, #3
 80023be:	0749      	lsls	r1, r1, #29
 80023c0:	430b      	orrs	r3, r1
 80023c2:	0f5a      	lsrs	r2, r3, #29
 80023c4:	00db      	lsls	r3, r3, #3
 80023c6:	0752      	lsls	r2, r2, #29
 80023c8:	08db      	lsrs	r3, r3, #3
 80023ca:	4313      	orrs	r3, r2
 80023cc:	e5fe      	b.n	8001fcc <__aeabi_dsub+0x314>
 80023ce:	2300      	movs	r3, #0
 80023d0:	4a01      	ldr	r2, [pc, #4]	; (80023d8 <__aeabi_dsub+0x720>)
 80023d2:	001c      	movs	r4, r3
 80023d4:	e513      	b.n	8001dfe <__aeabi_dsub+0x146>
 80023d6:	46c0      	nop			; (mov r8, r8)
 80023d8:	000007ff 	.word	0x000007ff

080023dc <__aeabi_dcmpun>:
 80023dc:	b570      	push	{r4, r5, r6, lr}
 80023de:	0005      	movs	r5, r0
 80023e0:	480c      	ldr	r0, [pc, #48]	; (8002414 <__aeabi_dcmpun+0x38>)
 80023e2:	031c      	lsls	r4, r3, #12
 80023e4:	0016      	movs	r6, r2
 80023e6:	005b      	lsls	r3, r3, #1
 80023e8:	030a      	lsls	r2, r1, #12
 80023ea:	0049      	lsls	r1, r1, #1
 80023ec:	0b12      	lsrs	r2, r2, #12
 80023ee:	0d49      	lsrs	r1, r1, #21
 80023f0:	0b24      	lsrs	r4, r4, #12
 80023f2:	0d5b      	lsrs	r3, r3, #21
 80023f4:	4281      	cmp	r1, r0
 80023f6:	d008      	beq.n	800240a <__aeabi_dcmpun+0x2e>
 80023f8:	4a06      	ldr	r2, [pc, #24]	; (8002414 <__aeabi_dcmpun+0x38>)
 80023fa:	2000      	movs	r0, #0
 80023fc:	4293      	cmp	r3, r2
 80023fe:	d103      	bne.n	8002408 <__aeabi_dcmpun+0x2c>
 8002400:	0020      	movs	r0, r4
 8002402:	4330      	orrs	r0, r6
 8002404:	1e43      	subs	r3, r0, #1
 8002406:	4198      	sbcs	r0, r3
 8002408:	bd70      	pop	{r4, r5, r6, pc}
 800240a:	2001      	movs	r0, #1
 800240c:	432a      	orrs	r2, r5
 800240e:	d1fb      	bne.n	8002408 <__aeabi_dcmpun+0x2c>
 8002410:	e7f2      	b.n	80023f8 <__aeabi_dcmpun+0x1c>
 8002412:	46c0      	nop			; (mov r8, r8)
 8002414:	000007ff 	.word	0x000007ff

08002418 <__aeabi_d2iz>:
 8002418:	000a      	movs	r2, r1
 800241a:	b530      	push	{r4, r5, lr}
 800241c:	4c13      	ldr	r4, [pc, #76]	; (800246c <__aeabi_d2iz+0x54>)
 800241e:	0053      	lsls	r3, r2, #1
 8002420:	0309      	lsls	r1, r1, #12
 8002422:	0005      	movs	r5, r0
 8002424:	0b09      	lsrs	r1, r1, #12
 8002426:	2000      	movs	r0, #0
 8002428:	0d5b      	lsrs	r3, r3, #21
 800242a:	0fd2      	lsrs	r2, r2, #31
 800242c:	42a3      	cmp	r3, r4
 800242e:	dd04      	ble.n	800243a <__aeabi_d2iz+0x22>
 8002430:	480f      	ldr	r0, [pc, #60]	; (8002470 <__aeabi_d2iz+0x58>)
 8002432:	4283      	cmp	r3, r0
 8002434:	dd02      	ble.n	800243c <__aeabi_d2iz+0x24>
 8002436:	4b0f      	ldr	r3, [pc, #60]	; (8002474 <__aeabi_d2iz+0x5c>)
 8002438:	18d0      	adds	r0, r2, r3
 800243a:	bd30      	pop	{r4, r5, pc}
 800243c:	2080      	movs	r0, #128	; 0x80
 800243e:	0340      	lsls	r0, r0, #13
 8002440:	4301      	orrs	r1, r0
 8002442:	480d      	ldr	r0, [pc, #52]	; (8002478 <__aeabi_d2iz+0x60>)
 8002444:	1ac0      	subs	r0, r0, r3
 8002446:	281f      	cmp	r0, #31
 8002448:	dd08      	ble.n	800245c <__aeabi_d2iz+0x44>
 800244a:	480c      	ldr	r0, [pc, #48]	; (800247c <__aeabi_d2iz+0x64>)
 800244c:	1ac3      	subs	r3, r0, r3
 800244e:	40d9      	lsrs	r1, r3
 8002450:	000b      	movs	r3, r1
 8002452:	4258      	negs	r0, r3
 8002454:	2a00      	cmp	r2, #0
 8002456:	d1f0      	bne.n	800243a <__aeabi_d2iz+0x22>
 8002458:	0018      	movs	r0, r3
 800245a:	e7ee      	b.n	800243a <__aeabi_d2iz+0x22>
 800245c:	4c08      	ldr	r4, [pc, #32]	; (8002480 <__aeabi_d2iz+0x68>)
 800245e:	40c5      	lsrs	r5, r0
 8002460:	46a4      	mov	ip, r4
 8002462:	4463      	add	r3, ip
 8002464:	4099      	lsls	r1, r3
 8002466:	000b      	movs	r3, r1
 8002468:	432b      	orrs	r3, r5
 800246a:	e7f2      	b.n	8002452 <__aeabi_d2iz+0x3a>
 800246c:	000003fe 	.word	0x000003fe
 8002470:	0000041d 	.word	0x0000041d
 8002474:	7fffffff 	.word	0x7fffffff
 8002478:	00000433 	.word	0x00000433
 800247c:	00000413 	.word	0x00000413
 8002480:	fffffbed 	.word	0xfffffbed

08002484 <__aeabi_i2d>:
 8002484:	b570      	push	{r4, r5, r6, lr}
 8002486:	2800      	cmp	r0, #0
 8002488:	d016      	beq.n	80024b8 <__aeabi_i2d+0x34>
 800248a:	17c3      	asrs	r3, r0, #31
 800248c:	18c5      	adds	r5, r0, r3
 800248e:	405d      	eors	r5, r3
 8002490:	0fc4      	lsrs	r4, r0, #31
 8002492:	0028      	movs	r0, r5
 8002494:	f000 f894 	bl	80025c0 <__clzsi2>
 8002498:	4a11      	ldr	r2, [pc, #68]	; (80024e0 <__aeabi_i2d+0x5c>)
 800249a:	1a12      	subs	r2, r2, r0
 800249c:	280a      	cmp	r0, #10
 800249e:	dc16      	bgt.n	80024ce <__aeabi_i2d+0x4a>
 80024a0:	0003      	movs	r3, r0
 80024a2:	002e      	movs	r6, r5
 80024a4:	3315      	adds	r3, #21
 80024a6:	409e      	lsls	r6, r3
 80024a8:	230b      	movs	r3, #11
 80024aa:	1a18      	subs	r0, r3, r0
 80024ac:	40c5      	lsrs	r5, r0
 80024ae:	0552      	lsls	r2, r2, #21
 80024b0:	032d      	lsls	r5, r5, #12
 80024b2:	0b2d      	lsrs	r5, r5, #12
 80024b4:	0d53      	lsrs	r3, r2, #21
 80024b6:	e003      	b.n	80024c0 <__aeabi_i2d+0x3c>
 80024b8:	2400      	movs	r4, #0
 80024ba:	2300      	movs	r3, #0
 80024bc:	2500      	movs	r5, #0
 80024be:	2600      	movs	r6, #0
 80024c0:	051b      	lsls	r3, r3, #20
 80024c2:	432b      	orrs	r3, r5
 80024c4:	07e4      	lsls	r4, r4, #31
 80024c6:	4323      	orrs	r3, r4
 80024c8:	0030      	movs	r0, r6
 80024ca:	0019      	movs	r1, r3
 80024cc:	bd70      	pop	{r4, r5, r6, pc}
 80024ce:	380b      	subs	r0, #11
 80024d0:	4085      	lsls	r5, r0
 80024d2:	0552      	lsls	r2, r2, #21
 80024d4:	032d      	lsls	r5, r5, #12
 80024d6:	2600      	movs	r6, #0
 80024d8:	0b2d      	lsrs	r5, r5, #12
 80024da:	0d53      	lsrs	r3, r2, #21
 80024dc:	e7f0      	b.n	80024c0 <__aeabi_i2d+0x3c>
 80024de:	46c0      	nop			; (mov r8, r8)
 80024e0:	0000041e 	.word	0x0000041e

080024e4 <__aeabi_ui2d>:
 80024e4:	b510      	push	{r4, lr}
 80024e6:	1e04      	subs	r4, r0, #0
 80024e8:	d010      	beq.n	800250c <__aeabi_ui2d+0x28>
 80024ea:	f000 f869 	bl	80025c0 <__clzsi2>
 80024ee:	4b0f      	ldr	r3, [pc, #60]	; (800252c <__aeabi_ui2d+0x48>)
 80024f0:	1a1b      	subs	r3, r3, r0
 80024f2:	280a      	cmp	r0, #10
 80024f4:	dc11      	bgt.n	800251a <__aeabi_ui2d+0x36>
 80024f6:	220b      	movs	r2, #11
 80024f8:	0021      	movs	r1, r4
 80024fa:	1a12      	subs	r2, r2, r0
 80024fc:	40d1      	lsrs	r1, r2
 80024fe:	3015      	adds	r0, #21
 8002500:	030a      	lsls	r2, r1, #12
 8002502:	055b      	lsls	r3, r3, #21
 8002504:	4084      	lsls	r4, r0
 8002506:	0b12      	lsrs	r2, r2, #12
 8002508:	0d5b      	lsrs	r3, r3, #21
 800250a:	e001      	b.n	8002510 <__aeabi_ui2d+0x2c>
 800250c:	2300      	movs	r3, #0
 800250e:	2200      	movs	r2, #0
 8002510:	051b      	lsls	r3, r3, #20
 8002512:	4313      	orrs	r3, r2
 8002514:	0020      	movs	r0, r4
 8002516:	0019      	movs	r1, r3
 8002518:	bd10      	pop	{r4, pc}
 800251a:	0022      	movs	r2, r4
 800251c:	380b      	subs	r0, #11
 800251e:	4082      	lsls	r2, r0
 8002520:	055b      	lsls	r3, r3, #21
 8002522:	0312      	lsls	r2, r2, #12
 8002524:	2400      	movs	r4, #0
 8002526:	0b12      	lsrs	r2, r2, #12
 8002528:	0d5b      	lsrs	r3, r3, #21
 800252a:	e7f1      	b.n	8002510 <__aeabi_ui2d+0x2c>
 800252c:	0000041e 	.word	0x0000041e

08002530 <__aeabi_f2d>:
 8002530:	b570      	push	{r4, r5, r6, lr}
 8002532:	0043      	lsls	r3, r0, #1
 8002534:	0246      	lsls	r6, r0, #9
 8002536:	0fc4      	lsrs	r4, r0, #31
 8002538:	20fe      	movs	r0, #254	; 0xfe
 800253a:	0e1b      	lsrs	r3, r3, #24
 800253c:	1c59      	adds	r1, r3, #1
 800253e:	0a75      	lsrs	r5, r6, #9
 8002540:	4208      	tst	r0, r1
 8002542:	d00c      	beq.n	800255e <__aeabi_f2d+0x2e>
 8002544:	22e0      	movs	r2, #224	; 0xe0
 8002546:	0092      	lsls	r2, r2, #2
 8002548:	4694      	mov	ip, r2
 800254a:	076d      	lsls	r5, r5, #29
 800254c:	0b36      	lsrs	r6, r6, #12
 800254e:	4463      	add	r3, ip
 8002550:	051b      	lsls	r3, r3, #20
 8002552:	4333      	orrs	r3, r6
 8002554:	07e4      	lsls	r4, r4, #31
 8002556:	4323      	orrs	r3, r4
 8002558:	0028      	movs	r0, r5
 800255a:	0019      	movs	r1, r3
 800255c:	bd70      	pop	{r4, r5, r6, pc}
 800255e:	2b00      	cmp	r3, #0
 8002560:	d114      	bne.n	800258c <__aeabi_f2d+0x5c>
 8002562:	2d00      	cmp	r5, #0
 8002564:	d01b      	beq.n	800259e <__aeabi_f2d+0x6e>
 8002566:	0028      	movs	r0, r5
 8002568:	f000 f82a 	bl	80025c0 <__clzsi2>
 800256c:	280a      	cmp	r0, #10
 800256e:	dc1c      	bgt.n	80025aa <__aeabi_f2d+0x7a>
 8002570:	230b      	movs	r3, #11
 8002572:	002e      	movs	r6, r5
 8002574:	1a1b      	subs	r3, r3, r0
 8002576:	40de      	lsrs	r6, r3
 8002578:	0003      	movs	r3, r0
 800257a:	3315      	adds	r3, #21
 800257c:	409d      	lsls	r5, r3
 800257e:	4a0e      	ldr	r2, [pc, #56]	; (80025b8 <__aeabi_f2d+0x88>)
 8002580:	0336      	lsls	r6, r6, #12
 8002582:	1a12      	subs	r2, r2, r0
 8002584:	0552      	lsls	r2, r2, #21
 8002586:	0b36      	lsrs	r6, r6, #12
 8002588:	0d53      	lsrs	r3, r2, #21
 800258a:	e7e1      	b.n	8002550 <__aeabi_f2d+0x20>
 800258c:	2d00      	cmp	r5, #0
 800258e:	d009      	beq.n	80025a4 <__aeabi_f2d+0x74>
 8002590:	2280      	movs	r2, #128	; 0x80
 8002592:	0b36      	lsrs	r6, r6, #12
 8002594:	0312      	lsls	r2, r2, #12
 8002596:	4b09      	ldr	r3, [pc, #36]	; (80025bc <__aeabi_f2d+0x8c>)
 8002598:	076d      	lsls	r5, r5, #29
 800259a:	4316      	orrs	r6, r2
 800259c:	e7d8      	b.n	8002550 <__aeabi_f2d+0x20>
 800259e:	2300      	movs	r3, #0
 80025a0:	2600      	movs	r6, #0
 80025a2:	e7d5      	b.n	8002550 <__aeabi_f2d+0x20>
 80025a4:	2600      	movs	r6, #0
 80025a6:	4b05      	ldr	r3, [pc, #20]	; (80025bc <__aeabi_f2d+0x8c>)
 80025a8:	e7d2      	b.n	8002550 <__aeabi_f2d+0x20>
 80025aa:	0003      	movs	r3, r0
 80025ac:	3b0b      	subs	r3, #11
 80025ae:	409d      	lsls	r5, r3
 80025b0:	002e      	movs	r6, r5
 80025b2:	2500      	movs	r5, #0
 80025b4:	e7e3      	b.n	800257e <__aeabi_f2d+0x4e>
 80025b6:	46c0      	nop			; (mov r8, r8)
 80025b8:	00000389 	.word	0x00000389
 80025bc:	000007ff 	.word	0x000007ff

080025c0 <__clzsi2>:
 80025c0:	211c      	movs	r1, #28
 80025c2:	2301      	movs	r3, #1
 80025c4:	041b      	lsls	r3, r3, #16
 80025c6:	4298      	cmp	r0, r3
 80025c8:	d301      	bcc.n	80025ce <__clzsi2+0xe>
 80025ca:	0c00      	lsrs	r0, r0, #16
 80025cc:	3910      	subs	r1, #16
 80025ce:	0a1b      	lsrs	r3, r3, #8
 80025d0:	4298      	cmp	r0, r3
 80025d2:	d301      	bcc.n	80025d8 <__clzsi2+0x18>
 80025d4:	0a00      	lsrs	r0, r0, #8
 80025d6:	3908      	subs	r1, #8
 80025d8:	091b      	lsrs	r3, r3, #4
 80025da:	4298      	cmp	r0, r3
 80025dc:	d301      	bcc.n	80025e2 <__clzsi2+0x22>
 80025de:	0900      	lsrs	r0, r0, #4
 80025e0:	3904      	subs	r1, #4
 80025e2:	a202      	add	r2, pc, #8	; (adr r2, 80025ec <__clzsi2+0x2c>)
 80025e4:	5c10      	ldrb	r0, [r2, r0]
 80025e6:	1840      	adds	r0, r0, r1
 80025e8:	4770      	bx	lr
 80025ea:	46c0      	nop			; (mov r8, r8)
 80025ec:	02020304 	.word	0x02020304
 80025f0:	01010101 	.word	0x01010101
	...

080025fc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80025fc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80025fe:	4cfe      	ldr	r4, [pc, #1016]	; (80029f8 <main+0x3fc>)
 8002600:	44a5      	add	sp, r4
 8002602:	af0c      	add	r7, sp, #48	; 0x30
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002604:	f001 ff96 	bl	8004534 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8002608:	f001 fd12 	bl	8004030 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800260c:	f001 fd8a 	bl	8004124 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8002610:	f001 fd58 	bl	80040c4 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  //HAL_UART_Receive_IT(&huart2, rxdata,4);

  // data is used to imitate the data that will be gathered from the sense HAT in future.
  float data[][13]={{-0.0018,-0.0024,4.488900185,-0.061000001,-0.061000001,0,30.37709999},
 8002614:	4bf9      	ldr	r3, [pc, #996]	; (80029fc <main+0x400>)
 8002616:	24ca      	movs	r4, #202	; 0xca
 8002618:	0124      	lsls	r4, r4, #4
 800261a:	191b      	adds	r3, r3, r4
 800261c:	2228      	movs	r2, #40	; 0x28
 800261e:	4694      	mov	ip, r2
 8002620:	44bc      	add	ip, r7
 8002622:	4463      	add	r3, ip
 8002624:	0018      	movs	r0, r3
 8002626:	4bf6      	ldr	r3, [pc, #984]	; (8002a00 <main+0x404>)
 8002628:	001a      	movs	r2, r3
 800262a:	2100      	movs	r1, #0
 800262c:	f003 fabc 	bl	8005ba8 <memset>
 8002630:	4bf2      	ldr	r3, [pc, #968]	; (80029fc <main+0x400>)
 8002632:	0020      	movs	r0, r4
 8002634:	181b      	adds	r3, r3, r0
 8002636:	2228      	movs	r2, #40	; 0x28
 8002638:	4694      	mov	ip, r2
 800263a:	44bc      	add	ip, r7
 800263c:	4463      	add	r3, ip
 800263e:	4af1      	ldr	r2, [pc, #964]	; (8002a04 <main+0x408>)
 8002640:	601a      	str	r2, [r3, #0]
 8002642:	4bee      	ldr	r3, [pc, #952]	; (80029fc <main+0x400>)
 8002644:	181b      	adds	r3, r3, r0
 8002646:	2228      	movs	r2, #40	; 0x28
 8002648:	4694      	mov	ip, r2
 800264a:	44bc      	add	ip, r7
 800264c:	4463      	add	r3, ip
 800264e:	4aee      	ldr	r2, [pc, #952]	; (8002a08 <main+0x40c>)
 8002650:	605a      	str	r2, [r3, #4]
 8002652:	4bea      	ldr	r3, [pc, #936]	; (80029fc <main+0x400>)
 8002654:	181b      	adds	r3, r3, r0
 8002656:	2228      	movs	r2, #40	; 0x28
 8002658:	4694      	mov	ip, r2
 800265a:	44bc      	add	ip, r7
 800265c:	4463      	add	r3, ip
 800265e:	4aeb      	ldr	r2, [pc, #940]	; (8002a0c <main+0x410>)
 8002660:	609a      	str	r2, [r3, #8]
 8002662:	4be6      	ldr	r3, [pc, #920]	; (80029fc <main+0x400>)
 8002664:	181b      	adds	r3, r3, r0
 8002666:	2228      	movs	r2, #40	; 0x28
 8002668:	4694      	mov	ip, r2
 800266a:	44bc      	add	ip, r7
 800266c:	4463      	add	r3, ip
 800266e:	4ae8      	ldr	r2, [pc, #928]	; (8002a10 <main+0x414>)
 8002670:	60da      	str	r2, [r3, #12]
 8002672:	4be2      	ldr	r3, [pc, #904]	; (80029fc <main+0x400>)
 8002674:	181b      	adds	r3, r3, r0
 8002676:	2228      	movs	r2, #40	; 0x28
 8002678:	4694      	mov	ip, r2
 800267a:	44bc      	add	ip, r7
 800267c:	4463      	add	r3, ip
 800267e:	4ae4      	ldr	r2, [pc, #912]	; (8002a10 <main+0x414>)
 8002680:	611a      	str	r2, [r3, #16]
 8002682:	4bde      	ldr	r3, [pc, #888]	; (80029fc <main+0x400>)
 8002684:	181b      	adds	r3, r3, r0
 8002686:	2228      	movs	r2, #40	; 0x28
 8002688:	4694      	mov	ip, r2
 800268a:	44bc      	add	ip, r7
 800268c:	4463      	add	r3, ip
 800268e:	4ae1      	ldr	r2, [pc, #900]	; (8002a14 <main+0x418>)
 8002690:	619a      	str	r2, [r3, #24]
 8002692:	4bda      	ldr	r3, [pc, #872]	; (80029fc <main+0x400>)
 8002694:	181b      	adds	r3, r3, r0
 8002696:	2228      	movs	r2, #40	; 0x28
 8002698:	4694      	mov	ip, r2
 800269a:	44bc      	add	ip, r7
 800269c:	4463      	add	r3, ip
 800269e:	4ade      	ldr	r2, [pc, #888]	; (8002a18 <main+0x41c>)
 80026a0:	635a      	str	r2, [r3, #52]	; 0x34
 80026a2:	4bd6      	ldr	r3, [pc, #856]	; (80029fc <main+0x400>)
 80026a4:	181b      	adds	r3, r3, r0
 80026a6:	2228      	movs	r2, #40	; 0x28
 80026a8:	4694      	mov	ip, r2
 80026aa:	44bc      	add	ip, r7
 80026ac:	4463      	add	r3, ip
 80026ae:	4adb      	ldr	r2, [pc, #876]	; (8002a1c <main+0x420>)
 80026b0:	639a      	str	r2, [r3, #56]	; 0x38
 80026b2:	4bd2      	ldr	r3, [pc, #840]	; (80029fc <main+0x400>)
 80026b4:	181b      	adds	r3, r3, r0
 80026b6:	2228      	movs	r2, #40	; 0x28
 80026b8:	4694      	mov	ip, r2
 80026ba:	44bc      	add	ip, r7
 80026bc:	4463      	add	r3, ip
 80026be:	4ad8      	ldr	r2, [pc, #864]	; (8002a20 <main+0x424>)
 80026c0:	63da      	str	r2, [r3, #60]	; 0x3c
 80026c2:	4bce      	ldr	r3, [pc, #824]	; (80029fc <main+0x400>)
 80026c4:	181b      	adds	r3, r3, r0
 80026c6:	2228      	movs	r2, #40	; 0x28
 80026c8:	4694      	mov	ip, r2
 80026ca:	44bc      	add	ip, r7
 80026cc:	4463      	add	r3, ip
 80026ce:	4ad0      	ldr	r2, [pc, #832]	; (8002a10 <main+0x414>)
 80026d0:	645a      	str	r2, [r3, #68]	; 0x44
 80026d2:	4bca      	ldr	r3, [pc, #808]	; (80029fc <main+0x400>)
 80026d4:	181b      	adds	r3, r3, r0
 80026d6:	2228      	movs	r2, #40	; 0x28
 80026d8:	4694      	mov	ip, r2
 80026da:	44bc      	add	ip, r7
 80026dc:	4463      	add	r3, ip
 80026de:	4acc      	ldr	r2, [pc, #816]	; (8002a10 <main+0x414>)
 80026e0:	649a      	str	r2, [r3, #72]	; 0x48
 80026e2:	4bc6      	ldr	r3, [pc, #792]	; (80029fc <main+0x400>)
 80026e4:	181b      	adds	r3, r3, r0
 80026e6:	2228      	movs	r2, #40	; 0x28
 80026e8:	4694      	mov	ip, r2
 80026ea:	44bc      	add	ip, r7
 80026ec:	4463      	add	r3, ip
 80026ee:	4acd      	ldr	r2, [pc, #820]	; (8002a24 <main+0x428>)
 80026f0:	64da      	str	r2, [r3, #76]	; 0x4c
 80026f2:	4bc2      	ldr	r3, [pc, #776]	; (80029fc <main+0x400>)
 80026f4:	181b      	adds	r3, r3, r0
 80026f6:	2228      	movs	r2, #40	; 0x28
 80026f8:	4694      	mov	ip, r2
 80026fa:	44bc      	add	ip, r7
 80026fc:	4463      	add	r3, ip
 80026fe:	4aca      	ldr	r2, [pc, #808]	; (8002a28 <main+0x42c>)
 8002700:	669a      	str	r2, [r3, #104]	; 0x68
 8002702:	4bbe      	ldr	r3, [pc, #760]	; (80029fc <main+0x400>)
 8002704:	181b      	adds	r3, r3, r0
 8002706:	2228      	movs	r2, #40	; 0x28
 8002708:	4694      	mov	ip, r2
 800270a:	44bc      	add	ip, r7
 800270c:	4463      	add	r3, ip
 800270e:	4ac7      	ldr	r2, [pc, #796]	; (8002a2c <main+0x430>)
 8002710:	66da      	str	r2, [r3, #108]	; 0x6c
 8002712:	4bba      	ldr	r3, [pc, #744]	; (80029fc <main+0x400>)
 8002714:	181b      	adds	r3, r3, r0
 8002716:	2228      	movs	r2, #40	; 0x28
 8002718:	4694      	mov	ip, r2
 800271a:	44bc      	add	ip, r7
 800271c:	4463      	add	r3, ip
 800271e:	4ac4      	ldr	r2, [pc, #784]	; (8002a30 <main+0x434>)
 8002720:	671a      	str	r2, [r3, #112]	; 0x70
 8002722:	4bb6      	ldr	r3, [pc, #728]	; (80029fc <main+0x400>)
 8002724:	181b      	adds	r3, r3, r0
 8002726:	2228      	movs	r2, #40	; 0x28
 8002728:	4694      	mov	ip, r2
 800272a:	44bc      	add	ip, r7
 800272c:	4463      	add	r3, ip
 800272e:	4ab8      	ldr	r2, [pc, #736]	; (8002a10 <main+0x414>)
 8002730:	675a      	str	r2, [r3, #116]	; 0x74
 8002732:	4bb2      	ldr	r3, [pc, #712]	; (80029fc <main+0x400>)
 8002734:	181b      	adds	r3, r3, r0
 8002736:	2228      	movs	r2, #40	; 0x28
 8002738:	4694      	mov	ip, r2
 800273a:	44bc      	add	ip, r7
 800273c:	4463      	add	r3, ip
 800273e:	4ab4      	ldr	r2, [pc, #720]	; (8002a10 <main+0x414>)
 8002740:	679a      	str	r2, [r3, #120]	; 0x78
 8002742:	4bae      	ldr	r3, [pc, #696]	; (80029fc <main+0x400>)
 8002744:	181b      	adds	r3, r3, r0
 8002746:	2228      	movs	r2, #40	; 0x28
 8002748:	4694      	mov	ip, r2
 800274a:	44bc      	add	ip, r7
 800274c:	4463      	add	r3, ip
 800274e:	2280      	movs	r2, #128	; 0x80
 8002750:	49b8      	ldr	r1, [pc, #736]	; (8002a34 <main+0x438>)
 8002752:	5099      	str	r1, [r3, r2]
 8002754:	4ba9      	ldr	r3, [pc, #676]	; (80029fc <main+0x400>)
 8002756:	181b      	adds	r3, r3, r0
 8002758:	2228      	movs	r2, #40	; 0x28
 800275a:	4694      	mov	ip, r2
 800275c:	44bc      	add	ip, r7
 800275e:	4463      	add	r3, ip
 8002760:	229c      	movs	r2, #156	; 0x9c
 8002762:	49b1      	ldr	r1, [pc, #708]	; (8002a28 <main+0x42c>)
 8002764:	5099      	str	r1, [r3, r2]
 8002766:	4ba5      	ldr	r3, [pc, #660]	; (80029fc <main+0x400>)
 8002768:	181b      	adds	r3, r3, r0
 800276a:	2228      	movs	r2, #40	; 0x28
 800276c:	4694      	mov	ip, r2
 800276e:	44bc      	add	ip, r7
 8002770:	4463      	add	r3, ip
 8002772:	22a0      	movs	r2, #160	; 0xa0
 8002774:	49ad      	ldr	r1, [pc, #692]	; (8002a2c <main+0x430>)
 8002776:	5099      	str	r1, [r3, r2]
 8002778:	4ba0      	ldr	r3, [pc, #640]	; (80029fc <main+0x400>)
 800277a:	181b      	adds	r3, r3, r0
 800277c:	2228      	movs	r2, #40	; 0x28
 800277e:	4694      	mov	ip, r2
 8002780:	44bc      	add	ip, r7
 8002782:	4463      	add	r3, ip
 8002784:	22a4      	movs	r2, #164	; 0xa4
 8002786:	49aa      	ldr	r1, [pc, #680]	; (8002a30 <main+0x434>)
 8002788:	5099      	str	r1, [r3, r2]
 800278a:	4b9c      	ldr	r3, [pc, #624]	; (80029fc <main+0x400>)
 800278c:	181b      	adds	r3, r3, r0
 800278e:	2228      	movs	r2, #40	; 0x28
 8002790:	4694      	mov	ip, r2
 8002792:	44bc      	add	ip, r7
 8002794:	4463      	add	r3, ip
 8002796:	22a8      	movs	r2, #168	; 0xa8
 8002798:	499d      	ldr	r1, [pc, #628]	; (8002a10 <main+0x414>)
 800279a:	5099      	str	r1, [r3, r2]
 800279c:	4b97      	ldr	r3, [pc, #604]	; (80029fc <main+0x400>)
 800279e:	181b      	adds	r3, r3, r0
 80027a0:	2228      	movs	r2, #40	; 0x28
 80027a2:	4694      	mov	ip, r2
 80027a4:	44bc      	add	ip, r7
 80027a6:	4463      	add	r3, ip
 80027a8:	22ac      	movs	r2, #172	; 0xac
 80027aa:	4999      	ldr	r1, [pc, #612]	; (8002a10 <main+0x414>)
 80027ac:	5099      	str	r1, [r3, r2]
 80027ae:	4b93      	ldr	r3, [pc, #588]	; (80029fc <main+0x400>)
 80027b0:	181b      	adds	r3, r3, r0
 80027b2:	2228      	movs	r2, #40	; 0x28
 80027b4:	4694      	mov	ip, r2
 80027b6:	44bc      	add	ip, r7
 80027b8:	4463      	add	r3, ip
 80027ba:	22b4      	movs	r2, #180	; 0xb4
 80027bc:	499d      	ldr	r1, [pc, #628]	; (8002a34 <main+0x438>)
 80027be:	5099      	str	r1, [r3, r2]
 80027c0:	4b8e      	ldr	r3, [pc, #568]	; (80029fc <main+0x400>)
 80027c2:	181b      	adds	r3, r3, r0
 80027c4:	2228      	movs	r2, #40	; 0x28
 80027c6:	4694      	mov	ip, r2
 80027c8:	44bc      	add	ip, r7
 80027ca:	4463      	add	r3, ip
 80027cc:	22d0      	movs	r2, #208	; 0xd0
 80027ce:	4996      	ldr	r1, [pc, #600]	; (8002a28 <main+0x42c>)
 80027d0:	5099      	str	r1, [r3, r2]
 80027d2:	4b8a      	ldr	r3, [pc, #552]	; (80029fc <main+0x400>)
 80027d4:	181b      	adds	r3, r3, r0
 80027d6:	2228      	movs	r2, #40	; 0x28
 80027d8:	4694      	mov	ip, r2
 80027da:	44bc      	add	ip, r7
 80027dc:	4463      	add	r3, ip
 80027de:	22d4      	movs	r2, #212	; 0xd4
 80027e0:	4992      	ldr	r1, [pc, #584]	; (8002a2c <main+0x430>)
 80027e2:	5099      	str	r1, [r3, r2]
 80027e4:	4b85      	ldr	r3, [pc, #532]	; (80029fc <main+0x400>)
 80027e6:	181b      	adds	r3, r3, r0
 80027e8:	2228      	movs	r2, #40	; 0x28
 80027ea:	4694      	mov	ip, r2
 80027ec:	44bc      	add	ip, r7
 80027ee:	4463      	add	r3, ip
 80027f0:	22d8      	movs	r2, #216	; 0xd8
 80027f2:	498f      	ldr	r1, [pc, #572]	; (8002a30 <main+0x434>)
 80027f4:	5099      	str	r1, [r3, r2]
 80027f6:	4b81      	ldr	r3, [pc, #516]	; (80029fc <main+0x400>)
 80027f8:	181b      	adds	r3, r3, r0
 80027fa:	2228      	movs	r2, #40	; 0x28
 80027fc:	4694      	mov	ip, r2
 80027fe:	44bc      	add	ip, r7
 8002800:	4463      	add	r3, ip
 8002802:	22dc      	movs	r2, #220	; 0xdc
 8002804:	4982      	ldr	r1, [pc, #520]	; (8002a10 <main+0x414>)
 8002806:	5099      	str	r1, [r3, r2]
 8002808:	4b7c      	ldr	r3, [pc, #496]	; (80029fc <main+0x400>)
 800280a:	181b      	adds	r3, r3, r0
 800280c:	2228      	movs	r2, #40	; 0x28
 800280e:	4694      	mov	ip, r2
 8002810:	44bc      	add	ip, r7
 8002812:	4463      	add	r3, ip
 8002814:	22e0      	movs	r2, #224	; 0xe0
 8002816:	497e      	ldr	r1, [pc, #504]	; (8002a10 <main+0x414>)
 8002818:	5099      	str	r1, [r3, r2]
 800281a:	4b78      	ldr	r3, [pc, #480]	; (80029fc <main+0x400>)
 800281c:	181b      	adds	r3, r3, r0
 800281e:	2228      	movs	r2, #40	; 0x28
 8002820:	4694      	mov	ip, r2
 8002822:	44bc      	add	ip, r7
 8002824:	4463      	add	r3, ip
 8002826:	22e8      	movs	r2, #232	; 0xe8
 8002828:	4982      	ldr	r1, [pc, #520]	; (8002a34 <main+0x438>)
 800282a:	5099      	str	r1, [r3, r2]
 800282c:	4b73      	ldr	r3, [pc, #460]	; (80029fc <main+0x400>)
 800282e:	181b      	adds	r3, r3, r0
 8002830:	2428      	movs	r4, #40	; 0x28
 8002832:	193a      	adds	r2, r7, r4
 8002834:	189a      	adds	r2, r3, r2
 8002836:	2382      	movs	r3, #130	; 0x82
 8002838:	005b      	lsls	r3, r3, #1
 800283a:	497b      	ldr	r1, [pc, #492]	; (8002a28 <main+0x42c>)
 800283c:	50d1      	str	r1, [r2, r3]
 800283e:	4b6f      	ldr	r3, [pc, #444]	; (80029fc <main+0x400>)
 8002840:	181b      	adds	r3, r3, r0
 8002842:	193a      	adds	r2, r7, r4
 8002844:	189a      	adds	r2, r3, r2
 8002846:	2384      	movs	r3, #132	; 0x84
 8002848:	005b      	lsls	r3, r3, #1
 800284a:	4978      	ldr	r1, [pc, #480]	; (8002a2c <main+0x430>)
 800284c:	50d1      	str	r1, [r2, r3]
 800284e:	4b6b      	ldr	r3, [pc, #428]	; (80029fc <main+0x400>)
 8002850:	181b      	adds	r3, r3, r0
 8002852:	193a      	adds	r2, r7, r4
 8002854:	189a      	adds	r2, r3, r2
 8002856:	2386      	movs	r3, #134	; 0x86
 8002858:	005b      	lsls	r3, r3, #1
 800285a:	4975      	ldr	r1, [pc, #468]	; (8002a30 <main+0x434>)
 800285c:	50d1      	str	r1, [r2, r3]
 800285e:	4b67      	ldr	r3, [pc, #412]	; (80029fc <main+0x400>)
 8002860:	181b      	adds	r3, r3, r0
 8002862:	193a      	adds	r2, r7, r4
 8002864:	189a      	adds	r2, r3, r2
 8002866:	2388      	movs	r3, #136	; 0x88
 8002868:	005b      	lsls	r3, r3, #1
 800286a:	4969      	ldr	r1, [pc, #420]	; (8002a10 <main+0x414>)
 800286c:	50d1      	str	r1, [r2, r3]
 800286e:	4b63      	ldr	r3, [pc, #396]	; (80029fc <main+0x400>)
 8002870:	181b      	adds	r3, r3, r0
 8002872:	193a      	adds	r2, r7, r4
 8002874:	189a      	adds	r2, r3, r2
 8002876:	238a      	movs	r3, #138	; 0x8a
 8002878:	005b      	lsls	r3, r3, #1
 800287a:	4965      	ldr	r1, [pc, #404]	; (8002a10 <main+0x414>)
 800287c:	50d1      	str	r1, [r2, r3]
 800287e:	4b5f      	ldr	r3, [pc, #380]	; (80029fc <main+0x400>)
 8002880:	181b      	adds	r3, r3, r0
 8002882:	193a      	adds	r2, r7, r4
 8002884:	189a      	adds	r2, r3, r2
 8002886:	238e      	movs	r3, #142	; 0x8e
 8002888:	005b      	lsls	r3, r3, #1
 800288a:	496a      	ldr	r1, [pc, #424]	; (8002a34 <main+0x438>)
 800288c:	50d1      	str	r1, [r2, r3]
 800288e:	4b5b      	ldr	r3, [pc, #364]	; (80029fc <main+0x400>)
 8002890:	181b      	adds	r3, r3, r0
 8002892:	193a      	adds	r2, r7, r4
 8002894:	189a      	adds	r2, r3, r2
 8002896:	239c      	movs	r3, #156	; 0x9c
 8002898:	005b      	lsls	r3, r3, #1
 800289a:	4967      	ldr	r1, [pc, #412]	; (8002a38 <main+0x43c>)
 800289c:	50d1      	str	r1, [r2, r3]
 800289e:	4b57      	ldr	r3, [pc, #348]	; (80029fc <main+0x400>)
 80028a0:	181b      	adds	r3, r3, r0
 80028a2:	193a      	adds	r2, r7, r4
 80028a4:	189a      	adds	r2, r3, r2
 80028a6:	239e      	movs	r3, #158	; 0x9e
 80028a8:	005b      	lsls	r3, r3, #1
 80028aa:	4964      	ldr	r1, [pc, #400]	; (8002a3c <main+0x440>)
 80028ac:	50d1      	str	r1, [r2, r3]
 80028ae:	4b53      	ldr	r3, [pc, #332]	; (80029fc <main+0x400>)
 80028b0:	181b      	adds	r3, r3, r0
 80028b2:	193a      	adds	r2, r7, r4
 80028b4:	189a      	adds	r2, r3, r2
 80028b6:	23a0      	movs	r3, #160	; 0xa0
 80028b8:	005b      	lsls	r3, r3, #1
 80028ba:	4961      	ldr	r1, [pc, #388]	; (8002a40 <main+0x444>)
 80028bc:	50d1      	str	r1, [r2, r3]
 80028be:	4b4f      	ldr	r3, [pc, #316]	; (80029fc <main+0x400>)
 80028c0:	181b      	adds	r3, r3, r0
 80028c2:	193a      	adds	r2, r7, r4
 80028c4:	189a      	adds	r2, r3, r2
 80028c6:	23a2      	movs	r3, #162	; 0xa2
 80028c8:	005b      	lsls	r3, r3, #1
 80028ca:	4951      	ldr	r1, [pc, #324]	; (8002a10 <main+0x414>)
 80028cc:	50d1      	str	r1, [r2, r3]
 80028ce:	4b4b      	ldr	r3, [pc, #300]	; (80029fc <main+0x400>)
 80028d0:	181b      	adds	r3, r3, r0
 80028d2:	193a      	adds	r2, r7, r4
 80028d4:	189a      	adds	r2, r3, r2
 80028d6:	23a4      	movs	r3, #164	; 0xa4
 80028d8:	005b      	lsls	r3, r3, #1
 80028da:	494d      	ldr	r1, [pc, #308]	; (8002a10 <main+0x414>)
 80028dc:	50d1      	str	r1, [r2, r3]
 80028de:	4b47      	ldr	r3, [pc, #284]	; (80029fc <main+0x400>)
 80028e0:	181b      	adds	r3, r3, r0
 80028e2:	193a      	adds	r2, r7, r4
 80028e4:	189a      	adds	r2, r3, r2
 80028e6:	23a8      	movs	r3, #168	; 0xa8
 80028e8:	005b      	lsls	r3, r3, #1
 80028ea:	4956      	ldr	r1, [pc, #344]	; (8002a44 <main+0x448>)
 80028ec:	50d1      	str	r1, [r2, r3]
 80028ee:	4b43      	ldr	r3, [pc, #268]	; (80029fc <main+0x400>)
 80028f0:	181b      	adds	r3, r3, r0
 80028f2:	193a      	adds	r2, r7, r4
 80028f4:	189a      	adds	r2, r3, r2
 80028f6:	23b6      	movs	r3, #182	; 0xb6
 80028f8:	005b      	lsls	r3, r3, #1
 80028fa:	494f      	ldr	r1, [pc, #316]	; (8002a38 <main+0x43c>)
 80028fc:	50d1      	str	r1, [r2, r3]
 80028fe:	4b3f      	ldr	r3, [pc, #252]	; (80029fc <main+0x400>)
 8002900:	181b      	adds	r3, r3, r0
 8002902:	193a      	adds	r2, r7, r4
 8002904:	189a      	adds	r2, r3, r2
 8002906:	23b8      	movs	r3, #184	; 0xb8
 8002908:	005b      	lsls	r3, r3, #1
 800290a:	494c      	ldr	r1, [pc, #304]	; (8002a3c <main+0x440>)
 800290c:	50d1      	str	r1, [r2, r3]
 800290e:	4b3b      	ldr	r3, [pc, #236]	; (80029fc <main+0x400>)
 8002910:	181b      	adds	r3, r3, r0
 8002912:	193a      	adds	r2, r7, r4
 8002914:	189a      	adds	r2, r3, r2
 8002916:	23ba      	movs	r3, #186	; 0xba
 8002918:	005b      	lsls	r3, r3, #1
 800291a:	4949      	ldr	r1, [pc, #292]	; (8002a40 <main+0x444>)
 800291c:	50d1      	str	r1, [r2, r3]
 800291e:	4b37      	ldr	r3, [pc, #220]	; (80029fc <main+0x400>)
 8002920:	181b      	adds	r3, r3, r0
 8002922:	193a      	adds	r2, r7, r4
 8002924:	189a      	adds	r2, r3, r2
 8002926:	23bc      	movs	r3, #188	; 0xbc
 8002928:	005b      	lsls	r3, r3, #1
 800292a:	4939      	ldr	r1, [pc, #228]	; (8002a10 <main+0x414>)
 800292c:	50d1      	str	r1, [r2, r3]
 800292e:	4b33      	ldr	r3, [pc, #204]	; (80029fc <main+0x400>)
 8002930:	181b      	adds	r3, r3, r0
 8002932:	193a      	adds	r2, r7, r4
 8002934:	189a      	adds	r2, r3, r2
 8002936:	23be      	movs	r3, #190	; 0xbe
 8002938:	005b      	lsls	r3, r3, #1
 800293a:	4935      	ldr	r1, [pc, #212]	; (8002a10 <main+0x414>)
 800293c:	50d1      	str	r1, [r2, r3]
 800293e:	4b2f      	ldr	r3, [pc, #188]	; (80029fc <main+0x400>)
 8002940:	181b      	adds	r3, r3, r0
 8002942:	193a      	adds	r2, r7, r4
 8002944:	189a      	adds	r2, r3, r2
 8002946:	23c2      	movs	r3, #194	; 0xc2
 8002948:	005b      	lsls	r3, r3, #1
 800294a:	493e      	ldr	r1, [pc, #248]	; (8002a44 <main+0x448>)
 800294c:	50d1      	str	r1, [r2, r3]
 800294e:	4b2b      	ldr	r3, [pc, #172]	; (80029fc <main+0x400>)
 8002950:	181b      	adds	r3, r3, r0
 8002952:	193a      	adds	r2, r7, r4
 8002954:	189a      	adds	r2, r3, r2
 8002956:	23d0      	movs	r3, #208	; 0xd0
 8002958:	005b      	lsls	r3, r3, #1
 800295a:	4937      	ldr	r1, [pc, #220]	; (8002a38 <main+0x43c>)
 800295c:	50d1      	str	r1, [r2, r3]
 800295e:	4b27      	ldr	r3, [pc, #156]	; (80029fc <main+0x400>)
 8002960:	181b      	adds	r3, r3, r0
 8002962:	193a      	adds	r2, r7, r4
 8002964:	189a      	adds	r2, r3, r2
 8002966:	23d2      	movs	r3, #210	; 0xd2
 8002968:	005b      	lsls	r3, r3, #1
 800296a:	4934      	ldr	r1, [pc, #208]	; (8002a3c <main+0x440>)
 800296c:	50d1      	str	r1, [r2, r3]
 800296e:	4b23      	ldr	r3, [pc, #140]	; (80029fc <main+0x400>)
 8002970:	181b      	adds	r3, r3, r0
 8002972:	193a      	adds	r2, r7, r4
 8002974:	189a      	adds	r2, r3, r2
 8002976:	23d4      	movs	r3, #212	; 0xd4
 8002978:	005b      	lsls	r3, r3, #1
 800297a:	4931      	ldr	r1, [pc, #196]	; (8002a40 <main+0x444>)
 800297c:	50d1      	str	r1, [r2, r3]
 800297e:	4b1f      	ldr	r3, [pc, #124]	; (80029fc <main+0x400>)
 8002980:	181b      	adds	r3, r3, r0
 8002982:	193a      	adds	r2, r7, r4
 8002984:	189a      	adds	r2, r3, r2
 8002986:	23d6      	movs	r3, #214	; 0xd6
 8002988:	005b      	lsls	r3, r3, #1
 800298a:	4921      	ldr	r1, [pc, #132]	; (8002a10 <main+0x414>)
 800298c:	50d1      	str	r1, [r2, r3]
 800298e:	4b1b      	ldr	r3, [pc, #108]	; (80029fc <main+0x400>)
 8002990:	181b      	adds	r3, r3, r0
 8002992:	193a      	adds	r2, r7, r4
 8002994:	189a      	adds	r2, r3, r2
 8002996:	23d8      	movs	r3, #216	; 0xd8
 8002998:	005b      	lsls	r3, r3, #1
 800299a:	491d      	ldr	r1, [pc, #116]	; (8002a10 <main+0x414>)
 800299c:	50d1      	str	r1, [r2, r3]
 800299e:	4b17      	ldr	r3, [pc, #92]	; (80029fc <main+0x400>)
 80029a0:	181b      	adds	r3, r3, r0
 80029a2:	193a      	adds	r2, r7, r4
 80029a4:	189a      	adds	r2, r3, r2
 80029a6:	23dc      	movs	r3, #220	; 0xdc
 80029a8:	005b      	lsls	r3, r3, #1
 80029aa:	4926      	ldr	r1, [pc, #152]	; (8002a44 <main+0x448>)
 80029ac:	50d1      	str	r1, [r2, r3]
 80029ae:	4b13      	ldr	r3, [pc, #76]	; (80029fc <main+0x400>)
 80029b0:	181b      	adds	r3, r3, r0
 80029b2:	193a      	adds	r2, r7, r4
 80029b4:	189a      	adds	r2, r3, r2
 80029b6:	23ec      	movs	r3, #236	; 0xec
 80029b8:	005b      	lsls	r3, r3, #1
 80029ba:	4917      	ldr	r1, [pc, #92]	; (8002a18 <main+0x41c>)
 80029bc:	50d1      	str	r1, [r2, r3]
 80029be:	4b0f      	ldr	r3, [pc, #60]	; (80029fc <main+0x400>)
 80029c0:	181b      	adds	r3, r3, r0
 80029c2:	193a      	adds	r2, r7, r4
 80029c4:	189a      	adds	r2, r3, r2
 80029c6:	23ee      	movs	r3, #238	; 0xee
 80029c8:	005b      	lsls	r3, r3, #1
 80029ca:	491f      	ldr	r1, [pc, #124]	; (8002a48 <main+0x44c>)
 80029cc:	50d1      	str	r1, [r2, r3]
 80029ce:	4b0b      	ldr	r3, [pc, #44]	; (80029fc <main+0x400>)
 80029d0:	181b      	adds	r3, r3, r0
 80029d2:	193a      	adds	r2, r7, r4
 80029d4:	189a      	adds	r2, r3, r2
 80029d6:	23f0      	movs	r3, #240	; 0xf0
 80029d8:	005b      	lsls	r3, r3, #1
 80029da:	490d      	ldr	r1, [pc, #52]	; (8002a10 <main+0x414>)
 80029dc:	50d1      	str	r1, [r2, r3]
 80029de:	4b07      	ldr	r3, [pc, #28]	; (80029fc <main+0x400>)
 80029e0:	181b      	adds	r3, r3, r0
 80029e2:	193a      	adds	r2, r7, r4
 80029e4:	189a      	adds	r2, r3, r2
 80029e6:	23f2      	movs	r3, #242	; 0xf2
 80029e8:	005b      	lsls	r3, r3, #1
 80029ea:	4909      	ldr	r1, [pc, #36]	; (8002a10 <main+0x414>)
 80029ec:	50d1      	str	r1, [r2, r3]
 80029ee:	4b03      	ldr	r3, [pc, #12]	; (80029fc <main+0x400>)
 80029f0:	181b      	adds	r3, r3, r0
 80029f2:	193a      	adds	r2, r7, r4
 80029f4:	189a      	adds	r2, r3, r2
 80029f6:	e029      	b.n	8002a4c <main+0x450>
 80029f8:	fffff304 	.word	0xfffff304
 80029fc:	fffff430 	.word	0xfffff430
 8002a00:	00000bc8 	.word	0x00000bc8
 8002a04:	baebedfa 	.word	0xbaebedfa
 8002a08:	bb1d4952 	.word	0xbb1d4952
 8002a0c:	408fa512 	.word	0x408fa512
 8002a10:	bd79db23 	.word	0xbd79db23
 8002a14:	41f3044d 	.word	0x41f3044d
 8002a18:	bb89a027 	.word	0xbb89a027
 8002a1c:	bc09a027 	.word	0xbc09a027
 8002a20:	40966cf4 	.word	0x40966cf4
 8002a24:	41f32858 	.word	0x41f32858
 8002a28:	bb6bedfa 	.word	0xbb6bedfa
 8002a2c:	bc30f27c 	.word	0xbc30f27c
 8002a30:	4099bda5 	.word	0x4099bda5
 8002a34:	41f31c43 	.word	0x41f31c43
 8002a38:	bb449ba6 	.word	0xbb449ba6
 8002a3c:	bc271de7 	.word	0xbc271de7
 8002a40:	409b8fc5 	.word	0x409b8fc5
 8002a44:	41f3102e 	.word	0x41f3102e
 8002a48:	409c8e8a 	.word	0x409c8e8a
 8002a4c:	23f6      	movs	r3, #246	; 0xf6
 8002a4e:	005b      	lsls	r3, r3, #1
 8002a50:	49fd      	ldr	r1, [pc, #1012]	; (8002e48 <main+0x84c>)
 8002a52:	50d1      	str	r1, [r2, r3]
 8002a54:	4bfd      	ldr	r3, [pc, #1012]	; (8002e4c <main+0x850>)
 8002a56:	181b      	adds	r3, r3, r0
 8002a58:	193a      	adds	r2, r7, r4
 8002a5a:	189a      	adds	r2, r3, r2
 8002a5c:	2383      	movs	r3, #131	; 0x83
 8002a5e:	009b      	lsls	r3, r3, #2
 8002a60:	49fb      	ldr	r1, [pc, #1004]	; (8002e50 <main+0x854>)
 8002a62:	50d1      	str	r1, [r2, r3]
 8002a64:	4bf9      	ldr	r3, [pc, #996]	; (8002e4c <main+0x850>)
 8002a66:	181b      	adds	r3, r3, r0
 8002a68:	193a      	adds	r2, r7, r4
 8002a6a:	189a      	adds	r2, r3, r2
 8002a6c:	2384      	movs	r3, #132	; 0x84
 8002a6e:	009b      	lsls	r3, r3, #2
 8002a70:	49f8      	ldr	r1, [pc, #992]	; (8002e54 <main+0x858>)
 8002a72:	50d1      	str	r1, [r2, r3]
 8002a74:	4bf5      	ldr	r3, [pc, #980]	; (8002e4c <main+0x850>)
 8002a76:	181b      	adds	r3, r3, r0
 8002a78:	193a      	adds	r2, r7, r4
 8002a7a:	189a      	adds	r2, r3, r2
 8002a7c:	2385      	movs	r3, #133	; 0x85
 8002a7e:	009b      	lsls	r3, r3, #2
 8002a80:	49f5      	ldr	r1, [pc, #980]	; (8002e58 <main+0x85c>)
 8002a82:	50d1      	str	r1, [r2, r3]
 8002a84:	4bf1      	ldr	r3, [pc, #964]	; (8002e4c <main+0x850>)
 8002a86:	181b      	adds	r3, r3, r0
 8002a88:	193a      	adds	r2, r7, r4
 8002a8a:	189a      	adds	r2, r3, r2
 8002a8c:	2386      	movs	r3, #134	; 0x86
 8002a8e:	009b      	lsls	r3, r3, #2
 8002a90:	49f1      	ldr	r1, [pc, #964]	; (8002e58 <main+0x85c>)
 8002a92:	50d1      	str	r1, [r2, r3]
 8002a94:	4bed      	ldr	r3, [pc, #948]	; (8002e4c <main+0x850>)
 8002a96:	181b      	adds	r3, r3, r0
 8002a98:	193a      	adds	r2, r7, r4
 8002a9a:	189a      	adds	r2, r3, r2
 8002a9c:	2388      	movs	r3, #136	; 0x88
 8002a9e:	009b      	lsls	r3, r3, #2
 8002aa0:	49e9      	ldr	r1, [pc, #932]	; (8002e48 <main+0x84c>)
 8002aa2:	50d1      	str	r1, [r2, r3]
 8002aa4:	4be9      	ldr	r3, [pc, #932]	; (8002e4c <main+0x850>)
 8002aa6:	181b      	adds	r3, r3, r0
 8002aa8:	193a      	adds	r2, r7, r4
 8002aaa:	189a      	adds	r2, r3, r2
 8002aac:	2390      	movs	r3, #144	; 0x90
 8002aae:	009b      	lsls	r3, r3, #2
 8002ab0:	49e7      	ldr	r1, [pc, #924]	; (8002e50 <main+0x854>)
 8002ab2:	50d1      	str	r1, [r2, r3]
 8002ab4:	4be5      	ldr	r3, [pc, #916]	; (8002e4c <main+0x850>)
 8002ab6:	181b      	adds	r3, r3, r0
 8002ab8:	193a      	adds	r2, r7, r4
 8002aba:	189a      	adds	r2, r3, r2
 8002abc:	2391      	movs	r3, #145	; 0x91
 8002abe:	009b      	lsls	r3, r3, #2
 8002ac0:	49e4      	ldr	r1, [pc, #912]	; (8002e54 <main+0x858>)
 8002ac2:	50d1      	str	r1, [r2, r3]
 8002ac4:	4be1      	ldr	r3, [pc, #900]	; (8002e4c <main+0x850>)
 8002ac6:	181b      	adds	r3, r3, r0
 8002ac8:	193a      	adds	r2, r7, r4
 8002aca:	189a      	adds	r2, r3, r2
 8002acc:	2392      	movs	r3, #146	; 0x92
 8002ace:	009b      	lsls	r3, r3, #2
 8002ad0:	49e1      	ldr	r1, [pc, #900]	; (8002e58 <main+0x85c>)
 8002ad2:	50d1      	str	r1, [r2, r3]
 8002ad4:	4bdd      	ldr	r3, [pc, #884]	; (8002e4c <main+0x850>)
 8002ad6:	181b      	adds	r3, r3, r0
 8002ad8:	193a      	adds	r2, r7, r4
 8002ada:	189a      	adds	r2, r3, r2
 8002adc:	2393      	movs	r3, #147	; 0x93
 8002ade:	009b      	lsls	r3, r3, #2
 8002ae0:	49dd      	ldr	r1, [pc, #884]	; (8002e58 <main+0x85c>)
 8002ae2:	50d1      	str	r1, [r2, r3]
 8002ae4:	4bd9      	ldr	r3, [pc, #868]	; (8002e4c <main+0x850>)
 8002ae6:	181b      	adds	r3, r3, r0
 8002ae8:	193a      	adds	r2, r7, r4
 8002aea:	189a      	adds	r2, r3, r2
 8002aec:	2395      	movs	r3, #149	; 0x95
 8002aee:	009b      	lsls	r3, r3, #2
 8002af0:	49d5      	ldr	r1, [pc, #852]	; (8002e48 <main+0x84c>)
 8002af2:	50d1      	str	r1, [r2, r3]
 8002af4:	4bd5      	ldr	r3, [pc, #852]	; (8002e4c <main+0x850>)
 8002af6:	181b      	adds	r3, r3, r0
 8002af8:	193a      	adds	r2, r7, r4
 8002afa:	189a      	adds	r2, r3, r2
 8002afc:	239d      	movs	r3, #157	; 0x9d
 8002afe:	009b      	lsls	r3, r3, #2
 8002b00:	49d6      	ldr	r1, [pc, #856]	; (8002e5c <main+0x860>)
 8002b02:	50d1      	str	r1, [r2, r3]
 8002b04:	4bd1      	ldr	r3, [pc, #836]	; (8002e4c <main+0x850>)
 8002b06:	181b      	adds	r3, r3, r0
 8002b08:	193a      	adds	r2, r7, r4
 8002b0a:	189a      	adds	r2, r3, r2
 8002b0c:	239e      	movs	r3, #158	; 0x9e
 8002b0e:	009b      	lsls	r3, r3, #2
 8002b10:	49d3      	ldr	r1, [pc, #844]	; (8002e60 <main+0x864>)
 8002b12:	50d1      	str	r1, [r2, r3]
 8002b14:	4bcd      	ldr	r3, [pc, #820]	; (8002e4c <main+0x850>)
 8002b16:	181b      	adds	r3, r3, r0
 8002b18:	193a      	adds	r2, r7, r4
 8002b1a:	189a      	adds	r2, r3, r2
 8002b1c:	239f      	movs	r3, #159	; 0x9f
 8002b1e:	009b      	lsls	r3, r3, #2
 8002b20:	49cd      	ldr	r1, [pc, #820]	; (8002e58 <main+0x85c>)
 8002b22:	50d1      	str	r1, [r2, r3]
 8002b24:	4bc9      	ldr	r3, [pc, #804]	; (8002e4c <main+0x850>)
 8002b26:	181b      	adds	r3, r3, r0
 8002b28:	193a      	adds	r2, r7, r4
 8002b2a:	189a      	adds	r2, r3, r2
 8002b2c:	23a0      	movs	r3, #160	; 0xa0
 8002b2e:	009b      	lsls	r3, r3, #2
 8002b30:	49c9      	ldr	r1, [pc, #804]	; (8002e58 <main+0x85c>)
 8002b32:	50d1      	str	r1, [r2, r3]
 8002b34:	4bc5      	ldr	r3, [pc, #788]	; (8002e4c <main+0x850>)
 8002b36:	181b      	adds	r3, r3, r0
 8002b38:	193a      	adds	r2, r7, r4
 8002b3a:	189a      	adds	r2, r3, r2
 8002b3c:	23a2      	movs	r3, #162	; 0xa2
 8002b3e:	009b      	lsls	r3, r3, #2
 8002b40:	49c8      	ldr	r1, [pc, #800]	; (8002e64 <main+0x868>)
 8002b42:	50d1      	str	r1, [r2, r3]
 8002b44:	4bc1      	ldr	r3, [pc, #772]	; (8002e4c <main+0x850>)
 8002b46:	181b      	adds	r3, r3, r0
 8002b48:	193a      	adds	r2, r7, r4
 8002b4a:	189a      	adds	r2, r3, r2
 8002b4c:	23aa      	movs	r3, #170	; 0xaa
 8002b4e:	009b      	lsls	r3, r3, #2
 8002b50:	49c2      	ldr	r1, [pc, #776]	; (8002e5c <main+0x860>)
 8002b52:	50d1      	str	r1, [r2, r3]
 8002b54:	4bbd      	ldr	r3, [pc, #756]	; (8002e4c <main+0x850>)
 8002b56:	181b      	adds	r3, r3, r0
 8002b58:	193a      	adds	r2, r7, r4
 8002b5a:	189a      	adds	r2, r3, r2
 8002b5c:	23ab      	movs	r3, #171	; 0xab
 8002b5e:	009b      	lsls	r3, r3, #2
 8002b60:	49bf      	ldr	r1, [pc, #764]	; (8002e60 <main+0x864>)
 8002b62:	50d1      	str	r1, [r2, r3]
 8002b64:	4bb9      	ldr	r3, [pc, #740]	; (8002e4c <main+0x850>)
 8002b66:	181b      	adds	r3, r3, r0
 8002b68:	193a      	adds	r2, r7, r4
 8002b6a:	189a      	adds	r2, r3, r2
 8002b6c:	23ac      	movs	r3, #172	; 0xac
 8002b6e:	009b      	lsls	r3, r3, #2
 8002b70:	49b9      	ldr	r1, [pc, #740]	; (8002e58 <main+0x85c>)
 8002b72:	50d1      	str	r1, [r2, r3]
 8002b74:	4bb5      	ldr	r3, [pc, #724]	; (8002e4c <main+0x850>)
 8002b76:	181b      	adds	r3, r3, r0
 8002b78:	193a      	adds	r2, r7, r4
 8002b7a:	189a      	adds	r2, r3, r2
 8002b7c:	23ad      	movs	r3, #173	; 0xad
 8002b7e:	009b      	lsls	r3, r3, #2
 8002b80:	49b5      	ldr	r1, [pc, #724]	; (8002e58 <main+0x85c>)
 8002b82:	50d1      	str	r1, [r2, r3]
 8002b84:	4bb1      	ldr	r3, [pc, #708]	; (8002e4c <main+0x850>)
 8002b86:	181b      	adds	r3, r3, r0
 8002b88:	193a      	adds	r2, r7, r4
 8002b8a:	189a      	adds	r2, r3, r2
 8002b8c:	23af      	movs	r3, #175	; 0xaf
 8002b8e:	009b      	lsls	r3, r3, #2
 8002b90:	49b4      	ldr	r1, [pc, #720]	; (8002e64 <main+0x868>)
 8002b92:	50d1      	str	r1, [r2, r3]
 8002b94:	4bad      	ldr	r3, [pc, #692]	; (8002e4c <main+0x850>)
 8002b96:	181b      	adds	r3, r3, r0
 8002b98:	193a      	adds	r2, r7, r4
 8002b9a:	189a      	adds	r2, r3, r2
 8002b9c:	23b7      	movs	r3, #183	; 0xb7
 8002b9e:	009b      	lsls	r3, r3, #2
 8002ba0:	49ae      	ldr	r1, [pc, #696]	; (8002e5c <main+0x860>)
 8002ba2:	50d1      	str	r1, [r2, r3]
 8002ba4:	4ba9      	ldr	r3, [pc, #676]	; (8002e4c <main+0x850>)
 8002ba6:	181b      	adds	r3, r3, r0
 8002ba8:	193a      	adds	r2, r7, r4
 8002baa:	189a      	adds	r2, r3, r2
 8002bac:	23b8      	movs	r3, #184	; 0xb8
 8002bae:	009b      	lsls	r3, r3, #2
 8002bb0:	49ab      	ldr	r1, [pc, #684]	; (8002e60 <main+0x864>)
 8002bb2:	50d1      	str	r1, [r2, r3]
 8002bb4:	4ba5      	ldr	r3, [pc, #660]	; (8002e4c <main+0x850>)
 8002bb6:	181b      	adds	r3, r3, r0
 8002bb8:	193a      	adds	r2, r7, r4
 8002bba:	189a      	adds	r2, r3, r2
 8002bbc:	23b9      	movs	r3, #185	; 0xb9
 8002bbe:	009b      	lsls	r3, r3, #2
 8002bc0:	49a5      	ldr	r1, [pc, #660]	; (8002e58 <main+0x85c>)
 8002bc2:	50d1      	str	r1, [r2, r3]
 8002bc4:	4ba1      	ldr	r3, [pc, #644]	; (8002e4c <main+0x850>)
 8002bc6:	181b      	adds	r3, r3, r0
 8002bc8:	193a      	adds	r2, r7, r4
 8002bca:	189a      	adds	r2, r3, r2
 8002bcc:	23ba      	movs	r3, #186	; 0xba
 8002bce:	009b      	lsls	r3, r3, #2
 8002bd0:	49a1      	ldr	r1, [pc, #644]	; (8002e58 <main+0x85c>)
 8002bd2:	50d1      	str	r1, [r2, r3]
 8002bd4:	4b9d      	ldr	r3, [pc, #628]	; (8002e4c <main+0x850>)
 8002bd6:	181b      	adds	r3, r3, r0
 8002bd8:	193a      	adds	r2, r7, r4
 8002bda:	189a      	adds	r2, r3, r2
 8002bdc:	23bc      	movs	r3, #188	; 0xbc
 8002bde:	009b      	lsls	r3, r3, #2
 8002be0:	49a0      	ldr	r1, [pc, #640]	; (8002e64 <main+0x868>)
 8002be2:	50d1      	str	r1, [r2, r3]
 8002be4:	4b99      	ldr	r3, [pc, #612]	; (8002e4c <main+0x850>)
 8002be6:	181b      	adds	r3, r3, r0
 8002be8:	193a      	adds	r2, r7, r4
 8002bea:	189a      	adds	r2, r3, r2
 8002bec:	23c3      	movs	r3, #195	; 0xc3
 8002bee:	009b      	lsls	r3, r3, #2
 8002bf0:	499d      	ldr	r1, [pc, #628]	; (8002e68 <main+0x86c>)
 8002bf2:	50d1      	str	r1, [r2, r3]
 8002bf4:	4b95      	ldr	r3, [pc, #596]	; (8002e4c <main+0x850>)
 8002bf6:	181b      	adds	r3, r3, r0
 8002bf8:	193a      	adds	r2, r7, r4
 8002bfa:	189a      	adds	r2, r3, r2
 8002bfc:	23c4      	movs	r3, #196	; 0xc4
 8002bfe:	009b      	lsls	r3, r3, #2
 8002c00:	499a      	ldr	r1, [pc, #616]	; (8002e6c <main+0x870>)
 8002c02:	50d1      	str	r1, [r2, r3]
 8002c04:	4b91      	ldr	r3, [pc, #580]	; (8002e4c <main+0x850>)
 8002c06:	181b      	adds	r3, r3, r0
 8002c08:	193a      	adds	r2, r7, r4
 8002c0a:	189a      	adds	r2, r3, r2
 8002c0c:	23c5      	movs	r3, #197	; 0xc5
 8002c0e:	009b      	lsls	r3, r3, #2
 8002c10:	4997      	ldr	r1, [pc, #604]	; (8002e70 <main+0x874>)
 8002c12:	50d1      	str	r1, [r2, r3]
 8002c14:	4b8d      	ldr	r3, [pc, #564]	; (8002e4c <main+0x850>)
 8002c16:	181b      	adds	r3, r3, r0
 8002c18:	193a      	adds	r2, r7, r4
 8002c1a:	189a      	adds	r2, r3, r2
 8002c1c:	23c6      	movs	r3, #198	; 0xc6
 8002c1e:	009b      	lsls	r3, r3, #2
 8002c20:	498d      	ldr	r1, [pc, #564]	; (8002e58 <main+0x85c>)
 8002c22:	50d1      	str	r1, [r2, r3]
 8002c24:	4b89      	ldr	r3, [pc, #548]	; (8002e4c <main+0x850>)
 8002c26:	181b      	adds	r3, r3, r0
 8002c28:	193a      	adds	r2, r7, r4
 8002c2a:	189a      	adds	r2, r3, r2
 8002c2c:	23c7      	movs	r3, #199	; 0xc7
 8002c2e:	009b      	lsls	r3, r3, #2
 8002c30:	4989      	ldr	r1, [pc, #548]	; (8002e58 <main+0x85c>)
 8002c32:	50d1      	str	r1, [r2, r3]
 8002c34:	4b85      	ldr	r3, [pc, #532]	; (8002e4c <main+0x850>)
 8002c36:	181b      	adds	r3, r3, r0
 8002c38:	193a      	adds	r2, r7, r4
 8002c3a:	189a      	adds	r2, r3, r2
 8002c3c:	23c9      	movs	r3, #201	; 0xc9
 8002c3e:	009b      	lsls	r3, r3, #2
 8002c40:	498c      	ldr	r1, [pc, #560]	; (8002e74 <main+0x878>)
 8002c42:	50d1      	str	r1, [r2, r3]
 8002c44:	4b81      	ldr	r3, [pc, #516]	; (8002e4c <main+0x850>)
 8002c46:	181b      	adds	r3, r3, r0
 8002c48:	193a      	adds	r2, r7, r4
 8002c4a:	189a      	adds	r2, r3, r2
 8002c4c:	23d0      	movs	r3, #208	; 0xd0
 8002c4e:	009b      	lsls	r3, r3, #2
 8002c50:	4985      	ldr	r1, [pc, #532]	; (8002e68 <main+0x86c>)
 8002c52:	50d1      	str	r1, [r2, r3]
 8002c54:	4b7d      	ldr	r3, [pc, #500]	; (8002e4c <main+0x850>)
 8002c56:	181b      	adds	r3, r3, r0
 8002c58:	193a      	adds	r2, r7, r4
 8002c5a:	189a      	adds	r2, r3, r2
 8002c5c:	23d1      	movs	r3, #209	; 0xd1
 8002c5e:	009b      	lsls	r3, r3, #2
 8002c60:	4982      	ldr	r1, [pc, #520]	; (8002e6c <main+0x870>)
 8002c62:	50d1      	str	r1, [r2, r3]
 8002c64:	4b79      	ldr	r3, [pc, #484]	; (8002e4c <main+0x850>)
 8002c66:	181b      	adds	r3, r3, r0
 8002c68:	193a      	adds	r2, r7, r4
 8002c6a:	189a      	adds	r2, r3, r2
 8002c6c:	23d2      	movs	r3, #210	; 0xd2
 8002c6e:	009b      	lsls	r3, r3, #2
 8002c70:	497f      	ldr	r1, [pc, #508]	; (8002e70 <main+0x874>)
 8002c72:	50d1      	str	r1, [r2, r3]
 8002c74:	4b75      	ldr	r3, [pc, #468]	; (8002e4c <main+0x850>)
 8002c76:	181b      	adds	r3, r3, r0
 8002c78:	193a      	adds	r2, r7, r4
 8002c7a:	189a      	adds	r2, r3, r2
 8002c7c:	23d3      	movs	r3, #211	; 0xd3
 8002c7e:	009b      	lsls	r3, r3, #2
 8002c80:	4975      	ldr	r1, [pc, #468]	; (8002e58 <main+0x85c>)
 8002c82:	50d1      	str	r1, [r2, r3]
 8002c84:	4b71      	ldr	r3, [pc, #452]	; (8002e4c <main+0x850>)
 8002c86:	181b      	adds	r3, r3, r0
 8002c88:	193a      	adds	r2, r7, r4
 8002c8a:	189a      	adds	r2, r3, r2
 8002c8c:	23d4      	movs	r3, #212	; 0xd4
 8002c8e:	009b      	lsls	r3, r3, #2
 8002c90:	4971      	ldr	r1, [pc, #452]	; (8002e58 <main+0x85c>)
 8002c92:	50d1      	str	r1, [r2, r3]
 8002c94:	4b6d      	ldr	r3, [pc, #436]	; (8002e4c <main+0x850>)
 8002c96:	181b      	adds	r3, r3, r0
 8002c98:	193a      	adds	r2, r7, r4
 8002c9a:	189a      	adds	r2, r3, r2
 8002c9c:	23d6      	movs	r3, #214	; 0xd6
 8002c9e:	009b      	lsls	r3, r3, #2
 8002ca0:	4974      	ldr	r1, [pc, #464]	; (8002e74 <main+0x878>)
 8002ca2:	50d1      	str	r1, [r2, r3]
 8002ca4:	4b69      	ldr	r3, [pc, #420]	; (8002e4c <main+0x850>)
 8002ca6:	181b      	adds	r3, r3, r0
 8002ca8:	193a      	adds	r2, r7, r4
 8002caa:	189a      	adds	r2, r3, r2
 8002cac:	23dd      	movs	r3, #221	; 0xdd
 8002cae:	009b      	lsls	r3, r3, #2
 8002cb0:	496d      	ldr	r1, [pc, #436]	; (8002e68 <main+0x86c>)
 8002cb2:	50d1      	str	r1, [r2, r3]
 8002cb4:	4b65      	ldr	r3, [pc, #404]	; (8002e4c <main+0x850>)
 8002cb6:	181b      	adds	r3, r3, r0
 8002cb8:	193a      	adds	r2, r7, r4
 8002cba:	189a      	adds	r2, r3, r2
 8002cbc:	23de      	movs	r3, #222	; 0xde
 8002cbe:	009b      	lsls	r3, r3, #2
 8002cc0:	496a      	ldr	r1, [pc, #424]	; (8002e6c <main+0x870>)
 8002cc2:	50d1      	str	r1, [r2, r3]
 8002cc4:	4b61      	ldr	r3, [pc, #388]	; (8002e4c <main+0x850>)
 8002cc6:	181b      	adds	r3, r3, r0
 8002cc8:	193a      	adds	r2, r7, r4
 8002cca:	189a      	adds	r2, r3, r2
 8002ccc:	23df      	movs	r3, #223	; 0xdf
 8002cce:	009b      	lsls	r3, r3, #2
 8002cd0:	4967      	ldr	r1, [pc, #412]	; (8002e70 <main+0x874>)
 8002cd2:	50d1      	str	r1, [r2, r3]
 8002cd4:	4b5d      	ldr	r3, [pc, #372]	; (8002e4c <main+0x850>)
 8002cd6:	181b      	adds	r3, r3, r0
 8002cd8:	193a      	adds	r2, r7, r4
 8002cda:	189a      	adds	r2, r3, r2
 8002cdc:	23e0      	movs	r3, #224	; 0xe0
 8002cde:	009b      	lsls	r3, r3, #2
 8002ce0:	495d      	ldr	r1, [pc, #372]	; (8002e58 <main+0x85c>)
 8002ce2:	50d1      	str	r1, [r2, r3]
 8002ce4:	4b59      	ldr	r3, [pc, #356]	; (8002e4c <main+0x850>)
 8002ce6:	181b      	adds	r3, r3, r0
 8002ce8:	193a      	adds	r2, r7, r4
 8002cea:	189a      	adds	r2, r3, r2
 8002cec:	23e1      	movs	r3, #225	; 0xe1
 8002cee:	009b      	lsls	r3, r3, #2
 8002cf0:	4959      	ldr	r1, [pc, #356]	; (8002e58 <main+0x85c>)
 8002cf2:	50d1      	str	r1, [r2, r3]
 8002cf4:	4b55      	ldr	r3, [pc, #340]	; (8002e4c <main+0x850>)
 8002cf6:	181b      	adds	r3, r3, r0
 8002cf8:	193a      	adds	r2, r7, r4
 8002cfa:	189a      	adds	r2, r3, r2
 8002cfc:	23e3      	movs	r3, #227	; 0xe3
 8002cfe:	009b      	lsls	r3, r3, #2
 8002d00:	495c      	ldr	r1, [pc, #368]	; (8002e74 <main+0x878>)
 8002d02:	50d1      	str	r1, [r2, r3]
 8002d04:	4b51      	ldr	r3, [pc, #324]	; (8002e4c <main+0x850>)
 8002d06:	181b      	adds	r3, r3, r0
 8002d08:	193a      	adds	r2, r7, r4
 8002d0a:	189a      	adds	r2, r3, r2
 8002d0c:	23ea      	movs	r3, #234	; 0xea
 8002d0e:	009b      	lsls	r3, r3, #2
 8002d10:	4959      	ldr	r1, [pc, #356]	; (8002e78 <main+0x87c>)
 8002d12:	50d1      	str	r1, [r2, r3]
 8002d14:	4b4d      	ldr	r3, [pc, #308]	; (8002e4c <main+0x850>)
 8002d16:	181b      	adds	r3, r3, r0
 8002d18:	193a      	adds	r2, r7, r4
 8002d1a:	189a      	adds	r2, r3, r2
 8002d1c:	23eb      	movs	r3, #235	; 0xeb
 8002d1e:	009b      	lsls	r3, r3, #2
 8002d20:	4956      	ldr	r1, [pc, #344]	; (8002e7c <main+0x880>)
 8002d22:	50d1      	str	r1, [r2, r3]
 8002d24:	4b49      	ldr	r3, [pc, #292]	; (8002e4c <main+0x850>)
 8002d26:	181b      	adds	r3, r3, r0
 8002d28:	193a      	adds	r2, r7, r4
 8002d2a:	189a      	adds	r2, r3, r2
 8002d2c:	23ec      	movs	r3, #236	; 0xec
 8002d2e:	009b      	lsls	r3, r3, #2
 8002d30:	4948      	ldr	r1, [pc, #288]	; (8002e54 <main+0x858>)
 8002d32:	50d1      	str	r1, [r2, r3]
 8002d34:	4b45      	ldr	r3, [pc, #276]	; (8002e4c <main+0x850>)
 8002d36:	181b      	adds	r3, r3, r0
 8002d38:	193a      	adds	r2, r7, r4
 8002d3a:	189a      	adds	r2, r3, r2
 8002d3c:	23ee      	movs	r3, #238	; 0xee
 8002d3e:	009b      	lsls	r3, r3, #2
 8002d40:	4945      	ldr	r1, [pc, #276]	; (8002e58 <main+0x85c>)
 8002d42:	50d1      	str	r1, [r2, r3]
 8002d44:	4b41      	ldr	r3, [pc, #260]	; (8002e4c <main+0x850>)
 8002d46:	181b      	adds	r3, r3, r0
 8002d48:	193a      	adds	r2, r7, r4
 8002d4a:	189a      	adds	r2, r3, r2
 8002d4c:	23f0      	movs	r3, #240	; 0xf0
 8002d4e:	009b      	lsls	r3, r3, #2
 8002d50:	4948      	ldr	r1, [pc, #288]	; (8002e74 <main+0x878>)
 8002d52:	50d1      	str	r1, [r2, r3]
 8002d54:	4b3d      	ldr	r3, [pc, #244]	; (8002e4c <main+0x850>)
 8002d56:	181b      	adds	r3, r3, r0
 8002d58:	193a      	adds	r2, r7, r4
 8002d5a:	189a      	adds	r2, r3, r2
 8002d5c:	23f7      	movs	r3, #247	; 0xf7
 8002d5e:	009b      	lsls	r3, r3, #2
 8002d60:	4945      	ldr	r1, [pc, #276]	; (8002e78 <main+0x87c>)
 8002d62:	50d1      	str	r1, [r2, r3]
 8002d64:	4b39      	ldr	r3, [pc, #228]	; (8002e4c <main+0x850>)
 8002d66:	181b      	adds	r3, r3, r0
 8002d68:	193a      	adds	r2, r7, r4
 8002d6a:	189a      	adds	r2, r3, r2
 8002d6c:	23f8      	movs	r3, #248	; 0xf8
 8002d6e:	009b      	lsls	r3, r3, #2
 8002d70:	4942      	ldr	r1, [pc, #264]	; (8002e7c <main+0x880>)
 8002d72:	50d1      	str	r1, [r2, r3]
 8002d74:	4b35      	ldr	r3, [pc, #212]	; (8002e4c <main+0x850>)
 8002d76:	181b      	adds	r3, r3, r0
 8002d78:	193a      	adds	r2, r7, r4
 8002d7a:	189a      	adds	r2, r3, r2
 8002d7c:	23f9      	movs	r3, #249	; 0xf9
 8002d7e:	009b      	lsls	r3, r3, #2
 8002d80:	4934      	ldr	r1, [pc, #208]	; (8002e54 <main+0x858>)
 8002d82:	50d1      	str	r1, [r2, r3]
 8002d84:	4b31      	ldr	r3, [pc, #196]	; (8002e4c <main+0x850>)
 8002d86:	181b      	adds	r3, r3, r0
 8002d88:	193a      	adds	r2, r7, r4
 8002d8a:	189a      	adds	r2, r3, r2
 8002d8c:	23fb      	movs	r3, #251	; 0xfb
 8002d8e:	009b      	lsls	r3, r3, #2
 8002d90:	4931      	ldr	r1, [pc, #196]	; (8002e58 <main+0x85c>)
 8002d92:	50d1      	str	r1, [r2, r3]
 8002d94:	4b2d      	ldr	r3, [pc, #180]	; (8002e4c <main+0x850>)
 8002d96:	181b      	adds	r3, r3, r0
 8002d98:	193a      	adds	r2, r7, r4
 8002d9a:	189a      	adds	r2, r3, r2
 8002d9c:	23fd      	movs	r3, #253	; 0xfd
 8002d9e:	009b      	lsls	r3, r3, #2
 8002da0:	4934      	ldr	r1, [pc, #208]	; (8002e74 <main+0x878>)
 8002da2:	50d1      	str	r1, [r2, r3]
 8002da4:	4b29      	ldr	r3, [pc, #164]	; (8002e4c <main+0x850>)
 8002da6:	181b      	adds	r3, r3, r0
 8002da8:	193a      	adds	r2, r7, r4
 8002daa:	189a      	adds	r2, r3, r2
 8002dac:	2382      	movs	r3, #130	; 0x82
 8002dae:	00db      	lsls	r3, r3, #3
 8002db0:	4931      	ldr	r1, [pc, #196]	; (8002e78 <main+0x87c>)
 8002db2:	50d1      	str	r1, [r2, r3]
 8002db4:	4b25      	ldr	r3, [pc, #148]	; (8002e4c <main+0x850>)
 8002db6:	181b      	adds	r3, r3, r0
 8002db8:	2228      	movs	r2, #40	; 0x28
 8002dba:	4694      	mov	ip, r2
 8002dbc:	44bc      	add	ip, r7
 8002dbe:	4463      	add	r3, ip
 8002dc0:	4a2f      	ldr	r2, [pc, #188]	; (8002e80 <main+0x884>)
 8002dc2:	492e      	ldr	r1, [pc, #184]	; (8002e7c <main+0x880>)
 8002dc4:	5099      	str	r1, [r3, r2]
 8002dc6:	4b21      	ldr	r3, [pc, #132]	; (8002e4c <main+0x850>)
 8002dc8:	181b      	adds	r3, r3, r0
 8002dca:	193a      	adds	r2, r7, r4
 8002dcc:	189a      	adds	r2, r3, r2
 8002dce:	2383      	movs	r3, #131	; 0x83
 8002dd0:	00db      	lsls	r3, r3, #3
 8002dd2:	4920      	ldr	r1, [pc, #128]	; (8002e54 <main+0x858>)
 8002dd4:	50d1      	str	r1, [r2, r3]
 8002dd6:	4b1d      	ldr	r3, [pc, #116]	; (8002e4c <main+0x850>)
 8002dd8:	181b      	adds	r3, r3, r0
 8002dda:	193a      	adds	r2, r7, r4
 8002ddc:	189a      	adds	r2, r3, r2
 8002dde:	2384      	movs	r3, #132	; 0x84
 8002de0:	00db      	lsls	r3, r3, #3
 8002de2:	491d      	ldr	r1, [pc, #116]	; (8002e58 <main+0x85c>)
 8002de4:	50d1      	str	r1, [r2, r3]
 8002de6:	4b19      	ldr	r3, [pc, #100]	; (8002e4c <main+0x850>)
 8002de8:	181b      	adds	r3, r3, r0
 8002dea:	193a      	adds	r2, r7, r4
 8002dec:	189a      	adds	r2, r3, r2
 8002dee:	2385      	movs	r3, #133	; 0x85
 8002df0:	00db      	lsls	r3, r3, #3
 8002df2:	4920      	ldr	r1, [pc, #128]	; (8002e74 <main+0x878>)
 8002df4:	50d1      	str	r1, [r2, r3]
 8002df6:	4b15      	ldr	r3, [pc, #84]	; (8002e4c <main+0x850>)
 8002df8:	181b      	adds	r3, r3, r0
 8002dfa:	2228      	movs	r2, #40	; 0x28
 8002dfc:	4694      	mov	ip, r2
 8002dfe:	44bc      	add	ip, r7
 8002e00:	4463      	add	r3, ip
 8002e02:	4a20      	ldr	r2, [pc, #128]	; (8002e84 <main+0x888>)
 8002e04:	4920      	ldr	r1, [pc, #128]	; (8002e88 <main+0x88c>)
 8002e06:	5099      	str	r1, [r3, r2]
 8002e08:	4b10      	ldr	r3, [pc, #64]	; (8002e4c <main+0x850>)
 8002e0a:	181b      	adds	r3, r3, r0
 8002e0c:	193a      	adds	r2, r7, r4
 8002e0e:	189a      	adds	r2, r3, r2
 8002e10:	2389      	movs	r3, #137	; 0x89
 8002e12:	00db      	lsls	r3, r3, #3
 8002e14:	491d      	ldr	r1, [pc, #116]	; (8002e8c <main+0x890>)
 8002e16:	50d1      	str	r1, [r2, r3]
 8002e18:	4b0c      	ldr	r3, [pc, #48]	; (8002e4c <main+0x850>)
 8002e1a:	181b      	adds	r3, r3, r0
 8002e1c:	2228      	movs	r2, #40	; 0x28
 8002e1e:	4694      	mov	ip, r2
 8002e20:	44bc      	add	ip, r7
 8002e22:	4463      	add	r3, ip
 8002e24:	4a1a      	ldr	r2, [pc, #104]	; (8002e90 <main+0x894>)
 8002e26:	491b      	ldr	r1, [pc, #108]	; (8002e94 <main+0x898>)
 8002e28:	5099      	str	r1, [r3, r2]
 8002e2a:	4b08      	ldr	r3, [pc, #32]	; (8002e4c <main+0x850>)
 8002e2c:	181b      	adds	r3, r3, r0
 8002e2e:	193a      	adds	r2, r7, r4
 8002e30:	189a      	adds	r2, r3, r2
 8002e32:	238a      	movs	r3, #138	; 0x8a
 8002e34:	00db      	lsls	r3, r3, #3
 8002e36:	4908      	ldr	r1, [pc, #32]	; (8002e58 <main+0x85c>)
 8002e38:	50d1      	str	r1, [r2, r3]
 8002e3a:	4b04      	ldr	r3, [pc, #16]	; (8002e4c <main+0x850>)
 8002e3c:	181b      	adds	r3, r3, r0
 8002e3e:	2228      	movs	r2, #40	; 0x28
 8002e40:	4694      	mov	ip, r2
 8002e42:	44bc      	add	ip, r7
 8002e44:	4463      	add	r3, ip
 8002e46:	e027      	b.n	8002e98 <main+0x89c>
 8002e48:	41f2f838 	.word	0x41f2f838
 8002e4c:	fffff430 	.word	0xfffff430
 8002e50:	bb89a027 	.word	0xbb89a027
 8002e54:	409c8e8a 	.word	0x409c8e8a
 8002e58:	bd79db23 	.word	0xbd79db23
 8002e5c:	bbc49ba6 	.word	0xbbc49ba6
 8002e60:	409cf0d8 	.word	0x409cf0d8
 8002e64:	41f3044d 	.word	0x41f3044d
 8002e68:	ba1d4952 	.word	0xba1d4952
 8002e6c:	bbebedfa 	.word	0xbbebedfa
 8002e70:	409c985f 	.word	0x409c985f
 8002e74:	41f2ec22 	.word	0x41f2ec22
 8002e78:	3a9d4952 	.word	0x3a9d4952
 8002e7c:	bbd844d0 	.word	0xbbd844d0
 8002e80:	00000414 	.word	0x00000414
 8002e84:	00000444 	.word	0x00000444
 8002e88:	3b6bedfa 	.word	0x3b6bedfa
 8002e8c:	bb449ba6 	.word	0xbb449ba6
 8002e90:	0000044c 	.word	0x0000044c
 8002e94:	409d096c 	.word	0x409d096c
 8002e98:	4afd      	ldr	r2, [pc, #1012]	; (8003290 <main+0xc94>)
 8002e9a:	49fe      	ldr	r1, [pc, #1016]	; (8003294 <main+0xc98>)
 8002e9c:	5099      	str	r1, [r3, r2]
 8002e9e:	4bfe      	ldr	r3, [pc, #1016]	; (8003298 <main+0xc9c>)
 8002ea0:	181b      	adds	r3, r3, r0
 8002ea2:	193a      	adds	r2, r7, r4
 8002ea4:	189a      	adds	r2, r3, r2
 8002ea6:	238b      	movs	r3, #139	; 0x8b
 8002ea8:	00db      	lsls	r3, r3, #3
 8002eaa:	49fa      	ldr	r1, [pc, #1000]	; (8003294 <main+0xc98>)
 8002eac:	50d1      	str	r1, [r2, r3]
 8002eae:	4bfa      	ldr	r3, [pc, #1000]	; (8003298 <main+0xc9c>)
 8002eb0:	181b      	adds	r3, r3, r0
 8002eb2:	2228      	movs	r2, #40	; 0x28
 8002eb4:	4694      	mov	ip, r2
 8002eb6:	44bc      	add	ip, r7
 8002eb8:	4463      	add	r3, ip
 8002eba:	4af8      	ldr	r2, [pc, #992]	; (800329c <main+0xca0>)
 8002ebc:	49f8      	ldr	r1, [pc, #992]	; (80032a0 <main+0xca4>)
 8002ebe:	5099      	str	r1, [r3, r2]
 8002ec0:	4bf5      	ldr	r3, [pc, #980]	; (8003298 <main+0xc9c>)
 8002ec2:	181b      	adds	r3, r3, r0
 8002ec4:	193a      	adds	r2, r7, r4
 8002ec6:	189a      	adds	r2, r3, r2
 8002ec8:	238f      	movs	r3, #143	; 0x8f
 8002eca:	00db      	lsls	r3, r3, #3
 8002ecc:	49f5      	ldr	r1, [pc, #980]	; (80032a4 <main+0xca8>)
 8002ece:	50d1      	str	r1, [r2, r3]
 8002ed0:	4bf1      	ldr	r3, [pc, #964]	; (8003298 <main+0xc9c>)
 8002ed2:	181b      	adds	r3, r3, r0
 8002ed4:	2228      	movs	r2, #40	; 0x28
 8002ed6:	4694      	mov	ip, r2
 8002ed8:	44bc      	add	ip, r7
 8002eda:	4463      	add	r3, ip
 8002edc:	4af2      	ldr	r2, [pc, #968]	; (80032a8 <main+0xcac>)
 8002ede:	49f3      	ldr	r1, [pc, #972]	; (80032ac <main+0xcb0>)
 8002ee0:	5099      	str	r1, [r3, r2]
 8002ee2:	4bed      	ldr	r3, [pc, #948]	; (8003298 <main+0xc9c>)
 8002ee4:	181b      	adds	r3, r3, r0
 8002ee6:	193a      	adds	r2, r7, r4
 8002ee8:	189a      	adds	r2, r3, r2
 8002eea:	2390      	movs	r3, #144	; 0x90
 8002eec:	00db      	lsls	r3, r3, #3
 8002eee:	49f0      	ldr	r1, [pc, #960]	; (80032b0 <main+0xcb4>)
 8002ef0:	50d1      	str	r1, [r2, r3]
 8002ef2:	4be9      	ldr	r3, [pc, #932]	; (8003298 <main+0xc9c>)
 8002ef4:	181b      	adds	r3, r3, r0
 8002ef6:	2228      	movs	r2, #40	; 0x28
 8002ef8:	4694      	mov	ip, r2
 8002efa:	44bc      	add	ip, r7
 8002efc:	4463      	add	r3, ip
 8002efe:	4aed      	ldr	r2, [pc, #948]	; (80032b4 <main+0xcb8>)
 8002f00:	49e4      	ldr	r1, [pc, #912]	; (8003294 <main+0xc98>)
 8002f02:	5099      	str	r1, [r3, r2]
 8002f04:	4be4      	ldr	r3, [pc, #912]	; (8003298 <main+0xc9c>)
 8002f06:	181b      	adds	r3, r3, r0
 8002f08:	193a      	adds	r2, r7, r4
 8002f0a:	189a      	adds	r2, r3, r2
 8002f0c:	2391      	movs	r3, #145	; 0x91
 8002f0e:	00db      	lsls	r3, r3, #3
 8002f10:	49e0      	ldr	r1, [pc, #896]	; (8003294 <main+0xc98>)
 8002f12:	50d1      	str	r1, [r2, r3]
 8002f14:	4be0      	ldr	r3, [pc, #896]	; (8003298 <main+0xc9c>)
 8002f16:	181b      	adds	r3, r3, r0
 8002f18:	2228      	movs	r2, #40	; 0x28
 8002f1a:	4694      	mov	ip, r2
 8002f1c:	44bc      	add	ip, r7
 8002f1e:	4463      	add	r3, ip
 8002f20:	4ae5      	ldr	r2, [pc, #916]	; (80032b8 <main+0xcbc>)
 8002f22:	49dc      	ldr	r1, [pc, #880]	; (8003294 <main+0xc98>)
 8002f24:	5099      	str	r1, [r3, r2]
 8002f26:	4bdc      	ldr	r3, [pc, #880]	; (8003298 <main+0xc9c>)
 8002f28:	181b      	adds	r3, r3, r0
 8002f2a:	193a      	adds	r2, r7, r4
 8002f2c:	189a      	adds	r2, r3, r2
 8002f2e:	2392      	movs	r3, #146	; 0x92
 8002f30:	00db      	lsls	r3, r3, #3
 8002f32:	49db      	ldr	r1, [pc, #876]	; (80032a0 <main+0xca4>)
 8002f34:	50d1      	str	r1, [r2, r3]
 8002f36:	4bd8      	ldr	r3, [pc, #864]	; (8003298 <main+0xc9c>)
 8002f38:	181b      	adds	r3, r3, r0
 8002f3a:	2228      	movs	r2, #40	; 0x28
 8002f3c:	4694      	mov	ip, r2
 8002f3e:	44bc      	add	ip, r7
 8002f40:	4463      	add	r3, ip
 8002f42:	4ade      	ldr	r2, [pc, #888]	; (80032bc <main+0xcc0>)
 8002f44:	49d7      	ldr	r1, [pc, #860]	; (80032a4 <main+0xca8>)
 8002f46:	5099      	str	r1, [r3, r2]
 8002f48:	4bd3      	ldr	r3, [pc, #844]	; (8003298 <main+0xc9c>)
 8002f4a:	181b      	adds	r3, r3, r0
 8002f4c:	193a      	adds	r2, r7, r4
 8002f4e:	189a      	adds	r2, r3, r2
 8002f50:	2396      	movs	r3, #150	; 0x96
 8002f52:	00db      	lsls	r3, r3, #3
 8002f54:	49d5      	ldr	r1, [pc, #852]	; (80032ac <main+0xcb0>)
 8002f56:	50d1      	str	r1, [r2, r3]
 8002f58:	4bcf      	ldr	r3, [pc, #828]	; (8003298 <main+0xc9c>)
 8002f5a:	181b      	adds	r3, r3, r0
 8002f5c:	2228      	movs	r2, #40	; 0x28
 8002f5e:	4694      	mov	ip, r2
 8002f60:	44bc      	add	ip, r7
 8002f62:	4463      	add	r3, ip
 8002f64:	4ad6      	ldr	r2, [pc, #856]	; (80032c0 <main+0xcc4>)
 8002f66:	49d2      	ldr	r1, [pc, #840]	; (80032b0 <main+0xcb4>)
 8002f68:	5099      	str	r1, [r3, r2]
 8002f6a:	4bcb      	ldr	r3, [pc, #812]	; (8003298 <main+0xc9c>)
 8002f6c:	181b      	adds	r3, r3, r0
 8002f6e:	193a      	adds	r2, r7, r4
 8002f70:	189a      	adds	r2, r3, r2
 8002f72:	2397      	movs	r3, #151	; 0x97
 8002f74:	00db      	lsls	r3, r3, #3
 8002f76:	49c7      	ldr	r1, [pc, #796]	; (8003294 <main+0xc98>)
 8002f78:	50d1      	str	r1, [r2, r3]
 8002f7a:	4bc7      	ldr	r3, [pc, #796]	; (8003298 <main+0xc9c>)
 8002f7c:	181b      	adds	r3, r3, r0
 8002f7e:	2228      	movs	r2, #40	; 0x28
 8002f80:	4694      	mov	ip, r2
 8002f82:	44bc      	add	ip, r7
 8002f84:	4463      	add	r3, ip
 8002f86:	4acf      	ldr	r2, [pc, #828]	; (80032c4 <main+0xcc8>)
 8002f88:	49c2      	ldr	r1, [pc, #776]	; (8003294 <main+0xc98>)
 8002f8a:	5099      	str	r1, [r3, r2]
 8002f8c:	4bc2      	ldr	r3, [pc, #776]	; (8003298 <main+0xc9c>)
 8002f8e:	181b      	adds	r3, r3, r0
 8002f90:	193a      	adds	r2, r7, r4
 8002f92:	189a      	adds	r2, r3, r2
 8002f94:	2398      	movs	r3, #152	; 0x98
 8002f96:	00db      	lsls	r3, r3, #3
 8002f98:	49be      	ldr	r1, [pc, #760]	; (8003294 <main+0xc98>)
 8002f9a:	50d1      	str	r1, [r2, r3]
 8002f9c:	4bbe      	ldr	r3, [pc, #760]	; (8003298 <main+0xc9c>)
 8002f9e:	181b      	adds	r3, r3, r0
 8002fa0:	2228      	movs	r2, #40	; 0x28
 8002fa2:	4694      	mov	ip, r2
 8002fa4:	44bc      	add	ip, r7
 8002fa6:	4463      	add	r3, ip
 8002fa8:	4ac7      	ldr	r2, [pc, #796]	; (80032c8 <main+0xccc>)
 8002faa:	49bd      	ldr	r1, [pc, #756]	; (80032a0 <main+0xca4>)
 8002fac:	5099      	str	r1, [r3, r2]
 8002fae:	4bba      	ldr	r3, [pc, #744]	; (8003298 <main+0xc9c>)
 8002fb0:	181b      	adds	r3, r3, r0
 8002fb2:	193a      	adds	r2, r7, r4
 8002fb4:	189a      	adds	r2, r3, r2
 8002fb6:	239c      	movs	r3, #156	; 0x9c
 8002fb8:	00db      	lsls	r3, r3, #3
 8002fba:	49c4      	ldr	r1, [pc, #784]	; (80032cc <main+0xcd0>)
 8002fbc:	50d1      	str	r1, [r2, r3]
 8002fbe:	4bb6      	ldr	r3, [pc, #728]	; (8003298 <main+0xc9c>)
 8002fc0:	181b      	adds	r3, r3, r0
 8002fc2:	2228      	movs	r2, #40	; 0x28
 8002fc4:	4694      	mov	ip, r2
 8002fc6:	44bc      	add	ip, r7
 8002fc8:	4463      	add	r3, ip
 8002fca:	4ac1      	ldr	r2, [pc, #772]	; (80032d0 <main+0xcd4>)
 8002fcc:	49c1      	ldr	r1, [pc, #772]	; (80032d4 <main+0xcd8>)
 8002fce:	5099      	str	r1, [r3, r2]
 8002fd0:	4bb1      	ldr	r3, [pc, #708]	; (8003298 <main+0xc9c>)
 8002fd2:	181b      	adds	r3, r3, r0
 8002fd4:	193a      	adds	r2, r7, r4
 8002fd6:	189a      	adds	r2, r3, r2
 8002fd8:	239d      	movs	r3, #157	; 0x9d
 8002fda:	00db      	lsls	r3, r3, #3
 8002fdc:	49be      	ldr	r1, [pc, #760]	; (80032d8 <main+0xcdc>)
 8002fde:	50d1      	str	r1, [r2, r3]
 8002fe0:	4bad      	ldr	r3, [pc, #692]	; (8003298 <main+0xc9c>)
 8002fe2:	181b      	adds	r3, r3, r0
 8002fe4:	2228      	movs	r2, #40	; 0x28
 8002fe6:	4694      	mov	ip, r2
 8002fe8:	44bc      	add	ip, r7
 8002fea:	4463      	add	r3, ip
 8002fec:	4abb      	ldr	r2, [pc, #748]	; (80032dc <main+0xce0>)
 8002fee:	49a9      	ldr	r1, [pc, #676]	; (8003294 <main+0xc98>)
 8002ff0:	5099      	str	r1, [r3, r2]
 8002ff2:	4ba9      	ldr	r3, [pc, #676]	; (8003298 <main+0xc9c>)
 8002ff4:	181b      	adds	r3, r3, r0
 8002ff6:	193a      	adds	r2, r7, r4
 8002ff8:	189a      	adds	r2, r3, r2
 8002ffa:	239e      	movs	r3, #158	; 0x9e
 8002ffc:	00db      	lsls	r3, r3, #3
 8002ffe:	49a5      	ldr	r1, [pc, #660]	; (8003294 <main+0xc98>)
 8003000:	50d1      	str	r1, [r2, r3]
 8003002:	4ba5      	ldr	r3, [pc, #660]	; (8003298 <main+0xc9c>)
 8003004:	181b      	adds	r3, r3, r0
 8003006:	193a      	adds	r2, r7, r4
 8003008:	189a      	adds	r2, r3, r2
 800300a:	239f      	movs	r3, #159	; 0x9f
 800300c:	00db      	lsls	r3, r3, #3
 800300e:	49b4      	ldr	r1, [pc, #720]	; (80032e0 <main+0xce4>)
 8003010:	50d1      	str	r1, [r2, r3]
 8003012:	4ba1      	ldr	r3, [pc, #644]	; (8003298 <main+0xc9c>)
 8003014:	181b      	adds	r3, r3, r0
 8003016:	2228      	movs	r2, #40	; 0x28
 8003018:	4694      	mov	ip, r2
 800301a:	44bc      	add	ip, r7
 800301c:	4463      	add	r3, ip
 800301e:	4ab1      	ldr	r2, [pc, #708]	; (80032e4 <main+0xce8>)
 8003020:	49aa      	ldr	r1, [pc, #680]	; (80032cc <main+0xcd0>)
 8003022:	5099      	str	r1, [r3, r2]
 8003024:	4b9c      	ldr	r3, [pc, #624]	; (8003298 <main+0xc9c>)
 8003026:	181b      	adds	r3, r3, r0
 8003028:	193a      	adds	r2, r7, r4
 800302a:	189a      	adds	r2, r3, r2
 800302c:	23a3      	movs	r3, #163	; 0xa3
 800302e:	00db      	lsls	r3, r3, #3
 8003030:	49a8      	ldr	r1, [pc, #672]	; (80032d4 <main+0xcd8>)
 8003032:	50d1      	str	r1, [r2, r3]
 8003034:	4b98      	ldr	r3, [pc, #608]	; (8003298 <main+0xc9c>)
 8003036:	181b      	adds	r3, r3, r0
 8003038:	2228      	movs	r2, #40	; 0x28
 800303a:	4694      	mov	ip, r2
 800303c:	44bc      	add	ip, r7
 800303e:	4463      	add	r3, ip
 8003040:	4aa9      	ldr	r2, [pc, #676]	; (80032e8 <main+0xcec>)
 8003042:	49a5      	ldr	r1, [pc, #660]	; (80032d8 <main+0xcdc>)
 8003044:	5099      	str	r1, [r3, r2]
 8003046:	4b94      	ldr	r3, [pc, #592]	; (8003298 <main+0xc9c>)
 8003048:	181b      	adds	r3, r3, r0
 800304a:	193a      	adds	r2, r7, r4
 800304c:	189a      	adds	r2, r3, r2
 800304e:	23a4      	movs	r3, #164	; 0xa4
 8003050:	00db      	lsls	r3, r3, #3
 8003052:	4990      	ldr	r1, [pc, #576]	; (8003294 <main+0xc98>)
 8003054:	50d1      	str	r1, [r2, r3]
 8003056:	4b90      	ldr	r3, [pc, #576]	; (8003298 <main+0xc9c>)
 8003058:	181b      	adds	r3, r3, r0
 800305a:	2228      	movs	r2, #40	; 0x28
 800305c:	4694      	mov	ip, r2
 800305e:	44bc      	add	ip, r7
 8003060:	4463      	add	r3, ip
 8003062:	4aa2      	ldr	r2, [pc, #648]	; (80032ec <main+0xcf0>)
 8003064:	498b      	ldr	r1, [pc, #556]	; (8003294 <main+0xc98>)
 8003066:	5099      	str	r1, [r3, r2]
 8003068:	4b8b      	ldr	r3, [pc, #556]	; (8003298 <main+0xc9c>)
 800306a:	181b      	adds	r3, r3, r0
 800306c:	2228      	movs	r2, #40	; 0x28
 800306e:	4694      	mov	ip, r2
 8003070:	44bc      	add	ip, r7
 8003072:	4463      	add	r3, ip
 8003074:	4a9e      	ldr	r2, [pc, #632]	; (80032f0 <main+0xcf4>)
 8003076:	499a      	ldr	r1, [pc, #616]	; (80032e0 <main+0xce4>)
 8003078:	5099      	str	r1, [r3, r2]
 800307a:	4b87      	ldr	r3, [pc, #540]	; (8003298 <main+0xc9c>)
 800307c:	181b      	adds	r3, r3, r0
 800307e:	193a      	adds	r2, r7, r4
 8003080:	189a      	adds	r2, r3, r2
 8003082:	23a9      	movs	r3, #169	; 0xa9
 8003084:	00db      	lsls	r3, r3, #3
 8003086:	4991      	ldr	r1, [pc, #580]	; (80032cc <main+0xcd0>)
 8003088:	50d1      	str	r1, [r2, r3]
 800308a:	4b83      	ldr	r3, [pc, #524]	; (8003298 <main+0xc9c>)
 800308c:	181b      	adds	r3, r3, r0
 800308e:	2228      	movs	r2, #40	; 0x28
 8003090:	4694      	mov	ip, r2
 8003092:	44bc      	add	ip, r7
 8003094:	4463      	add	r3, ip
 8003096:	4a97      	ldr	r2, [pc, #604]	; (80032f4 <main+0xcf8>)
 8003098:	498e      	ldr	r1, [pc, #568]	; (80032d4 <main+0xcd8>)
 800309a:	5099      	str	r1, [r3, r2]
 800309c:	4b7e      	ldr	r3, [pc, #504]	; (8003298 <main+0xc9c>)
 800309e:	181b      	adds	r3, r3, r0
 80030a0:	193a      	adds	r2, r7, r4
 80030a2:	189a      	adds	r2, r3, r2
 80030a4:	23aa      	movs	r3, #170	; 0xaa
 80030a6:	00db      	lsls	r3, r3, #3
 80030a8:	498b      	ldr	r1, [pc, #556]	; (80032d8 <main+0xcdc>)
 80030aa:	50d1      	str	r1, [r2, r3]
 80030ac:	4b7a      	ldr	r3, [pc, #488]	; (8003298 <main+0xc9c>)
 80030ae:	181b      	adds	r3, r3, r0
 80030b0:	2228      	movs	r2, #40	; 0x28
 80030b2:	4694      	mov	ip, r2
 80030b4:	44bc      	add	ip, r7
 80030b6:	4463      	add	r3, ip
 80030b8:	4a8f      	ldr	r2, [pc, #572]	; (80032f8 <main+0xcfc>)
 80030ba:	4976      	ldr	r1, [pc, #472]	; (8003294 <main+0xc98>)
 80030bc:	5099      	str	r1, [r3, r2]
 80030be:	4b76      	ldr	r3, [pc, #472]	; (8003298 <main+0xc9c>)
 80030c0:	181b      	adds	r3, r3, r0
 80030c2:	193a      	adds	r2, r7, r4
 80030c4:	189a      	adds	r2, r3, r2
 80030c6:	23ab      	movs	r3, #171	; 0xab
 80030c8:	00db      	lsls	r3, r3, #3
 80030ca:	4972      	ldr	r1, [pc, #456]	; (8003294 <main+0xc98>)
 80030cc:	50d1      	str	r1, [r2, r3]
 80030ce:	4b72      	ldr	r3, [pc, #456]	; (8003298 <main+0xc9c>)
 80030d0:	181b      	adds	r3, r3, r0
 80030d2:	193a      	adds	r2, r7, r4
 80030d4:	189a      	adds	r2, r3, r2
 80030d6:	23ac      	movs	r3, #172	; 0xac
 80030d8:	00db      	lsls	r3, r3, #3
 80030da:	4981      	ldr	r1, [pc, #516]	; (80032e0 <main+0xce4>)
 80030dc:	50d1      	str	r1, [r2, r3]
 80030de:	4b6e      	ldr	r3, [pc, #440]	; (8003298 <main+0xc9c>)
 80030e0:	181b      	adds	r3, r3, r0
 80030e2:	2228      	movs	r2, #40	; 0x28
 80030e4:	4694      	mov	ip, r2
 80030e6:	44bc      	add	ip, r7
 80030e8:	4463      	add	r3, ip
 80030ea:	4a84      	ldr	r2, [pc, #528]	; (80032fc <main+0xd00>)
 80030ec:	4984      	ldr	r1, [pc, #528]	; (8003300 <main+0xd04>)
 80030ee:	5099      	str	r1, [r3, r2]
 80030f0:	4b69      	ldr	r3, [pc, #420]	; (8003298 <main+0xc9c>)
 80030f2:	181b      	adds	r3, r3, r0
 80030f4:	193a      	adds	r2, r7, r4
 80030f6:	189a      	adds	r2, r3, r2
 80030f8:	23b0      	movs	r3, #176	; 0xb0
 80030fa:	00db      	lsls	r3, r3, #3
 80030fc:	4981      	ldr	r1, [pc, #516]	; (8003304 <main+0xd08>)
 80030fe:	50d1      	str	r1, [r2, r3]
 8003100:	4b65      	ldr	r3, [pc, #404]	; (8003298 <main+0xc9c>)
 8003102:	181b      	adds	r3, r3, r0
 8003104:	2228      	movs	r2, #40	; 0x28
 8003106:	4694      	mov	ip, r2
 8003108:	44bc      	add	ip, r7
 800310a:	4463      	add	r3, ip
 800310c:	4a7e      	ldr	r2, [pc, #504]	; (8003308 <main+0xd0c>)
 800310e:	497f      	ldr	r1, [pc, #508]	; (800330c <main+0xd10>)
 8003110:	5099      	str	r1, [r3, r2]
 8003112:	4b61      	ldr	r3, [pc, #388]	; (8003298 <main+0xc9c>)
 8003114:	181b      	adds	r3, r3, r0
 8003116:	2228      	movs	r2, #40	; 0x28
 8003118:	4694      	mov	ip, r2
 800311a:	44bc      	add	ip, r7
 800311c:	4463      	add	r3, ip
 800311e:	4a7c      	ldr	r2, [pc, #496]	; (8003310 <main+0xd14>)
 8003120:	495c      	ldr	r1, [pc, #368]	; (8003294 <main+0xc98>)
 8003122:	5099      	str	r1, [r3, r2]
 8003124:	4b5c      	ldr	r3, [pc, #368]	; (8003298 <main+0xc9c>)
 8003126:	181b      	adds	r3, r3, r0
 8003128:	193a      	adds	r2, r7, r4
 800312a:	189a      	adds	r2, r3, r2
 800312c:	23b2      	movs	r3, #178	; 0xb2
 800312e:	00db      	lsls	r3, r3, #3
 8003130:	4958      	ldr	r1, [pc, #352]	; (8003294 <main+0xc98>)
 8003132:	50d1      	str	r1, [r2, r3]
 8003134:	4b58      	ldr	r3, [pc, #352]	; (8003298 <main+0xc9c>)
 8003136:	181b      	adds	r3, r3, r0
 8003138:	2228      	movs	r2, #40	; 0x28
 800313a:	4694      	mov	ip, r2
 800313c:	44bc      	add	ip, r7
 800313e:	4463      	add	r3, ip
 8003140:	4a74      	ldr	r2, [pc, #464]	; (8003314 <main+0xd18>)
 8003142:	4975      	ldr	r1, [pc, #468]	; (8003318 <main+0xd1c>)
 8003144:	5099      	str	r1, [r3, r2]
 8003146:	4b54      	ldr	r3, [pc, #336]	; (8003298 <main+0xc9c>)
 8003148:	181b      	adds	r3, r3, r0
 800314a:	193a      	adds	r2, r7, r4
 800314c:	189a      	adds	r2, r3, r2
 800314e:	23b6      	movs	r3, #182	; 0xb6
 8003150:	00db      	lsls	r3, r3, #3
 8003152:	496b      	ldr	r1, [pc, #428]	; (8003300 <main+0xd04>)
 8003154:	50d1      	str	r1, [r2, r3]
 8003156:	4b50      	ldr	r3, [pc, #320]	; (8003298 <main+0xc9c>)
 8003158:	181b      	adds	r3, r3, r0
 800315a:	2228      	movs	r2, #40	; 0x28
 800315c:	4694      	mov	ip, r2
 800315e:	44bc      	add	ip, r7
 8003160:	4463      	add	r3, ip
 8003162:	4a6e      	ldr	r2, [pc, #440]	; (800331c <main+0xd20>)
 8003164:	4967      	ldr	r1, [pc, #412]	; (8003304 <main+0xd08>)
 8003166:	5099      	str	r1, [r3, r2]
 8003168:	4b4b      	ldr	r3, [pc, #300]	; (8003298 <main+0xc9c>)
 800316a:	181b      	adds	r3, r3, r0
 800316c:	193a      	adds	r2, r7, r4
 800316e:	189a      	adds	r2, r3, r2
 8003170:	23b7      	movs	r3, #183	; 0xb7
 8003172:	00db      	lsls	r3, r3, #3
 8003174:	4965      	ldr	r1, [pc, #404]	; (800330c <main+0xd10>)
 8003176:	50d1      	str	r1, [r2, r3]
 8003178:	4b47      	ldr	r3, [pc, #284]	; (8003298 <main+0xc9c>)
 800317a:	181b      	adds	r3, r3, r0
 800317c:	193a      	adds	r2, r7, r4
 800317e:	189a      	adds	r2, r3, r2
 8003180:	23b8      	movs	r3, #184	; 0xb8
 8003182:	00db      	lsls	r3, r3, #3
 8003184:	4943      	ldr	r1, [pc, #268]	; (8003294 <main+0xc98>)
 8003186:	50d1      	str	r1, [r2, r3]
 8003188:	4b43      	ldr	r3, [pc, #268]	; (8003298 <main+0xc9c>)
 800318a:	181b      	adds	r3, r3, r0
 800318c:	2228      	movs	r2, #40	; 0x28
 800318e:	4694      	mov	ip, r2
 8003190:	44bc      	add	ip, r7
 8003192:	4463      	add	r3, ip
 8003194:	4a62      	ldr	r2, [pc, #392]	; (8003320 <main+0xd24>)
 8003196:	493f      	ldr	r1, [pc, #252]	; (8003294 <main+0xc98>)
 8003198:	5099      	str	r1, [r3, r2]
 800319a:	4b3f      	ldr	r3, [pc, #252]	; (8003298 <main+0xc9c>)
 800319c:	181b      	adds	r3, r3, r0
 800319e:	193a      	adds	r2, r7, r4
 80031a0:	189a      	adds	r2, r3, r2
 80031a2:	23b9      	movs	r3, #185	; 0xb9
 80031a4:	00db      	lsls	r3, r3, #3
 80031a6:	495c      	ldr	r1, [pc, #368]	; (8003318 <main+0xd1c>)
 80031a8:	50d1      	str	r1, [r2, r3]
 80031aa:	4b3b      	ldr	r3, [pc, #236]	; (8003298 <main+0xc9c>)
 80031ac:	181b      	adds	r3, r3, r0
 80031ae:	2228      	movs	r2, #40	; 0x28
 80031b0:	4694      	mov	ip, r2
 80031b2:	44bc      	add	ip, r7
 80031b4:	4463      	add	r3, ip
 80031b6:	4a5b      	ldr	r2, [pc, #364]	; (8003324 <main+0xd28>)
 80031b8:	4951      	ldr	r1, [pc, #324]	; (8003300 <main+0xd04>)
 80031ba:	5099      	str	r1, [r3, r2]
 80031bc:	4b36      	ldr	r3, [pc, #216]	; (8003298 <main+0xc9c>)
 80031be:	181b      	adds	r3, r3, r0
 80031c0:	193a      	adds	r2, r7, r4
 80031c2:	189a      	adds	r2, r3, r2
 80031c4:	23bd      	movs	r3, #189	; 0xbd
 80031c6:	00db      	lsls	r3, r3, #3
 80031c8:	494e      	ldr	r1, [pc, #312]	; (8003304 <main+0xd08>)
 80031ca:	50d1      	str	r1, [r2, r3]
 80031cc:	4b32      	ldr	r3, [pc, #200]	; (8003298 <main+0xc9c>)
 80031ce:	181b      	adds	r3, r3, r0
 80031d0:	2228      	movs	r2, #40	; 0x28
 80031d2:	4694      	mov	ip, r2
 80031d4:	44bc      	add	ip, r7
 80031d6:	4463      	add	r3, ip
 80031d8:	4a53      	ldr	r2, [pc, #332]	; (8003328 <main+0xd2c>)
 80031da:	494c      	ldr	r1, [pc, #304]	; (800330c <main+0xd10>)
 80031dc:	5099      	str	r1, [r3, r2]
 80031de:	4b2e      	ldr	r3, [pc, #184]	; (8003298 <main+0xc9c>)
 80031e0:	181b      	adds	r3, r3, r0
 80031e2:	2228      	movs	r2, #40	; 0x28
 80031e4:	4694      	mov	ip, r2
 80031e6:	44bc      	add	ip, r7
 80031e8:	4463      	add	r3, ip
 80031ea:	4a50      	ldr	r2, [pc, #320]	; (800332c <main+0xd30>)
 80031ec:	4929      	ldr	r1, [pc, #164]	; (8003294 <main+0xc98>)
 80031ee:	5099      	str	r1, [r3, r2]
 80031f0:	4b29      	ldr	r3, [pc, #164]	; (8003298 <main+0xc9c>)
 80031f2:	181b      	adds	r3, r3, r0
 80031f4:	193a      	adds	r2, r7, r4
 80031f6:	189a      	adds	r2, r3, r2
 80031f8:	23bf      	movs	r3, #191	; 0xbf
 80031fa:	00db      	lsls	r3, r3, #3
 80031fc:	4925      	ldr	r1, [pc, #148]	; (8003294 <main+0xc98>)
 80031fe:	50d1      	str	r1, [r2, r3]
 8003200:	4b25      	ldr	r3, [pc, #148]	; (8003298 <main+0xc9c>)
 8003202:	181b      	adds	r3, r3, r0
 8003204:	2228      	movs	r2, #40	; 0x28
 8003206:	4694      	mov	ip, r2
 8003208:	44bc      	add	ip, r7
 800320a:	4463      	add	r3, ip
 800320c:	4a48      	ldr	r2, [pc, #288]	; (8003330 <main+0xd34>)
 800320e:	4942      	ldr	r1, [pc, #264]	; (8003318 <main+0xd1c>)
 8003210:	5099      	str	r1, [r3, r2]
 8003212:	4b21      	ldr	r3, [pc, #132]	; (8003298 <main+0xc9c>)
 8003214:	181b      	adds	r3, r3, r0
 8003216:	193a      	adds	r2, r7, r4
 8003218:	189a      	adds	r2, r3, r2
 800321a:	23c3      	movs	r3, #195	; 0xc3
 800321c:	00db      	lsls	r3, r3, #3
 800321e:	4938      	ldr	r1, [pc, #224]	; (8003300 <main+0xd04>)
 8003220:	50d1      	str	r1, [r2, r3]
 8003222:	4b1d      	ldr	r3, [pc, #116]	; (8003298 <main+0xc9c>)
 8003224:	181b      	adds	r3, r3, r0
 8003226:	2228      	movs	r2, #40	; 0x28
 8003228:	4694      	mov	ip, r2
 800322a:	44bc      	add	ip, r7
 800322c:	4463      	add	r3, ip
 800322e:	4a41      	ldr	r2, [pc, #260]	; (8003334 <main+0xd38>)
 8003230:	4934      	ldr	r1, [pc, #208]	; (8003304 <main+0xd08>)
 8003232:	5099      	str	r1, [r3, r2]
 8003234:	4b18      	ldr	r3, [pc, #96]	; (8003298 <main+0xc9c>)
 8003236:	181b      	adds	r3, r3, r0
 8003238:	193a      	adds	r2, r7, r4
 800323a:	189a      	adds	r2, r3, r2
 800323c:	23c4      	movs	r3, #196	; 0xc4
 800323e:	00db      	lsls	r3, r3, #3
 8003240:	4932      	ldr	r1, [pc, #200]	; (800330c <main+0xd10>)
 8003242:	50d1      	str	r1, [r2, r3]
 8003244:	4b14      	ldr	r3, [pc, #80]	; (8003298 <main+0xc9c>)
 8003246:	181b      	adds	r3, r3, r0
 8003248:	193a      	adds	r2, r7, r4
 800324a:	189a      	adds	r2, r3, r2
 800324c:	23c5      	movs	r3, #197	; 0xc5
 800324e:	00db      	lsls	r3, r3, #3
 8003250:	4910      	ldr	r1, [pc, #64]	; (8003294 <main+0xc98>)
 8003252:	50d1      	str	r1, [r2, r3]
 8003254:	4b10      	ldr	r3, [pc, #64]	; (8003298 <main+0xc9c>)
 8003256:	181b      	adds	r3, r3, r0
 8003258:	2228      	movs	r2, #40	; 0x28
 800325a:	4694      	mov	ip, r2
 800325c:	44bc      	add	ip, r7
 800325e:	4463      	add	r3, ip
 8003260:	4a35      	ldr	r2, [pc, #212]	; (8003338 <main+0xd3c>)
 8003262:	490c      	ldr	r1, [pc, #48]	; (8003294 <main+0xc98>)
 8003264:	5099      	str	r1, [r3, r2]
 8003266:	4b0c      	ldr	r3, [pc, #48]	; (8003298 <main+0xc9c>)
 8003268:	181b      	adds	r3, r3, r0
 800326a:	193a      	adds	r2, r7, r4
 800326c:	189a      	adds	r2, r3, r2
 800326e:	23c6      	movs	r3, #198	; 0xc6
 8003270:	00db      	lsls	r3, r3, #3
 8003272:	4929      	ldr	r1, [pc, #164]	; (8003318 <main+0xd1c>)
 8003274:	50d1      	str	r1, [r2, r3]
 8003276:	4b08      	ldr	r3, [pc, #32]	; (8003298 <main+0xc9c>)
 8003278:	181b      	adds	r3, r3, r0
 800327a:	2228      	movs	r2, #40	; 0x28
 800327c:	4694      	mov	ip, r2
 800327e:	44bc      	add	ip, r7
 8003280:	4463      	add	r3, ip
 8003282:	4a2e      	ldr	r2, [pc, #184]	; (800333c <main+0xd40>)
 8003284:	4907      	ldr	r1, [pc, #28]	; (80032a4 <main+0xca8>)
 8003286:	5099      	str	r1, [r3, r2]
 8003288:	4b03      	ldr	r3, [pc, #12]	; (8003298 <main+0xc9c>)
 800328a:	181b      	adds	r3, r3, r0
 800328c:	193a      	adds	r2, r7, r4
 800328e:	e057      	b.n	8003340 <main+0xd44>
 8003290:	00000454 	.word	0x00000454
 8003294:	bd79db23 	.word	0xbd79db23
 8003298:	fffff430 	.word	0xfffff430
 800329c:	0000045c 	.word	0x0000045c
 80032a0:	41f2f838 	.word	0x41f2f838
 80032a4:	3b6bedfa 	.word	0x3b6bedfa
 80032a8:	0000047c 	.word	0x0000047c
 80032ac:	bb449ba6 	.word	0xbb449ba6
 80032b0:	409d096c 	.word	0x409d096c
 80032b4:	00000484 	.word	0x00000484
 80032b8:	0000048c 	.word	0x0000048c
 80032bc:	000004ac 	.word	0x000004ac
 80032c0:	000004b4 	.word	0x000004b4
 80032c4:	000004bc 	.word	0x000004bc
 80032c8:	000004c4 	.word	0x000004c4
 80032cc:	3b9d4952 	.word	0x3b9d4952
 80032d0:	000004e4 	.word	0x000004e4
 80032d4:	baebedfa 	.word	0xbaebedfa
 80032d8:	409d3f7d 	.word	0x409d3f7d
 80032dc:	000004ec 	.word	0x000004ec
 80032e0:	41f2e00d 	.word	0x41f2e00d
 80032e4:	00000514 	.word	0x00000514
 80032e8:	0000051c 	.word	0x0000051c
 80032ec:	00000524 	.word	0x00000524
 80032f0:	0000052c 	.word	0x0000052c
 80032f4:	0000054c 	.word	0x0000054c
 80032f8:	00000554 	.word	0x00000554
 80032fc:	0000057c 	.word	0x0000057c
 8003300:	3b89a027 	.word	0x3b89a027
 8003304:	bbd844d0 	.word	0xbbd844d0
 8003308:	00000584 	.word	0x00000584
 800330c:	409ce219 	.word	0x409ce219
 8003310:	0000058c 	.word	0x0000058c
 8003314:	00000594 	.word	0x00000594
 8003318:	41f2c7e3 	.word	0x41f2c7e3
 800331c:	000005b4 	.word	0x000005b4
 8003320:	000005c4 	.word	0x000005c4
 8003324:	000005e4 	.word	0x000005e4
 8003328:	000005ec 	.word	0x000005ec
 800332c:	000005f4 	.word	0x000005f4
 8003330:	000005fc 	.word	0x000005fc
 8003334:	0000061c 	.word	0x0000061c
 8003338:	0000062c 	.word	0x0000062c
 800333c:	0000064c 	.word	0x0000064c
 8003340:	189a      	adds	r2, r3, r2
 8003342:	23ca      	movs	r3, #202	; 0xca
 8003344:	00db      	lsls	r3, r3, #3
 8003346:	49fd      	ldr	r1, [pc, #1012]	; (800373c <main+0x1140>)
 8003348:	50d1      	str	r1, [r2, r3]
 800334a:	4bfd      	ldr	r3, [pc, #1012]	; (8003740 <main+0x1144>)
 800334c:	181b      	adds	r3, r3, r0
 800334e:	2228      	movs	r2, #40	; 0x28
 8003350:	4694      	mov	ip, r2
 8003352:	44bc      	add	ip, r7
 8003354:	4463      	add	r3, ip
 8003356:	4afb      	ldr	r2, [pc, #1004]	; (8003744 <main+0x1148>)
 8003358:	49fb      	ldr	r1, [pc, #1004]	; (8003748 <main+0x114c>)
 800335a:	5099      	str	r1, [r3, r2]
 800335c:	4bf8      	ldr	r3, [pc, #992]	; (8003740 <main+0x1144>)
 800335e:	181b      	adds	r3, r3, r0
 8003360:	2228      	movs	r2, #40	; 0x28
 8003362:	4694      	mov	ip, r2
 8003364:	44bc      	add	ip, r7
 8003366:	4463      	add	r3, ip
 8003368:	4af8      	ldr	r2, [pc, #992]	; (800374c <main+0x1150>)
 800336a:	49f9      	ldr	r1, [pc, #996]	; (8003750 <main+0x1154>)
 800336c:	5099      	str	r1, [r3, r2]
 800336e:	4bf4      	ldr	r3, [pc, #976]	; (8003740 <main+0x1144>)
 8003370:	181b      	adds	r3, r3, r0
 8003372:	2228      	movs	r2, #40	; 0x28
 8003374:	4694      	mov	ip, r2
 8003376:	44bc      	add	ip, r7
 8003378:	4463      	add	r3, ip
 800337a:	4af6      	ldr	r2, [pc, #984]	; (8003754 <main+0x1158>)
 800337c:	49f6      	ldr	r1, [pc, #984]	; (8003758 <main+0x115c>)
 800337e:	5099      	str	r1, [r3, r2]
 8003380:	4bef      	ldr	r3, [pc, #956]	; (8003740 <main+0x1144>)
 8003382:	181b      	adds	r3, r3, r0
 8003384:	193a      	adds	r2, r7, r4
 8003386:	189a      	adds	r2, r3, r2
 8003388:	23d0      	movs	r3, #208	; 0xd0
 800338a:	00db      	lsls	r3, r3, #3
 800338c:	49f3      	ldr	r1, [pc, #972]	; (800375c <main+0x1160>)
 800338e:	50d1      	str	r1, [r2, r3]
 8003390:	4beb      	ldr	r3, [pc, #940]	; (8003740 <main+0x1144>)
 8003392:	181b      	adds	r3, r3, r0
 8003394:	2228      	movs	r2, #40	; 0x28
 8003396:	4694      	mov	ip, r2
 8003398:	44bc      	add	ip, r7
 800339a:	4463      	add	r3, ip
 800339c:	4af0      	ldr	r2, [pc, #960]	; (8003760 <main+0x1164>)
 800339e:	49e7      	ldr	r1, [pc, #924]	; (800373c <main+0x1140>)
 80033a0:	5099      	str	r1, [r3, r2]
 80033a2:	4be7      	ldr	r3, [pc, #924]	; (8003740 <main+0x1144>)
 80033a4:	181b      	adds	r3, r3, r0
 80033a6:	193a      	adds	r2, r7, r4
 80033a8:	189a      	adds	r2, r3, r2
 80033aa:	23d1      	movs	r3, #209	; 0xd1
 80033ac:	00db      	lsls	r3, r3, #3
 80033ae:	49e6      	ldr	r1, [pc, #920]	; (8003748 <main+0x114c>)
 80033b0:	50d1      	str	r1, [r2, r3]
 80033b2:	4be3      	ldr	r3, [pc, #908]	; (8003740 <main+0x1144>)
 80033b4:	181b      	adds	r3, r3, r0
 80033b6:	193a      	adds	r2, r7, r4
 80033b8:	189a      	adds	r2, r3, r2
 80033ba:	23d2      	movs	r3, #210	; 0xd2
 80033bc:	00db      	lsls	r3, r3, #3
 80033be:	49e4      	ldr	r1, [pc, #912]	; (8003750 <main+0x1154>)
 80033c0:	50d1      	str	r1, [r2, r3]
 80033c2:	4bdf      	ldr	r3, [pc, #892]	; (8003740 <main+0x1144>)
 80033c4:	181b      	adds	r3, r3, r0
 80033c6:	193a      	adds	r2, r7, r4
 80033c8:	189a      	adds	r2, r3, r2
 80033ca:	23d3      	movs	r3, #211	; 0xd3
 80033cc:	00db      	lsls	r3, r3, #3
 80033ce:	49e2      	ldr	r1, [pc, #904]	; (8003758 <main+0x115c>)
 80033d0:	50d1      	str	r1, [r2, r3]
 80033d2:	4bdb      	ldr	r3, [pc, #876]	; (8003740 <main+0x1144>)
 80033d4:	181b      	adds	r3, r3, r0
 80033d6:	2228      	movs	r2, #40	; 0x28
 80033d8:	4694      	mov	ip, r2
 80033da:	44bc      	add	ip, r7
 80033dc:	4463      	add	r3, ip
 80033de:	4ae1      	ldr	r2, [pc, #900]	; (8003764 <main+0x1168>)
 80033e0:	49e1      	ldr	r1, [pc, #900]	; (8003768 <main+0x116c>)
 80033e2:	5099      	str	r1, [r3, r2]
 80033e4:	4bd6      	ldr	r3, [pc, #856]	; (8003740 <main+0x1144>)
 80033e6:	181b      	adds	r3, r3, r0
 80033e8:	193a      	adds	r2, r7, r4
 80033ea:	189a      	adds	r2, r3, r2
 80033ec:	23d7      	movs	r3, #215	; 0xd7
 80033ee:	00db      	lsls	r3, r3, #3
 80033f0:	49de      	ldr	r1, [pc, #888]	; (800376c <main+0x1170>)
 80033f2:	50d1      	str	r1, [r2, r3]
 80033f4:	4bd2      	ldr	r3, [pc, #840]	; (8003740 <main+0x1144>)
 80033f6:	181b      	adds	r3, r3, r0
 80033f8:	2228      	movs	r2, #40	; 0x28
 80033fa:	4694      	mov	ip, r2
 80033fc:	44bc      	add	ip, r7
 80033fe:	4463      	add	r3, ip
 8003400:	4adb      	ldr	r2, [pc, #876]	; (8003770 <main+0x1174>)
 8003402:	49dc      	ldr	r1, [pc, #880]	; (8003774 <main+0x1178>)
 8003404:	5099      	str	r1, [r3, r2]
 8003406:	4bce      	ldr	r3, [pc, #824]	; (8003740 <main+0x1144>)
 8003408:	181b      	adds	r3, r3, r0
 800340a:	193a      	adds	r2, r7, r4
 800340c:	189a      	adds	r2, r3, r2
 800340e:	23d8      	movs	r3, #216	; 0xd8
 8003410:	00db      	lsls	r3, r3, #3
 8003412:	49cf      	ldr	r1, [pc, #828]	; (8003750 <main+0x1154>)
 8003414:	50d1      	str	r1, [r2, r3]
 8003416:	4bca      	ldr	r3, [pc, #808]	; (8003740 <main+0x1144>)
 8003418:	181b      	adds	r3, r3, r0
 800341a:	2228      	movs	r2, #40	; 0x28
 800341c:	4694      	mov	ip, r2
 800341e:	44bc      	add	ip, r7
 8003420:	4463      	add	r3, ip
 8003422:	4ad5      	ldr	r2, [pc, #852]	; (8003778 <main+0x117c>)
 8003424:	49ca      	ldr	r1, [pc, #808]	; (8003750 <main+0x1154>)
 8003426:	5099      	str	r1, [r3, r2]
 8003428:	4bc5      	ldr	r3, [pc, #788]	; (8003740 <main+0x1144>)
 800342a:	181b      	adds	r3, r3, r0
 800342c:	193a      	adds	r2, r7, r4
 800342e:	189a      	adds	r2, r3, r2
 8003430:	23d9      	movs	r3, #217	; 0xd9
 8003432:	00db      	lsls	r3, r3, #3
 8003434:	49c6      	ldr	r1, [pc, #792]	; (8003750 <main+0x1154>)
 8003436:	50d1      	str	r1, [r2, r3]
 8003438:	4bc1      	ldr	r3, [pc, #772]	; (8003740 <main+0x1144>)
 800343a:	181b      	adds	r3, r3, r0
 800343c:	2228      	movs	r2, #40	; 0x28
 800343e:	4694      	mov	ip, r2
 8003440:	44bc      	add	ip, r7
 8003442:	4463      	add	r3, ip
 8003444:	4acd      	ldr	r2, [pc, #820]	; (800377c <main+0x1180>)
 8003446:	49c4      	ldr	r1, [pc, #784]	; (8003758 <main+0x115c>)
 8003448:	5099      	str	r1, [r3, r2]
 800344a:	4bbd      	ldr	r3, [pc, #756]	; (8003740 <main+0x1144>)
 800344c:	181b      	adds	r3, r3, r0
 800344e:	193a      	adds	r2, r7, r4
 8003450:	189a      	adds	r2, r3, r2
 8003452:	23dd      	movs	r3, #221	; 0xdd
 8003454:	00db      	lsls	r3, r3, #3
 8003456:	49c4      	ldr	r1, [pc, #784]	; (8003768 <main+0x116c>)
 8003458:	50d1      	str	r1, [r2, r3]
 800345a:	4bb9      	ldr	r3, [pc, #740]	; (8003740 <main+0x1144>)
 800345c:	181b      	adds	r3, r3, r0
 800345e:	2228      	movs	r2, #40	; 0x28
 8003460:	4694      	mov	ip, r2
 8003462:	44bc      	add	ip, r7
 8003464:	4463      	add	r3, ip
 8003466:	4ac6      	ldr	r2, [pc, #792]	; (8003780 <main+0x1184>)
 8003468:	49c0      	ldr	r1, [pc, #768]	; (800376c <main+0x1170>)
 800346a:	5099      	str	r1, [r3, r2]
 800346c:	4bb4      	ldr	r3, [pc, #720]	; (8003740 <main+0x1144>)
 800346e:	181b      	adds	r3, r3, r0
 8003470:	193a      	adds	r2, r7, r4
 8003472:	189a      	adds	r2, r3, r2
 8003474:	23de      	movs	r3, #222	; 0xde
 8003476:	00db      	lsls	r3, r3, #3
 8003478:	49be      	ldr	r1, [pc, #760]	; (8003774 <main+0x1178>)
 800347a:	50d1      	str	r1, [r2, r3]
 800347c:	4bb0      	ldr	r3, [pc, #704]	; (8003740 <main+0x1144>)
 800347e:	181b      	adds	r3, r3, r0
 8003480:	2228      	movs	r2, #40	; 0x28
 8003482:	4694      	mov	ip, r2
 8003484:	44bc      	add	ip, r7
 8003486:	4463      	add	r3, ip
 8003488:	4abe      	ldr	r2, [pc, #760]	; (8003784 <main+0x1188>)
 800348a:	49b1      	ldr	r1, [pc, #708]	; (8003750 <main+0x1154>)
 800348c:	5099      	str	r1, [r3, r2]
 800348e:	4bac      	ldr	r3, [pc, #688]	; (8003740 <main+0x1144>)
 8003490:	181b      	adds	r3, r3, r0
 8003492:	193a      	adds	r2, r7, r4
 8003494:	189a      	adds	r2, r3, r2
 8003496:	23df      	movs	r3, #223	; 0xdf
 8003498:	00db      	lsls	r3, r3, #3
 800349a:	49ad      	ldr	r1, [pc, #692]	; (8003750 <main+0x1154>)
 800349c:	50d1      	str	r1, [r2, r3]
 800349e:	4ba8      	ldr	r3, [pc, #672]	; (8003740 <main+0x1144>)
 80034a0:	181b      	adds	r3, r3, r0
 80034a2:	2228      	movs	r2, #40	; 0x28
 80034a4:	4694      	mov	ip, r2
 80034a6:	44bc      	add	ip, r7
 80034a8:	4463      	add	r3, ip
 80034aa:	4ab7      	ldr	r2, [pc, #732]	; (8003788 <main+0x118c>)
 80034ac:	49a8      	ldr	r1, [pc, #672]	; (8003750 <main+0x1154>)
 80034ae:	5099      	str	r1, [r3, r2]
 80034b0:	4ba3      	ldr	r3, [pc, #652]	; (8003740 <main+0x1144>)
 80034b2:	181b      	adds	r3, r3, r0
 80034b4:	193a      	adds	r2, r7, r4
 80034b6:	189a      	adds	r2, r3, r2
 80034b8:	23e0      	movs	r3, #224	; 0xe0
 80034ba:	00db      	lsls	r3, r3, #3
 80034bc:	49a6      	ldr	r1, [pc, #664]	; (8003758 <main+0x115c>)
 80034be:	50d1      	str	r1, [r2, r3]
 80034c0:	4b9f      	ldr	r3, [pc, #636]	; (8003740 <main+0x1144>)
 80034c2:	181b      	adds	r3, r3, r0
 80034c4:	2228      	movs	r2, #40	; 0x28
 80034c6:	4694      	mov	ip, r2
 80034c8:	44bc      	add	ip, r7
 80034ca:	4463      	add	r3, ip
 80034cc:	4aaf      	ldr	r2, [pc, #700]	; (800378c <main+0x1190>)
 80034ce:	49b0      	ldr	r1, [pc, #704]	; (8003790 <main+0x1194>)
 80034d0:	5099      	str	r1, [r3, r2]
 80034d2:	4b9b      	ldr	r3, [pc, #620]	; (8003740 <main+0x1144>)
 80034d4:	181b      	adds	r3, r3, r0
 80034d6:	193a      	adds	r2, r7, r4
 80034d8:	189a      	adds	r2, r3, r2
 80034da:	23e4      	movs	r3, #228	; 0xe4
 80034dc:	00db      	lsls	r3, r3, #3
 80034de:	49ad      	ldr	r1, [pc, #692]	; (8003794 <main+0x1198>)
 80034e0:	50d1      	str	r1, [r2, r3]
 80034e2:	4b97      	ldr	r3, [pc, #604]	; (8003740 <main+0x1144>)
 80034e4:	181b      	adds	r3, r3, r0
 80034e6:	2228      	movs	r2, #40	; 0x28
 80034e8:	4694      	mov	ip, r2
 80034ea:	44bc      	add	ip, r7
 80034ec:	4463      	add	r3, ip
 80034ee:	4aaa      	ldr	r2, [pc, #680]	; (8003798 <main+0x119c>)
 80034f0:	49aa      	ldr	r1, [pc, #680]	; (800379c <main+0x11a0>)
 80034f2:	5099      	str	r1, [r3, r2]
 80034f4:	4b92      	ldr	r3, [pc, #584]	; (8003740 <main+0x1144>)
 80034f6:	181b      	adds	r3, r3, r0
 80034f8:	193a      	adds	r2, r7, r4
 80034fa:	189a      	adds	r2, r3, r2
 80034fc:	23e5      	movs	r3, #229	; 0xe5
 80034fe:	00db      	lsls	r3, r3, #3
 8003500:	4993      	ldr	r1, [pc, #588]	; (8003750 <main+0x1154>)
 8003502:	50d1      	str	r1, [r2, r3]
 8003504:	4b8e      	ldr	r3, [pc, #568]	; (8003740 <main+0x1144>)
 8003506:	181b      	adds	r3, r3, r0
 8003508:	2228      	movs	r2, #40	; 0x28
 800350a:	4694      	mov	ip, r2
 800350c:	44bc      	add	ip, r7
 800350e:	4463      	add	r3, ip
 8003510:	4aa3      	ldr	r2, [pc, #652]	; (80037a0 <main+0x11a4>)
 8003512:	498f      	ldr	r1, [pc, #572]	; (8003750 <main+0x1154>)
 8003514:	5099      	str	r1, [r3, r2]
 8003516:	4b8a      	ldr	r3, [pc, #552]	; (8003740 <main+0x1144>)
 8003518:	181b      	adds	r3, r3, r0
 800351a:	2228      	movs	r2, #40	; 0x28
 800351c:	4694      	mov	ip, r2
 800351e:	44bc      	add	ip, r7
 8003520:	4463      	add	r3, ip
 8003522:	4aa0      	ldr	r2, [pc, #640]	; (80037a4 <main+0x11a8>)
 8003524:	49a0      	ldr	r1, [pc, #640]	; (80037a8 <main+0x11ac>)
 8003526:	5099      	str	r1, [r3, r2]
 8003528:	4b85      	ldr	r3, [pc, #532]	; (8003740 <main+0x1144>)
 800352a:	181b      	adds	r3, r3, r0
 800352c:	193a      	adds	r2, r7, r4
 800352e:	189a      	adds	r2, r3, r2
 8003530:	23ea      	movs	r3, #234	; 0xea
 8003532:	00db      	lsls	r3, r3, #3
 8003534:	4996      	ldr	r1, [pc, #600]	; (8003790 <main+0x1194>)
 8003536:	50d1      	str	r1, [r2, r3]
 8003538:	4b81      	ldr	r3, [pc, #516]	; (8003740 <main+0x1144>)
 800353a:	181b      	adds	r3, r3, r0
 800353c:	2228      	movs	r2, #40	; 0x28
 800353e:	4694      	mov	ip, r2
 8003540:	44bc      	add	ip, r7
 8003542:	4463      	add	r3, ip
 8003544:	4a99      	ldr	r2, [pc, #612]	; (80037ac <main+0x11b0>)
 8003546:	4993      	ldr	r1, [pc, #588]	; (8003794 <main+0x1198>)
 8003548:	5099      	str	r1, [r3, r2]
 800354a:	4b7d      	ldr	r3, [pc, #500]	; (8003740 <main+0x1144>)
 800354c:	181b      	adds	r3, r3, r0
 800354e:	193a      	adds	r2, r7, r4
 8003550:	189a      	adds	r2, r3, r2
 8003552:	23eb      	movs	r3, #235	; 0xeb
 8003554:	00db      	lsls	r3, r3, #3
 8003556:	4991      	ldr	r1, [pc, #580]	; (800379c <main+0x11a0>)
 8003558:	50d1      	str	r1, [r2, r3]
 800355a:	4b79      	ldr	r3, [pc, #484]	; (8003740 <main+0x1144>)
 800355c:	181b      	adds	r3, r3, r0
 800355e:	2228      	movs	r2, #40	; 0x28
 8003560:	4694      	mov	ip, r2
 8003562:	44bc      	add	ip, r7
 8003564:	4463      	add	r3, ip
 8003566:	4a92      	ldr	r2, [pc, #584]	; (80037b0 <main+0x11b4>)
 8003568:	4979      	ldr	r1, [pc, #484]	; (8003750 <main+0x1154>)
 800356a:	5099      	str	r1, [r3, r2]
 800356c:	4b74      	ldr	r3, [pc, #464]	; (8003740 <main+0x1144>)
 800356e:	181b      	adds	r3, r3, r0
 8003570:	193a      	adds	r2, r7, r4
 8003572:	189a      	adds	r2, r3, r2
 8003574:	23ec      	movs	r3, #236	; 0xec
 8003576:	00db      	lsls	r3, r3, #3
 8003578:	4975      	ldr	r1, [pc, #468]	; (8003750 <main+0x1154>)
 800357a:	50d1      	str	r1, [r2, r3]
 800357c:	4b70      	ldr	r3, [pc, #448]	; (8003740 <main+0x1144>)
 800357e:	181b      	adds	r3, r3, r0
 8003580:	193a      	adds	r2, r7, r4
 8003582:	189a      	adds	r2, r3, r2
 8003584:	23ed      	movs	r3, #237	; 0xed
 8003586:	00db      	lsls	r3, r3, #3
 8003588:	4987      	ldr	r1, [pc, #540]	; (80037a8 <main+0x11ac>)
 800358a:	50d1      	str	r1, [r2, r3]
 800358c:	4b6c      	ldr	r3, [pc, #432]	; (8003740 <main+0x1144>)
 800358e:	181b      	adds	r3, r3, r0
 8003590:	2228      	movs	r2, #40	; 0x28
 8003592:	4694      	mov	ip, r2
 8003594:	44bc      	add	ip, r7
 8003596:	4463      	add	r3, ip
 8003598:	4a86      	ldr	r2, [pc, #536]	; (80037b4 <main+0x11b8>)
 800359a:	4987      	ldr	r1, [pc, #540]	; (80037b8 <main+0x11bc>)
 800359c:	5099      	str	r1, [r3, r2]
 800359e:	4b68      	ldr	r3, [pc, #416]	; (8003740 <main+0x1144>)
 80035a0:	181b      	adds	r3, r3, r0
 80035a2:	193a      	adds	r2, r7, r4
 80035a4:	189a      	adds	r2, r3, r2
 80035a6:	23f1      	movs	r3, #241	; 0xf1
 80035a8:	00db      	lsls	r3, r3, #3
 80035aa:	4984      	ldr	r1, [pc, #528]	; (80037bc <main+0x11c0>)
 80035ac:	50d1      	str	r1, [r2, r3]
 80035ae:	4b64      	ldr	r3, [pc, #400]	; (8003740 <main+0x1144>)
 80035b0:	181b      	adds	r3, r3, r0
 80035b2:	2228      	movs	r2, #40	; 0x28
 80035b4:	4694      	mov	ip, r2
 80035b6:	44bc      	add	ip, r7
 80035b8:	4463      	add	r3, ip
 80035ba:	4a81      	ldr	r2, [pc, #516]	; (80037c0 <main+0x11c4>)
 80035bc:	4981      	ldr	r1, [pc, #516]	; (80037c4 <main+0x11c8>)
 80035be:	5099      	str	r1, [r3, r2]
 80035c0:	4b5f      	ldr	r3, [pc, #380]	; (8003740 <main+0x1144>)
 80035c2:	181b      	adds	r3, r3, r0
 80035c4:	2228      	movs	r2, #40	; 0x28
 80035c6:	4694      	mov	ip, r2
 80035c8:	44bc      	add	ip, r7
 80035ca:	4463      	add	r3, ip
 80035cc:	4a7e      	ldr	r2, [pc, #504]	; (80037c8 <main+0x11cc>)
 80035ce:	497f      	ldr	r1, [pc, #508]	; (80037cc <main+0x11d0>)
 80035d0:	5099      	str	r1, [r3, r2]
 80035d2:	4b5b      	ldr	r3, [pc, #364]	; (8003740 <main+0x1144>)
 80035d4:	181b      	adds	r3, r3, r0
 80035d6:	193a      	adds	r2, r7, r4
 80035d8:	189a      	adds	r2, r3, r2
 80035da:	23f7      	movs	r3, #247	; 0xf7
 80035dc:	00db      	lsls	r3, r3, #3
 80035de:	4976      	ldr	r1, [pc, #472]	; (80037b8 <main+0x11bc>)
 80035e0:	50d1      	str	r1, [r2, r3]
 80035e2:	4b57      	ldr	r3, [pc, #348]	; (8003740 <main+0x1144>)
 80035e4:	181b      	adds	r3, r3, r0
 80035e6:	2228      	movs	r2, #40	; 0x28
 80035e8:	4694      	mov	ip, r2
 80035ea:	44bc      	add	ip, r7
 80035ec:	4463      	add	r3, ip
 80035ee:	4a78      	ldr	r2, [pc, #480]	; (80037d0 <main+0x11d4>)
 80035f0:	4972      	ldr	r1, [pc, #456]	; (80037bc <main+0x11c0>)
 80035f2:	5099      	str	r1, [r3, r2]
 80035f4:	4b52      	ldr	r3, [pc, #328]	; (8003740 <main+0x1144>)
 80035f6:	181b      	adds	r3, r3, r0
 80035f8:	193a      	adds	r2, r7, r4
 80035fa:	189a      	adds	r2, r3, r2
 80035fc:	23f8      	movs	r3, #248	; 0xf8
 80035fe:	00db      	lsls	r3, r3, #3
 8003600:	4970      	ldr	r1, [pc, #448]	; (80037c4 <main+0x11c8>)
 8003602:	50d1      	str	r1, [r2, r3]
 8003604:	4b4e      	ldr	r3, [pc, #312]	; (8003740 <main+0x1144>)
 8003606:	181b      	adds	r3, r3, r0
 8003608:	193a      	adds	r2, r7, r4
 800360a:	189a      	adds	r2, r3, r2
 800360c:	23fa      	movs	r3, #250	; 0xfa
 800360e:	00db      	lsls	r3, r3, #3
 8003610:	496e      	ldr	r1, [pc, #440]	; (80037cc <main+0x11d0>)
 8003612:	50d1      	str	r1, [r2, r3]
 8003614:	4b4a      	ldr	r3, [pc, #296]	; (8003740 <main+0x1144>)
 8003616:	181b      	adds	r3, r3, r0
 8003618:	2228      	movs	r2, #40	; 0x28
 800361a:	4694      	mov	ip, r2
 800361c:	44bc      	add	ip, r7
 800361e:	4463      	add	r3, ip
 8003620:	4a6c      	ldr	r2, [pc, #432]	; (80037d4 <main+0x11d8>)
 8003622:	4965      	ldr	r1, [pc, #404]	; (80037b8 <main+0x11bc>)
 8003624:	5099      	str	r1, [r3, r2]
 8003626:	4b46      	ldr	r3, [pc, #280]	; (8003740 <main+0x1144>)
 8003628:	181b      	adds	r3, r3, r0
 800362a:	193a      	adds	r2, r7, r4
 800362c:	189a      	adds	r2, r3, r2
 800362e:	23fe      	movs	r3, #254	; 0xfe
 8003630:	00db      	lsls	r3, r3, #3
 8003632:	4962      	ldr	r1, [pc, #392]	; (80037bc <main+0x11c0>)
 8003634:	50d1      	str	r1, [r2, r3]
 8003636:	4b42      	ldr	r3, [pc, #264]	; (8003740 <main+0x1144>)
 8003638:	181b      	adds	r3, r3, r0
 800363a:	2228      	movs	r2, #40	; 0x28
 800363c:	4694      	mov	ip, r2
 800363e:	44bc      	add	ip, r7
 8003640:	4463      	add	r3, ip
 8003642:	4a65      	ldr	r2, [pc, #404]	; (80037d8 <main+0x11dc>)
 8003644:	495f      	ldr	r1, [pc, #380]	; (80037c4 <main+0x11c8>)
 8003646:	5099      	str	r1, [r3, r2]
 8003648:	4b3d      	ldr	r3, [pc, #244]	; (8003740 <main+0x1144>)
 800364a:	181b      	adds	r3, r3, r0
 800364c:	2228      	movs	r2, #40	; 0x28
 800364e:	4694      	mov	ip, r2
 8003650:	44bc      	add	ip, r7
 8003652:	4463      	add	r3, ip
 8003654:	4a61      	ldr	r2, [pc, #388]	; (80037dc <main+0x11e0>)
 8003656:	495d      	ldr	r1, [pc, #372]	; (80037cc <main+0x11d0>)
 8003658:	5099      	str	r1, [r3, r2]
 800365a:	4b39      	ldr	r3, [pc, #228]	; (8003740 <main+0x1144>)
 800365c:	181b      	adds	r3, r3, r0
 800365e:	193a      	adds	r2, r7, r4
 8003660:	189a      	adds	r2, r3, r2
 8003662:	2382      	movs	r3, #130	; 0x82
 8003664:	011b      	lsls	r3, r3, #4
 8003666:	495e      	ldr	r1, [pc, #376]	; (80037e0 <main+0x11e4>)
 8003668:	50d1      	str	r1, [r2, r3]
 800366a:	4b35      	ldr	r3, [pc, #212]	; (8003740 <main+0x1144>)
 800366c:	181b      	adds	r3, r3, r0
 800366e:	2228      	movs	r2, #40	; 0x28
 8003670:	4694      	mov	ip, r2
 8003672:	44bc      	add	ip, r7
 8003674:	4463      	add	r3, ip
 8003676:	4a5b      	ldr	r2, [pc, #364]	; (80037e4 <main+0x11e8>)
 8003678:	495b      	ldr	r1, [pc, #364]	; (80037e8 <main+0x11ec>)
 800367a:	5099      	str	r1, [r3, r2]
 800367c:	4b30      	ldr	r3, [pc, #192]	; (8003740 <main+0x1144>)
 800367e:	181b      	adds	r3, r3, r0
 8003680:	2228      	movs	r2, #40	; 0x28
 8003682:	4694      	mov	ip, r2
 8003684:	44bc      	add	ip, r7
 8003686:	4463      	add	r3, ip
 8003688:	4a58      	ldr	r2, [pc, #352]	; (80037ec <main+0x11f0>)
 800368a:	4959      	ldr	r1, [pc, #356]	; (80037f0 <main+0x11f4>)
 800368c:	5099      	str	r1, [r3, r2]
 800368e:	4b2c      	ldr	r3, [pc, #176]	; (8003740 <main+0x1144>)
 8003690:	181b      	adds	r3, r3, r0
 8003692:	2228      	movs	r2, #40	; 0x28
 8003694:	4694      	mov	ip, r2
 8003696:	44bc      	add	ip, r7
 8003698:	4463      	add	r3, ip
 800369a:	4a56      	ldr	r2, [pc, #344]	; (80037f4 <main+0x11f8>)
 800369c:	492c      	ldr	r1, [pc, #176]	; (8003750 <main+0x1154>)
 800369e:	5099      	str	r1, [r3, r2]
 80036a0:	4b27      	ldr	r3, [pc, #156]	; (8003740 <main+0x1144>)
 80036a2:	181b      	adds	r3, r3, r0
 80036a4:	2228      	movs	r2, #40	; 0x28
 80036a6:	4694      	mov	ip, r2
 80036a8:	44bc      	add	ip, r7
 80036aa:	4463      	add	r3, ip
 80036ac:	4a52      	ldr	r2, [pc, #328]	; (80037f8 <main+0x11fc>)
 80036ae:	4953      	ldr	r1, [pc, #332]	; (80037fc <main+0x1200>)
 80036b0:	5099      	str	r1, [r3, r2]
 80036b2:	4b23      	ldr	r3, [pc, #140]	; (8003740 <main+0x1144>)
 80036b4:	181b      	adds	r3, r3, r0
 80036b6:	2228      	movs	r2, #40	; 0x28
 80036b8:	4694      	mov	ip, r2
 80036ba:	44bc      	add	ip, r7
 80036bc:	4463      	add	r3, ip
 80036be:	4a50      	ldr	r2, [pc, #320]	; (8003800 <main+0x1204>)
 80036c0:	4947      	ldr	r1, [pc, #284]	; (80037e0 <main+0x11e4>)
 80036c2:	5099      	str	r1, [r3, r2]
 80036c4:	4b1e      	ldr	r3, [pc, #120]	; (8003740 <main+0x1144>)
 80036c6:	181b      	adds	r3, r3, r0
 80036c8:	2228      	movs	r2, #40	; 0x28
 80036ca:	4694      	mov	ip, r2
 80036cc:	44bc      	add	ip, r7
 80036ce:	4463      	add	r3, ip
 80036d0:	4a4c      	ldr	r2, [pc, #304]	; (8003804 <main+0x1208>)
 80036d2:	4945      	ldr	r1, [pc, #276]	; (80037e8 <main+0x11ec>)
 80036d4:	5099      	str	r1, [r3, r2]
 80036d6:	4b1a      	ldr	r3, [pc, #104]	; (8003740 <main+0x1144>)
 80036d8:	181b      	adds	r3, r3, r0
 80036da:	2228      	movs	r2, #40	; 0x28
 80036dc:	4694      	mov	ip, r2
 80036de:	44bc      	add	ip, r7
 80036e0:	4463      	add	r3, ip
 80036e2:	4a49      	ldr	r2, [pc, #292]	; (8003808 <main+0x120c>)
 80036e4:	4942      	ldr	r1, [pc, #264]	; (80037f0 <main+0x11f4>)
 80036e6:	5099      	str	r1, [r3, r2]
 80036e8:	4b15      	ldr	r3, [pc, #84]	; (8003740 <main+0x1144>)
 80036ea:	181b      	adds	r3, r3, r0
 80036ec:	193a      	adds	r2, r7, r4
 80036ee:	189a      	adds	r2, r3, r2
 80036f0:	2386      	movs	r3, #134	; 0x86
 80036f2:	011b      	lsls	r3, r3, #4
 80036f4:	4916      	ldr	r1, [pc, #88]	; (8003750 <main+0x1154>)
 80036f6:	50d1      	str	r1, [r2, r3]
 80036f8:	4b11      	ldr	r3, [pc, #68]	; (8003740 <main+0x1144>)
 80036fa:	181b      	adds	r3, r3, r0
 80036fc:	2228      	movs	r2, #40	; 0x28
 80036fe:	4694      	mov	ip, r2
 8003700:	44bc      	add	ip, r7
 8003702:	4463      	add	r3, ip
 8003704:	4a41      	ldr	r2, [pc, #260]	; (800380c <main+0x1210>)
 8003706:	493d      	ldr	r1, [pc, #244]	; (80037fc <main+0x1200>)
 8003708:	5099      	str	r1, [r3, r2]
 800370a:	4b0d      	ldr	r3, [pc, #52]	; (8003740 <main+0x1144>)
 800370c:	181b      	adds	r3, r3, r0
 800370e:	2228      	movs	r2, #40	; 0x28
 8003710:	4694      	mov	ip, r2
 8003712:	44bc      	add	ip, r7
 8003714:	4463      	add	r3, ip
 8003716:	4a3e      	ldr	r2, [pc, #248]	; (8003810 <main+0x1214>)
 8003718:	4931      	ldr	r1, [pc, #196]	; (80037e0 <main+0x11e4>)
 800371a:	5099      	str	r1, [r3, r2]
 800371c:	4b08      	ldr	r3, [pc, #32]	; (8003740 <main+0x1144>)
 800371e:	181b      	adds	r3, r3, r0
 8003720:	2228      	movs	r2, #40	; 0x28
 8003722:	4694      	mov	ip, r2
 8003724:	44bc      	add	ip, r7
 8003726:	4463      	add	r3, ip
 8003728:	4a3a      	ldr	r2, [pc, #232]	; (8003814 <main+0x1218>)
 800372a:	492f      	ldr	r1, [pc, #188]	; (80037e8 <main+0x11ec>)
 800372c:	5099      	str	r1, [r3, r2]
 800372e:	4b04      	ldr	r3, [pc, #16]	; (8003740 <main+0x1144>)
 8003730:	181b      	adds	r3, r3, r0
 8003732:	193a      	adds	r2, r7, r4
 8003734:	189a      	adds	r2, r3, r2
 8003736:	2389      	movs	r3, #137	; 0x89
 8003738:	011b      	lsls	r3, r3, #4
 800373a:	e06d      	b.n	8003818 <main+0x121c>
 800373c:	bc09a027 	.word	0xbc09a027
 8003740:	fffff430 	.word	0xfffff430
 8003744:	00000654 	.word	0x00000654
 8003748:	409c985f 	.word	0x409c985f
 800374c:	0000065c 	.word	0x0000065c
 8003750:	bd79db23 	.word	0xbd79db23
 8003754:	00000664 	.word	0x00000664
 8003758:	41f2d3f8 	.word	0x41f2d3f8
 800375c:	3b6bedfa 	.word	0x3b6bedfa
 8003760:	00000684 	.word	0x00000684
 8003764:	000006b4 	.word	0x000006b4
 8003768:	bb6bedfa 	.word	0xbb6bedfa
 800376c:	bbb0f27c 	.word	0xbbb0f27c
 8003770:	000006bc 	.word	0x000006bc
 8003774:	409cd845 	.word	0x409cd845
 8003778:	000006c4 	.word	0x000006c4
 800377c:	000006cc 	.word	0x000006cc
 8003780:	000006ec 	.word	0x000006ec
 8003784:	000006f4 	.word	0x000006f4
 8003788:	000006fc 	.word	0x000006fc
 800378c:	0000071c 	.word	0x0000071c
 8003790:	baebedfa 	.word	0xbaebedfa
 8003794:	bb449ba6 	.word	0xbb449ba6
 8003798:	00000724 	.word	0x00000724
 800379c:	409d21ff 	.word	0x409d21ff
 80037a0:	0000072c 	.word	0x0000072c
 80037a4:	00000734 	.word	0x00000734
 80037a8:	41f2afec 	.word	0x41f2afec
 80037ac:	00000754 	.word	0x00000754
 80037b0:	0000075c 	.word	0x0000075c
 80037b4:	00000784 	.word	0x00000784
 80037b8:	3ef8a090 	.word	0x3ef8a090
 80037bc:	bd0bac71 	.word	0xbd0bac71
 80037c0:	0000078c 	.word	0x0000078c
 80037c4:	40a05a1d 	.word	0x40a05a1d
 80037c8:	0000079c 	.word	0x0000079c
 80037cc:	4206d97f 	.word	0x4206d97f
 80037d0:	000007bc 	.word	0x000007bc
 80037d4:	000007ec 	.word	0x000007ec
 80037d8:	000007f4 	.word	0x000007f4
 80037dc:	00000804 	.word	0x00000804
 80037e0:	3efa29c7 	.word	0x3efa29c7
 80037e4:	00000824 	.word	0x00000824
 80037e8:	bd1a6b51 	.word	0xbd1a6b51
 80037ec:	00000828 	.word	0x00000828
 80037f0:	40a07c85 	.word	0x40a07c85
 80037f4:	0000082c 	.word	0x0000082c
 80037f8:	00000838 	.word	0x00000838
 80037fc:	4206c155 	.word	0x4206c155
 8003800:	00000854 	.word	0x00000854
 8003804:	00000858 	.word	0x00000858
 8003808:	0000085c 	.word	0x0000085c
 800380c:	0000086c 	.word	0x0000086c
 8003810:	00000888 	.word	0x00000888
 8003814:	0000088c 	.word	0x0000088c
 8003818:	49fe      	ldr	r1, [pc, #1016]	; (8003c14 <main+0x1618>)
 800381a:	50d1      	str	r1, [r2, r3]
 800381c:	4bfe      	ldr	r3, [pc, #1016]	; (8003c18 <main+0x161c>)
 800381e:	181b      	adds	r3, r3, r0
 8003820:	2228      	movs	r2, #40	; 0x28
 8003822:	4694      	mov	ip, r2
 8003824:	44bc      	add	ip, r7
 8003826:	4463      	add	r3, ip
 8003828:	4afc      	ldr	r2, [pc, #1008]	; (8003c1c <main+0x1620>)
 800382a:	49fd      	ldr	r1, [pc, #1012]	; (8003c20 <main+0x1624>)
 800382c:	5099      	str	r1, [r3, r2]
 800382e:	4bfa      	ldr	r3, [pc, #1000]	; (8003c18 <main+0x161c>)
 8003830:	181b      	adds	r3, r3, r0
 8003832:	193a      	adds	r2, r7, r4
 8003834:	189a      	adds	r2, r3, r2
 8003836:	238a      	movs	r3, #138	; 0x8a
 8003838:	011b      	lsls	r3, r3, #4
 800383a:	49fa      	ldr	r1, [pc, #1000]	; (8003c24 <main+0x1628>)
 800383c:	50d1      	str	r1, [r2, r3]
 800383e:	4bf6      	ldr	r3, [pc, #984]	; (8003c18 <main+0x161c>)
 8003840:	181b      	adds	r3, r3, r0
 8003842:	2228      	movs	r2, #40	; 0x28
 8003844:	4694      	mov	ip, r2
 8003846:	44bc      	add	ip, r7
 8003848:	4463      	add	r3, ip
 800384a:	4af7      	ldr	r2, [pc, #988]	; (8003c28 <main+0x162c>)
 800384c:	49f7      	ldr	r1, [pc, #988]	; (8003c2c <main+0x1630>)
 800384e:	5099      	str	r1, [r3, r2]
 8003850:	4bf1      	ldr	r3, [pc, #964]	; (8003c18 <main+0x161c>)
 8003852:	181b      	adds	r3, r3, r0
 8003854:	193a      	adds	r2, r7, r4
 8003856:	189a      	adds	r2, r3, r2
 8003858:	238c      	movs	r3, #140	; 0x8c
 800385a:	011b      	lsls	r3, r3, #4
 800385c:	49f4      	ldr	r1, [pc, #976]	; (8003c30 <main+0x1634>)
 800385e:	50d1      	str	r1, [r2, r3]
 8003860:	4bed      	ldr	r3, [pc, #948]	; (8003c18 <main+0x161c>)
 8003862:	181b      	adds	r3, r3, r0
 8003864:	2228      	movs	r2, #40	; 0x28
 8003866:	4694      	mov	ip, r2
 8003868:	44bc      	add	ip, r7
 800386a:	4463      	add	r3, ip
 800386c:	4af1      	ldr	r2, [pc, #964]	; (8003c34 <main+0x1638>)
 800386e:	49e9      	ldr	r1, [pc, #932]	; (8003c14 <main+0x1618>)
 8003870:	5099      	str	r1, [r3, r2]
 8003872:	4be9      	ldr	r3, [pc, #932]	; (8003c18 <main+0x161c>)
 8003874:	181b      	adds	r3, r3, r0
 8003876:	2228      	movs	r2, #40	; 0x28
 8003878:	4694      	mov	ip, r2
 800387a:	44bc      	add	ip, r7
 800387c:	4463      	add	r3, ip
 800387e:	4aee      	ldr	r2, [pc, #952]	; (8003c38 <main+0x163c>)
 8003880:	49e7      	ldr	r1, [pc, #924]	; (8003c20 <main+0x1624>)
 8003882:	5099      	str	r1, [r3, r2]
 8003884:	4be4      	ldr	r3, [pc, #912]	; (8003c18 <main+0x161c>)
 8003886:	181b      	adds	r3, r3, r0
 8003888:	2228      	movs	r2, #40	; 0x28
 800388a:	4694      	mov	ip, r2
 800388c:	44bc      	add	ip, r7
 800388e:	4463      	add	r3, ip
 8003890:	4aea      	ldr	r2, [pc, #936]	; (8003c3c <main+0x1640>)
 8003892:	49e4      	ldr	r1, [pc, #912]	; (8003c24 <main+0x1628>)
 8003894:	5099      	str	r1, [r3, r2]
 8003896:	4be0      	ldr	r3, [pc, #896]	; (8003c18 <main+0x161c>)
 8003898:	181b      	adds	r3, r3, r0
 800389a:	193a      	adds	r2, r7, r4
 800389c:	189a      	adds	r2, r3, r2
 800389e:	238f      	movs	r3, #143	; 0x8f
 80038a0:	011b      	lsls	r3, r3, #4
 80038a2:	49e2      	ldr	r1, [pc, #904]	; (8003c2c <main+0x1630>)
 80038a4:	50d1      	str	r1, [r2, r3]
 80038a6:	4bdc      	ldr	r3, [pc, #880]	; (8003c18 <main+0x161c>)
 80038a8:	181b      	adds	r3, r3, r0
 80038aa:	2228      	movs	r2, #40	; 0x28
 80038ac:	4694      	mov	ip, r2
 80038ae:	44bc      	add	ip, r7
 80038b0:	4463      	add	r3, ip
 80038b2:	4ae3      	ldr	r2, [pc, #908]	; (8003c40 <main+0x1644>)
 80038b4:	49e3      	ldr	r1, [pc, #908]	; (8003c44 <main+0x1648>)
 80038b6:	5099      	str	r1, [r3, r2]
 80038b8:	4bd7      	ldr	r3, [pc, #860]	; (8003c18 <main+0x161c>)
 80038ba:	181b      	adds	r3, r3, r0
 80038bc:	2228      	movs	r2, #40	; 0x28
 80038be:	4694      	mov	ip, r2
 80038c0:	44bc      	add	ip, r7
 80038c2:	4463      	add	r3, ip
 80038c4:	4ae0      	ldr	r2, [pc, #896]	; (8003c48 <main+0x164c>)
 80038c6:	49e1      	ldr	r1, [pc, #900]	; (8003c4c <main+0x1650>)
 80038c8:	5099      	str	r1, [r3, r2]
 80038ca:	4bd3      	ldr	r3, [pc, #844]	; (8003c18 <main+0x161c>)
 80038cc:	181b      	adds	r3, r3, r0
 80038ce:	2228      	movs	r2, #40	; 0x28
 80038d0:	4694      	mov	ip, r2
 80038d2:	44bc      	add	ip, r7
 80038d4:	4463      	add	r3, ip
 80038d6:	4ade      	ldr	r2, [pc, #888]	; (8003c50 <main+0x1654>)
 80038d8:	49d1      	ldr	r1, [pc, #836]	; (8003c20 <main+0x1624>)
 80038da:	5099      	str	r1, [r3, r2]
 80038dc:	4bce      	ldr	r3, [pc, #824]	; (8003c18 <main+0x161c>)
 80038de:	181b      	adds	r3, r3, r0
 80038e0:	2228      	movs	r2, #40	; 0x28
 80038e2:	4694      	mov	ip, r2
 80038e4:	44bc      	add	ip, r7
 80038e6:	4463      	add	r3, ip
 80038e8:	4ada      	ldr	r2, [pc, #872]	; (8003c54 <main+0x1658>)
 80038ea:	49db      	ldr	r1, [pc, #876]	; (8003c58 <main+0x165c>)
 80038ec:	5099      	str	r1, [r3, r2]
 80038ee:	4bca      	ldr	r3, [pc, #808]	; (8003c18 <main+0x161c>)
 80038f0:	181b      	adds	r3, r3, r0
 80038f2:	2228      	movs	r2, #40	; 0x28
 80038f4:	4694      	mov	ip, r2
 80038f6:	44bc      	add	ip, r7
 80038f8:	4463      	add	r3, ip
 80038fa:	4ad8      	ldr	r2, [pc, #864]	; (8003c5c <main+0x1660>)
 80038fc:	49cb      	ldr	r1, [pc, #812]	; (8003c2c <main+0x1630>)
 80038fe:	5099      	str	r1, [r3, r2]
 8003900:	4bc5      	ldr	r3, [pc, #788]	; (8003c18 <main+0x161c>)
 8003902:	181b      	adds	r3, r3, r0
 8003904:	2228      	movs	r2, #40	; 0x28
 8003906:	4694      	mov	ip, r2
 8003908:	44bc      	add	ip, r7
 800390a:	4463      	add	r3, ip
 800390c:	4ad4      	ldr	r2, [pc, #848]	; (8003c60 <main+0x1664>)
 800390e:	49cd      	ldr	r1, [pc, #820]	; (8003c44 <main+0x1648>)
 8003910:	5099      	str	r1, [r3, r2]
 8003912:	4bc1      	ldr	r3, [pc, #772]	; (8003c18 <main+0x161c>)
 8003914:	181b      	adds	r3, r3, r0
 8003916:	2228      	movs	r2, #40	; 0x28
 8003918:	4694      	mov	ip, r2
 800391a:	44bc      	add	ip, r7
 800391c:	4463      	add	r3, ip
 800391e:	4ad1      	ldr	r2, [pc, #836]	; (8003c64 <main+0x1668>)
 8003920:	49ca      	ldr	r1, [pc, #808]	; (8003c4c <main+0x1650>)
 8003922:	5099      	str	r1, [r3, r2]
 8003924:	4bbc      	ldr	r3, [pc, #752]	; (8003c18 <main+0x161c>)
 8003926:	181b      	adds	r3, r3, r0
 8003928:	2228      	movs	r2, #40	; 0x28
 800392a:	4694      	mov	ip, r2
 800392c:	44bc      	add	ip, r7
 800392e:	4463      	add	r3, ip
 8003930:	4acd      	ldr	r2, [pc, #820]	; (8003c68 <main+0x166c>)
 8003932:	49bb      	ldr	r1, [pc, #748]	; (8003c20 <main+0x1624>)
 8003934:	5099      	str	r1, [r3, r2]
 8003936:	4bb8      	ldr	r3, [pc, #736]	; (8003c18 <main+0x161c>)
 8003938:	181b      	adds	r3, r3, r0
 800393a:	2228      	movs	r2, #40	; 0x28
 800393c:	4694      	mov	ip, r2
 800393e:	44bc      	add	ip, r7
 8003940:	4463      	add	r3, ip
 8003942:	4aca      	ldr	r2, [pc, #808]	; (8003c6c <main+0x1670>)
 8003944:	49c4      	ldr	r1, [pc, #784]	; (8003c58 <main+0x165c>)
 8003946:	5099      	str	r1, [r3, r2]
 8003948:	4bb3      	ldr	r3, [pc, #716]	; (8003c18 <main+0x161c>)
 800394a:	181b      	adds	r3, r3, r0
 800394c:	2228      	movs	r2, #40	; 0x28
 800394e:	4694      	mov	ip, r2
 8003950:	44bc      	add	ip, r7
 8003952:	4463      	add	r3, ip
 8003954:	4ac6      	ldr	r2, [pc, #792]	; (8003c70 <main+0x1674>)
 8003956:	49b5      	ldr	r1, [pc, #724]	; (8003c2c <main+0x1630>)
 8003958:	5099      	str	r1, [r3, r2]
 800395a:	4baf      	ldr	r3, [pc, #700]	; (8003c18 <main+0x161c>)
 800395c:	181b      	adds	r3, r3, r0
 800395e:	2228      	movs	r2, #40	; 0x28
 8003960:	4694      	mov	ip, r2
 8003962:	44bc      	add	ip, r7
 8003964:	4463      	add	r3, ip
 8003966:	4ac3      	ldr	r2, [pc, #780]	; (8003c74 <main+0x1678>)
 8003968:	49b6      	ldr	r1, [pc, #728]	; (8003c44 <main+0x1648>)
 800396a:	5099      	str	r1, [r3, r2]
 800396c:	4baa      	ldr	r3, [pc, #680]	; (8003c18 <main+0x161c>)
 800396e:	181b      	adds	r3, r3, r0
 8003970:	193a      	adds	r2, r7, r4
 8003972:	189a      	adds	r2, r3, r2
 8003974:	2396      	movs	r3, #150	; 0x96
 8003976:	011b      	lsls	r3, r3, #4
 8003978:	49b4      	ldr	r1, [pc, #720]	; (8003c4c <main+0x1650>)
 800397a:	50d1      	str	r1, [r2, r3]
 800397c:	4ba6      	ldr	r3, [pc, #664]	; (8003c18 <main+0x161c>)
 800397e:	181b      	adds	r3, r3, r0
 8003980:	2228      	movs	r2, #40	; 0x28
 8003982:	4694      	mov	ip, r2
 8003984:	44bc      	add	ip, r7
 8003986:	4463      	add	r3, ip
 8003988:	4abb      	ldr	r2, [pc, #748]	; (8003c78 <main+0x167c>)
 800398a:	49a5      	ldr	r1, [pc, #660]	; (8003c20 <main+0x1624>)
 800398c:	5099      	str	r1, [r3, r2]
 800398e:	4ba2      	ldr	r3, [pc, #648]	; (8003c18 <main+0x161c>)
 8003990:	181b      	adds	r3, r3, r0
 8003992:	193a      	adds	r2, r7, r4
 8003994:	189a      	adds	r2, r3, r2
 8003996:	2397      	movs	r3, #151	; 0x97
 8003998:	011b      	lsls	r3, r3, #4
 800399a:	49af      	ldr	r1, [pc, #700]	; (8003c58 <main+0x165c>)
 800399c:	50d1      	str	r1, [r2, r3]
 800399e:	4b9e      	ldr	r3, [pc, #632]	; (8003c18 <main+0x161c>)
 80039a0:	181b      	adds	r3, r3, r0
 80039a2:	2228      	movs	r2, #40	; 0x28
 80039a4:	4694      	mov	ip, r2
 80039a6:	44bc      	add	ip, r7
 80039a8:	4463      	add	r3, ip
 80039aa:	4ab4      	ldr	r2, [pc, #720]	; (8003c7c <main+0x1680>)
 80039ac:	499f      	ldr	r1, [pc, #636]	; (8003c2c <main+0x1630>)
 80039ae:	5099      	str	r1, [r3, r2]
 80039b0:	4b99      	ldr	r3, [pc, #612]	; (8003c18 <main+0x161c>)
 80039b2:	181b      	adds	r3, r3, r0
 80039b4:	193a      	adds	r2, r7, r4
 80039b6:	189a      	adds	r2, r3, r2
 80039b8:	2399      	movs	r3, #153	; 0x99
 80039ba:	011b      	lsls	r3, r3, #4
 80039bc:	49a1      	ldr	r1, [pc, #644]	; (8003c44 <main+0x1648>)
 80039be:	50d1      	str	r1, [r2, r3]
 80039c0:	4b95      	ldr	r3, [pc, #596]	; (8003c18 <main+0x161c>)
 80039c2:	181b      	adds	r3, r3, r0
 80039c4:	2228      	movs	r2, #40	; 0x28
 80039c6:	4694      	mov	ip, r2
 80039c8:	44bc      	add	ip, r7
 80039ca:	4463      	add	r3, ip
 80039cc:	4aac      	ldr	r2, [pc, #688]	; (8003c80 <main+0x1684>)
 80039ce:	499f      	ldr	r1, [pc, #636]	; (8003c4c <main+0x1650>)
 80039d0:	5099      	str	r1, [r3, r2]
 80039d2:	4b91      	ldr	r3, [pc, #580]	; (8003c18 <main+0x161c>)
 80039d4:	181b      	adds	r3, r3, r0
 80039d6:	193a      	adds	r2, r7, r4
 80039d8:	189a      	adds	r2, r3, r2
 80039da:	239a      	movs	r3, #154	; 0x9a
 80039dc:	011b      	lsls	r3, r3, #4
 80039de:	4990      	ldr	r1, [pc, #576]	; (8003c20 <main+0x1624>)
 80039e0:	50d1      	str	r1, [r2, r3]
 80039e2:	4b8d      	ldr	r3, [pc, #564]	; (8003c18 <main+0x161c>)
 80039e4:	181b      	adds	r3, r3, r0
 80039e6:	2228      	movs	r2, #40	; 0x28
 80039e8:	4694      	mov	ip, r2
 80039ea:	44bc      	add	ip, r7
 80039ec:	4463      	add	r3, ip
 80039ee:	4aa5      	ldr	r2, [pc, #660]	; (8003c84 <main+0x1688>)
 80039f0:	4999      	ldr	r1, [pc, #612]	; (8003c58 <main+0x165c>)
 80039f2:	5099      	str	r1, [r3, r2]
 80039f4:	4b88      	ldr	r3, [pc, #544]	; (8003c18 <main+0x161c>)
 80039f6:	181b      	adds	r3, r3, r0
 80039f8:	193a      	adds	r2, r7, r4
 80039fa:	189a      	adds	r2, r3, r2
 80039fc:	239c      	movs	r3, #156	; 0x9c
 80039fe:	011b      	lsls	r3, r3, #4
 8003a00:	49a1      	ldr	r1, [pc, #644]	; (8003c88 <main+0x168c>)
 8003a02:	50d1      	str	r1, [r2, r3]
 8003a04:	4b84      	ldr	r3, [pc, #528]	; (8003c18 <main+0x161c>)
 8003a06:	181b      	adds	r3, r3, r0
 8003a08:	2228      	movs	r2, #40	; 0x28
 8003a0a:	4694      	mov	ip, r2
 8003a0c:	44bc      	add	ip, r7
 8003a0e:	4463      	add	r3, ip
 8003a10:	4a9e      	ldr	r2, [pc, #632]	; (8003c8c <main+0x1690>)
 8003a12:	499f      	ldr	r1, [pc, #636]	; (8003c90 <main+0x1694>)
 8003a14:	5099      	str	r1, [r3, r2]
 8003a16:	4b80      	ldr	r3, [pc, #512]	; (8003c18 <main+0x161c>)
 8003a18:	181b      	adds	r3, r3, r0
 8003a1a:	2228      	movs	r2, #40	; 0x28
 8003a1c:	4694      	mov	ip, r2
 8003a1e:	44bc      	add	ip, r7
 8003a20:	4463      	add	r3, ip
 8003a22:	4a9c      	ldr	r2, [pc, #624]	; (8003c94 <main+0x1698>)
 8003a24:	499c      	ldr	r1, [pc, #624]	; (8003c98 <main+0x169c>)
 8003a26:	5099      	str	r1, [r3, r2]
 8003a28:	4b7b      	ldr	r3, [pc, #492]	; (8003c18 <main+0x161c>)
 8003a2a:	181b      	adds	r3, r3, r0
 8003a2c:	2228      	movs	r2, #40	; 0x28
 8003a2e:	4694      	mov	ip, r2
 8003a30:	44bc      	add	ip, r7
 8003a32:	4463      	add	r3, ip
 8003a34:	4a99      	ldr	r2, [pc, #612]	; (8003c9c <main+0x16a0>)
 8003a36:	499a      	ldr	r1, [pc, #616]	; (8003ca0 <main+0x16a4>)
 8003a38:	5099      	str	r1, [r3, r2]
 8003a3a:	4b77      	ldr	r3, [pc, #476]	; (8003c18 <main+0x161c>)
 8003a3c:	181b      	adds	r3, r3, r0
 8003a3e:	2228      	movs	r2, #40	; 0x28
 8003a40:	4694      	mov	ip, r2
 8003a42:	44bc      	add	ip, r7
 8003a44:	4463      	add	r3, ip
 8003a46:	4a97      	ldr	r2, [pc, #604]	; (8003ca4 <main+0x16a8>)
 8003a48:	498f      	ldr	r1, [pc, #572]	; (8003c88 <main+0x168c>)
 8003a4a:	5099      	str	r1, [r3, r2]
 8003a4c:	4b72      	ldr	r3, [pc, #456]	; (8003c18 <main+0x161c>)
 8003a4e:	181b      	adds	r3, r3, r0
 8003a50:	2228      	movs	r2, #40	; 0x28
 8003a52:	4694      	mov	ip, r2
 8003a54:	44bc      	add	ip, r7
 8003a56:	4463      	add	r3, ip
 8003a58:	4a93      	ldr	r2, [pc, #588]	; (8003ca8 <main+0x16ac>)
 8003a5a:	498d      	ldr	r1, [pc, #564]	; (8003c90 <main+0x1694>)
 8003a5c:	5099      	str	r1, [r3, r2]
 8003a5e:	4b6e      	ldr	r3, [pc, #440]	; (8003c18 <main+0x161c>)
 8003a60:	181b      	adds	r3, r3, r0
 8003a62:	2228      	movs	r2, #40	; 0x28
 8003a64:	4694      	mov	ip, r2
 8003a66:	44bc      	add	ip, r7
 8003a68:	4463      	add	r3, ip
 8003a6a:	4a90      	ldr	r2, [pc, #576]	; (8003cac <main+0x16b0>)
 8003a6c:	498a      	ldr	r1, [pc, #552]	; (8003c98 <main+0x169c>)
 8003a6e:	5099      	str	r1, [r3, r2]
 8003a70:	4b69      	ldr	r3, [pc, #420]	; (8003c18 <main+0x161c>)
 8003a72:	181b      	adds	r3, r3, r0
 8003a74:	2228      	movs	r2, #40	; 0x28
 8003a76:	4694      	mov	ip, r2
 8003a78:	44bc      	add	ip, r7
 8003a7a:	4463      	add	r3, ip
 8003a7c:	4a8c      	ldr	r2, [pc, #560]	; (8003cb0 <main+0x16b4>)
 8003a7e:	4988      	ldr	r1, [pc, #544]	; (8003ca0 <main+0x16a4>)
 8003a80:	5099      	str	r1, [r3, r2]
 8003a82:	4b65      	ldr	r3, [pc, #404]	; (8003c18 <main+0x161c>)
 8003a84:	181b      	adds	r3, r3, r0
 8003a86:	2228      	movs	r2, #40	; 0x28
 8003a88:	4694      	mov	ip, r2
 8003a8a:	44bc      	add	ip, r7
 8003a8c:	4463      	add	r3, ip
 8003a8e:	4a89      	ldr	r2, [pc, #548]	; (8003cb4 <main+0x16b8>)
 8003a90:	4989      	ldr	r1, [pc, #548]	; (8003cb8 <main+0x16bc>)
 8003a92:	5099      	str	r1, [r3, r2]
 8003a94:	4b60      	ldr	r3, [pc, #384]	; (8003c18 <main+0x161c>)
 8003a96:	181b      	adds	r3, r3, r0
 8003a98:	2228      	movs	r2, #40	; 0x28
 8003a9a:	4694      	mov	ip, r2
 8003a9c:	44bc      	add	ip, r7
 8003a9e:	4463      	add	r3, ip
 8003aa0:	4a86      	ldr	r2, [pc, #536]	; (8003cbc <main+0x16c0>)
 8003aa2:	4987      	ldr	r1, [pc, #540]	; (8003cc0 <main+0x16c4>)
 8003aa4:	5099      	str	r1, [r3, r2]
 8003aa6:	4b5c      	ldr	r3, [pc, #368]	; (8003c18 <main+0x161c>)
 8003aa8:	181b      	adds	r3, r3, r0
 8003aaa:	193a      	adds	r2, r7, r4
 8003aac:	189a      	adds	r2, r3, r2
 8003aae:	23a3      	movs	r3, #163	; 0xa3
 8003ab0:	011b      	lsls	r3, r3, #4
 8003ab2:	4984      	ldr	r1, [pc, #528]	; (8003cc4 <main+0x16c8>)
 8003ab4:	50d1      	str	r1, [r2, r3]
 8003ab6:	4b58      	ldr	r3, [pc, #352]	; (8003c18 <main+0x161c>)
 8003ab8:	181b      	adds	r3, r3, r0
 8003aba:	2228      	movs	r2, #40	; 0x28
 8003abc:	4694      	mov	ip, r2
 8003abe:	44bc      	add	ip, r7
 8003ac0:	4463      	add	r3, ip
 8003ac2:	4a81      	ldr	r2, [pc, #516]	; (8003cc8 <main+0x16cc>)
 8003ac4:	4956      	ldr	r1, [pc, #344]	; (8003c20 <main+0x1624>)
 8003ac6:	5099      	str	r1, [r3, r2]
 8003ac8:	4b53      	ldr	r3, [pc, #332]	; (8003c18 <main+0x161c>)
 8003aca:	181b      	adds	r3, r3, r0
 8003acc:	193a      	adds	r2, r7, r4
 8003ace:	189a      	adds	r2, r3, r2
 8003ad0:	23a4      	movs	r3, #164	; 0xa4
 8003ad2:	011b      	lsls	r3, r3, #4
 8003ad4:	497d      	ldr	r1, [pc, #500]	; (8003ccc <main+0x16d0>)
 8003ad6:	50d1      	str	r1, [r2, r3]
 8003ad8:	4b4f      	ldr	r3, [pc, #316]	; (8003c18 <main+0x161c>)
 8003ada:	181b      	adds	r3, r3, r0
 8003adc:	2228      	movs	r2, #40	; 0x28
 8003ade:	4694      	mov	ip, r2
 8003ae0:	44bc      	add	ip, r7
 8003ae2:	4463      	add	r3, ip
 8003ae4:	4a7a      	ldr	r2, [pc, #488]	; (8003cd0 <main+0x16d4>)
 8003ae6:	4974      	ldr	r1, [pc, #464]	; (8003cb8 <main+0x16bc>)
 8003ae8:	5099      	str	r1, [r3, r2]
 8003aea:	4b4b      	ldr	r3, [pc, #300]	; (8003c18 <main+0x161c>)
 8003aec:	181b      	adds	r3, r3, r0
 8003aee:	193a      	adds	r2, r7, r4
 8003af0:	189a      	adds	r2, r3, r2
 8003af2:	23a6      	movs	r3, #166	; 0xa6
 8003af4:	011b      	lsls	r3, r3, #4
 8003af6:	4972      	ldr	r1, [pc, #456]	; (8003cc0 <main+0x16c4>)
 8003af8:	50d1      	str	r1, [r2, r3]
 8003afa:	4b47      	ldr	r3, [pc, #284]	; (8003c18 <main+0x161c>)
 8003afc:	181b      	adds	r3, r3, r0
 8003afe:	2228      	movs	r2, #40	; 0x28
 8003b00:	4694      	mov	ip, r2
 8003b02:	44bc      	add	ip, r7
 8003b04:	4463      	add	r3, ip
 8003b06:	4a73      	ldr	r2, [pc, #460]	; (8003cd4 <main+0x16d8>)
 8003b08:	496e      	ldr	r1, [pc, #440]	; (8003cc4 <main+0x16c8>)
 8003b0a:	5099      	str	r1, [r3, r2]
 8003b0c:	4b42      	ldr	r3, [pc, #264]	; (8003c18 <main+0x161c>)
 8003b0e:	181b      	adds	r3, r3, r0
 8003b10:	2228      	movs	r2, #40	; 0x28
 8003b12:	4694      	mov	ip, r2
 8003b14:	44bc      	add	ip, r7
 8003b16:	4463      	add	r3, ip
 8003b18:	4a6f      	ldr	r2, [pc, #444]	; (8003cd8 <main+0x16dc>)
 8003b1a:	4941      	ldr	r1, [pc, #260]	; (8003c20 <main+0x1624>)
 8003b1c:	5099      	str	r1, [r3, r2]
 8003b1e:	4b3e      	ldr	r3, [pc, #248]	; (8003c18 <main+0x161c>)
 8003b20:	181b      	adds	r3, r3, r0
 8003b22:	2228      	movs	r2, #40	; 0x28
 8003b24:	4694      	mov	ip, r2
 8003b26:	44bc      	add	ip, r7
 8003b28:	4463      	add	r3, ip
 8003b2a:	4a6c      	ldr	r2, [pc, #432]	; (8003cdc <main+0x16e0>)
 8003b2c:	4967      	ldr	r1, [pc, #412]	; (8003ccc <main+0x16d0>)
 8003b2e:	5099      	str	r1, [r3, r2]
 8003b30:	4b39      	ldr	r3, [pc, #228]	; (8003c18 <main+0x161c>)
 8003b32:	181b      	adds	r3, r3, r0
 8003b34:	193a      	adds	r2, r7, r4
 8003b36:	189a      	adds	r2, r3, r2
 8003b38:	23a9      	movs	r3, #169	; 0xa9
 8003b3a:	011b      	lsls	r3, r3, #4
 8003b3c:	495e      	ldr	r1, [pc, #376]	; (8003cb8 <main+0x16bc>)
 8003b3e:	50d1      	str	r1, [r2, r3]
 8003b40:	4b35      	ldr	r3, [pc, #212]	; (8003c18 <main+0x161c>)
 8003b42:	181b      	adds	r3, r3, r0
 8003b44:	2228      	movs	r2, #40	; 0x28
 8003b46:	4694      	mov	ip, r2
 8003b48:	44bc      	add	ip, r7
 8003b4a:	4463      	add	r3, ip
 8003b4c:	4a64      	ldr	r2, [pc, #400]	; (8003ce0 <main+0x16e4>)
 8003b4e:	495c      	ldr	r1, [pc, #368]	; (8003cc0 <main+0x16c4>)
 8003b50:	5099      	str	r1, [r3, r2]
 8003b52:	4b31      	ldr	r3, [pc, #196]	; (8003c18 <main+0x161c>)
 8003b54:	181b      	adds	r3, r3, r0
 8003b56:	2228      	movs	r2, #40	; 0x28
 8003b58:	4694      	mov	ip, r2
 8003b5a:	44bc      	add	ip, r7
 8003b5c:	4463      	add	r3, ip
 8003b5e:	4a61      	ldr	r2, [pc, #388]	; (8003ce4 <main+0x16e8>)
 8003b60:	4958      	ldr	r1, [pc, #352]	; (8003cc4 <main+0x16c8>)
 8003b62:	5099      	str	r1, [r3, r2]
 8003b64:	4b2c      	ldr	r3, [pc, #176]	; (8003c18 <main+0x161c>)
 8003b66:	181b      	adds	r3, r3, r0
 8003b68:	193a      	adds	r2, r7, r4
 8003b6a:	189a      	adds	r2, r3, r2
 8003b6c:	23aa      	movs	r3, #170	; 0xaa
 8003b6e:	011b      	lsls	r3, r3, #4
 8003b70:	492b      	ldr	r1, [pc, #172]	; (8003c20 <main+0x1624>)
 8003b72:	50d1      	str	r1, [r2, r3]
 8003b74:	4b28      	ldr	r3, [pc, #160]	; (8003c18 <main+0x161c>)
 8003b76:	181b      	adds	r3, r3, r0
 8003b78:	2228      	movs	r2, #40	; 0x28
 8003b7a:	4694      	mov	ip, r2
 8003b7c:	44bc      	add	ip, r7
 8003b7e:	4463      	add	r3, ip
 8003b80:	4a59      	ldr	r2, [pc, #356]	; (8003ce8 <main+0x16ec>)
 8003b82:	4952      	ldr	r1, [pc, #328]	; (8003ccc <main+0x16d0>)
 8003b84:	5099      	str	r1, [r3, r2]
 8003b86:	4b24      	ldr	r3, [pc, #144]	; (8003c18 <main+0x161c>)
 8003b88:	181b      	adds	r3, r3, r0
 8003b8a:	2228      	movs	r2, #40	; 0x28
 8003b8c:	4694      	mov	ip, r2
 8003b8e:	44bc      	add	ip, r7
 8003b90:	4463      	add	r3, ip
 8003b92:	4a56      	ldr	r2, [pc, #344]	; (8003cec <main+0x16f0>)
 8003b94:	4925      	ldr	r1, [pc, #148]	; (8003c2c <main+0x1630>)
 8003b96:	5099      	str	r1, [r3, r2]
 8003b98:	4b1f      	ldr	r3, [pc, #124]	; (8003c18 <main+0x161c>)
 8003b9a:	181b      	adds	r3, r3, r0
 8003b9c:	2228      	movs	r2, #40	; 0x28
 8003b9e:	4694      	mov	ip, r2
 8003ba0:	44bc      	add	ip, r7
 8003ba2:	4463      	add	r3, ip
 8003ba4:	4a52      	ldr	r2, [pc, #328]	; (8003cf0 <main+0x16f4>)
 8003ba6:	4927      	ldr	r1, [pc, #156]	; (8003c44 <main+0x1648>)
 8003ba8:	5099      	str	r1, [r3, r2]
 8003baa:	4b1b      	ldr	r3, [pc, #108]	; (8003c18 <main+0x161c>)
 8003bac:	181b      	adds	r3, r3, r0
 8003bae:	2228      	movs	r2, #40	; 0x28
 8003bb0:	4694      	mov	ip, r2
 8003bb2:	44bc      	add	ip, r7
 8003bb4:	4463      	add	r3, ip
 8003bb6:	4a4f      	ldr	r2, [pc, #316]	; (8003cf4 <main+0x16f8>)
 8003bb8:	494f      	ldr	r1, [pc, #316]	; (8003cf8 <main+0x16fc>)
 8003bba:	5099      	str	r1, [r3, r2]
 8003bbc:	4b16      	ldr	r3, [pc, #88]	; (8003c18 <main+0x161c>)
 8003bbe:	181b      	adds	r3, r3, r0
 8003bc0:	2228      	movs	r2, #40	; 0x28
 8003bc2:	4694      	mov	ip, r2
 8003bc4:	44bc      	add	ip, r7
 8003bc6:	4463      	add	r3, ip
 8003bc8:	4a4c      	ldr	r2, [pc, #304]	; (8003cfc <main+0x1700>)
 8003bca:	494d      	ldr	r1, [pc, #308]	; (8003d00 <main+0x1704>)
 8003bcc:	5099      	str	r1, [r3, r2]
 8003bce:	4b12      	ldr	r3, [pc, #72]	; (8003c18 <main+0x161c>)
 8003bd0:	181b      	adds	r3, r3, r0
 8003bd2:	2228      	movs	r2, #40	; 0x28
 8003bd4:	4694      	mov	ip, r2
 8003bd6:	44bc      	add	ip, r7
 8003bd8:	4463      	add	r3, ip
 8003bda:	4a4a      	ldr	r2, [pc, #296]	; (8003d04 <main+0x1708>)
 8003bdc:	4913      	ldr	r1, [pc, #76]	; (8003c2c <main+0x1630>)
 8003bde:	5099      	str	r1, [r3, r2]
 8003be0:	4b0d      	ldr	r3, [pc, #52]	; (8003c18 <main+0x161c>)
 8003be2:	181b      	adds	r3, r3, r0
 8003be4:	2228      	movs	r2, #40	; 0x28
 8003be6:	4694      	mov	ip, r2
 8003be8:	44bc      	add	ip, r7
 8003bea:	4463      	add	r3, ip
 8003bec:	4a46      	ldr	r2, [pc, #280]	; (8003d08 <main+0x170c>)
 8003bee:	4915      	ldr	r1, [pc, #84]	; (8003c44 <main+0x1648>)
 8003bf0:	5099      	str	r1, [r3, r2]
 8003bf2:	4b09      	ldr	r3, [pc, #36]	; (8003c18 <main+0x161c>)
 8003bf4:	181b      	adds	r3, r3, r0
 8003bf6:	0025      	movs	r5, r4
 8003bf8:	197a      	adds	r2, r7, r5
 8003bfa:	189a      	adds	r2, r3, r2
 8003bfc:	23b0      	movs	r3, #176	; 0xb0
 8003bfe:	011b      	lsls	r3, r3, #4
 8003c00:	493d      	ldr	r1, [pc, #244]	; (8003cf8 <main+0x16fc>)
 8003c02:	50d1      	str	r1, [r2, r3]
 8003c04:	4b04      	ldr	r3, [pc, #16]	; (8003c18 <main+0x161c>)
 8003c06:	181b      	adds	r3, r3, r0
 8003c08:	197a      	adds	r2, r7, r5
 8003c0a:	189a      	adds	r2, r3, r2
 8003c0c:	23b1      	movs	r3, #177	; 0xb1
 8003c0e:	011b      	lsls	r3, r3, #4
 8003c10:	e07c      	b.n	8003d0c <main+0x1710>
 8003c12:	46c0      	nop			; (mov r8, r8)
 8003c14:	40a07c85 	.word	0x40a07c85
 8003c18:	fffff430 	.word	0xfffff430
 8003c1c:	00000894 	.word	0x00000894
 8003c20:	bd79db23 	.word	0xbd79db23
 8003c24:	4206c155 	.word	0x4206c155
 8003c28:	000008bc 	.word	0x000008bc
 8003c2c:	3efa29c7 	.word	0x3efa29c7
 8003c30:	bd1a6b51 	.word	0xbd1a6b51
 8003c34:	000008c4 	.word	0x000008c4
 8003c38:	000008c8 	.word	0x000008c8
 8003c3c:	000008d4 	.word	0x000008d4
 8003c40:	000008f4 	.word	0x000008f4
 8003c44:	bd130be1 	.word	0xbd130be1
 8003c48:	000008f8 	.word	0x000008f8
 8003c4c:	40a0816f 	.word	0x40a0816f
 8003c50:	00000904 	.word	0x00000904
 8003c54:	00000908 	.word	0x00000908
 8003c58:	4206bb4a 	.word	0x4206bb4a
 8003c5c:	00000924 	.word	0x00000924
 8003c60:	00000928 	.word	0x00000928
 8003c64:	0000092c 	.word	0x0000092c
 8003c68:	00000938 	.word	0x00000938
 8003c6c:	0000093c 	.word	0x0000093c
 8003c70:	00000958 	.word	0x00000958
 8003c74:	0000095c 	.word	0x0000095c
 8003c78:	0000096c 	.word	0x0000096c
 8003c7c:	0000098c 	.word	0x0000098c
 8003c80:	00000994 	.word	0x00000994
 8003c84:	000009a4 	.word	0x000009a4
 8003c88:	3efa786c 	.word	0x3efa786c
 8003c8c:	000009c4 	.word	0x000009c4
 8003c90:	bd1ce076 	.word	0xbd1ce076
 8003c94:	000009c8 	.word	0x000009c8
 8003c98:	40a08659 	.word	0x40a08659
 8003c9c:	000009d8 	.word	0x000009d8
 8003ca0:	4206df70 	.word	0x4206df70
 8003ca4:	000009f4 	.word	0x000009f4
 8003ca8:	000009f8 	.word	0x000009f8
 8003cac:	000009fc 	.word	0x000009fc
 8003cb0:	00000a0c 	.word	0x00000a0c
 8003cb4:	00000a28 	.word	0x00000a28
 8003cb8:	3efac711 	.word	0x3efac711
 8003cbc:	00000a2c 	.word	0x00000a2c
 8003cc0:	bd17f62b 	.word	0xbd17f62b
 8003cc4:	40a0b296 	.word	0x40a0b296
 8003cc8:	00000a38 	.word	0x00000a38
 8003ccc:	4206d97f 	.word	0x4206d97f
 8003cd0:	00000a5c 	.word	0x00000a5c
 8003cd4:	00000a64 	.word	0x00000a64
 8003cd8:	00000a6c 	.word	0x00000a6c
 8003cdc:	00000a74 	.word	0x00000a74
 8003ce0:	00000a94 	.word	0x00000a94
 8003ce4:	00000a98 	.word	0x00000a98
 8003ce8:	00000aa8 	.word	0x00000aa8
 8003cec:	00000ac4 	.word	0x00000ac4
 8003cf0:	00000ac8 	.word	0x00000ac8
 8003cf4:	00000acc 	.word	0x00000acc
 8003cf8:	40a09eed 	.word	0x40a09eed
 8003cfc:	00000adc 	.word	0x00000adc
 8003d00:	4206c75f 	.word	0x4206c75f
 8003d04:	00000af8 	.word	0x00000af8
 8003d08:	00000afc 	.word	0x00000afc
 8003d0c:	49ae      	ldr	r1, [pc, #696]	; (8003fc8 <main+0x19cc>)
 8003d0e:	50d1      	str	r1, [r2, r3]
 8003d10:	4bae      	ldr	r3, [pc, #696]	; (8003fcc <main+0x19d0>)
 8003d12:	181b      	adds	r3, r3, r0
 8003d14:	2228      	movs	r2, #40	; 0x28
 8003d16:	4694      	mov	ip, r2
 8003d18:	44bc      	add	ip, r7
 8003d1a:	4463      	add	r3, ip
 8003d1c:	4aac      	ldr	r2, [pc, #688]	; (8003fd0 <main+0x19d4>)
 8003d1e:	49ad      	ldr	r1, [pc, #692]	; (8003fd4 <main+0x19d8>)
 8003d20:	5099      	str	r1, [r3, r2]
 8003d22:	4baa      	ldr	r3, [pc, #680]	; (8003fcc <main+0x19d0>)
 8003d24:	181b      	adds	r3, r3, r0
 8003d26:	197a      	adds	r2, r7, r5
 8003d28:	189a      	adds	r2, r3, r2
 8003d2a:	23b3      	movs	r3, #179	; 0xb3
 8003d2c:	011b      	lsls	r3, r3, #4
 8003d2e:	49aa      	ldr	r1, [pc, #680]	; (8003fd8 <main+0x19dc>)
 8003d30:	50d1      	str	r1, [r2, r3]
 8003d32:	4ba6      	ldr	r3, [pc, #664]	; (8003fcc <main+0x19d0>)
 8003d34:	181b      	adds	r3, r3, r0
 8003d36:	2228      	movs	r2, #40	; 0x28
 8003d38:	4694      	mov	ip, r2
 8003d3a:	44bc      	add	ip, r7
 8003d3c:	4463      	add	r3, ip
 8003d3e:	4aa7      	ldr	r2, [pc, #668]	; (8003fdc <main+0x19e0>)
 8003d40:	49a7      	ldr	r1, [pc, #668]	; (8003fe0 <main+0x19e4>)
 8003d42:	5099      	str	r1, [r3, r2]
 8003d44:	4ba1      	ldr	r3, [pc, #644]	; (8003fcc <main+0x19d0>)
 8003d46:	181b      	adds	r3, r3, r0
 8003d48:	2228      	movs	r2, #40	; 0x28
 8003d4a:	4694      	mov	ip, r2
 8003d4c:	44bc      	add	ip, r7
 8003d4e:	4463      	add	r3, ip
 8003d50:	4aa4      	ldr	r2, [pc, #656]	; (8003fe4 <main+0x19e8>)
 8003d52:	499d      	ldr	r1, [pc, #628]	; (8003fc8 <main+0x19cc>)
 8003d54:	5099      	str	r1, [r3, r2]
 8003d56:	4b9d      	ldr	r3, [pc, #628]	; (8003fcc <main+0x19d0>)
 8003d58:	181b      	adds	r3, r3, r0
 8003d5a:	197a      	adds	r2, r7, r5
 8003d5c:	189a      	adds	r2, r3, r2
 8003d5e:	23b6      	movs	r3, #182	; 0xb6
 8003d60:	011b      	lsls	r3, r3, #4
 8003d62:	499c      	ldr	r1, [pc, #624]	; (8003fd4 <main+0x19d8>)
 8003d64:	50d1      	str	r1, [r2, r3]
 8003d66:	4b99      	ldr	r3, [pc, #612]	; (8003fcc <main+0x19d0>)
 8003d68:	181b      	adds	r3, r3, r0
 8003d6a:	2228      	movs	r2, #40	; 0x28
 8003d6c:	4694      	mov	ip, r2
 8003d6e:	44bc      	add	ip, r7
 8003d70:	4463      	add	r3, ip
 8003d72:	4a9d      	ldr	r2, [pc, #628]	; (8003fe8 <main+0x19ec>)
 8003d74:	4998      	ldr	r1, [pc, #608]	; (8003fd8 <main+0x19dc>)
 8003d76:	5099      	str	r1, [r3, r2]
 8003d78:	4b94      	ldr	r3, [pc, #592]	; (8003fcc <main+0x19d0>)
 8003d7a:	181b      	adds	r3, r3, r0
 8003d7c:	2228      	movs	r2, #40	; 0x28
 8003d7e:	4694      	mov	ip, r2
 8003d80:	44bc      	add	ip, r7
 8003d82:	4463      	add	r3, ip
 8003d84:	4a99      	ldr	r2, [pc, #612]	; (8003fec <main+0x19f0>)
 8003d86:	4996      	ldr	r1, [pc, #600]	; (8003fe0 <main+0x19e4>)
 8003d88:	5099      	str	r1, [r3, r2]
 8003d8a:	4b90      	ldr	r3, [pc, #576]	; (8003fcc <main+0x19d0>)
 8003d8c:	181b      	adds	r3, r3, r0
 8003d8e:	2228      	movs	r2, #40	; 0x28
 8003d90:	4694      	mov	ip, r2
 8003d92:	44bc      	add	ip, r7
 8003d94:	4463      	add	r3, ip
 8003d96:	4a96      	ldr	r2, [pc, #600]	; (8003ff0 <main+0x19f4>)
 8003d98:	498b      	ldr	r1, [pc, #556]	; (8003fc8 <main+0x19cc>)
 8003d9a:	5099      	str	r1, [r3, r2]
 8003d9c:	4b8b      	ldr	r3, [pc, #556]	; (8003fcc <main+0x19d0>)
 8003d9e:	181b      	adds	r3, r3, r0
 8003da0:	2228      	movs	r2, #40	; 0x28
 8003da2:	4694      	mov	ip, r2
 8003da4:	44bc      	add	ip, r7
 8003da6:	4463      	add	r3, ip
 8003da8:	4a92      	ldr	r2, [pc, #584]	; (8003ff4 <main+0x19f8>)
 8003daa:	4993      	ldr	r1, [pc, #588]	; (8003ff8 <main+0x19fc>)
 8003dac:	5099      	str	r1, [r3, r2]
 8003dae:	4b87      	ldr	r3, [pc, #540]	; (8003fcc <main+0x19d0>)
 8003db0:	181b      	adds	r3, r3, r0
 8003db2:	2228      	movs	r2, #40	; 0x28
 8003db4:	4694      	mov	ip, r2
 8003db6:	44bc      	add	ip, r7
 8003db8:	4463      	add	r3, ip
 8003dba:	4a90      	ldr	r2, [pc, #576]	; (8003ffc <main+0x1a00>)
 8003dbc:	4990      	ldr	r1, [pc, #576]	; (8004000 <main+0x1a04>)
 8003dbe:	5099      	str	r1, [r3, r2]
 8003dc0:	4b82      	ldr	r3, [pc, #520]	; (8003fcc <main+0x19d0>)
 8003dc2:	181b      	adds	r3, r3, r0
 8003dc4:	2228      	movs	r2, #40	; 0x28
 8003dc6:	4694      	mov	ip, r2
 8003dc8:	44bc      	add	ip, r7
 8003dca:	4463      	add	r3, ip
 8003dcc:	4a8d      	ldr	r2, [pc, #564]	; (8004004 <main+0x1a08>)
 8003dce:	498e      	ldr	r1, [pc, #568]	; (8004008 <main+0x1a0c>)
 8003dd0:	5099      	str	r1, [r3, r2]
 8003dd2:	4b7e      	ldr	r3, [pc, #504]	; (8003fcc <main+0x19d0>)
 8003dd4:	181b      	adds	r3, r3, r0
 8003dd6:	2228      	movs	r2, #40	; 0x28
 8003dd8:	4694      	mov	ip, r2
 8003dda:	44bc      	add	ip, r7
 8003ddc:	4463      	add	r3, ip
 8003dde:	4a8b      	ldr	r2, [pc, #556]	; (800400c <main+0x1a10>)
 8003de0:	4979      	ldr	r1, [pc, #484]	; (8003fc8 <main+0x19cc>)
 8003de2:	5099      	str	r1, [r3, r2]
		  {0.488599986,-0.0359,5.01940012,0,0,0,33.69469833},
		  {0.490399987,-0.036499999,5.02120018,0,0,0,33.69469833}};

  //This displays the header which explains the formating of the data outputted.
  uint8_t header[81];
  sprintf(header, "\r\nAccel X (g),Accel Y (g),Accel Z (g),Gyro X (dps),Gyro Y (dps),Gyro Z (dps),Temp");
 8003de4:	4a8a      	ldr	r2, [pc, #552]	; (8004010 <main+0x1a14>)
 8003de6:	247c      	movs	r4, #124	; 0x7c
 8003de8:	1963      	adds	r3, r4, r5
 8003dea:	19db      	adds	r3, r3, r7
 8003dec:	0011      	movs	r1, r2
 8003dee:	0018      	movs	r0, r3
 8003df0:	f002 fb50 	bl	8006494 <siprintf>
  HAL_UART_Transmit(&huart2, header, sizeof(header), 1000);
 8003df4:	23fa      	movs	r3, #250	; 0xfa
 8003df6:	009b      	lsls	r3, r3, #2
 8003df8:	1962      	adds	r2, r4, r5
 8003dfa:	19d1      	adds	r1, r2, r7
 8003dfc:	4885      	ldr	r0, [pc, #532]	; (8004014 <main+0x1a18>)
 8003dfe:	2251      	movs	r2, #81	; 0x51
 8003e00:	f001 fafe 	bl	8005400 <HAL_UART_Transmit>
    /* USER CODE BEGIN 3 */
	 float accel[3];
	 float gyro[3];
	 float temp;

	 while(numRecordings<(sizeof(data)/sizeof(data[0]))){
 8003e04:	e0da      	b.n	8003fbc <main+0x19c0>

		 pause_sec(2); //delay is implemented
 8003e06:	2380      	movs	r3, #128	; 0x80
 8003e08:	05db      	lsls	r3, r3, #23
 8003e0a:	1c18      	adds	r0, r3, #0
 8003e0c:	f000 f9e6 	bl	80041dc <pause_sec>

		 for(int i =0; i<3;i++){
 8003e10:	2300      	movs	r3, #0
 8003e12:	4a81      	ldr	r2, [pc, #516]	; (8004018 <main+0x1a1c>)
 8003e14:	2128      	movs	r1, #40	; 0x28
 8003e16:	1852      	adds	r2, r2, r1
 8003e18:	19d2      	adds	r2, r2, r7
 8003e1a:	6013      	str	r3, [r2, #0]
 8003e1c:	e044      	b.n	8003ea8 <main+0x18ac>
		 		 accel[i]=data[numRecordings][i];
 8003e1e:	4b7f      	ldr	r3, [pc, #508]	; (800401c <main+0x1a20>)
 8003e20:	681a      	ldr	r2, [r3, #0]
 8003e22:	4b6a      	ldr	r3, [pc, #424]	; (8003fcc <main+0x19d0>)
 8003e24:	25ca      	movs	r5, #202	; 0xca
 8003e26:	012d      	lsls	r5, r5, #4
 8003e28:	195b      	adds	r3, r3, r5
 8003e2a:	2028      	movs	r0, #40	; 0x28
 8003e2c:	1839      	adds	r1, r7, r0
 8003e2e:	1859      	adds	r1, r3, r1
 8003e30:	0013      	movs	r3, r2
 8003e32:	005b      	lsls	r3, r3, #1
 8003e34:	189b      	adds	r3, r3, r2
 8003e36:	009b      	lsls	r3, r3, #2
 8003e38:	189b      	adds	r3, r3, r2
 8003e3a:	4c77      	ldr	r4, [pc, #476]	; (8004018 <main+0x1a1c>)
 8003e3c:	1822      	adds	r2, r4, r0
 8003e3e:	19d2      	adds	r2, r2, r7
 8003e40:	6812      	ldr	r2, [r2, #0]
 8003e42:	189b      	adds	r3, r3, r2
 8003e44:	009b      	lsls	r3, r3, #2
 8003e46:	5859      	ldr	r1, [r3, r1]
 8003e48:	4b75      	ldr	r3, [pc, #468]	; (8004020 <main+0x1a24>)
 8003e4a:	195b      	adds	r3, r3, r5
 8003e4c:	2228      	movs	r2, #40	; 0x28
 8003e4e:	4694      	mov	ip, r2
 8003e50:	44bc      	add	ip, r7
 8003e52:	4463      	add	r3, ip
 8003e54:	1822      	adds	r2, r4, r0
 8003e56:	19d2      	adds	r2, r2, r7
 8003e58:	6812      	ldr	r2, [r2, #0]
 8003e5a:	0092      	lsls	r2, r2, #2
 8003e5c:	50d1      	str	r1, [r2, r3]
		 		 gyro[i]=data[numRecordings][i+3];
 8003e5e:	4b6f      	ldr	r3, [pc, #444]	; (800401c <main+0x1a20>)
 8003e60:	681a      	ldr	r2, [r3, #0]
 8003e62:	0006      	movs	r6, r0
 8003e64:	1823      	adds	r3, r4, r0
 8003e66:	19db      	adds	r3, r3, r7
 8003e68:	681b      	ldr	r3, [r3, #0]
 8003e6a:	1cd8      	adds	r0, r3, #3
 8003e6c:	4b57      	ldr	r3, [pc, #348]	; (8003fcc <main+0x19d0>)
 8003e6e:	195b      	adds	r3, r3, r5
 8003e70:	19b9      	adds	r1, r7, r6
 8003e72:	1859      	adds	r1, r3, r1
 8003e74:	0013      	movs	r3, r2
 8003e76:	005b      	lsls	r3, r3, #1
 8003e78:	189b      	adds	r3, r3, r2
 8003e7a:	009b      	lsls	r3, r3, #2
 8003e7c:	189b      	adds	r3, r3, r2
 8003e7e:	181b      	adds	r3, r3, r0
 8003e80:	009b      	lsls	r3, r3, #2
 8003e82:	5859      	ldr	r1, [r3, r1]
 8003e84:	4b67      	ldr	r3, [pc, #412]	; (8004024 <main+0x1a28>)
 8003e86:	195b      	adds	r3, r3, r5
 8003e88:	2228      	movs	r2, #40	; 0x28
 8003e8a:	4694      	mov	ip, r2
 8003e8c:	44bc      	add	ip, r7
 8003e8e:	4463      	add	r3, ip
 8003e90:	19a2      	adds	r2, r4, r6
 8003e92:	19d2      	adds	r2, r2, r7
 8003e94:	6812      	ldr	r2, [r2, #0]
 8003e96:	0092      	lsls	r2, r2, #2
 8003e98:	50d1      	str	r1, [r2, r3]
		 for(int i =0; i<3;i++){
 8003e9a:	19a3      	adds	r3, r4, r6
 8003e9c:	19db      	adds	r3, r3, r7
 8003e9e:	681b      	ldr	r3, [r3, #0]
 8003ea0:	3301      	adds	r3, #1
 8003ea2:	19a2      	adds	r2, r4, r6
 8003ea4:	19d2      	adds	r2, r2, r7
 8003ea6:	6013      	str	r3, [r2, #0]
 8003ea8:	4b5b      	ldr	r3, [pc, #364]	; (8004018 <main+0x1a1c>)
 8003eaa:	2528      	movs	r5, #40	; 0x28
 8003eac:	195b      	adds	r3, r3, r5
 8003eae:	19db      	adds	r3, r3, r7
 8003eb0:	681b      	ldr	r3, [r3, #0]
 8003eb2:	2b02      	cmp	r3, #2
 8003eb4:	ddb3      	ble.n	8003e1e <main+0x1822>
		 	 }
		 temp=data[numRecordings][6];
 8003eb6:	4b59      	ldr	r3, [pc, #356]	; (800401c <main+0x1a20>)
 8003eb8:	681b      	ldr	r3, [r3, #0]
 8003eba:	4a44      	ldr	r2, [pc, #272]	; (8003fcc <main+0x19d0>)
 8003ebc:	20ca      	movs	r0, #202	; 0xca
 8003ebe:	0100      	lsls	r0, r0, #4
 8003ec0:	1812      	adds	r2, r2, r0
 8003ec2:	2128      	movs	r1, #40	; 0x28
 8003ec4:	468c      	mov	ip, r1
 8003ec6:	44bc      	add	ip, r7
 8003ec8:	4462      	add	r2, ip
 8003eca:	2134      	movs	r1, #52	; 0x34
 8003ecc:	434b      	muls	r3, r1
 8003ece:	18d3      	adds	r3, r2, r3
 8003ed0:	3318      	adds	r3, #24
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	4e54      	ldr	r6, [pc, #336]	; (8004028 <main+0x1a2c>)
 8003ed6:	1972      	adds	r2, r6, r5
 8003ed8:	19d2      	adds	r2, r2, r7
 8003eda:	6013      	str	r3, [r2, #0]
	      * FORMATTING BREAK DOWN:
	      * 0: the reading number (k-value)
	      *
	      * 94-100: spaces added at the end as buffer in case additional characters (like negative signs) appear
	      */
	     sprintf(msg, "\r\n%.9f,%.9f,%.9f,%.9f,%.9f,%.9f,%.9f         ",accel[0],accel[1],accel[2],gyro[0],gyro[1],gyro[2],temp);
 8003edc:	4b50      	ldr	r3, [pc, #320]	; (8004020 <main+0x1a24>)
 8003ede:	0004      	movs	r4, r0
 8003ee0:	191b      	adds	r3, r3, r4
 8003ee2:	2228      	movs	r2, #40	; 0x28
 8003ee4:	4694      	mov	ip, r2
 8003ee6:	44bc      	add	ip, r7
 8003ee8:	4463      	add	r3, ip
 8003eea:	681b      	ldr	r3, [r3, #0]
 8003eec:	1c18      	adds	r0, r3, #0
 8003eee:	f7fe fb1f 	bl	8002530 <__aeabi_f2d>
 8003ef2:	6238      	str	r0, [r7, #32]
 8003ef4:	6279      	str	r1, [r7, #36]	; 0x24
 8003ef6:	4b4a      	ldr	r3, [pc, #296]	; (8004020 <main+0x1a24>)
 8003ef8:	191b      	adds	r3, r3, r4
 8003efa:	2228      	movs	r2, #40	; 0x28
 8003efc:	4694      	mov	ip, r2
 8003efe:	44bc      	add	ip, r7
 8003f00:	4463      	add	r3, ip
 8003f02:	685b      	ldr	r3, [r3, #4]
 8003f04:	1c18      	adds	r0, r3, #0
 8003f06:	f7fe fb13 	bl	8002530 <__aeabi_f2d>
 8003f0a:	61b8      	str	r0, [r7, #24]
 8003f0c:	61f9      	str	r1, [r7, #28]
 8003f0e:	4b44      	ldr	r3, [pc, #272]	; (8004020 <main+0x1a24>)
 8003f10:	1919      	adds	r1, r3, r4
 8003f12:	197b      	adds	r3, r7, r5
 8003f14:	18cb      	adds	r3, r1, r3
 8003f16:	689b      	ldr	r3, [r3, #8]
 8003f18:	1c18      	adds	r0, r3, #0
 8003f1a:	f7fe fb09 	bl	8002530 <__aeabi_f2d>
 8003f1e:	6138      	str	r0, [r7, #16]
 8003f20:	6179      	str	r1, [r7, #20]
 8003f22:	4b40      	ldr	r3, [pc, #256]	; (8004024 <main+0x1a28>)
 8003f24:	1919      	adds	r1, r3, r4
 8003f26:	197b      	adds	r3, r7, r5
 8003f28:	18cb      	adds	r3, r1, r3
 8003f2a:	681b      	ldr	r3, [r3, #0]
 8003f2c:	1c18      	adds	r0, r3, #0
 8003f2e:	f7fe faff 	bl	8002530 <__aeabi_f2d>
 8003f32:	60b8      	str	r0, [r7, #8]
 8003f34:	60f9      	str	r1, [r7, #12]
 8003f36:	4b3b      	ldr	r3, [pc, #236]	; (8004024 <main+0x1a28>)
 8003f38:	1919      	adds	r1, r3, r4
 8003f3a:	197b      	adds	r3, r7, r5
 8003f3c:	18cb      	adds	r3, r1, r3
 8003f3e:	685b      	ldr	r3, [r3, #4]
 8003f40:	1c18      	adds	r0, r3, #0
 8003f42:	f7fe faf5 	bl	8002530 <__aeabi_f2d>
 8003f46:	6038      	str	r0, [r7, #0]
 8003f48:	6079      	str	r1, [r7, #4]
 8003f4a:	4b36      	ldr	r3, [pc, #216]	; (8004024 <main+0x1a28>)
 8003f4c:	1919      	adds	r1, r3, r4
 8003f4e:	197a      	adds	r2, r7, r5
 8003f50:	188b      	adds	r3, r1, r2
 8003f52:	689b      	ldr	r3, [r3, #8]
 8003f54:	1c18      	adds	r0, r3, #0
 8003f56:	f7fe faeb 	bl	8002530 <__aeabi_f2d>
 8003f5a:	0004      	movs	r4, r0
 8003f5c:	000d      	movs	r5, r1
 8003f5e:	2328      	movs	r3, #40	; 0x28
 8003f60:	18f2      	adds	r2, r6, r3
 8003f62:	19d1      	adds	r1, r2, r7
 8003f64:	6808      	ldr	r0, [r1, #0]
 8003f66:	f7fe fae3 	bl	8002530 <__aeabi_f2d>
 8003f6a:	0002      	movs	r2, r0
 8003f6c:	000b      	movs	r3, r1
 8003f6e:	492f      	ldr	r1, [pc, #188]	; (800402c <main+0x1a30>)
 8003f70:	2628      	movs	r6, #40	; 0x28
 8003f72:	19b8      	adds	r0, r7, r6
 8003f74:	920a      	str	r2, [sp, #40]	; 0x28
 8003f76:	930b      	str	r3, [sp, #44]	; 0x2c
 8003f78:	9408      	str	r4, [sp, #32]
 8003f7a:	9509      	str	r5, [sp, #36]	; 0x24
 8003f7c:	683b      	ldr	r3, [r7, #0]
 8003f7e:	687c      	ldr	r4, [r7, #4]
 8003f80:	9306      	str	r3, [sp, #24]
 8003f82:	9407      	str	r4, [sp, #28]
 8003f84:	68bb      	ldr	r3, [r7, #8]
 8003f86:	68fc      	ldr	r4, [r7, #12]
 8003f88:	9304      	str	r3, [sp, #16]
 8003f8a:	9405      	str	r4, [sp, #20]
 8003f8c:	693b      	ldr	r3, [r7, #16]
 8003f8e:	697c      	ldr	r4, [r7, #20]
 8003f90:	9302      	str	r3, [sp, #8]
 8003f92:	9403      	str	r4, [sp, #12]
 8003f94:	69bb      	ldr	r3, [r7, #24]
 8003f96:	69fc      	ldr	r4, [r7, #28]
 8003f98:	9300      	str	r3, [sp, #0]
 8003f9a:	9401      	str	r4, [sp, #4]
 8003f9c:	6a3a      	ldr	r2, [r7, #32]
 8003f9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003fa0:	f002 fa78 	bl	8006494 <siprintf>
	     //sprintf(msg, "\r\n%.4f,%.4f,%.9f,%.9f,%.9f,%.9f,%.9f         ",accel[0],accel[1],accel[2],gyro[0],gyro[1],gyro[2],temp);
	     HAL_UART_Transmit(&huart2, msg, sizeof(msg), 1000);
 8003fa4:	23fa      	movs	r3, #250	; 0xfa
 8003fa6:	009b      	lsls	r3, r3, #2
 8003fa8:	19b9      	adds	r1, r7, r6
 8003faa:	481a      	ldr	r0, [pc, #104]	; (8004014 <main+0x1a18>)
 8003fac:	2264      	movs	r2, #100	; 0x64
 8003fae:	f001 fa27 	bl	8005400 <HAL_UART_Transmit>

	     numRecordings++;
 8003fb2:	4b1a      	ldr	r3, [pc, #104]	; (800401c <main+0x1a20>)
 8003fb4:	681b      	ldr	r3, [r3, #0]
 8003fb6:	1c5a      	adds	r2, r3, #1
 8003fb8:	4b18      	ldr	r3, [pc, #96]	; (800401c <main+0x1a20>)
 8003fba:	601a      	str	r2, [r3, #0]
	 while(numRecordings<(sizeof(data)/sizeof(data[0]))){
 8003fbc:	4b17      	ldr	r3, [pc, #92]	; (800401c <main+0x1a20>)
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	2b39      	cmp	r3, #57	; 0x39
 8003fc2:	d800      	bhi.n	8003fc6 <main+0x19ca>
 8003fc4:	e71f      	b.n	8003e06 <main+0x180a>
  {
 8003fc6:	e71d      	b.n	8003e04 <main+0x1808>
 8003fc8:	4206c75f 	.word	0x4206c75f
 8003fcc:	fffff430 	.word	0xfffff430
 8003fd0:	00000b2c 	.word	0x00000b2c
 8003fd4:	3efa29c7 	.word	0x3efa29c7
 8003fd8:	bd130be1 	.word	0xbd130be1
 8003fdc:	00000b34 	.word	0x00000b34
 8003fe0:	40a09eed 	.word	0x40a09eed
 8003fe4:	00000b44 	.word	0x00000b44
 8003fe8:	00000b64 	.word	0x00000b64
 8003fec:	00000b68 	.word	0x00000b68
 8003ff0:	00000b78 	.word	0x00000b78
 8003ff4:	00000b94 	.word	0x00000b94
 8003ff8:	3efb15b5 	.word	0x3efb15b5
 8003ffc:	00000b98 	.word	0x00000b98
 8004000:	bd158106 	.word	0xbd158106
 8004004:	00000b9c 	.word	0x00000b9c
 8004008:	40a0adac 	.word	0x40a0adac
 800400c:	00000bac 	.word	0x00000bac
 8004010:	08008b08 	.word	0x08008b08
 8004014:	200001f8 	.word	0x200001f8
 8004018:	00000c9c 	.word	0x00000c9c
 800401c:	2000027c 	.word	0x2000027c
 8004020:	fffff3d0 	.word	0xfffff3d0
 8004024:	fffff3c4 	.word	0xfffff3c4
 8004028:	00000c98 	.word	0x00000c98
 800402c:	08008b5c 	.word	0x08008b5c

08004030 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8004030:	b590      	push	{r4, r7, lr}
 8004032:	b091      	sub	sp, #68	; 0x44
 8004034:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8004036:	2410      	movs	r4, #16
 8004038:	193b      	adds	r3, r7, r4
 800403a:	0018      	movs	r0, r3
 800403c:	2330      	movs	r3, #48	; 0x30
 800403e:	001a      	movs	r2, r3
 8004040:	2100      	movs	r1, #0
 8004042:	f001 fdb1 	bl	8005ba8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8004046:	003b      	movs	r3, r7
 8004048:	0018      	movs	r0, r3
 800404a:	2310      	movs	r3, #16
 800404c:	001a      	movs	r2, r3
 800404e:	2100      	movs	r1, #0
 8004050:	f001 fdaa 	bl	8005ba8 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8004054:	0021      	movs	r1, r4
 8004056:	187b      	adds	r3, r7, r1
 8004058:	2202      	movs	r2, #2
 800405a:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800405c:	187b      	adds	r3, r7, r1
 800405e:	2201      	movs	r2, #1
 8004060:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8004062:	187b      	adds	r3, r7, r1
 8004064:	2210      	movs	r2, #16
 8004066:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8004068:	187b      	adds	r3, r7, r1
 800406a:	2202      	movs	r2, #2
 800406c:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 800406e:	187b      	adds	r3, r7, r1
 8004070:	2200      	movs	r2, #0
 8004072:	625a      	str	r2, [r3, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 8004074:	187b      	adds	r3, r7, r1
 8004076:	22a0      	movs	r2, #160	; 0xa0
 8004078:	0392      	lsls	r2, r2, #14
 800407a:	629a      	str	r2, [r3, #40]	; 0x28
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 800407c:	187b      	adds	r3, r7, r1
 800407e:	2200      	movs	r2, #0
 8004080:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8004082:	187b      	adds	r3, r7, r1
 8004084:	0018      	movs	r0, r3
 8004086:	f000 fcfb 	bl	8004a80 <HAL_RCC_OscConfig>
 800408a:	1e03      	subs	r3, r0, #0
 800408c:	d001      	beq.n	8004092 <SystemClock_Config+0x62>
  {
    Error_Handler();
 800408e:	f000 f8d7 	bl	8004240 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8004092:	003b      	movs	r3, r7
 8004094:	2207      	movs	r2, #7
 8004096:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8004098:	003b      	movs	r3, r7
 800409a:	2202      	movs	r2, #2
 800409c:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800409e:	003b      	movs	r3, r7
 80040a0:	2200      	movs	r2, #0
 80040a2:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80040a4:	003b      	movs	r3, r7
 80040a6:	2200      	movs	r2, #0
 80040a8:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80040aa:	003b      	movs	r3, r7
 80040ac:	2101      	movs	r1, #1
 80040ae:	0018      	movs	r0, r3
 80040b0:	f001 f800 	bl	80050b4 <HAL_RCC_ClockConfig>
 80040b4:	1e03      	subs	r3, r0, #0
 80040b6:	d001      	beq.n	80040bc <SystemClock_Config+0x8c>
  {
    Error_Handler();
 80040b8:	f000 f8c2 	bl	8004240 <Error_Handler>
  }
}
 80040bc:	46c0      	nop			; (mov r8, r8)
 80040be:	46bd      	mov	sp, r7
 80040c0:	b011      	add	sp, #68	; 0x44
 80040c2:	bd90      	pop	{r4, r7, pc}

080040c4 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80040c4:	b580      	push	{r7, lr}
 80040c6:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80040c8:	4b14      	ldr	r3, [pc, #80]	; (800411c <MX_USART2_UART_Init+0x58>)
 80040ca:	4a15      	ldr	r2, [pc, #84]	; (8004120 <MX_USART2_UART_Init+0x5c>)
 80040cc:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 80040ce:	4b13      	ldr	r3, [pc, #76]	; (800411c <MX_USART2_UART_Init+0x58>)
 80040d0:	2296      	movs	r2, #150	; 0x96
 80040d2:	0192      	lsls	r2, r2, #6
 80040d4:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80040d6:	4b11      	ldr	r3, [pc, #68]	; (800411c <MX_USART2_UART_Init+0x58>)
 80040d8:	2200      	movs	r2, #0
 80040da:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80040dc:	4b0f      	ldr	r3, [pc, #60]	; (800411c <MX_USART2_UART_Init+0x58>)
 80040de:	2200      	movs	r2, #0
 80040e0:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80040e2:	4b0e      	ldr	r3, [pc, #56]	; (800411c <MX_USART2_UART_Init+0x58>)
 80040e4:	2200      	movs	r2, #0
 80040e6:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80040e8:	4b0c      	ldr	r3, [pc, #48]	; (800411c <MX_USART2_UART_Init+0x58>)
 80040ea:	220c      	movs	r2, #12
 80040ec:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80040ee:	4b0b      	ldr	r3, [pc, #44]	; (800411c <MX_USART2_UART_Init+0x58>)
 80040f0:	2200      	movs	r2, #0
 80040f2:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80040f4:	4b09      	ldr	r3, [pc, #36]	; (800411c <MX_USART2_UART_Init+0x58>)
 80040f6:	2200      	movs	r2, #0
 80040f8:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80040fa:	4b08      	ldr	r3, [pc, #32]	; (800411c <MX_USART2_UART_Init+0x58>)
 80040fc:	2200      	movs	r2, #0
 80040fe:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8004100:	4b06      	ldr	r3, [pc, #24]	; (800411c <MX_USART2_UART_Init+0x58>)
 8004102:	2200      	movs	r2, #0
 8004104:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8004106:	4b05      	ldr	r3, [pc, #20]	; (800411c <MX_USART2_UART_Init+0x58>)
 8004108:	0018      	movs	r0, r3
 800410a:	f001 f925 	bl	8005358 <HAL_UART_Init>
 800410e:	1e03      	subs	r3, r0, #0
 8004110:	d001      	beq.n	8004116 <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 8004112:	f000 f895 	bl	8004240 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8004116:	46c0      	nop			; (mov r8, r8)
 8004118:	46bd      	mov	sp, r7
 800411a:	bd80      	pop	{r7, pc}
 800411c:	200001f8 	.word	0x200001f8
 8004120:	40004400 	.word	0x40004400

08004124 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8004124:	b590      	push	{r4, r7, lr}
 8004126:	b089      	sub	sp, #36	; 0x24
 8004128:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800412a:	240c      	movs	r4, #12
 800412c:	193b      	adds	r3, r7, r4
 800412e:	0018      	movs	r0, r3
 8004130:	2314      	movs	r3, #20
 8004132:	001a      	movs	r2, r3
 8004134:	2100      	movs	r1, #0
 8004136:	f001 fd37 	bl	8005ba8 <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800413a:	4b26      	ldr	r3, [pc, #152]	; (80041d4 <MX_GPIO_Init+0xb0>)
 800413c:	695a      	ldr	r2, [r3, #20]
 800413e:	4b25      	ldr	r3, [pc, #148]	; (80041d4 <MX_GPIO_Init+0xb0>)
 8004140:	2180      	movs	r1, #128	; 0x80
 8004142:	0289      	lsls	r1, r1, #10
 8004144:	430a      	orrs	r2, r1
 8004146:	615a      	str	r2, [r3, #20]
 8004148:	4b22      	ldr	r3, [pc, #136]	; (80041d4 <MX_GPIO_Init+0xb0>)
 800414a:	695a      	ldr	r2, [r3, #20]
 800414c:	2380      	movs	r3, #128	; 0x80
 800414e:	029b      	lsls	r3, r3, #10
 8004150:	4013      	ands	r3, r2
 8004152:	60bb      	str	r3, [r7, #8]
 8004154:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8004156:	4b1f      	ldr	r3, [pc, #124]	; (80041d4 <MX_GPIO_Init+0xb0>)
 8004158:	695a      	ldr	r2, [r3, #20]
 800415a:	4b1e      	ldr	r3, [pc, #120]	; (80041d4 <MX_GPIO_Init+0xb0>)
 800415c:	2180      	movs	r1, #128	; 0x80
 800415e:	0309      	lsls	r1, r1, #12
 8004160:	430a      	orrs	r2, r1
 8004162:	615a      	str	r2, [r3, #20]
 8004164:	4b1b      	ldr	r3, [pc, #108]	; (80041d4 <MX_GPIO_Init+0xb0>)
 8004166:	695a      	ldr	r2, [r3, #20]
 8004168:	2380      	movs	r3, #128	; 0x80
 800416a:	031b      	lsls	r3, r3, #12
 800416c:	4013      	ands	r3, r2
 800416e:	607b      	str	r3, [r7, #4]
 8004170:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LD4_Pin|LD3_Pin, GPIO_PIN_RESET);
 8004172:	23c0      	movs	r3, #192	; 0xc0
 8004174:	009b      	lsls	r3, r3, #2
 8004176:	4818      	ldr	r0, [pc, #96]	; (80041d8 <MX_GPIO_Init+0xb4>)
 8004178:	2200      	movs	r2, #0
 800417a:	0019      	movs	r1, r3
 800417c:	f000 fc62 	bl	8004a44 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8004180:	193b      	adds	r3, r7, r4
 8004182:	2201      	movs	r2, #1
 8004184:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 8004186:	193b      	adds	r3, r7, r4
 8004188:	2290      	movs	r2, #144	; 0x90
 800418a:	0352      	lsls	r2, r2, #13
 800418c:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800418e:	193b      	adds	r3, r7, r4
 8004190:	2200      	movs	r2, #0
 8004192:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8004194:	193a      	adds	r2, r7, r4
 8004196:	2390      	movs	r3, #144	; 0x90
 8004198:	05db      	lsls	r3, r3, #23
 800419a:	0011      	movs	r1, r2
 800419c:	0018      	movs	r0, r3
 800419e:	f000 fae1 	bl	8004764 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD4_Pin LD3_Pin */
  GPIO_InitStruct.Pin = LD4_Pin|LD3_Pin;
 80041a2:	0021      	movs	r1, r4
 80041a4:	187b      	adds	r3, r7, r1
 80041a6:	22c0      	movs	r2, #192	; 0xc0
 80041a8:	0092      	lsls	r2, r2, #2
 80041aa:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80041ac:	187b      	adds	r3, r7, r1
 80041ae:	2201      	movs	r2, #1
 80041b0:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80041b2:	187b      	adds	r3, r7, r1
 80041b4:	2200      	movs	r2, #0
 80041b6:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80041b8:	187b      	adds	r3, r7, r1
 80041ba:	2200      	movs	r2, #0
 80041bc:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80041be:	187b      	adds	r3, r7, r1
 80041c0:	4a05      	ldr	r2, [pc, #20]	; (80041d8 <MX_GPIO_Init+0xb4>)
 80041c2:	0019      	movs	r1, r3
 80041c4:	0010      	movs	r0, r2
 80041c6:	f000 facd 	bl	8004764 <HAL_GPIO_Init>

}
 80041ca:	46c0      	nop			; (mov r8, r8)
 80041cc:	46bd      	mov	sp, r7
 80041ce:	b009      	add	sp, #36	; 0x24
 80041d0:	bd90      	pop	{r4, r7, pc}
 80041d2:	46c0      	nop			; (mov r8, r8)
 80041d4:	40021000 	.word	0x40021000
 80041d8:	48000800 	.word	0x48000800

080041dc <pause_sec>:

/* USER CODE BEGIN 4 */
void pause_sec(float x)
{
 80041dc:	b590      	push	{r4, r7, lr}
 80041de:	b087      	sub	sp, #28
 80041e0:	af00      	add	r7, sp, #0
 80041e2:	6078      	str	r0, [r7, #4]
	/* Delay program execution for x seconds */

	//declare loop variables
	int i, j, k= 0;
 80041e4:	2300      	movs	r3, #0
 80041e6:	60fb      	str	r3, [r7, #12]

	/*
	 * run through 2 for loops incrementing counter to ensure loop runs (no actual impact on code)
	 * Multiplying by x gives the delay for x seconds
	 */
	for (i = 0; i < 630; i++) {
 80041e8:	2300      	movs	r3, #0
 80041ea:	617b      	str	r3, [r7, #20]
 80041ec:	e01a      	b.n	8004224 <pause_sec+0x48>
		for(j = 0; j < 110*x; j++) { //
 80041ee:	2300      	movs	r3, #0
 80041f0:	613b      	str	r3, [r7, #16]
 80041f2:	e005      	b.n	8004200 <pause_sec+0x24>
			k++; // this is added to ensure that the loop does run
 80041f4:	68fb      	ldr	r3, [r7, #12]
 80041f6:	3301      	adds	r3, #1
 80041f8:	60fb      	str	r3, [r7, #12]
		for(j = 0; j < 110*x; j++) { //
 80041fa:	693b      	ldr	r3, [r7, #16]
 80041fc:	3301      	adds	r3, #1
 80041fe:	613b      	str	r3, [r7, #16]
 8004200:	6938      	ldr	r0, [r7, #16]
 8004202:	f7fc fb61 	bl	80008c8 <__aeabi_i2f>
 8004206:	1c04      	adds	r4, r0, #0
 8004208:	490b      	ldr	r1, [pc, #44]	; (8004238 <pause_sec+0x5c>)
 800420a:	6878      	ldr	r0, [r7, #4]
 800420c:	f7fc fa36 	bl	800067c <__aeabi_fmul>
 8004210:	1c03      	adds	r3, r0, #0
 8004212:	1c19      	adds	r1, r3, #0
 8004214:	1c20      	adds	r0, r4, #0
 8004216:	f7fc f959 	bl	80004cc <__aeabi_fcmplt>
 800421a:	1e03      	subs	r3, r0, #0
 800421c:	d1ea      	bne.n	80041f4 <pause_sec+0x18>
	for (i = 0; i < 630; i++) {
 800421e:	697b      	ldr	r3, [r7, #20]
 8004220:	3301      	adds	r3, #1
 8004222:	617b      	str	r3, [r7, #20]
 8004224:	697b      	ldr	r3, [r7, #20]
 8004226:	4a05      	ldr	r2, [pc, #20]	; (800423c <pause_sec+0x60>)
 8004228:	4293      	cmp	r3, r2
 800422a:	dde0      	ble.n	80041ee <pause_sec+0x12>
		}
	}
}
 800422c:	46c0      	nop			; (mov r8, r8)
 800422e:	46c0      	nop			; (mov r8, r8)
 8004230:	46bd      	mov	sp, r7
 8004232:	b007      	add	sp, #28
 8004234:	bd90      	pop	{r4, r7, pc}
 8004236:	46c0      	nop			; (mov r8, r8)
 8004238:	42dc0000 	.word	0x42dc0000
 800423c:	00000275 	.word	0x00000275

08004240 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8004240:	b580      	push	{r7, lr}
 8004242:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8004244:	b672      	cpsid	i
}
 8004246:	46c0      	nop			; (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8004248:	e7fe      	b.n	8004248 <Error_Handler+0x8>
	...

0800424c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 800424c:	b580      	push	{r7, lr}
 800424e:	b082      	sub	sp, #8
 8004250:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004252:	4b0f      	ldr	r3, [pc, #60]	; (8004290 <HAL_MspInit+0x44>)
 8004254:	699a      	ldr	r2, [r3, #24]
 8004256:	4b0e      	ldr	r3, [pc, #56]	; (8004290 <HAL_MspInit+0x44>)
 8004258:	2101      	movs	r1, #1
 800425a:	430a      	orrs	r2, r1
 800425c:	619a      	str	r2, [r3, #24]
 800425e:	4b0c      	ldr	r3, [pc, #48]	; (8004290 <HAL_MspInit+0x44>)
 8004260:	699b      	ldr	r3, [r3, #24]
 8004262:	2201      	movs	r2, #1
 8004264:	4013      	ands	r3, r2
 8004266:	607b      	str	r3, [r7, #4]
 8004268:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800426a:	4b09      	ldr	r3, [pc, #36]	; (8004290 <HAL_MspInit+0x44>)
 800426c:	69da      	ldr	r2, [r3, #28]
 800426e:	4b08      	ldr	r3, [pc, #32]	; (8004290 <HAL_MspInit+0x44>)
 8004270:	2180      	movs	r1, #128	; 0x80
 8004272:	0549      	lsls	r1, r1, #21
 8004274:	430a      	orrs	r2, r1
 8004276:	61da      	str	r2, [r3, #28]
 8004278:	4b05      	ldr	r3, [pc, #20]	; (8004290 <HAL_MspInit+0x44>)
 800427a:	69da      	ldr	r2, [r3, #28]
 800427c:	2380      	movs	r3, #128	; 0x80
 800427e:	055b      	lsls	r3, r3, #21
 8004280:	4013      	ands	r3, r2
 8004282:	603b      	str	r3, [r7, #0]
 8004284:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8004286:	46c0      	nop			; (mov r8, r8)
 8004288:	46bd      	mov	sp, r7
 800428a:	b002      	add	sp, #8
 800428c:	bd80      	pop	{r7, pc}
 800428e:	46c0      	nop			; (mov r8, r8)
 8004290:	40021000 	.word	0x40021000

08004294 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8004294:	b590      	push	{r4, r7, lr}
 8004296:	b08b      	sub	sp, #44	; 0x2c
 8004298:	af00      	add	r7, sp, #0
 800429a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800429c:	2414      	movs	r4, #20
 800429e:	193b      	adds	r3, r7, r4
 80042a0:	0018      	movs	r0, r3
 80042a2:	2314      	movs	r3, #20
 80042a4:	001a      	movs	r2, r3
 80042a6:	2100      	movs	r1, #0
 80042a8:	f001 fc7e 	bl	8005ba8 <memset>
  if(huart->Instance==USART2)
 80042ac:	687b      	ldr	r3, [r7, #4]
 80042ae:	681b      	ldr	r3, [r3, #0]
 80042b0:	4a1c      	ldr	r2, [pc, #112]	; (8004324 <HAL_UART_MspInit+0x90>)
 80042b2:	4293      	cmp	r3, r2
 80042b4:	d132      	bne.n	800431c <HAL_UART_MspInit+0x88>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80042b6:	4b1c      	ldr	r3, [pc, #112]	; (8004328 <HAL_UART_MspInit+0x94>)
 80042b8:	69da      	ldr	r2, [r3, #28]
 80042ba:	4b1b      	ldr	r3, [pc, #108]	; (8004328 <HAL_UART_MspInit+0x94>)
 80042bc:	2180      	movs	r1, #128	; 0x80
 80042be:	0289      	lsls	r1, r1, #10
 80042c0:	430a      	orrs	r2, r1
 80042c2:	61da      	str	r2, [r3, #28]
 80042c4:	4b18      	ldr	r3, [pc, #96]	; (8004328 <HAL_UART_MspInit+0x94>)
 80042c6:	69da      	ldr	r2, [r3, #28]
 80042c8:	2380      	movs	r3, #128	; 0x80
 80042ca:	029b      	lsls	r3, r3, #10
 80042cc:	4013      	ands	r3, r2
 80042ce:	613b      	str	r3, [r7, #16]
 80042d0:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80042d2:	4b15      	ldr	r3, [pc, #84]	; (8004328 <HAL_UART_MspInit+0x94>)
 80042d4:	695a      	ldr	r2, [r3, #20]
 80042d6:	4b14      	ldr	r3, [pc, #80]	; (8004328 <HAL_UART_MspInit+0x94>)
 80042d8:	2180      	movs	r1, #128	; 0x80
 80042da:	0289      	lsls	r1, r1, #10
 80042dc:	430a      	orrs	r2, r1
 80042de:	615a      	str	r2, [r3, #20]
 80042e0:	4b11      	ldr	r3, [pc, #68]	; (8004328 <HAL_UART_MspInit+0x94>)
 80042e2:	695a      	ldr	r2, [r3, #20]
 80042e4:	2380      	movs	r3, #128	; 0x80
 80042e6:	029b      	lsls	r3, r3, #10
 80042e8:	4013      	ands	r3, r2
 80042ea:	60fb      	str	r3, [r7, #12]
 80042ec:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80042ee:	0021      	movs	r1, r4
 80042f0:	187b      	adds	r3, r7, r1
 80042f2:	220c      	movs	r2, #12
 80042f4:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80042f6:	187b      	adds	r3, r7, r1
 80042f8:	2202      	movs	r2, #2
 80042fa:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80042fc:	187b      	adds	r3, r7, r1
 80042fe:	2200      	movs	r2, #0
 8004300:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8004302:	187b      	adds	r3, r7, r1
 8004304:	2203      	movs	r2, #3
 8004306:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 8004308:	187b      	adds	r3, r7, r1
 800430a:	2201      	movs	r2, #1
 800430c:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800430e:	187a      	adds	r2, r7, r1
 8004310:	2390      	movs	r3, #144	; 0x90
 8004312:	05db      	lsls	r3, r3, #23
 8004314:	0011      	movs	r1, r2
 8004316:	0018      	movs	r0, r3
 8004318:	f000 fa24 	bl	8004764 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800431c:	46c0      	nop			; (mov r8, r8)
 800431e:	46bd      	mov	sp, r7
 8004320:	b00b      	add	sp, #44	; 0x2c
 8004322:	bd90      	pop	{r4, r7, pc}
 8004324:	40004400 	.word	0x40004400
 8004328:	40021000 	.word	0x40021000

0800432c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800432c:	b580      	push	{r7, lr}
 800432e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8004330:	e7fe      	b.n	8004330 <NMI_Handler+0x4>

08004332 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004332:	b580      	push	{r7, lr}
 8004334:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8004336:	e7fe      	b.n	8004336 <HardFault_Handler+0x4>

08004338 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8004338:	b580      	push	{r7, lr}
 800433a:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 800433c:	46c0      	nop			; (mov r8, r8)
 800433e:	46bd      	mov	sp, r7
 8004340:	bd80      	pop	{r7, pc}

08004342 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8004342:	b580      	push	{r7, lr}
 8004344:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8004346:	46c0      	nop			; (mov r8, r8)
 8004348:	46bd      	mov	sp, r7
 800434a:	bd80      	pop	{r7, pc}

0800434c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800434c:	b580      	push	{r7, lr}
 800434e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8004350:	f000 f938 	bl	80045c4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8004354:	46c0      	nop			; (mov r8, r8)
 8004356:	46bd      	mov	sp, r7
 8004358:	bd80      	pop	{r7, pc}

0800435a <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800435a:	b580      	push	{r7, lr}
 800435c:	af00      	add	r7, sp, #0
	return 1;
 800435e:	2301      	movs	r3, #1
}
 8004360:	0018      	movs	r0, r3
 8004362:	46bd      	mov	sp, r7
 8004364:	bd80      	pop	{r7, pc}

08004366 <_kill>:

int _kill(int pid, int sig)
{
 8004366:	b580      	push	{r7, lr}
 8004368:	b082      	sub	sp, #8
 800436a:	af00      	add	r7, sp, #0
 800436c:	6078      	str	r0, [r7, #4]
 800436e:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8004370:	f001 fbf0 	bl	8005b54 <__errno>
 8004374:	0003      	movs	r3, r0
 8004376:	2216      	movs	r2, #22
 8004378:	601a      	str	r2, [r3, #0]
	return -1;
 800437a:	2301      	movs	r3, #1
 800437c:	425b      	negs	r3, r3
}
 800437e:	0018      	movs	r0, r3
 8004380:	46bd      	mov	sp, r7
 8004382:	b002      	add	sp, #8
 8004384:	bd80      	pop	{r7, pc}

08004386 <_exit>:

void _exit (int status)
{
 8004386:	b580      	push	{r7, lr}
 8004388:	b082      	sub	sp, #8
 800438a:	af00      	add	r7, sp, #0
 800438c:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800438e:	2301      	movs	r3, #1
 8004390:	425a      	negs	r2, r3
 8004392:	687b      	ldr	r3, [r7, #4]
 8004394:	0011      	movs	r1, r2
 8004396:	0018      	movs	r0, r3
 8004398:	f7ff ffe5 	bl	8004366 <_kill>
	while (1) {}		/* Make sure we hang here */
 800439c:	e7fe      	b.n	800439c <_exit+0x16>

0800439e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800439e:	b580      	push	{r7, lr}
 80043a0:	b086      	sub	sp, #24
 80043a2:	af00      	add	r7, sp, #0
 80043a4:	60f8      	str	r0, [r7, #12]
 80043a6:	60b9      	str	r1, [r7, #8]
 80043a8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80043aa:	2300      	movs	r3, #0
 80043ac:	617b      	str	r3, [r7, #20]
 80043ae:	e00a      	b.n	80043c6 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80043b0:	e000      	b.n	80043b4 <_read+0x16>
 80043b2:	bf00      	nop
 80043b4:	0001      	movs	r1, r0
 80043b6:	68bb      	ldr	r3, [r7, #8]
 80043b8:	1c5a      	adds	r2, r3, #1
 80043ba:	60ba      	str	r2, [r7, #8]
 80043bc:	b2ca      	uxtb	r2, r1
 80043be:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80043c0:	697b      	ldr	r3, [r7, #20]
 80043c2:	3301      	adds	r3, #1
 80043c4:	617b      	str	r3, [r7, #20]
 80043c6:	697a      	ldr	r2, [r7, #20]
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	429a      	cmp	r2, r3
 80043cc:	dbf0      	blt.n	80043b0 <_read+0x12>
	}

return len;
 80043ce:	687b      	ldr	r3, [r7, #4]
}
 80043d0:	0018      	movs	r0, r3
 80043d2:	46bd      	mov	sp, r7
 80043d4:	b006      	add	sp, #24
 80043d6:	bd80      	pop	{r7, pc}

080043d8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80043d8:	b580      	push	{r7, lr}
 80043da:	b086      	sub	sp, #24
 80043dc:	af00      	add	r7, sp, #0
 80043de:	60f8      	str	r0, [r7, #12]
 80043e0:	60b9      	str	r1, [r7, #8]
 80043e2:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80043e4:	2300      	movs	r3, #0
 80043e6:	617b      	str	r3, [r7, #20]
 80043e8:	e009      	b.n	80043fe <_write+0x26>
	{
		__io_putchar(*ptr++);
 80043ea:	68bb      	ldr	r3, [r7, #8]
 80043ec:	1c5a      	adds	r2, r3, #1
 80043ee:	60ba      	str	r2, [r7, #8]
 80043f0:	781b      	ldrb	r3, [r3, #0]
 80043f2:	0018      	movs	r0, r3
 80043f4:	e000      	b.n	80043f8 <_write+0x20>
 80043f6:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80043f8:	697b      	ldr	r3, [r7, #20]
 80043fa:	3301      	adds	r3, #1
 80043fc:	617b      	str	r3, [r7, #20]
 80043fe:	697a      	ldr	r2, [r7, #20]
 8004400:	687b      	ldr	r3, [r7, #4]
 8004402:	429a      	cmp	r2, r3
 8004404:	dbf1      	blt.n	80043ea <_write+0x12>
	}
	return len;
 8004406:	687b      	ldr	r3, [r7, #4]
}
 8004408:	0018      	movs	r0, r3
 800440a:	46bd      	mov	sp, r7
 800440c:	b006      	add	sp, #24
 800440e:	bd80      	pop	{r7, pc}

08004410 <_close>:

int _close(int file)
{
 8004410:	b580      	push	{r7, lr}
 8004412:	b082      	sub	sp, #8
 8004414:	af00      	add	r7, sp, #0
 8004416:	6078      	str	r0, [r7, #4]
	return -1;
 8004418:	2301      	movs	r3, #1
 800441a:	425b      	negs	r3, r3
}
 800441c:	0018      	movs	r0, r3
 800441e:	46bd      	mov	sp, r7
 8004420:	b002      	add	sp, #8
 8004422:	bd80      	pop	{r7, pc}

08004424 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8004424:	b580      	push	{r7, lr}
 8004426:	b082      	sub	sp, #8
 8004428:	af00      	add	r7, sp, #0
 800442a:	6078      	str	r0, [r7, #4]
 800442c:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800442e:	683b      	ldr	r3, [r7, #0]
 8004430:	2280      	movs	r2, #128	; 0x80
 8004432:	0192      	lsls	r2, r2, #6
 8004434:	605a      	str	r2, [r3, #4]
	return 0;
 8004436:	2300      	movs	r3, #0
}
 8004438:	0018      	movs	r0, r3
 800443a:	46bd      	mov	sp, r7
 800443c:	b002      	add	sp, #8
 800443e:	bd80      	pop	{r7, pc}

08004440 <_isatty>:

int _isatty(int file)
{
 8004440:	b580      	push	{r7, lr}
 8004442:	b082      	sub	sp, #8
 8004444:	af00      	add	r7, sp, #0
 8004446:	6078      	str	r0, [r7, #4]
	return 1;
 8004448:	2301      	movs	r3, #1
}
 800444a:	0018      	movs	r0, r3
 800444c:	46bd      	mov	sp, r7
 800444e:	b002      	add	sp, #8
 8004450:	bd80      	pop	{r7, pc}

08004452 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8004452:	b580      	push	{r7, lr}
 8004454:	b084      	sub	sp, #16
 8004456:	af00      	add	r7, sp, #0
 8004458:	60f8      	str	r0, [r7, #12]
 800445a:	60b9      	str	r1, [r7, #8]
 800445c:	607a      	str	r2, [r7, #4]
	return 0;
 800445e:	2300      	movs	r3, #0
}
 8004460:	0018      	movs	r0, r3
 8004462:	46bd      	mov	sp, r7
 8004464:	b004      	add	sp, #16
 8004466:	bd80      	pop	{r7, pc}

08004468 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8004468:	b580      	push	{r7, lr}
 800446a:	b086      	sub	sp, #24
 800446c:	af00      	add	r7, sp, #0
 800446e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004470:	4a14      	ldr	r2, [pc, #80]	; (80044c4 <_sbrk+0x5c>)
 8004472:	4b15      	ldr	r3, [pc, #84]	; (80044c8 <_sbrk+0x60>)
 8004474:	1ad3      	subs	r3, r2, r3
 8004476:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8004478:	697b      	ldr	r3, [r7, #20]
 800447a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800447c:	4b13      	ldr	r3, [pc, #76]	; (80044cc <_sbrk+0x64>)
 800447e:	681b      	ldr	r3, [r3, #0]
 8004480:	2b00      	cmp	r3, #0
 8004482:	d102      	bne.n	800448a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8004484:	4b11      	ldr	r3, [pc, #68]	; (80044cc <_sbrk+0x64>)
 8004486:	4a12      	ldr	r2, [pc, #72]	; (80044d0 <_sbrk+0x68>)
 8004488:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800448a:	4b10      	ldr	r3, [pc, #64]	; (80044cc <_sbrk+0x64>)
 800448c:	681a      	ldr	r2, [r3, #0]
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	18d3      	adds	r3, r2, r3
 8004492:	693a      	ldr	r2, [r7, #16]
 8004494:	429a      	cmp	r2, r3
 8004496:	d207      	bcs.n	80044a8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8004498:	f001 fb5c 	bl	8005b54 <__errno>
 800449c:	0003      	movs	r3, r0
 800449e:	220c      	movs	r2, #12
 80044a0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80044a2:	2301      	movs	r3, #1
 80044a4:	425b      	negs	r3, r3
 80044a6:	e009      	b.n	80044bc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80044a8:	4b08      	ldr	r3, [pc, #32]	; (80044cc <_sbrk+0x64>)
 80044aa:	681b      	ldr	r3, [r3, #0]
 80044ac:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80044ae:	4b07      	ldr	r3, [pc, #28]	; (80044cc <_sbrk+0x64>)
 80044b0:	681a      	ldr	r2, [r3, #0]
 80044b2:	687b      	ldr	r3, [r7, #4]
 80044b4:	18d2      	adds	r2, r2, r3
 80044b6:	4b05      	ldr	r3, [pc, #20]	; (80044cc <_sbrk+0x64>)
 80044b8:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80044ba:	68fb      	ldr	r3, [r7, #12]
}
 80044bc:	0018      	movs	r0, r3
 80044be:	46bd      	mov	sp, r7
 80044c0:	b006      	add	sp, #24
 80044c2:	bd80      	pop	{r7, pc}
 80044c4:	20002000 	.word	0x20002000
 80044c8:	00000400 	.word	0x00000400
 80044cc:	20000280 	.word	0x20000280
 80044d0:	20000298 	.word	0x20000298

080044d4 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80044d4:	b580      	push	{r7, lr}
 80044d6:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 80044d8:	46c0      	nop			; (mov r8, r8)
 80044da:	46bd      	mov	sp, r7
 80044dc:	bd80      	pop	{r7, pc}
	...

080044e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80044e0:	480d      	ldr	r0, [pc, #52]	; (8004518 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80044e2:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80044e4:	480d      	ldr	r0, [pc, #52]	; (800451c <LoopForever+0x6>)
  ldr r1, =_edata
 80044e6:	490e      	ldr	r1, [pc, #56]	; (8004520 <LoopForever+0xa>)
  ldr r2, =_sidata
 80044e8:	4a0e      	ldr	r2, [pc, #56]	; (8004524 <LoopForever+0xe>)
  movs r3, #0
 80044ea:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80044ec:	e002      	b.n	80044f4 <LoopCopyDataInit>

080044ee <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80044ee:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80044f0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80044f2:	3304      	adds	r3, #4

080044f4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80044f4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80044f6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80044f8:	d3f9      	bcc.n	80044ee <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80044fa:	4a0b      	ldr	r2, [pc, #44]	; (8004528 <LoopForever+0x12>)
  ldr r4, =_ebss
 80044fc:	4c0b      	ldr	r4, [pc, #44]	; (800452c <LoopForever+0x16>)
  movs r3, #0
 80044fe:	2300      	movs	r3, #0
  b LoopFillZerobss
 8004500:	e001      	b.n	8004506 <LoopFillZerobss>

08004502 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8004502:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8004504:	3204      	adds	r2, #4

08004506 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8004506:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8004508:	d3fb      	bcc.n	8004502 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800450a:	f7ff ffe3 	bl	80044d4 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 800450e:	f001 fb27 	bl	8005b60 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8004512:	f7fe f873 	bl	80025fc <main>

08004516 <LoopForever>:

LoopForever:
    b LoopForever
 8004516:	e7fe      	b.n	8004516 <LoopForever>
  ldr   r0, =_estack
 8004518:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 800451c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8004520:	200001dc 	.word	0x200001dc
  ldr r2, =_sidata
 8004524:	08009064 	.word	0x08009064
  ldr r2, =_sbss
 8004528:	200001dc 	.word	0x200001dc
  ldr r4, =_ebss
 800452c:	20000298 	.word	0x20000298

08004530 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8004530:	e7fe      	b.n	8004530 <ADC1_COMP_IRQHandler>
	...

08004534 <HAL_Init>:
  *       In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004534:	b580      	push	{r7, lr}
 8004536:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */ 
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004538:	4b07      	ldr	r3, [pc, #28]	; (8004558 <HAL_Init+0x24>)
 800453a:	681a      	ldr	r2, [r3, #0]
 800453c:	4b06      	ldr	r3, [pc, #24]	; (8004558 <HAL_Init+0x24>)
 800453e:	2110      	movs	r1, #16
 8004540:	430a      	orrs	r2, r1
 8004542:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */

  HAL_InitTick(TICK_INT_PRIORITY);
 8004544:	2000      	movs	r0, #0
 8004546:	f000 f809 	bl	800455c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800454a:	f7ff fe7f 	bl	800424c <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 800454e:	2300      	movs	r3, #0
}
 8004550:	0018      	movs	r0, r3
 8004552:	46bd      	mov	sp, r7
 8004554:	bd80      	pop	{r7, pc}
 8004556:	46c0      	nop			; (mov r8, r8)
 8004558:	40022000 	.word	0x40022000

0800455c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800455c:	b590      	push	{r4, r7, lr}
 800455e:	b083      	sub	sp, #12
 8004560:	af00      	add	r7, sp, #0
 8004562:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8004564:	4b14      	ldr	r3, [pc, #80]	; (80045b8 <HAL_InitTick+0x5c>)
 8004566:	681c      	ldr	r4, [r3, #0]
 8004568:	4b14      	ldr	r3, [pc, #80]	; (80045bc <HAL_InitTick+0x60>)
 800456a:	781b      	ldrb	r3, [r3, #0]
 800456c:	0019      	movs	r1, r3
 800456e:	23fa      	movs	r3, #250	; 0xfa
 8004570:	0098      	lsls	r0, r3, #2
 8004572:	f7fb fde5 	bl	8000140 <__udivsi3>
 8004576:	0003      	movs	r3, r0
 8004578:	0019      	movs	r1, r3
 800457a:	0020      	movs	r0, r4
 800457c:	f7fb fde0 	bl	8000140 <__udivsi3>
 8004580:	0003      	movs	r3, r0
 8004582:	0018      	movs	r0, r3
 8004584:	f000 f8e1 	bl	800474a <HAL_SYSTICK_Config>
 8004588:	1e03      	subs	r3, r0, #0
 800458a:	d001      	beq.n	8004590 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 800458c:	2301      	movs	r3, #1
 800458e:	e00f      	b.n	80045b0 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8004590:	687b      	ldr	r3, [r7, #4]
 8004592:	2b03      	cmp	r3, #3
 8004594:	d80b      	bhi.n	80045ae <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8004596:	6879      	ldr	r1, [r7, #4]
 8004598:	2301      	movs	r3, #1
 800459a:	425b      	negs	r3, r3
 800459c:	2200      	movs	r2, #0
 800459e:	0018      	movs	r0, r3
 80045a0:	f000 f8be 	bl	8004720 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80045a4:	4b06      	ldr	r3, [pc, #24]	; (80045c0 <HAL_InitTick+0x64>)
 80045a6:	687a      	ldr	r2, [r7, #4]
 80045a8:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 80045aa:	2300      	movs	r3, #0
 80045ac:	e000      	b.n	80045b0 <HAL_InitTick+0x54>
    return HAL_ERROR;
 80045ae:	2301      	movs	r3, #1
}
 80045b0:	0018      	movs	r0, r3
 80045b2:	46bd      	mov	sp, r7
 80045b4:	b003      	add	sp, #12
 80045b6:	bd90      	pop	{r4, r7, pc}
 80045b8:	20000000 	.word	0x20000000
 80045bc:	20000008 	.word	0x20000008
 80045c0:	20000004 	.word	0x20000004

080045c4 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80045c4:	b580      	push	{r7, lr}
 80045c6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80045c8:	4b05      	ldr	r3, [pc, #20]	; (80045e0 <HAL_IncTick+0x1c>)
 80045ca:	781b      	ldrb	r3, [r3, #0]
 80045cc:	001a      	movs	r2, r3
 80045ce:	4b05      	ldr	r3, [pc, #20]	; (80045e4 <HAL_IncTick+0x20>)
 80045d0:	681b      	ldr	r3, [r3, #0]
 80045d2:	18d2      	adds	r2, r2, r3
 80045d4:	4b03      	ldr	r3, [pc, #12]	; (80045e4 <HAL_IncTick+0x20>)
 80045d6:	601a      	str	r2, [r3, #0]
}
 80045d8:	46c0      	nop			; (mov r8, r8)
 80045da:	46bd      	mov	sp, r7
 80045dc:	bd80      	pop	{r7, pc}
 80045de:	46c0      	nop			; (mov r8, r8)
 80045e0:	20000008 	.word	0x20000008
 80045e4:	20000284 	.word	0x20000284

080045e8 <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80045e8:	b580      	push	{r7, lr}
 80045ea:	af00      	add	r7, sp, #0
  return uwTick;
 80045ec:	4b02      	ldr	r3, [pc, #8]	; (80045f8 <HAL_GetTick+0x10>)
 80045ee:	681b      	ldr	r3, [r3, #0]
}
 80045f0:	0018      	movs	r0, r3
 80045f2:	46bd      	mov	sp, r7
 80045f4:	bd80      	pop	{r7, pc}
 80045f6:	46c0      	nop			; (mov r8, r8)
 80045f8:	20000284 	.word	0x20000284

080045fc <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80045fc:	b590      	push	{r4, r7, lr}
 80045fe:	b083      	sub	sp, #12
 8004600:	af00      	add	r7, sp, #0
 8004602:	0002      	movs	r2, r0
 8004604:	6039      	str	r1, [r7, #0]
 8004606:	1dfb      	adds	r3, r7, #7
 8004608:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800460a:	1dfb      	adds	r3, r7, #7
 800460c:	781b      	ldrb	r3, [r3, #0]
 800460e:	2b7f      	cmp	r3, #127	; 0x7f
 8004610:	d828      	bhi.n	8004664 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004612:	4a2f      	ldr	r2, [pc, #188]	; (80046d0 <__NVIC_SetPriority+0xd4>)
 8004614:	1dfb      	adds	r3, r7, #7
 8004616:	781b      	ldrb	r3, [r3, #0]
 8004618:	b25b      	sxtb	r3, r3
 800461a:	089b      	lsrs	r3, r3, #2
 800461c:	33c0      	adds	r3, #192	; 0xc0
 800461e:	009b      	lsls	r3, r3, #2
 8004620:	589b      	ldr	r3, [r3, r2]
 8004622:	1dfa      	adds	r2, r7, #7
 8004624:	7812      	ldrb	r2, [r2, #0]
 8004626:	0011      	movs	r1, r2
 8004628:	2203      	movs	r2, #3
 800462a:	400a      	ands	r2, r1
 800462c:	00d2      	lsls	r2, r2, #3
 800462e:	21ff      	movs	r1, #255	; 0xff
 8004630:	4091      	lsls	r1, r2
 8004632:	000a      	movs	r2, r1
 8004634:	43d2      	mvns	r2, r2
 8004636:	401a      	ands	r2, r3
 8004638:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800463a:	683b      	ldr	r3, [r7, #0]
 800463c:	019b      	lsls	r3, r3, #6
 800463e:	22ff      	movs	r2, #255	; 0xff
 8004640:	401a      	ands	r2, r3
 8004642:	1dfb      	adds	r3, r7, #7
 8004644:	781b      	ldrb	r3, [r3, #0]
 8004646:	0018      	movs	r0, r3
 8004648:	2303      	movs	r3, #3
 800464a:	4003      	ands	r3, r0
 800464c:	00db      	lsls	r3, r3, #3
 800464e:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004650:	481f      	ldr	r0, [pc, #124]	; (80046d0 <__NVIC_SetPriority+0xd4>)
 8004652:	1dfb      	adds	r3, r7, #7
 8004654:	781b      	ldrb	r3, [r3, #0]
 8004656:	b25b      	sxtb	r3, r3
 8004658:	089b      	lsrs	r3, r3, #2
 800465a:	430a      	orrs	r2, r1
 800465c:	33c0      	adds	r3, #192	; 0xc0
 800465e:	009b      	lsls	r3, r3, #2
 8004660:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8004662:	e031      	b.n	80046c8 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8004664:	4a1b      	ldr	r2, [pc, #108]	; (80046d4 <__NVIC_SetPriority+0xd8>)
 8004666:	1dfb      	adds	r3, r7, #7
 8004668:	781b      	ldrb	r3, [r3, #0]
 800466a:	0019      	movs	r1, r3
 800466c:	230f      	movs	r3, #15
 800466e:	400b      	ands	r3, r1
 8004670:	3b08      	subs	r3, #8
 8004672:	089b      	lsrs	r3, r3, #2
 8004674:	3306      	adds	r3, #6
 8004676:	009b      	lsls	r3, r3, #2
 8004678:	18d3      	adds	r3, r2, r3
 800467a:	3304      	adds	r3, #4
 800467c:	681b      	ldr	r3, [r3, #0]
 800467e:	1dfa      	adds	r2, r7, #7
 8004680:	7812      	ldrb	r2, [r2, #0]
 8004682:	0011      	movs	r1, r2
 8004684:	2203      	movs	r2, #3
 8004686:	400a      	ands	r2, r1
 8004688:	00d2      	lsls	r2, r2, #3
 800468a:	21ff      	movs	r1, #255	; 0xff
 800468c:	4091      	lsls	r1, r2
 800468e:	000a      	movs	r2, r1
 8004690:	43d2      	mvns	r2, r2
 8004692:	401a      	ands	r2, r3
 8004694:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8004696:	683b      	ldr	r3, [r7, #0]
 8004698:	019b      	lsls	r3, r3, #6
 800469a:	22ff      	movs	r2, #255	; 0xff
 800469c:	401a      	ands	r2, r3
 800469e:	1dfb      	adds	r3, r7, #7
 80046a0:	781b      	ldrb	r3, [r3, #0]
 80046a2:	0018      	movs	r0, r3
 80046a4:	2303      	movs	r3, #3
 80046a6:	4003      	ands	r3, r0
 80046a8:	00db      	lsls	r3, r3, #3
 80046aa:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80046ac:	4809      	ldr	r0, [pc, #36]	; (80046d4 <__NVIC_SetPriority+0xd8>)
 80046ae:	1dfb      	adds	r3, r7, #7
 80046b0:	781b      	ldrb	r3, [r3, #0]
 80046b2:	001c      	movs	r4, r3
 80046b4:	230f      	movs	r3, #15
 80046b6:	4023      	ands	r3, r4
 80046b8:	3b08      	subs	r3, #8
 80046ba:	089b      	lsrs	r3, r3, #2
 80046bc:	430a      	orrs	r2, r1
 80046be:	3306      	adds	r3, #6
 80046c0:	009b      	lsls	r3, r3, #2
 80046c2:	18c3      	adds	r3, r0, r3
 80046c4:	3304      	adds	r3, #4
 80046c6:	601a      	str	r2, [r3, #0]
}
 80046c8:	46c0      	nop			; (mov r8, r8)
 80046ca:	46bd      	mov	sp, r7
 80046cc:	b003      	add	sp, #12
 80046ce:	bd90      	pop	{r4, r7, pc}
 80046d0:	e000e100 	.word	0xe000e100
 80046d4:	e000ed00 	.word	0xe000ed00

080046d8 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80046d8:	b580      	push	{r7, lr}
 80046da:	b082      	sub	sp, #8
 80046dc:	af00      	add	r7, sp, #0
 80046de:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80046e0:	687b      	ldr	r3, [r7, #4]
 80046e2:	1e5a      	subs	r2, r3, #1
 80046e4:	2380      	movs	r3, #128	; 0x80
 80046e6:	045b      	lsls	r3, r3, #17
 80046e8:	429a      	cmp	r2, r3
 80046ea:	d301      	bcc.n	80046f0 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 80046ec:	2301      	movs	r3, #1
 80046ee:	e010      	b.n	8004712 <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80046f0:	4b0a      	ldr	r3, [pc, #40]	; (800471c <SysTick_Config+0x44>)
 80046f2:	687a      	ldr	r2, [r7, #4]
 80046f4:	3a01      	subs	r2, #1
 80046f6:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80046f8:	2301      	movs	r3, #1
 80046fa:	425b      	negs	r3, r3
 80046fc:	2103      	movs	r1, #3
 80046fe:	0018      	movs	r0, r3
 8004700:	f7ff ff7c 	bl	80045fc <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8004704:	4b05      	ldr	r3, [pc, #20]	; (800471c <SysTick_Config+0x44>)
 8004706:	2200      	movs	r2, #0
 8004708:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800470a:	4b04      	ldr	r3, [pc, #16]	; (800471c <SysTick_Config+0x44>)
 800470c:	2207      	movs	r2, #7
 800470e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8004710:	2300      	movs	r3, #0
}
 8004712:	0018      	movs	r0, r3
 8004714:	46bd      	mov	sp, r7
 8004716:	b002      	add	sp, #8
 8004718:	bd80      	pop	{r7, pc}
 800471a:	46c0      	nop			; (mov r8, r8)
 800471c:	e000e010 	.word	0xe000e010

08004720 <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004720:	b580      	push	{r7, lr}
 8004722:	b084      	sub	sp, #16
 8004724:	af00      	add	r7, sp, #0
 8004726:	60b9      	str	r1, [r7, #8]
 8004728:	607a      	str	r2, [r7, #4]
 800472a:	210f      	movs	r1, #15
 800472c:	187b      	adds	r3, r7, r1
 800472e:	1c02      	adds	r2, r0, #0
 8004730:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8004732:	68ba      	ldr	r2, [r7, #8]
 8004734:	187b      	adds	r3, r7, r1
 8004736:	781b      	ldrb	r3, [r3, #0]
 8004738:	b25b      	sxtb	r3, r3
 800473a:	0011      	movs	r1, r2
 800473c:	0018      	movs	r0, r3
 800473e:	f7ff ff5d 	bl	80045fc <__NVIC_SetPriority>
}
 8004742:	46c0      	nop			; (mov r8, r8)
 8004744:	46bd      	mov	sp, r7
 8004746:	b004      	add	sp, #16
 8004748:	bd80      	pop	{r7, pc}

0800474a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800474a:	b580      	push	{r7, lr}
 800474c:	b082      	sub	sp, #8
 800474e:	af00      	add	r7, sp, #0
 8004750:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	0018      	movs	r0, r3
 8004756:	f7ff ffbf 	bl	80046d8 <SysTick_Config>
 800475a:	0003      	movs	r3, r0
}
 800475c:	0018      	movs	r0, r3
 800475e:	46bd      	mov	sp, r7
 8004760:	b002      	add	sp, #8
 8004762:	bd80      	pop	{r7, pc}

08004764 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004764:	b580      	push	{r7, lr}
 8004766:	b086      	sub	sp, #24
 8004768:	af00      	add	r7, sp, #0
 800476a:	6078      	str	r0, [r7, #4]
 800476c:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 800476e:	2300      	movs	r3, #0
 8004770:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8004772:	e14f      	b.n	8004a14 <HAL_GPIO_Init+0x2b0>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8004774:	683b      	ldr	r3, [r7, #0]
 8004776:	681b      	ldr	r3, [r3, #0]
 8004778:	2101      	movs	r1, #1
 800477a:	697a      	ldr	r2, [r7, #20]
 800477c:	4091      	lsls	r1, r2
 800477e:	000a      	movs	r2, r1
 8004780:	4013      	ands	r3, r2
 8004782:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8004784:	68fb      	ldr	r3, [r7, #12]
 8004786:	2b00      	cmp	r3, #0
 8004788:	d100      	bne.n	800478c <HAL_GPIO_Init+0x28>
 800478a:	e140      	b.n	8004a0e <HAL_GPIO_Init+0x2aa>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 800478c:	683b      	ldr	r3, [r7, #0]
 800478e:	685b      	ldr	r3, [r3, #4]
 8004790:	2203      	movs	r2, #3
 8004792:	4013      	ands	r3, r2
 8004794:	2b01      	cmp	r3, #1
 8004796:	d005      	beq.n	80047a4 <HAL_GPIO_Init+0x40>
         ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004798:	683b      	ldr	r3, [r7, #0]
 800479a:	685b      	ldr	r3, [r3, #4]
 800479c:	2203      	movs	r2, #3
 800479e:	4013      	ands	r3, r2
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 80047a0:	2b02      	cmp	r3, #2
 80047a2:	d130      	bne.n	8004806 <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	689b      	ldr	r3, [r3, #8]
 80047a8:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 80047aa:	697b      	ldr	r3, [r7, #20]
 80047ac:	005b      	lsls	r3, r3, #1
 80047ae:	2203      	movs	r2, #3
 80047b0:	409a      	lsls	r2, r3
 80047b2:	0013      	movs	r3, r2
 80047b4:	43da      	mvns	r2, r3
 80047b6:	693b      	ldr	r3, [r7, #16]
 80047b8:	4013      	ands	r3, r2
 80047ba:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 80047bc:	683b      	ldr	r3, [r7, #0]
 80047be:	68da      	ldr	r2, [r3, #12]
 80047c0:	697b      	ldr	r3, [r7, #20]
 80047c2:	005b      	lsls	r3, r3, #1
 80047c4:	409a      	lsls	r2, r3
 80047c6:	0013      	movs	r3, r2
 80047c8:	693a      	ldr	r2, [r7, #16]
 80047ca:	4313      	orrs	r3, r2
 80047cc:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	693a      	ldr	r2, [r7, #16]
 80047d2:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	685b      	ldr	r3, [r3, #4]
 80047d8:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80047da:	2201      	movs	r2, #1
 80047dc:	697b      	ldr	r3, [r7, #20]
 80047de:	409a      	lsls	r2, r3
 80047e0:	0013      	movs	r3, r2
 80047e2:	43da      	mvns	r2, r3
 80047e4:	693b      	ldr	r3, [r7, #16]
 80047e6:	4013      	ands	r3, r2
 80047e8:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80047ea:	683b      	ldr	r3, [r7, #0]
 80047ec:	685b      	ldr	r3, [r3, #4]
 80047ee:	091b      	lsrs	r3, r3, #4
 80047f0:	2201      	movs	r2, #1
 80047f2:	401a      	ands	r2, r3
 80047f4:	697b      	ldr	r3, [r7, #20]
 80047f6:	409a      	lsls	r2, r3
 80047f8:	0013      	movs	r3, r2
 80047fa:	693a      	ldr	r2, [r7, #16]
 80047fc:	4313      	orrs	r3, r2
 80047fe:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	693a      	ldr	r2, [r7, #16]
 8004804:	605a      	str	r2, [r3, #4]
      }
      
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004806:	683b      	ldr	r3, [r7, #0]
 8004808:	685b      	ldr	r3, [r3, #4]
 800480a:	2203      	movs	r2, #3
 800480c:	4013      	ands	r3, r2
 800480e:	2b03      	cmp	r3, #3
 8004810:	d017      	beq.n	8004842 <HAL_GPIO_Init+0xde>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8004812:	687b      	ldr	r3, [r7, #4]
 8004814:	68db      	ldr	r3, [r3, #12]
 8004816:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 8004818:	697b      	ldr	r3, [r7, #20]
 800481a:	005b      	lsls	r3, r3, #1
 800481c:	2203      	movs	r2, #3
 800481e:	409a      	lsls	r2, r3
 8004820:	0013      	movs	r3, r2
 8004822:	43da      	mvns	r2, r3
 8004824:	693b      	ldr	r3, [r7, #16]
 8004826:	4013      	ands	r3, r2
 8004828:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 800482a:	683b      	ldr	r3, [r7, #0]
 800482c:	689a      	ldr	r2, [r3, #8]
 800482e:	697b      	ldr	r3, [r7, #20]
 8004830:	005b      	lsls	r3, r3, #1
 8004832:	409a      	lsls	r2, r3
 8004834:	0013      	movs	r3, r2
 8004836:	693a      	ldr	r2, [r7, #16]
 8004838:	4313      	orrs	r3, r2
 800483a:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 800483c:	687b      	ldr	r3, [r7, #4]
 800483e:	693a      	ldr	r2, [r7, #16]
 8004840:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004842:	683b      	ldr	r3, [r7, #0]
 8004844:	685b      	ldr	r3, [r3, #4]
 8004846:	2203      	movs	r2, #3
 8004848:	4013      	ands	r3, r2
 800484a:	2b02      	cmp	r3, #2
 800484c:	d123      	bne.n	8004896 <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 800484e:	697b      	ldr	r3, [r7, #20]
 8004850:	08da      	lsrs	r2, r3, #3
 8004852:	687b      	ldr	r3, [r7, #4]
 8004854:	3208      	adds	r2, #8
 8004856:	0092      	lsls	r2, r2, #2
 8004858:	58d3      	ldr	r3, [r2, r3]
 800485a:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 800485c:	697b      	ldr	r3, [r7, #20]
 800485e:	2207      	movs	r2, #7
 8004860:	4013      	ands	r3, r2
 8004862:	009b      	lsls	r3, r3, #2
 8004864:	220f      	movs	r2, #15
 8004866:	409a      	lsls	r2, r3
 8004868:	0013      	movs	r3, r2
 800486a:	43da      	mvns	r2, r3
 800486c:	693b      	ldr	r3, [r7, #16]
 800486e:	4013      	ands	r3, r2
 8004870:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8004872:	683b      	ldr	r3, [r7, #0]
 8004874:	691a      	ldr	r2, [r3, #16]
 8004876:	697b      	ldr	r3, [r7, #20]
 8004878:	2107      	movs	r1, #7
 800487a:	400b      	ands	r3, r1
 800487c:	009b      	lsls	r3, r3, #2
 800487e:	409a      	lsls	r2, r3
 8004880:	0013      	movs	r3, r2
 8004882:	693a      	ldr	r2, [r7, #16]
 8004884:	4313      	orrs	r3, r2
 8004886:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8004888:	697b      	ldr	r3, [r7, #20]
 800488a:	08da      	lsrs	r2, r3, #3
 800488c:	687b      	ldr	r3, [r7, #4]
 800488e:	3208      	adds	r2, #8
 8004890:	0092      	lsls	r2, r2, #2
 8004892:	6939      	ldr	r1, [r7, #16]
 8004894:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8004896:	687b      	ldr	r3, [r7, #4]
 8004898:	681b      	ldr	r3, [r3, #0]
 800489a:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 800489c:	697b      	ldr	r3, [r7, #20]
 800489e:	005b      	lsls	r3, r3, #1
 80048a0:	2203      	movs	r2, #3
 80048a2:	409a      	lsls	r2, r3
 80048a4:	0013      	movs	r3, r2
 80048a6:	43da      	mvns	r2, r3
 80048a8:	693b      	ldr	r3, [r7, #16]
 80048aa:	4013      	ands	r3, r2
 80048ac:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 80048ae:	683b      	ldr	r3, [r7, #0]
 80048b0:	685b      	ldr	r3, [r3, #4]
 80048b2:	2203      	movs	r2, #3
 80048b4:	401a      	ands	r2, r3
 80048b6:	697b      	ldr	r3, [r7, #20]
 80048b8:	005b      	lsls	r3, r3, #1
 80048ba:	409a      	lsls	r2, r3
 80048bc:	0013      	movs	r3, r2
 80048be:	693a      	ldr	r2, [r7, #16]
 80048c0:	4313      	orrs	r3, r2
 80048c2:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	693a      	ldr	r2, [r7, #16]
 80048c8:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80048ca:	683b      	ldr	r3, [r7, #0]
 80048cc:	685a      	ldr	r2, [r3, #4]
 80048ce:	23c0      	movs	r3, #192	; 0xc0
 80048d0:	029b      	lsls	r3, r3, #10
 80048d2:	4013      	ands	r3, r2
 80048d4:	d100      	bne.n	80048d8 <HAL_GPIO_Init+0x174>
 80048d6:	e09a      	b.n	8004a0e <HAL_GPIO_Init+0x2aa>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80048d8:	4b54      	ldr	r3, [pc, #336]	; (8004a2c <HAL_GPIO_Init+0x2c8>)
 80048da:	699a      	ldr	r2, [r3, #24]
 80048dc:	4b53      	ldr	r3, [pc, #332]	; (8004a2c <HAL_GPIO_Init+0x2c8>)
 80048de:	2101      	movs	r1, #1
 80048e0:	430a      	orrs	r2, r1
 80048e2:	619a      	str	r2, [r3, #24]
 80048e4:	4b51      	ldr	r3, [pc, #324]	; (8004a2c <HAL_GPIO_Init+0x2c8>)
 80048e6:	699b      	ldr	r3, [r3, #24]
 80048e8:	2201      	movs	r2, #1
 80048ea:	4013      	ands	r3, r2
 80048ec:	60bb      	str	r3, [r7, #8]
 80048ee:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 80048f0:	4a4f      	ldr	r2, [pc, #316]	; (8004a30 <HAL_GPIO_Init+0x2cc>)
 80048f2:	697b      	ldr	r3, [r7, #20]
 80048f4:	089b      	lsrs	r3, r3, #2
 80048f6:	3302      	adds	r3, #2
 80048f8:	009b      	lsls	r3, r3, #2
 80048fa:	589b      	ldr	r3, [r3, r2]
 80048fc:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80048fe:	697b      	ldr	r3, [r7, #20]
 8004900:	2203      	movs	r2, #3
 8004902:	4013      	ands	r3, r2
 8004904:	009b      	lsls	r3, r3, #2
 8004906:	220f      	movs	r2, #15
 8004908:	409a      	lsls	r2, r3
 800490a:	0013      	movs	r3, r2
 800490c:	43da      	mvns	r2, r3
 800490e:	693b      	ldr	r3, [r7, #16]
 8004910:	4013      	ands	r3, r2
 8004912:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8004914:	687a      	ldr	r2, [r7, #4]
 8004916:	2390      	movs	r3, #144	; 0x90
 8004918:	05db      	lsls	r3, r3, #23
 800491a:	429a      	cmp	r2, r3
 800491c:	d013      	beq.n	8004946 <HAL_GPIO_Init+0x1e2>
 800491e:	687b      	ldr	r3, [r7, #4]
 8004920:	4a44      	ldr	r2, [pc, #272]	; (8004a34 <HAL_GPIO_Init+0x2d0>)
 8004922:	4293      	cmp	r3, r2
 8004924:	d00d      	beq.n	8004942 <HAL_GPIO_Init+0x1de>
 8004926:	687b      	ldr	r3, [r7, #4]
 8004928:	4a43      	ldr	r2, [pc, #268]	; (8004a38 <HAL_GPIO_Init+0x2d4>)
 800492a:	4293      	cmp	r3, r2
 800492c:	d007      	beq.n	800493e <HAL_GPIO_Init+0x1da>
 800492e:	687b      	ldr	r3, [r7, #4]
 8004930:	4a42      	ldr	r2, [pc, #264]	; (8004a3c <HAL_GPIO_Init+0x2d8>)
 8004932:	4293      	cmp	r3, r2
 8004934:	d101      	bne.n	800493a <HAL_GPIO_Init+0x1d6>
 8004936:	2303      	movs	r3, #3
 8004938:	e006      	b.n	8004948 <HAL_GPIO_Init+0x1e4>
 800493a:	2305      	movs	r3, #5
 800493c:	e004      	b.n	8004948 <HAL_GPIO_Init+0x1e4>
 800493e:	2302      	movs	r3, #2
 8004940:	e002      	b.n	8004948 <HAL_GPIO_Init+0x1e4>
 8004942:	2301      	movs	r3, #1
 8004944:	e000      	b.n	8004948 <HAL_GPIO_Init+0x1e4>
 8004946:	2300      	movs	r3, #0
 8004948:	697a      	ldr	r2, [r7, #20]
 800494a:	2103      	movs	r1, #3
 800494c:	400a      	ands	r2, r1
 800494e:	0092      	lsls	r2, r2, #2
 8004950:	4093      	lsls	r3, r2
 8004952:	693a      	ldr	r2, [r7, #16]
 8004954:	4313      	orrs	r3, r2
 8004956:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 8004958:	4935      	ldr	r1, [pc, #212]	; (8004a30 <HAL_GPIO_Init+0x2cc>)
 800495a:	697b      	ldr	r3, [r7, #20]
 800495c:	089b      	lsrs	r3, r3, #2
 800495e:	3302      	adds	r3, #2
 8004960:	009b      	lsls	r3, r3, #2
 8004962:	693a      	ldr	r2, [r7, #16]
 8004964:	505a      	str	r2, [r3, r1]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004966:	4b36      	ldr	r3, [pc, #216]	; (8004a40 <HAL_GPIO_Init+0x2dc>)
 8004968:	681b      	ldr	r3, [r3, #0]
 800496a:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 800496c:	68fb      	ldr	r3, [r7, #12]
 800496e:	43da      	mvns	r2, r3
 8004970:	693b      	ldr	r3, [r7, #16]
 8004972:	4013      	ands	r3, r2
 8004974:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8004976:	683b      	ldr	r3, [r7, #0]
 8004978:	685a      	ldr	r2, [r3, #4]
 800497a:	2380      	movs	r3, #128	; 0x80
 800497c:	025b      	lsls	r3, r3, #9
 800497e:	4013      	ands	r3, r2
 8004980:	d003      	beq.n	800498a <HAL_GPIO_Init+0x226>
        {
          temp |= iocurrent;
 8004982:	693a      	ldr	r2, [r7, #16]
 8004984:	68fb      	ldr	r3, [r7, #12]
 8004986:	4313      	orrs	r3, r2
 8004988:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 800498a:	4b2d      	ldr	r3, [pc, #180]	; (8004a40 <HAL_GPIO_Init+0x2dc>)
 800498c:	693a      	ldr	r2, [r7, #16]
 800498e:	601a      	str	r2, [r3, #0]

        temp = EXTI->EMR;
 8004990:	4b2b      	ldr	r3, [pc, #172]	; (8004a40 <HAL_GPIO_Init+0x2dc>)
 8004992:	685b      	ldr	r3, [r3, #4]
 8004994:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8004996:	68fb      	ldr	r3, [r7, #12]
 8004998:	43da      	mvns	r2, r3
 800499a:	693b      	ldr	r3, [r7, #16]
 800499c:	4013      	ands	r3, r2
 800499e:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 80049a0:	683b      	ldr	r3, [r7, #0]
 80049a2:	685a      	ldr	r2, [r3, #4]
 80049a4:	2380      	movs	r3, #128	; 0x80
 80049a6:	029b      	lsls	r3, r3, #10
 80049a8:	4013      	ands	r3, r2
 80049aa:	d003      	beq.n	80049b4 <HAL_GPIO_Init+0x250>
        {
          temp |= iocurrent;
 80049ac:	693a      	ldr	r2, [r7, #16]
 80049ae:	68fb      	ldr	r3, [r7, #12]
 80049b0:	4313      	orrs	r3, r2
 80049b2:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 80049b4:	4b22      	ldr	r3, [pc, #136]	; (8004a40 <HAL_GPIO_Init+0x2dc>)
 80049b6:	693a      	ldr	r2, [r7, #16]
 80049b8:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80049ba:	4b21      	ldr	r3, [pc, #132]	; (8004a40 <HAL_GPIO_Init+0x2dc>)
 80049bc:	689b      	ldr	r3, [r3, #8]
 80049be:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80049c0:	68fb      	ldr	r3, [r7, #12]
 80049c2:	43da      	mvns	r2, r3
 80049c4:	693b      	ldr	r3, [r7, #16]
 80049c6:	4013      	ands	r3, r2
 80049c8:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 80049ca:	683b      	ldr	r3, [r7, #0]
 80049cc:	685a      	ldr	r2, [r3, #4]
 80049ce:	2380      	movs	r3, #128	; 0x80
 80049d0:	035b      	lsls	r3, r3, #13
 80049d2:	4013      	ands	r3, r2
 80049d4:	d003      	beq.n	80049de <HAL_GPIO_Init+0x27a>
        {
          temp |= iocurrent;
 80049d6:	693a      	ldr	r2, [r7, #16]
 80049d8:	68fb      	ldr	r3, [r7, #12]
 80049da:	4313      	orrs	r3, r2
 80049dc:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 80049de:	4b18      	ldr	r3, [pc, #96]	; (8004a40 <HAL_GPIO_Init+0x2dc>)
 80049e0:	693a      	ldr	r2, [r7, #16]
 80049e2:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 80049e4:	4b16      	ldr	r3, [pc, #88]	; (8004a40 <HAL_GPIO_Init+0x2dc>)
 80049e6:	68db      	ldr	r3, [r3, #12]
 80049e8:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 80049ea:	68fb      	ldr	r3, [r7, #12]
 80049ec:	43da      	mvns	r2, r3
 80049ee:	693b      	ldr	r3, [r7, #16]
 80049f0:	4013      	ands	r3, r2
 80049f2:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80049f4:	683b      	ldr	r3, [r7, #0]
 80049f6:	685a      	ldr	r2, [r3, #4]
 80049f8:	2380      	movs	r3, #128	; 0x80
 80049fa:	039b      	lsls	r3, r3, #14
 80049fc:	4013      	ands	r3, r2
 80049fe:	d003      	beq.n	8004a08 <HAL_GPIO_Init+0x2a4>
        {
          temp |= iocurrent;
 8004a00:	693a      	ldr	r2, [r7, #16]
 8004a02:	68fb      	ldr	r3, [r7, #12]
 8004a04:	4313      	orrs	r3, r2
 8004a06:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 8004a08:	4b0d      	ldr	r3, [pc, #52]	; (8004a40 <HAL_GPIO_Init+0x2dc>)
 8004a0a:	693a      	ldr	r2, [r7, #16]
 8004a0c:	60da      	str	r2, [r3, #12]
      }
    }

    position++;
 8004a0e:	697b      	ldr	r3, [r7, #20]
 8004a10:	3301      	adds	r3, #1
 8004a12:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8004a14:	683b      	ldr	r3, [r7, #0]
 8004a16:	681a      	ldr	r2, [r3, #0]
 8004a18:	697b      	ldr	r3, [r7, #20]
 8004a1a:	40da      	lsrs	r2, r3
 8004a1c:	1e13      	subs	r3, r2, #0
 8004a1e:	d000      	beq.n	8004a22 <HAL_GPIO_Init+0x2be>
 8004a20:	e6a8      	b.n	8004774 <HAL_GPIO_Init+0x10>
  } 
}
 8004a22:	46c0      	nop			; (mov r8, r8)
 8004a24:	46c0      	nop			; (mov r8, r8)
 8004a26:	46bd      	mov	sp, r7
 8004a28:	b006      	add	sp, #24
 8004a2a:	bd80      	pop	{r7, pc}
 8004a2c:	40021000 	.word	0x40021000
 8004a30:	40010000 	.word	0x40010000
 8004a34:	48000400 	.word	0x48000400
 8004a38:	48000800 	.word	0x48000800
 8004a3c:	48000c00 	.word	0x48000c00
 8004a40:	40010400 	.word	0x40010400

08004a44 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8004a44:	b580      	push	{r7, lr}
 8004a46:	b082      	sub	sp, #8
 8004a48:	af00      	add	r7, sp, #0
 8004a4a:	6078      	str	r0, [r7, #4]
 8004a4c:	0008      	movs	r0, r1
 8004a4e:	0011      	movs	r1, r2
 8004a50:	1cbb      	adds	r3, r7, #2
 8004a52:	1c02      	adds	r2, r0, #0
 8004a54:	801a      	strh	r2, [r3, #0]
 8004a56:	1c7b      	adds	r3, r7, #1
 8004a58:	1c0a      	adds	r2, r1, #0
 8004a5a:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8004a5c:	1c7b      	adds	r3, r7, #1
 8004a5e:	781b      	ldrb	r3, [r3, #0]
 8004a60:	2b00      	cmp	r3, #0
 8004a62:	d004      	beq.n	8004a6e <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8004a64:	1cbb      	adds	r3, r7, #2
 8004a66:	881a      	ldrh	r2, [r3, #0]
 8004a68:	687b      	ldr	r3, [r7, #4]
 8004a6a:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8004a6c:	e003      	b.n	8004a76 <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8004a6e:	1cbb      	adds	r3, r7, #2
 8004a70:	881a      	ldrh	r2, [r3, #0]
 8004a72:	687b      	ldr	r3, [r7, #4]
 8004a74:	629a      	str	r2, [r3, #40]	; 0x28
}
 8004a76:	46c0      	nop			; (mov r8, r8)
 8004a78:	46bd      	mov	sp, r7
 8004a7a:	b002      	add	sp, #8
 8004a7c:	bd80      	pop	{r7, pc}
	...

08004a80 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8004a80:	b580      	push	{r7, lr}
 8004a82:	b088      	sub	sp, #32
 8004a84:	af00      	add	r7, sp, #0
 8004a86:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	2b00      	cmp	r3, #0
 8004a8c:	d101      	bne.n	8004a92 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8004a8e:	2301      	movs	r3, #1
 8004a90:	e301      	b.n	8005096 <HAL_RCC_OscConfig+0x616>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8004a92:	687b      	ldr	r3, [r7, #4]
 8004a94:	681b      	ldr	r3, [r3, #0]
 8004a96:	2201      	movs	r2, #1
 8004a98:	4013      	ands	r3, r2
 8004a9a:	d100      	bne.n	8004a9e <HAL_RCC_OscConfig+0x1e>
 8004a9c:	e08d      	b.n	8004bba <HAL_RCC_OscConfig+0x13a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 8004a9e:	4bc3      	ldr	r3, [pc, #780]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004aa0:	685b      	ldr	r3, [r3, #4]
 8004aa2:	220c      	movs	r2, #12
 8004aa4:	4013      	ands	r3, r2
 8004aa6:	2b04      	cmp	r3, #4
 8004aa8:	d00e      	beq.n	8004ac8 <HAL_RCC_OscConfig+0x48>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8004aaa:	4bc0      	ldr	r3, [pc, #768]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004aac:	685b      	ldr	r3, [r3, #4]
 8004aae:	220c      	movs	r2, #12
 8004ab0:	4013      	ands	r3, r2
 8004ab2:	2b08      	cmp	r3, #8
 8004ab4:	d116      	bne.n	8004ae4 <HAL_RCC_OscConfig+0x64>
 8004ab6:	4bbd      	ldr	r3, [pc, #756]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004ab8:	685a      	ldr	r2, [r3, #4]
 8004aba:	2380      	movs	r3, #128	; 0x80
 8004abc:	025b      	lsls	r3, r3, #9
 8004abe:	401a      	ands	r2, r3
 8004ac0:	2380      	movs	r3, #128	; 0x80
 8004ac2:	025b      	lsls	r3, r3, #9
 8004ac4:	429a      	cmp	r2, r3
 8004ac6:	d10d      	bne.n	8004ae4 <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004ac8:	4bb8      	ldr	r3, [pc, #736]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004aca:	681a      	ldr	r2, [r3, #0]
 8004acc:	2380      	movs	r3, #128	; 0x80
 8004ace:	029b      	lsls	r3, r3, #10
 8004ad0:	4013      	ands	r3, r2
 8004ad2:	d100      	bne.n	8004ad6 <HAL_RCC_OscConfig+0x56>
 8004ad4:	e070      	b.n	8004bb8 <HAL_RCC_OscConfig+0x138>
 8004ad6:	687b      	ldr	r3, [r7, #4]
 8004ad8:	685b      	ldr	r3, [r3, #4]
 8004ada:	2b00      	cmp	r3, #0
 8004adc:	d000      	beq.n	8004ae0 <HAL_RCC_OscConfig+0x60>
 8004ade:	e06b      	b.n	8004bb8 <HAL_RCC_OscConfig+0x138>
      {
        return HAL_ERROR;
 8004ae0:	2301      	movs	r3, #1
 8004ae2:	e2d8      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004ae4:	687b      	ldr	r3, [r7, #4]
 8004ae6:	685b      	ldr	r3, [r3, #4]
 8004ae8:	2b01      	cmp	r3, #1
 8004aea:	d107      	bne.n	8004afc <HAL_RCC_OscConfig+0x7c>
 8004aec:	4baf      	ldr	r3, [pc, #700]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004aee:	681a      	ldr	r2, [r3, #0]
 8004af0:	4bae      	ldr	r3, [pc, #696]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004af2:	2180      	movs	r1, #128	; 0x80
 8004af4:	0249      	lsls	r1, r1, #9
 8004af6:	430a      	orrs	r2, r1
 8004af8:	601a      	str	r2, [r3, #0]
 8004afa:	e02f      	b.n	8004b5c <HAL_RCC_OscConfig+0xdc>
 8004afc:	687b      	ldr	r3, [r7, #4]
 8004afe:	685b      	ldr	r3, [r3, #4]
 8004b00:	2b00      	cmp	r3, #0
 8004b02:	d10c      	bne.n	8004b1e <HAL_RCC_OscConfig+0x9e>
 8004b04:	4ba9      	ldr	r3, [pc, #676]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004b06:	681a      	ldr	r2, [r3, #0]
 8004b08:	4ba8      	ldr	r3, [pc, #672]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004b0a:	49a9      	ldr	r1, [pc, #676]	; (8004db0 <HAL_RCC_OscConfig+0x330>)
 8004b0c:	400a      	ands	r2, r1
 8004b0e:	601a      	str	r2, [r3, #0]
 8004b10:	4ba6      	ldr	r3, [pc, #664]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004b12:	681a      	ldr	r2, [r3, #0]
 8004b14:	4ba5      	ldr	r3, [pc, #660]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004b16:	49a7      	ldr	r1, [pc, #668]	; (8004db4 <HAL_RCC_OscConfig+0x334>)
 8004b18:	400a      	ands	r2, r1
 8004b1a:	601a      	str	r2, [r3, #0]
 8004b1c:	e01e      	b.n	8004b5c <HAL_RCC_OscConfig+0xdc>
 8004b1e:	687b      	ldr	r3, [r7, #4]
 8004b20:	685b      	ldr	r3, [r3, #4]
 8004b22:	2b05      	cmp	r3, #5
 8004b24:	d10e      	bne.n	8004b44 <HAL_RCC_OscConfig+0xc4>
 8004b26:	4ba1      	ldr	r3, [pc, #644]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004b28:	681a      	ldr	r2, [r3, #0]
 8004b2a:	4ba0      	ldr	r3, [pc, #640]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004b2c:	2180      	movs	r1, #128	; 0x80
 8004b2e:	02c9      	lsls	r1, r1, #11
 8004b30:	430a      	orrs	r2, r1
 8004b32:	601a      	str	r2, [r3, #0]
 8004b34:	4b9d      	ldr	r3, [pc, #628]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004b36:	681a      	ldr	r2, [r3, #0]
 8004b38:	4b9c      	ldr	r3, [pc, #624]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004b3a:	2180      	movs	r1, #128	; 0x80
 8004b3c:	0249      	lsls	r1, r1, #9
 8004b3e:	430a      	orrs	r2, r1
 8004b40:	601a      	str	r2, [r3, #0]
 8004b42:	e00b      	b.n	8004b5c <HAL_RCC_OscConfig+0xdc>
 8004b44:	4b99      	ldr	r3, [pc, #612]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004b46:	681a      	ldr	r2, [r3, #0]
 8004b48:	4b98      	ldr	r3, [pc, #608]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004b4a:	4999      	ldr	r1, [pc, #612]	; (8004db0 <HAL_RCC_OscConfig+0x330>)
 8004b4c:	400a      	ands	r2, r1
 8004b4e:	601a      	str	r2, [r3, #0]
 8004b50:	4b96      	ldr	r3, [pc, #600]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004b52:	681a      	ldr	r2, [r3, #0]
 8004b54:	4b95      	ldr	r3, [pc, #596]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004b56:	4997      	ldr	r1, [pc, #604]	; (8004db4 <HAL_RCC_OscConfig+0x334>)
 8004b58:	400a      	ands	r2, r1
 8004b5a:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	685b      	ldr	r3, [r3, #4]
 8004b60:	2b00      	cmp	r3, #0
 8004b62:	d014      	beq.n	8004b8e <HAL_RCC_OscConfig+0x10e>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004b64:	f7ff fd40 	bl	80045e8 <HAL_GetTick>
 8004b68:	0003      	movs	r3, r0
 8004b6a:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004b6c:	e008      	b.n	8004b80 <HAL_RCC_OscConfig+0x100>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8004b6e:	f7ff fd3b 	bl	80045e8 <HAL_GetTick>
 8004b72:	0002      	movs	r2, r0
 8004b74:	69bb      	ldr	r3, [r7, #24]
 8004b76:	1ad3      	subs	r3, r2, r3
 8004b78:	2b64      	cmp	r3, #100	; 0x64
 8004b7a:	d901      	bls.n	8004b80 <HAL_RCC_OscConfig+0x100>
          {
            return HAL_TIMEOUT;
 8004b7c:	2303      	movs	r3, #3
 8004b7e:	e28a      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8004b80:	4b8a      	ldr	r3, [pc, #552]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004b82:	681a      	ldr	r2, [r3, #0]
 8004b84:	2380      	movs	r3, #128	; 0x80
 8004b86:	029b      	lsls	r3, r3, #10
 8004b88:	4013      	ands	r3, r2
 8004b8a:	d0f0      	beq.n	8004b6e <HAL_RCC_OscConfig+0xee>
 8004b8c:	e015      	b.n	8004bba <HAL_RCC_OscConfig+0x13a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004b8e:	f7ff fd2b 	bl	80045e8 <HAL_GetTick>
 8004b92:	0003      	movs	r3, r0
 8004b94:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004b96:	e008      	b.n	8004baa <HAL_RCC_OscConfig+0x12a>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8004b98:	f7ff fd26 	bl	80045e8 <HAL_GetTick>
 8004b9c:	0002      	movs	r2, r0
 8004b9e:	69bb      	ldr	r3, [r7, #24]
 8004ba0:	1ad3      	subs	r3, r2, r3
 8004ba2:	2b64      	cmp	r3, #100	; 0x64
 8004ba4:	d901      	bls.n	8004baa <HAL_RCC_OscConfig+0x12a>
          {
            return HAL_TIMEOUT;
 8004ba6:	2303      	movs	r3, #3
 8004ba8:	e275      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8004baa:	4b80      	ldr	r3, [pc, #512]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004bac:	681a      	ldr	r2, [r3, #0]
 8004bae:	2380      	movs	r3, #128	; 0x80
 8004bb0:	029b      	lsls	r3, r3, #10
 8004bb2:	4013      	ands	r3, r2
 8004bb4:	d1f0      	bne.n	8004b98 <HAL_RCC_OscConfig+0x118>
 8004bb6:	e000      	b.n	8004bba <HAL_RCC_OscConfig+0x13a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8004bb8:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8004bba:	687b      	ldr	r3, [r7, #4]
 8004bbc:	681b      	ldr	r3, [r3, #0]
 8004bbe:	2202      	movs	r2, #2
 8004bc0:	4013      	ands	r3, r2
 8004bc2:	d100      	bne.n	8004bc6 <HAL_RCC_OscConfig+0x146>
 8004bc4:	e069      	b.n	8004c9a <HAL_RCC_OscConfig+0x21a>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 8004bc6:	4b79      	ldr	r3, [pc, #484]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004bc8:	685b      	ldr	r3, [r3, #4]
 8004bca:	220c      	movs	r2, #12
 8004bcc:	4013      	ands	r3, r2
 8004bce:	d00b      	beq.n	8004be8 <HAL_RCC_OscConfig+0x168>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8004bd0:	4b76      	ldr	r3, [pc, #472]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004bd2:	685b      	ldr	r3, [r3, #4]
 8004bd4:	220c      	movs	r2, #12
 8004bd6:	4013      	ands	r3, r2
 8004bd8:	2b08      	cmp	r3, #8
 8004bda:	d11c      	bne.n	8004c16 <HAL_RCC_OscConfig+0x196>
 8004bdc:	4b73      	ldr	r3, [pc, #460]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004bde:	685a      	ldr	r2, [r3, #4]
 8004be0:	2380      	movs	r3, #128	; 0x80
 8004be2:	025b      	lsls	r3, r3, #9
 8004be4:	4013      	ands	r3, r2
 8004be6:	d116      	bne.n	8004c16 <HAL_RCC_OscConfig+0x196>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004be8:	4b70      	ldr	r3, [pc, #448]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004bea:	681b      	ldr	r3, [r3, #0]
 8004bec:	2202      	movs	r2, #2
 8004bee:	4013      	ands	r3, r2
 8004bf0:	d005      	beq.n	8004bfe <HAL_RCC_OscConfig+0x17e>
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	68db      	ldr	r3, [r3, #12]
 8004bf6:	2b01      	cmp	r3, #1
 8004bf8:	d001      	beq.n	8004bfe <HAL_RCC_OscConfig+0x17e>
      {
        return HAL_ERROR;
 8004bfa:	2301      	movs	r3, #1
 8004bfc:	e24b      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004bfe:	4b6b      	ldr	r3, [pc, #428]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004c00:	681b      	ldr	r3, [r3, #0]
 8004c02:	22f8      	movs	r2, #248	; 0xf8
 8004c04:	4393      	bics	r3, r2
 8004c06:	0019      	movs	r1, r3
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	691b      	ldr	r3, [r3, #16]
 8004c0c:	00da      	lsls	r2, r3, #3
 8004c0e:	4b67      	ldr	r3, [pc, #412]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004c10:	430a      	orrs	r2, r1
 8004c12:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8004c14:	e041      	b.n	8004c9a <HAL_RCC_OscConfig+0x21a>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8004c16:	687b      	ldr	r3, [r7, #4]
 8004c18:	68db      	ldr	r3, [r3, #12]
 8004c1a:	2b00      	cmp	r3, #0
 8004c1c:	d024      	beq.n	8004c68 <HAL_RCC_OscConfig+0x1e8>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8004c1e:	4b63      	ldr	r3, [pc, #396]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004c20:	681a      	ldr	r2, [r3, #0]
 8004c22:	4b62      	ldr	r3, [pc, #392]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004c24:	2101      	movs	r1, #1
 8004c26:	430a      	orrs	r2, r1
 8004c28:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004c2a:	f7ff fcdd 	bl	80045e8 <HAL_GetTick>
 8004c2e:	0003      	movs	r3, r0
 8004c30:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004c32:	e008      	b.n	8004c46 <HAL_RCC_OscConfig+0x1c6>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004c34:	f7ff fcd8 	bl	80045e8 <HAL_GetTick>
 8004c38:	0002      	movs	r2, r0
 8004c3a:	69bb      	ldr	r3, [r7, #24]
 8004c3c:	1ad3      	subs	r3, r2, r3
 8004c3e:	2b02      	cmp	r3, #2
 8004c40:	d901      	bls.n	8004c46 <HAL_RCC_OscConfig+0x1c6>
          {
            return HAL_TIMEOUT;
 8004c42:	2303      	movs	r3, #3
 8004c44:	e227      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8004c46:	4b59      	ldr	r3, [pc, #356]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004c48:	681b      	ldr	r3, [r3, #0]
 8004c4a:	2202      	movs	r2, #2
 8004c4c:	4013      	ands	r3, r2
 8004c4e:	d0f1      	beq.n	8004c34 <HAL_RCC_OscConfig+0x1b4>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8004c50:	4b56      	ldr	r3, [pc, #344]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004c52:	681b      	ldr	r3, [r3, #0]
 8004c54:	22f8      	movs	r2, #248	; 0xf8
 8004c56:	4393      	bics	r3, r2
 8004c58:	0019      	movs	r1, r3
 8004c5a:	687b      	ldr	r3, [r7, #4]
 8004c5c:	691b      	ldr	r3, [r3, #16]
 8004c5e:	00da      	lsls	r2, r3, #3
 8004c60:	4b52      	ldr	r3, [pc, #328]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004c62:	430a      	orrs	r2, r1
 8004c64:	601a      	str	r2, [r3, #0]
 8004c66:	e018      	b.n	8004c9a <HAL_RCC_OscConfig+0x21a>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8004c68:	4b50      	ldr	r3, [pc, #320]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004c6a:	681a      	ldr	r2, [r3, #0]
 8004c6c:	4b4f      	ldr	r3, [pc, #316]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004c6e:	2101      	movs	r1, #1
 8004c70:	438a      	bics	r2, r1
 8004c72:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004c74:	f7ff fcb8 	bl	80045e8 <HAL_GetTick>
 8004c78:	0003      	movs	r3, r0
 8004c7a:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004c7c:	e008      	b.n	8004c90 <HAL_RCC_OscConfig+0x210>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004c7e:	f7ff fcb3 	bl	80045e8 <HAL_GetTick>
 8004c82:	0002      	movs	r2, r0
 8004c84:	69bb      	ldr	r3, [r7, #24]
 8004c86:	1ad3      	subs	r3, r2, r3
 8004c88:	2b02      	cmp	r3, #2
 8004c8a:	d901      	bls.n	8004c90 <HAL_RCC_OscConfig+0x210>
          {
            return HAL_TIMEOUT;
 8004c8c:	2303      	movs	r3, #3
 8004c8e:	e202      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8004c90:	4b46      	ldr	r3, [pc, #280]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004c92:	681b      	ldr	r3, [r3, #0]
 8004c94:	2202      	movs	r2, #2
 8004c96:	4013      	ands	r3, r2
 8004c98:	d1f1      	bne.n	8004c7e <HAL_RCC_OscConfig+0x1fe>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	681b      	ldr	r3, [r3, #0]
 8004c9e:	2208      	movs	r2, #8
 8004ca0:	4013      	ands	r3, r2
 8004ca2:	d036      	beq.n	8004d12 <HAL_RCC_OscConfig+0x292>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8004ca4:	687b      	ldr	r3, [r7, #4]
 8004ca6:	69db      	ldr	r3, [r3, #28]
 8004ca8:	2b00      	cmp	r3, #0
 8004caa:	d019      	beq.n	8004ce0 <HAL_RCC_OscConfig+0x260>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8004cac:	4b3f      	ldr	r3, [pc, #252]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004cae:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004cb0:	4b3e      	ldr	r3, [pc, #248]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004cb2:	2101      	movs	r1, #1
 8004cb4:	430a      	orrs	r2, r1
 8004cb6:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004cb8:	f7ff fc96 	bl	80045e8 <HAL_GetTick>
 8004cbc:	0003      	movs	r3, r0
 8004cbe:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004cc0:	e008      	b.n	8004cd4 <HAL_RCC_OscConfig+0x254>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004cc2:	f7ff fc91 	bl	80045e8 <HAL_GetTick>
 8004cc6:	0002      	movs	r2, r0
 8004cc8:	69bb      	ldr	r3, [r7, #24]
 8004cca:	1ad3      	subs	r3, r2, r3
 8004ccc:	2b02      	cmp	r3, #2
 8004cce:	d901      	bls.n	8004cd4 <HAL_RCC_OscConfig+0x254>
        {
          return HAL_TIMEOUT;
 8004cd0:	2303      	movs	r3, #3
 8004cd2:	e1e0      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8004cd4:	4b35      	ldr	r3, [pc, #212]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004cd6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cd8:	2202      	movs	r2, #2
 8004cda:	4013      	ands	r3, r2
 8004cdc:	d0f1      	beq.n	8004cc2 <HAL_RCC_OscConfig+0x242>
 8004cde:	e018      	b.n	8004d12 <HAL_RCC_OscConfig+0x292>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8004ce0:	4b32      	ldr	r3, [pc, #200]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004ce2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8004ce4:	4b31      	ldr	r3, [pc, #196]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004ce6:	2101      	movs	r1, #1
 8004ce8:	438a      	bics	r2, r1
 8004cea:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004cec:	f7ff fc7c 	bl	80045e8 <HAL_GetTick>
 8004cf0:	0003      	movs	r3, r0
 8004cf2:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004cf4:	e008      	b.n	8004d08 <HAL_RCC_OscConfig+0x288>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004cf6:	f7ff fc77 	bl	80045e8 <HAL_GetTick>
 8004cfa:	0002      	movs	r2, r0
 8004cfc:	69bb      	ldr	r3, [r7, #24]
 8004cfe:	1ad3      	subs	r3, r2, r3
 8004d00:	2b02      	cmp	r3, #2
 8004d02:	d901      	bls.n	8004d08 <HAL_RCC_OscConfig+0x288>
        {
          return HAL_TIMEOUT;
 8004d04:	2303      	movs	r3, #3
 8004d06:	e1c6      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8004d08:	4b28      	ldr	r3, [pc, #160]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004d0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004d0c:	2202      	movs	r2, #2
 8004d0e:	4013      	ands	r3, r2
 8004d10:	d1f1      	bne.n	8004cf6 <HAL_RCC_OscConfig+0x276>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	681b      	ldr	r3, [r3, #0]
 8004d16:	2204      	movs	r2, #4
 8004d18:	4013      	ands	r3, r2
 8004d1a:	d100      	bne.n	8004d1e <HAL_RCC_OscConfig+0x29e>
 8004d1c:	e0b4      	b.n	8004e88 <HAL_RCC_OscConfig+0x408>
  {
    FlagStatus       pwrclkchanged = RESET;
 8004d1e:	201f      	movs	r0, #31
 8004d20:	183b      	adds	r3, r7, r0
 8004d22:	2200      	movs	r2, #0
 8004d24:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004d26:	4b21      	ldr	r3, [pc, #132]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004d28:	69da      	ldr	r2, [r3, #28]
 8004d2a:	2380      	movs	r3, #128	; 0x80
 8004d2c:	055b      	lsls	r3, r3, #21
 8004d2e:	4013      	ands	r3, r2
 8004d30:	d110      	bne.n	8004d54 <HAL_RCC_OscConfig+0x2d4>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8004d32:	4b1e      	ldr	r3, [pc, #120]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004d34:	69da      	ldr	r2, [r3, #28]
 8004d36:	4b1d      	ldr	r3, [pc, #116]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004d38:	2180      	movs	r1, #128	; 0x80
 8004d3a:	0549      	lsls	r1, r1, #21
 8004d3c:	430a      	orrs	r2, r1
 8004d3e:	61da      	str	r2, [r3, #28]
 8004d40:	4b1a      	ldr	r3, [pc, #104]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004d42:	69da      	ldr	r2, [r3, #28]
 8004d44:	2380      	movs	r3, #128	; 0x80
 8004d46:	055b      	lsls	r3, r3, #21
 8004d48:	4013      	ands	r3, r2
 8004d4a:	60fb      	str	r3, [r7, #12]
 8004d4c:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 8004d4e:	183b      	adds	r3, r7, r0
 8004d50:	2201      	movs	r2, #1
 8004d52:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004d54:	4b18      	ldr	r3, [pc, #96]	; (8004db8 <HAL_RCC_OscConfig+0x338>)
 8004d56:	681a      	ldr	r2, [r3, #0]
 8004d58:	2380      	movs	r3, #128	; 0x80
 8004d5a:	005b      	lsls	r3, r3, #1
 8004d5c:	4013      	ands	r3, r2
 8004d5e:	d11a      	bne.n	8004d96 <HAL_RCC_OscConfig+0x316>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004d60:	4b15      	ldr	r3, [pc, #84]	; (8004db8 <HAL_RCC_OscConfig+0x338>)
 8004d62:	681a      	ldr	r2, [r3, #0]
 8004d64:	4b14      	ldr	r3, [pc, #80]	; (8004db8 <HAL_RCC_OscConfig+0x338>)
 8004d66:	2180      	movs	r1, #128	; 0x80
 8004d68:	0049      	lsls	r1, r1, #1
 8004d6a:	430a      	orrs	r2, r1
 8004d6c:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004d6e:	f7ff fc3b 	bl	80045e8 <HAL_GetTick>
 8004d72:	0003      	movs	r3, r0
 8004d74:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004d76:	e008      	b.n	8004d8a <HAL_RCC_OscConfig+0x30a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004d78:	f7ff fc36 	bl	80045e8 <HAL_GetTick>
 8004d7c:	0002      	movs	r2, r0
 8004d7e:	69bb      	ldr	r3, [r7, #24]
 8004d80:	1ad3      	subs	r3, r2, r3
 8004d82:	2b64      	cmp	r3, #100	; 0x64
 8004d84:	d901      	bls.n	8004d8a <HAL_RCC_OscConfig+0x30a>
        {
          return HAL_TIMEOUT;
 8004d86:	2303      	movs	r3, #3
 8004d88:	e185      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004d8a:	4b0b      	ldr	r3, [pc, #44]	; (8004db8 <HAL_RCC_OscConfig+0x338>)
 8004d8c:	681a      	ldr	r2, [r3, #0]
 8004d8e:	2380      	movs	r3, #128	; 0x80
 8004d90:	005b      	lsls	r3, r3, #1
 8004d92:	4013      	ands	r3, r2
 8004d94:	d0f0      	beq.n	8004d78 <HAL_RCC_OscConfig+0x2f8>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004d96:	687b      	ldr	r3, [r7, #4]
 8004d98:	689b      	ldr	r3, [r3, #8]
 8004d9a:	2b01      	cmp	r3, #1
 8004d9c:	d10e      	bne.n	8004dbc <HAL_RCC_OscConfig+0x33c>
 8004d9e:	4b03      	ldr	r3, [pc, #12]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004da0:	6a1a      	ldr	r2, [r3, #32]
 8004da2:	4b02      	ldr	r3, [pc, #8]	; (8004dac <HAL_RCC_OscConfig+0x32c>)
 8004da4:	2101      	movs	r1, #1
 8004da6:	430a      	orrs	r2, r1
 8004da8:	621a      	str	r2, [r3, #32]
 8004daa:	e035      	b.n	8004e18 <HAL_RCC_OscConfig+0x398>
 8004dac:	40021000 	.word	0x40021000
 8004db0:	fffeffff 	.word	0xfffeffff
 8004db4:	fffbffff 	.word	0xfffbffff
 8004db8:	40007000 	.word	0x40007000
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	689b      	ldr	r3, [r3, #8]
 8004dc0:	2b00      	cmp	r3, #0
 8004dc2:	d10c      	bne.n	8004dde <HAL_RCC_OscConfig+0x35e>
 8004dc4:	4bb6      	ldr	r3, [pc, #728]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004dc6:	6a1a      	ldr	r2, [r3, #32]
 8004dc8:	4bb5      	ldr	r3, [pc, #724]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004dca:	2101      	movs	r1, #1
 8004dcc:	438a      	bics	r2, r1
 8004dce:	621a      	str	r2, [r3, #32]
 8004dd0:	4bb3      	ldr	r3, [pc, #716]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004dd2:	6a1a      	ldr	r2, [r3, #32]
 8004dd4:	4bb2      	ldr	r3, [pc, #712]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004dd6:	2104      	movs	r1, #4
 8004dd8:	438a      	bics	r2, r1
 8004dda:	621a      	str	r2, [r3, #32]
 8004ddc:	e01c      	b.n	8004e18 <HAL_RCC_OscConfig+0x398>
 8004dde:	687b      	ldr	r3, [r7, #4]
 8004de0:	689b      	ldr	r3, [r3, #8]
 8004de2:	2b05      	cmp	r3, #5
 8004de4:	d10c      	bne.n	8004e00 <HAL_RCC_OscConfig+0x380>
 8004de6:	4bae      	ldr	r3, [pc, #696]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004de8:	6a1a      	ldr	r2, [r3, #32]
 8004dea:	4bad      	ldr	r3, [pc, #692]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004dec:	2104      	movs	r1, #4
 8004dee:	430a      	orrs	r2, r1
 8004df0:	621a      	str	r2, [r3, #32]
 8004df2:	4bab      	ldr	r3, [pc, #684]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004df4:	6a1a      	ldr	r2, [r3, #32]
 8004df6:	4baa      	ldr	r3, [pc, #680]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004df8:	2101      	movs	r1, #1
 8004dfa:	430a      	orrs	r2, r1
 8004dfc:	621a      	str	r2, [r3, #32]
 8004dfe:	e00b      	b.n	8004e18 <HAL_RCC_OscConfig+0x398>
 8004e00:	4ba7      	ldr	r3, [pc, #668]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004e02:	6a1a      	ldr	r2, [r3, #32]
 8004e04:	4ba6      	ldr	r3, [pc, #664]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004e06:	2101      	movs	r1, #1
 8004e08:	438a      	bics	r2, r1
 8004e0a:	621a      	str	r2, [r3, #32]
 8004e0c:	4ba4      	ldr	r3, [pc, #656]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004e0e:	6a1a      	ldr	r2, [r3, #32]
 8004e10:	4ba3      	ldr	r3, [pc, #652]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004e12:	2104      	movs	r1, #4
 8004e14:	438a      	bics	r2, r1
 8004e16:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8004e18:	687b      	ldr	r3, [r7, #4]
 8004e1a:	689b      	ldr	r3, [r3, #8]
 8004e1c:	2b00      	cmp	r3, #0
 8004e1e:	d014      	beq.n	8004e4a <HAL_RCC_OscConfig+0x3ca>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004e20:	f7ff fbe2 	bl	80045e8 <HAL_GetTick>
 8004e24:	0003      	movs	r3, r0
 8004e26:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004e28:	e009      	b.n	8004e3e <HAL_RCC_OscConfig+0x3be>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004e2a:	f7ff fbdd 	bl	80045e8 <HAL_GetTick>
 8004e2e:	0002      	movs	r2, r0
 8004e30:	69bb      	ldr	r3, [r7, #24]
 8004e32:	1ad3      	subs	r3, r2, r3
 8004e34:	4a9b      	ldr	r2, [pc, #620]	; (80050a4 <HAL_RCC_OscConfig+0x624>)
 8004e36:	4293      	cmp	r3, r2
 8004e38:	d901      	bls.n	8004e3e <HAL_RCC_OscConfig+0x3be>
        {
          return HAL_TIMEOUT;
 8004e3a:	2303      	movs	r3, #3
 8004e3c:	e12b      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8004e3e:	4b98      	ldr	r3, [pc, #608]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004e40:	6a1b      	ldr	r3, [r3, #32]
 8004e42:	2202      	movs	r2, #2
 8004e44:	4013      	ands	r3, r2
 8004e46:	d0f0      	beq.n	8004e2a <HAL_RCC_OscConfig+0x3aa>
 8004e48:	e013      	b.n	8004e72 <HAL_RCC_OscConfig+0x3f2>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004e4a:	f7ff fbcd 	bl	80045e8 <HAL_GetTick>
 8004e4e:	0003      	movs	r3, r0
 8004e50:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004e52:	e009      	b.n	8004e68 <HAL_RCC_OscConfig+0x3e8>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004e54:	f7ff fbc8 	bl	80045e8 <HAL_GetTick>
 8004e58:	0002      	movs	r2, r0
 8004e5a:	69bb      	ldr	r3, [r7, #24]
 8004e5c:	1ad3      	subs	r3, r2, r3
 8004e5e:	4a91      	ldr	r2, [pc, #580]	; (80050a4 <HAL_RCC_OscConfig+0x624>)
 8004e60:	4293      	cmp	r3, r2
 8004e62:	d901      	bls.n	8004e68 <HAL_RCC_OscConfig+0x3e8>
        {
          return HAL_TIMEOUT;
 8004e64:	2303      	movs	r3, #3
 8004e66:	e116      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8004e68:	4b8d      	ldr	r3, [pc, #564]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004e6a:	6a1b      	ldr	r3, [r3, #32]
 8004e6c:	2202      	movs	r2, #2
 8004e6e:	4013      	ands	r3, r2
 8004e70:	d1f0      	bne.n	8004e54 <HAL_RCC_OscConfig+0x3d4>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8004e72:	231f      	movs	r3, #31
 8004e74:	18fb      	adds	r3, r7, r3
 8004e76:	781b      	ldrb	r3, [r3, #0]
 8004e78:	2b01      	cmp	r3, #1
 8004e7a:	d105      	bne.n	8004e88 <HAL_RCC_OscConfig+0x408>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004e7c:	4b88      	ldr	r3, [pc, #544]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004e7e:	69da      	ldr	r2, [r3, #28]
 8004e80:	4b87      	ldr	r3, [pc, #540]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004e82:	4989      	ldr	r1, [pc, #548]	; (80050a8 <HAL_RCC_OscConfig+0x628>)
 8004e84:	400a      	ands	r2, r1
 8004e86:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	681b      	ldr	r3, [r3, #0]
 8004e8c:	2210      	movs	r2, #16
 8004e8e:	4013      	ands	r3, r2
 8004e90:	d063      	beq.n	8004f5a <HAL_RCC_OscConfig+0x4da>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	695b      	ldr	r3, [r3, #20]
 8004e96:	2b01      	cmp	r3, #1
 8004e98:	d12a      	bne.n	8004ef0 <HAL_RCC_OscConfig+0x470>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8004e9a:	4b81      	ldr	r3, [pc, #516]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004e9c:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004e9e:	4b80      	ldr	r3, [pc, #512]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004ea0:	2104      	movs	r1, #4
 8004ea2:	430a      	orrs	r2, r1
 8004ea4:	635a      	str	r2, [r3, #52]	; 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 8004ea6:	4b7e      	ldr	r3, [pc, #504]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004ea8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004eaa:	4b7d      	ldr	r3, [pc, #500]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004eac:	2101      	movs	r1, #1
 8004eae:	430a      	orrs	r2, r1
 8004eb0:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004eb2:	f7ff fb99 	bl	80045e8 <HAL_GetTick>
 8004eb6:	0003      	movs	r3, r0
 8004eb8:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8004eba:	e008      	b.n	8004ece <HAL_RCC_OscConfig+0x44e>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8004ebc:	f7ff fb94 	bl	80045e8 <HAL_GetTick>
 8004ec0:	0002      	movs	r2, r0
 8004ec2:	69bb      	ldr	r3, [r7, #24]
 8004ec4:	1ad3      	subs	r3, r2, r3
 8004ec6:	2b02      	cmp	r3, #2
 8004ec8:	d901      	bls.n	8004ece <HAL_RCC_OscConfig+0x44e>
        {
          return HAL_TIMEOUT;
 8004eca:	2303      	movs	r3, #3
 8004ecc:	e0e3      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8004ece:	4b74      	ldr	r3, [pc, #464]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004ed0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004ed2:	2202      	movs	r2, #2
 8004ed4:	4013      	ands	r3, r2
 8004ed6:	d0f1      	beq.n	8004ebc <HAL_RCC_OscConfig+0x43c>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8004ed8:	4b71      	ldr	r3, [pc, #452]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004eda:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004edc:	22f8      	movs	r2, #248	; 0xf8
 8004ede:	4393      	bics	r3, r2
 8004ee0:	0019      	movs	r1, r3
 8004ee2:	687b      	ldr	r3, [r7, #4]
 8004ee4:	699b      	ldr	r3, [r3, #24]
 8004ee6:	00da      	lsls	r2, r3, #3
 8004ee8:	4b6d      	ldr	r3, [pc, #436]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004eea:	430a      	orrs	r2, r1
 8004eec:	635a      	str	r2, [r3, #52]	; 0x34
 8004eee:	e034      	b.n	8004f5a <HAL_RCC_OscConfig+0x4da>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 8004ef0:	687b      	ldr	r3, [r7, #4]
 8004ef2:	695b      	ldr	r3, [r3, #20]
 8004ef4:	3305      	adds	r3, #5
 8004ef6:	d111      	bne.n	8004f1c <HAL_RCC_OscConfig+0x49c>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 8004ef8:	4b69      	ldr	r3, [pc, #420]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004efa:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004efc:	4b68      	ldr	r3, [pc, #416]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004efe:	2104      	movs	r1, #4
 8004f00:	438a      	bics	r2, r1
 8004f02:	635a      	str	r2, [r3, #52]	; 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8004f04:	4b66      	ldr	r3, [pc, #408]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004f06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004f08:	22f8      	movs	r2, #248	; 0xf8
 8004f0a:	4393      	bics	r3, r2
 8004f0c:	0019      	movs	r1, r3
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	699b      	ldr	r3, [r3, #24]
 8004f12:	00da      	lsls	r2, r3, #3
 8004f14:	4b62      	ldr	r3, [pc, #392]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004f16:	430a      	orrs	r2, r1
 8004f18:	635a      	str	r2, [r3, #52]	; 0x34
 8004f1a:	e01e      	b.n	8004f5a <HAL_RCC_OscConfig+0x4da>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8004f1c:	4b60      	ldr	r3, [pc, #384]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004f1e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004f20:	4b5f      	ldr	r3, [pc, #380]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004f22:	2104      	movs	r1, #4
 8004f24:	430a      	orrs	r2, r1
 8004f26:	635a      	str	r2, [r3, #52]	; 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 8004f28:	4b5d      	ldr	r3, [pc, #372]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004f2a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8004f2c:	4b5c      	ldr	r3, [pc, #368]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004f2e:	2101      	movs	r1, #1
 8004f30:	438a      	bics	r2, r1
 8004f32:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004f34:	f7ff fb58 	bl	80045e8 <HAL_GetTick>
 8004f38:	0003      	movs	r3, r0
 8004f3a:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8004f3c:	e008      	b.n	8004f50 <HAL_RCC_OscConfig+0x4d0>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8004f3e:	f7ff fb53 	bl	80045e8 <HAL_GetTick>
 8004f42:	0002      	movs	r2, r0
 8004f44:	69bb      	ldr	r3, [r7, #24]
 8004f46:	1ad3      	subs	r3, r2, r3
 8004f48:	2b02      	cmp	r3, #2
 8004f4a:	d901      	bls.n	8004f50 <HAL_RCC_OscConfig+0x4d0>
        {
          return HAL_TIMEOUT;
 8004f4c:	2303      	movs	r3, #3
 8004f4e:	e0a2      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 8004f50:	4b53      	ldr	r3, [pc, #332]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004f52:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004f54:	2202      	movs	r2, #2
 8004f56:	4013      	ands	r3, r2
 8004f58:	d1f1      	bne.n	8004f3e <HAL_RCC_OscConfig+0x4be>
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004f5a:	687b      	ldr	r3, [r7, #4]
 8004f5c:	6a1b      	ldr	r3, [r3, #32]
 8004f5e:	2b00      	cmp	r3, #0
 8004f60:	d100      	bne.n	8004f64 <HAL_RCC_OscConfig+0x4e4>
 8004f62:	e097      	b.n	8005094 <HAL_RCC_OscConfig+0x614>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8004f64:	4b4e      	ldr	r3, [pc, #312]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004f66:	685b      	ldr	r3, [r3, #4]
 8004f68:	220c      	movs	r2, #12
 8004f6a:	4013      	ands	r3, r2
 8004f6c:	2b08      	cmp	r3, #8
 8004f6e:	d100      	bne.n	8004f72 <HAL_RCC_OscConfig+0x4f2>
 8004f70:	e06b      	b.n	800504a <HAL_RCC_OscConfig+0x5ca>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004f72:	687b      	ldr	r3, [r7, #4]
 8004f74:	6a1b      	ldr	r3, [r3, #32]
 8004f76:	2b02      	cmp	r3, #2
 8004f78:	d14c      	bne.n	8005014 <HAL_RCC_OscConfig+0x594>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004f7a:	4b49      	ldr	r3, [pc, #292]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004f7c:	681a      	ldr	r2, [r3, #0]
 8004f7e:	4b48      	ldr	r3, [pc, #288]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004f80:	494a      	ldr	r1, [pc, #296]	; (80050ac <HAL_RCC_OscConfig+0x62c>)
 8004f82:	400a      	ands	r2, r1
 8004f84:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004f86:	f7ff fb2f 	bl	80045e8 <HAL_GetTick>
 8004f8a:	0003      	movs	r3, r0
 8004f8c:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8004f8e:	e008      	b.n	8004fa2 <HAL_RCC_OscConfig+0x522>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004f90:	f7ff fb2a 	bl	80045e8 <HAL_GetTick>
 8004f94:	0002      	movs	r2, r0
 8004f96:	69bb      	ldr	r3, [r7, #24]
 8004f98:	1ad3      	subs	r3, r2, r3
 8004f9a:	2b02      	cmp	r3, #2
 8004f9c:	d901      	bls.n	8004fa2 <HAL_RCC_OscConfig+0x522>
          {
            return HAL_TIMEOUT;
 8004f9e:	2303      	movs	r3, #3
 8004fa0:	e079      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8004fa2:	4b3f      	ldr	r3, [pc, #252]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004fa4:	681a      	ldr	r2, [r3, #0]
 8004fa6:	2380      	movs	r3, #128	; 0x80
 8004fa8:	049b      	lsls	r3, r3, #18
 8004faa:	4013      	ands	r3, r2
 8004fac:	d1f0      	bne.n	8004f90 <HAL_RCC_OscConfig+0x510>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8004fae:	4b3c      	ldr	r3, [pc, #240]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004fb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004fb2:	220f      	movs	r2, #15
 8004fb4:	4393      	bics	r3, r2
 8004fb6:	0019      	movs	r1, r3
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004fbc:	4b38      	ldr	r3, [pc, #224]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004fbe:	430a      	orrs	r2, r1
 8004fc0:	62da      	str	r2, [r3, #44]	; 0x2c
 8004fc2:	4b37      	ldr	r3, [pc, #220]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004fc4:	685b      	ldr	r3, [r3, #4]
 8004fc6:	4a3a      	ldr	r2, [pc, #232]	; (80050b0 <HAL_RCC_OscConfig+0x630>)
 8004fc8:	4013      	ands	r3, r2
 8004fca:	0019      	movs	r1, r3
 8004fcc:	687b      	ldr	r3, [r7, #4]
 8004fce:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004fd0:	687b      	ldr	r3, [r7, #4]
 8004fd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004fd4:	431a      	orrs	r2, r3
 8004fd6:	4b32      	ldr	r3, [pc, #200]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004fd8:	430a      	orrs	r2, r1
 8004fda:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8004fdc:	4b30      	ldr	r3, [pc, #192]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004fde:	681a      	ldr	r2, [r3, #0]
 8004fe0:	4b2f      	ldr	r3, [pc, #188]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8004fe2:	2180      	movs	r1, #128	; 0x80
 8004fe4:	0449      	lsls	r1, r1, #17
 8004fe6:	430a      	orrs	r2, r1
 8004fe8:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004fea:	f7ff fafd 	bl	80045e8 <HAL_GetTick>
 8004fee:	0003      	movs	r3, r0
 8004ff0:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8004ff2:	e008      	b.n	8005006 <HAL_RCC_OscConfig+0x586>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004ff4:	f7ff faf8 	bl	80045e8 <HAL_GetTick>
 8004ff8:	0002      	movs	r2, r0
 8004ffa:	69bb      	ldr	r3, [r7, #24]
 8004ffc:	1ad3      	subs	r3, r2, r3
 8004ffe:	2b02      	cmp	r3, #2
 8005000:	d901      	bls.n	8005006 <HAL_RCC_OscConfig+0x586>
          {
            return HAL_TIMEOUT;
 8005002:	2303      	movs	r3, #3
 8005004:	e047      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8005006:	4b26      	ldr	r3, [pc, #152]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8005008:	681a      	ldr	r2, [r3, #0]
 800500a:	2380      	movs	r3, #128	; 0x80
 800500c:	049b      	lsls	r3, r3, #18
 800500e:	4013      	ands	r3, r2
 8005010:	d0f0      	beq.n	8004ff4 <HAL_RCC_OscConfig+0x574>
 8005012:	e03f      	b.n	8005094 <HAL_RCC_OscConfig+0x614>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005014:	4b22      	ldr	r3, [pc, #136]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8005016:	681a      	ldr	r2, [r3, #0]
 8005018:	4b21      	ldr	r3, [pc, #132]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 800501a:	4924      	ldr	r1, [pc, #144]	; (80050ac <HAL_RCC_OscConfig+0x62c>)
 800501c:	400a      	ands	r2, r1
 800501e:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8005020:	f7ff fae2 	bl	80045e8 <HAL_GetTick>
 8005024:	0003      	movs	r3, r0
 8005026:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 8005028:	e008      	b.n	800503c <HAL_RCC_OscConfig+0x5bc>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800502a:	f7ff fadd 	bl	80045e8 <HAL_GetTick>
 800502e:	0002      	movs	r2, r0
 8005030:	69bb      	ldr	r3, [r7, #24]
 8005032:	1ad3      	subs	r3, r2, r3
 8005034:	2b02      	cmp	r3, #2
 8005036:	d901      	bls.n	800503c <HAL_RCC_OscConfig+0x5bc>
          {
            return HAL_TIMEOUT;
 8005038:	2303      	movs	r3, #3
 800503a:	e02c      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800503c:	4b18      	ldr	r3, [pc, #96]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 800503e:	681a      	ldr	r2, [r3, #0]
 8005040:	2380      	movs	r3, #128	; 0x80
 8005042:	049b      	lsls	r3, r3, #18
 8005044:	4013      	ands	r3, r2
 8005046:	d1f0      	bne.n	800502a <HAL_RCC_OscConfig+0x5aa>
 8005048:	e024      	b.n	8005094 <HAL_RCC_OscConfig+0x614>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	6a1b      	ldr	r3, [r3, #32]
 800504e:	2b01      	cmp	r3, #1
 8005050:	d101      	bne.n	8005056 <HAL_RCC_OscConfig+0x5d6>
      {
        return HAL_ERROR;
 8005052:	2301      	movs	r3, #1
 8005054:	e01f      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 8005056:	4b12      	ldr	r3, [pc, #72]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 8005058:	685b      	ldr	r3, [r3, #4]
 800505a:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 800505c:	4b10      	ldr	r3, [pc, #64]	; (80050a0 <HAL_RCC_OscConfig+0x620>)
 800505e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005060:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8005062:	697a      	ldr	r2, [r7, #20]
 8005064:	2380      	movs	r3, #128	; 0x80
 8005066:	025b      	lsls	r3, r3, #9
 8005068:	401a      	ands	r2, r3
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800506e:	429a      	cmp	r2, r3
 8005070:	d10e      	bne.n	8005090 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8005072:	693b      	ldr	r3, [r7, #16]
 8005074:	220f      	movs	r2, #15
 8005076:	401a      	ands	r2, r3
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 800507c:	429a      	cmp	r2, r3
 800507e:	d107      	bne.n	8005090 <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 8005080:	697a      	ldr	r2, [r7, #20]
 8005082:	23f0      	movs	r3, #240	; 0xf0
 8005084:	039b      	lsls	r3, r3, #14
 8005086:	401a      	ands	r2, r3
 8005088:	687b      	ldr	r3, [r7, #4]
 800508a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 800508c:	429a      	cmp	r2, r3
 800508e:	d001      	beq.n	8005094 <HAL_RCC_OscConfig+0x614>
        {
          return HAL_ERROR;
 8005090:	2301      	movs	r3, #1
 8005092:	e000      	b.n	8005096 <HAL_RCC_OscConfig+0x616>
        }
      }
    }
  }

  return HAL_OK;
 8005094:	2300      	movs	r3, #0
}
 8005096:	0018      	movs	r0, r3
 8005098:	46bd      	mov	sp, r7
 800509a:	b008      	add	sp, #32
 800509c:	bd80      	pop	{r7, pc}
 800509e:	46c0      	nop			; (mov r8, r8)
 80050a0:	40021000 	.word	0x40021000
 80050a4:	00001388 	.word	0x00001388
 80050a8:	efffffff 	.word	0xefffffff
 80050ac:	feffffff 	.word	0xfeffffff
 80050b0:	ffc2ffff 	.word	0xffc2ffff

080050b4 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80050b4:	b580      	push	{r7, lr}
 80050b6:	b084      	sub	sp, #16
 80050b8:	af00      	add	r7, sp, #0
 80050ba:	6078      	str	r0, [r7, #4]
 80050bc:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	2b00      	cmp	r3, #0
 80050c2:	d101      	bne.n	80050c8 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80050c4:	2301      	movs	r3, #1
 80050c6:	e0b3      	b.n	8005230 <HAL_RCC_ClockConfig+0x17c>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80050c8:	4b5b      	ldr	r3, [pc, #364]	; (8005238 <HAL_RCC_ClockConfig+0x184>)
 80050ca:	681b      	ldr	r3, [r3, #0]
 80050cc:	2201      	movs	r2, #1
 80050ce:	4013      	ands	r3, r2
 80050d0:	683a      	ldr	r2, [r7, #0]
 80050d2:	429a      	cmp	r2, r3
 80050d4:	d911      	bls.n	80050fa <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80050d6:	4b58      	ldr	r3, [pc, #352]	; (8005238 <HAL_RCC_ClockConfig+0x184>)
 80050d8:	681b      	ldr	r3, [r3, #0]
 80050da:	2201      	movs	r2, #1
 80050dc:	4393      	bics	r3, r2
 80050de:	0019      	movs	r1, r3
 80050e0:	4b55      	ldr	r3, [pc, #340]	; (8005238 <HAL_RCC_ClockConfig+0x184>)
 80050e2:	683a      	ldr	r2, [r7, #0]
 80050e4:	430a      	orrs	r2, r1
 80050e6:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80050e8:	4b53      	ldr	r3, [pc, #332]	; (8005238 <HAL_RCC_ClockConfig+0x184>)
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	2201      	movs	r2, #1
 80050ee:	4013      	ands	r3, r2
 80050f0:	683a      	ldr	r2, [r7, #0]
 80050f2:	429a      	cmp	r2, r3
 80050f4:	d001      	beq.n	80050fa <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 80050f6:	2301      	movs	r3, #1
 80050f8:	e09a      	b.n	8005230 <HAL_RCC_ClockConfig+0x17c>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80050fa:	687b      	ldr	r3, [r7, #4]
 80050fc:	681b      	ldr	r3, [r3, #0]
 80050fe:	2202      	movs	r2, #2
 8005100:	4013      	ands	r3, r2
 8005102:	d015      	beq.n	8005130 <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	2204      	movs	r2, #4
 800510a:	4013      	ands	r3, r2
 800510c:	d006      	beq.n	800511c <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 800510e:	4b4b      	ldr	r3, [pc, #300]	; (800523c <HAL_RCC_ClockConfig+0x188>)
 8005110:	685a      	ldr	r2, [r3, #4]
 8005112:	4b4a      	ldr	r3, [pc, #296]	; (800523c <HAL_RCC_ClockConfig+0x188>)
 8005114:	21e0      	movs	r1, #224	; 0xe0
 8005116:	00c9      	lsls	r1, r1, #3
 8005118:	430a      	orrs	r2, r1
 800511a:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800511c:	4b47      	ldr	r3, [pc, #284]	; (800523c <HAL_RCC_ClockConfig+0x188>)
 800511e:	685b      	ldr	r3, [r3, #4]
 8005120:	22f0      	movs	r2, #240	; 0xf0
 8005122:	4393      	bics	r3, r2
 8005124:	0019      	movs	r1, r3
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	689a      	ldr	r2, [r3, #8]
 800512a:	4b44      	ldr	r3, [pc, #272]	; (800523c <HAL_RCC_ClockConfig+0x188>)
 800512c:	430a      	orrs	r2, r1
 800512e:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	681b      	ldr	r3, [r3, #0]
 8005134:	2201      	movs	r2, #1
 8005136:	4013      	ands	r3, r2
 8005138:	d040      	beq.n	80051bc <HAL_RCC_ClockConfig+0x108>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	685b      	ldr	r3, [r3, #4]
 800513e:	2b01      	cmp	r3, #1
 8005140:	d107      	bne.n	8005152 <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005142:	4b3e      	ldr	r3, [pc, #248]	; (800523c <HAL_RCC_ClockConfig+0x188>)
 8005144:	681a      	ldr	r2, [r3, #0]
 8005146:	2380      	movs	r3, #128	; 0x80
 8005148:	029b      	lsls	r3, r3, #10
 800514a:	4013      	ands	r3, r2
 800514c:	d114      	bne.n	8005178 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 800514e:	2301      	movs	r3, #1
 8005150:	e06e      	b.n	8005230 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8005152:	687b      	ldr	r3, [r7, #4]
 8005154:	685b      	ldr	r3, [r3, #4]
 8005156:	2b02      	cmp	r3, #2
 8005158:	d107      	bne.n	800516a <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800515a:	4b38      	ldr	r3, [pc, #224]	; (800523c <HAL_RCC_ClockConfig+0x188>)
 800515c:	681a      	ldr	r2, [r3, #0]
 800515e:	2380      	movs	r3, #128	; 0x80
 8005160:	049b      	lsls	r3, r3, #18
 8005162:	4013      	ands	r3, r2
 8005164:	d108      	bne.n	8005178 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8005166:	2301      	movs	r3, #1
 8005168:	e062      	b.n	8005230 <HAL_RCC_ClockConfig+0x17c>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800516a:	4b34      	ldr	r3, [pc, #208]	; (800523c <HAL_RCC_ClockConfig+0x188>)
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	2202      	movs	r2, #2
 8005170:	4013      	ands	r3, r2
 8005172:	d101      	bne.n	8005178 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8005174:	2301      	movs	r3, #1
 8005176:	e05b      	b.n	8005230 <HAL_RCC_ClockConfig+0x17c>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005178:	4b30      	ldr	r3, [pc, #192]	; (800523c <HAL_RCC_ClockConfig+0x188>)
 800517a:	685b      	ldr	r3, [r3, #4]
 800517c:	2203      	movs	r2, #3
 800517e:	4393      	bics	r3, r2
 8005180:	0019      	movs	r1, r3
 8005182:	687b      	ldr	r3, [r7, #4]
 8005184:	685a      	ldr	r2, [r3, #4]
 8005186:	4b2d      	ldr	r3, [pc, #180]	; (800523c <HAL_RCC_ClockConfig+0x188>)
 8005188:	430a      	orrs	r2, r1
 800518a:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 800518c:	f7ff fa2c 	bl	80045e8 <HAL_GetTick>
 8005190:	0003      	movs	r3, r0
 8005192:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005194:	e009      	b.n	80051aa <HAL_RCC_ClockConfig+0xf6>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005196:	f7ff fa27 	bl	80045e8 <HAL_GetTick>
 800519a:	0002      	movs	r2, r0
 800519c:	68fb      	ldr	r3, [r7, #12]
 800519e:	1ad3      	subs	r3, r2, r3
 80051a0:	4a27      	ldr	r2, [pc, #156]	; (8005240 <HAL_RCC_ClockConfig+0x18c>)
 80051a2:	4293      	cmp	r3, r2
 80051a4:	d901      	bls.n	80051aa <HAL_RCC_ClockConfig+0xf6>
      {
        return HAL_TIMEOUT;
 80051a6:	2303      	movs	r3, #3
 80051a8:	e042      	b.n	8005230 <HAL_RCC_ClockConfig+0x17c>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80051aa:	4b24      	ldr	r3, [pc, #144]	; (800523c <HAL_RCC_ClockConfig+0x188>)
 80051ac:	685b      	ldr	r3, [r3, #4]
 80051ae:	220c      	movs	r2, #12
 80051b0:	401a      	ands	r2, r3
 80051b2:	687b      	ldr	r3, [r7, #4]
 80051b4:	685b      	ldr	r3, [r3, #4]
 80051b6:	009b      	lsls	r3, r3, #2
 80051b8:	429a      	cmp	r2, r3
 80051ba:	d1ec      	bne.n	8005196 <HAL_RCC_ClockConfig+0xe2>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80051bc:	4b1e      	ldr	r3, [pc, #120]	; (8005238 <HAL_RCC_ClockConfig+0x184>)
 80051be:	681b      	ldr	r3, [r3, #0]
 80051c0:	2201      	movs	r2, #1
 80051c2:	4013      	ands	r3, r2
 80051c4:	683a      	ldr	r2, [r7, #0]
 80051c6:	429a      	cmp	r2, r3
 80051c8:	d211      	bcs.n	80051ee <HAL_RCC_ClockConfig+0x13a>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80051ca:	4b1b      	ldr	r3, [pc, #108]	; (8005238 <HAL_RCC_ClockConfig+0x184>)
 80051cc:	681b      	ldr	r3, [r3, #0]
 80051ce:	2201      	movs	r2, #1
 80051d0:	4393      	bics	r3, r2
 80051d2:	0019      	movs	r1, r3
 80051d4:	4b18      	ldr	r3, [pc, #96]	; (8005238 <HAL_RCC_ClockConfig+0x184>)
 80051d6:	683a      	ldr	r2, [r7, #0]
 80051d8:	430a      	orrs	r2, r1
 80051da:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80051dc:	4b16      	ldr	r3, [pc, #88]	; (8005238 <HAL_RCC_ClockConfig+0x184>)
 80051de:	681b      	ldr	r3, [r3, #0]
 80051e0:	2201      	movs	r2, #1
 80051e2:	4013      	ands	r3, r2
 80051e4:	683a      	ldr	r2, [r7, #0]
 80051e6:	429a      	cmp	r2, r3
 80051e8:	d001      	beq.n	80051ee <HAL_RCC_ClockConfig+0x13a>
    {
      return HAL_ERROR;
 80051ea:	2301      	movs	r3, #1
 80051ec:	e020      	b.n	8005230 <HAL_RCC_ClockConfig+0x17c>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80051ee:	687b      	ldr	r3, [r7, #4]
 80051f0:	681b      	ldr	r3, [r3, #0]
 80051f2:	2204      	movs	r2, #4
 80051f4:	4013      	ands	r3, r2
 80051f6:	d009      	beq.n	800520c <HAL_RCC_ClockConfig+0x158>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 80051f8:	4b10      	ldr	r3, [pc, #64]	; (800523c <HAL_RCC_ClockConfig+0x188>)
 80051fa:	685b      	ldr	r3, [r3, #4]
 80051fc:	4a11      	ldr	r2, [pc, #68]	; (8005244 <HAL_RCC_ClockConfig+0x190>)
 80051fe:	4013      	ands	r3, r2
 8005200:	0019      	movs	r1, r3
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	68da      	ldr	r2, [r3, #12]
 8005206:	4b0d      	ldr	r3, [pc, #52]	; (800523c <HAL_RCC_ClockConfig+0x188>)
 8005208:	430a      	orrs	r2, r1
 800520a:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 800520c:	f000 f820 	bl	8005250 <HAL_RCC_GetSysClockFreq>
 8005210:	0001      	movs	r1, r0
 8005212:	4b0a      	ldr	r3, [pc, #40]	; (800523c <HAL_RCC_ClockConfig+0x188>)
 8005214:	685b      	ldr	r3, [r3, #4]
 8005216:	091b      	lsrs	r3, r3, #4
 8005218:	220f      	movs	r2, #15
 800521a:	4013      	ands	r3, r2
 800521c:	4a0a      	ldr	r2, [pc, #40]	; (8005248 <HAL_RCC_ClockConfig+0x194>)
 800521e:	5cd3      	ldrb	r3, [r2, r3]
 8005220:	000a      	movs	r2, r1
 8005222:	40da      	lsrs	r2, r3
 8005224:	4b09      	ldr	r3, [pc, #36]	; (800524c <HAL_RCC_ClockConfig+0x198>)
 8005226:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 8005228:	2000      	movs	r0, #0
 800522a:	f7ff f997 	bl	800455c <HAL_InitTick>
  
  return HAL_OK;
 800522e:	2300      	movs	r3, #0
}
 8005230:	0018      	movs	r0, r3
 8005232:	46bd      	mov	sp, r7
 8005234:	b004      	add	sp, #16
 8005236:	bd80      	pop	{r7, pc}
 8005238:	40022000 	.word	0x40022000
 800523c:	40021000 	.word	0x40021000
 8005240:	00001388 	.word	0x00001388
 8005244:	fffff8ff 	.word	0xfffff8ff
 8005248:	08008c6c 	.word	0x08008c6c
 800524c:	20000000 	.word	0x20000000

08005250 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8005250:	b590      	push	{r4, r7, lr}
 8005252:	b08f      	sub	sp, #60	; 0x3c
 8005254:	af00      	add	r7, sp, #0
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 8005256:	2314      	movs	r3, #20
 8005258:	18fb      	adds	r3, r7, r3
 800525a:	4a2b      	ldr	r2, [pc, #172]	; (8005308 <HAL_RCC_GetSysClockFreq+0xb8>)
 800525c:	ca13      	ldmia	r2!, {r0, r1, r4}
 800525e:	c313      	stmia	r3!, {r0, r1, r4}
 8005260:	6812      	ldr	r2, [r2, #0]
 8005262:	601a      	str	r2, [r3, #0]
                                         10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 8005264:	1d3b      	adds	r3, r7, #4
 8005266:	4a29      	ldr	r2, [pc, #164]	; (800530c <HAL_RCC_GetSysClockFreq+0xbc>)
 8005268:	ca13      	ldmia	r2!, {r0, r1, r4}
 800526a:	c313      	stmia	r3!, {r0, r1, r4}
 800526c:	6812      	ldr	r2, [r2, #0]
 800526e:	601a      	str	r2, [r3, #0]
                                           9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 8005270:	2300      	movs	r3, #0
 8005272:	62fb      	str	r3, [r7, #44]	; 0x2c
 8005274:	2300      	movs	r3, #0
 8005276:	62bb      	str	r3, [r7, #40]	; 0x28
 8005278:	2300      	movs	r3, #0
 800527a:	637b      	str	r3, [r7, #52]	; 0x34
 800527c:	2300      	movs	r3, #0
 800527e:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t sysclockfreq = 0U;
 8005280:	2300      	movs	r3, #0
 8005282:	633b      	str	r3, [r7, #48]	; 0x30
  
  tmpreg = RCC->CFGR;
 8005284:	4b22      	ldr	r3, [pc, #136]	; (8005310 <HAL_RCC_GetSysClockFreq+0xc0>)
 8005286:	685b      	ldr	r3, [r3, #4]
 8005288:	62fb      	str	r3, [r7, #44]	; 0x2c
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 800528a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800528c:	220c      	movs	r2, #12
 800528e:	4013      	ands	r3, r2
 8005290:	2b04      	cmp	r3, #4
 8005292:	d002      	beq.n	800529a <HAL_RCC_GetSysClockFreq+0x4a>
 8005294:	2b08      	cmp	r3, #8
 8005296:	d003      	beq.n	80052a0 <HAL_RCC_GetSysClockFreq+0x50>
 8005298:	e02d      	b.n	80052f6 <HAL_RCC_GetSysClockFreq+0xa6>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 800529a:	4b1e      	ldr	r3, [pc, #120]	; (8005314 <HAL_RCC_GetSysClockFreq+0xc4>)
 800529c:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 800529e:	e02d      	b.n	80052fc <HAL_RCC_GetSysClockFreq+0xac>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 80052a0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80052a2:	0c9b      	lsrs	r3, r3, #18
 80052a4:	220f      	movs	r2, #15
 80052a6:	4013      	ands	r3, r2
 80052a8:	2214      	movs	r2, #20
 80052aa:	18ba      	adds	r2, r7, r2
 80052ac:	5cd3      	ldrb	r3, [r2, r3]
 80052ae:	627b      	str	r3, [r7, #36]	; 0x24
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 80052b0:	4b17      	ldr	r3, [pc, #92]	; (8005310 <HAL_RCC_GetSysClockFreq+0xc0>)
 80052b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80052b4:	220f      	movs	r2, #15
 80052b6:	4013      	ands	r3, r2
 80052b8:	1d3a      	adds	r2, r7, #4
 80052ba:	5cd3      	ldrb	r3, [r2, r3]
 80052bc:	62bb      	str	r3, [r7, #40]	; 0x28
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 80052be:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80052c0:	2380      	movs	r3, #128	; 0x80
 80052c2:	025b      	lsls	r3, r3, #9
 80052c4:	4013      	ands	r3, r2
 80052c6:	d009      	beq.n	80052dc <HAL_RCC_GetSysClockFreq+0x8c>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 80052c8:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80052ca:	4812      	ldr	r0, [pc, #72]	; (8005314 <HAL_RCC_GetSysClockFreq+0xc4>)
 80052cc:	f7fa ff38 	bl	8000140 <__udivsi3>
 80052d0:	0003      	movs	r3, r0
 80052d2:	001a      	movs	r2, r3
 80052d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80052d6:	4353      	muls	r3, r2
 80052d8:	637b      	str	r3, [r7, #52]	; 0x34
 80052da:	e009      	b.n	80052f0 <HAL_RCC_GetSysClockFreq+0xa0>
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 80052dc:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80052de:	000a      	movs	r2, r1
 80052e0:	0152      	lsls	r2, r2, #5
 80052e2:	1a52      	subs	r2, r2, r1
 80052e4:	0193      	lsls	r3, r2, #6
 80052e6:	1a9b      	subs	r3, r3, r2
 80052e8:	00db      	lsls	r3, r3, #3
 80052ea:	185b      	adds	r3, r3, r1
 80052ec:	021b      	lsls	r3, r3, #8
 80052ee:	637b      	str	r3, [r7, #52]	; 0x34
#endif
      }
      sysclockfreq = pllclk;
 80052f0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80052f2:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 80052f4:	e002      	b.n	80052fc <HAL_RCC_GetSysClockFreq+0xac>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 80052f6:	4b07      	ldr	r3, [pc, #28]	; (8005314 <HAL_RCC_GetSysClockFreq+0xc4>)
 80052f8:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 80052fa:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 80052fc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 80052fe:	0018      	movs	r0, r3
 8005300:	46bd      	mov	sp, r7
 8005302:	b00f      	add	sp, #60	; 0x3c
 8005304:	bd90      	pop	{r4, r7, pc}
 8005306:	46c0      	nop			; (mov r8, r8)
 8005308:	08008b8c 	.word	0x08008b8c
 800530c:	08008b9c 	.word	0x08008b9c
 8005310:	40021000 	.word	0x40021000
 8005314:	007a1200 	.word	0x007a1200

08005318 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8005318:	b580      	push	{r7, lr}
 800531a:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 800531c:	4b02      	ldr	r3, [pc, #8]	; (8005328 <HAL_RCC_GetHCLKFreq+0x10>)
 800531e:	681b      	ldr	r3, [r3, #0]
}
 8005320:	0018      	movs	r0, r3
 8005322:	46bd      	mov	sp, r7
 8005324:	bd80      	pop	{r7, pc}
 8005326:	46c0      	nop			; (mov r8, r8)
 8005328:	20000000 	.word	0x20000000

0800532c <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 800532c:	b580      	push	{r7, lr}
 800532e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 8005330:	f7ff fff2 	bl	8005318 <HAL_RCC_GetHCLKFreq>
 8005334:	0001      	movs	r1, r0
 8005336:	4b06      	ldr	r3, [pc, #24]	; (8005350 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005338:	685b      	ldr	r3, [r3, #4]
 800533a:	0a1b      	lsrs	r3, r3, #8
 800533c:	2207      	movs	r2, #7
 800533e:	4013      	ands	r3, r2
 8005340:	4a04      	ldr	r2, [pc, #16]	; (8005354 <HAL_RCC_GetPCLK1Freq+0x28>)
 8005342:	5cd3      	ldrb	r3, [r2, r3]
 8005344:	40d9      	lsrs	r1, r3
 8005346:	000b      	movs	r3, r1
}    
 8005348:	0018      	movs	r0, r3
 800534a:	46bd      	mov	sp, r7
 800534c:	bd80      	pop	{r7, pc}
 800534e:	46c0      	nop			; (mov r8, r8)
 8005350:	40021000 	.word	0x40021000
 8005354:	08008c7c 	.word	0x08008c7c

08005358 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8005358:	b580      	push	{r7, lr}
 800535a:	b082      	sub	sp, #8
 800535c:	af00      	add	r7, sp, #0
 800535e:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8005360:	687b      	ldr	r3, [r7, #4]
 8005362:	2b00      	cmp	r3, #0
 8005364:	d101      	bne.n	800536a <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8005366:	2301      	movs	r3, #1
 8005368:	e044      	b.n	80053f4 <HAL_UART_Init+0x9c>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800536e:	2b00      	cmp	r3, #0
 8005370:	d107      	bne.n	8005382 <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8005372:	687b      	ldr	r3, [r7, #4]
 8005374:	2274      	movs	r2, #116	; 0x74
 8005376:	2100      	movs	r1, #0
 8005378:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 800537a:	687b      	ldr	r3, [r7, #4]
 800537c:	0018      	movs	r0, r3
 800537e:	f7fe ff89 	bl	8004294 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	2224      	movs	r2, #36	; 0x24
 8005386:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 8005388:	687b      	ldr	r3, [r7, #4]
 800538a:	681b      	ldr	r3, [r3, #0]
 800538c:	681a      	ldr	r2, [r3, #0]
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	681b      	ldr	r3, [r3, #0]
 8005392:	2101      	movs	r1, #1
 8005394:	438a      	bics	r2, r1
 8005396:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8005398:	687b      	ldr	r3, [r7, #4]
 800539a:	0018      	movs	r0, r3
 800539c:	f000 f8da 	bl	8005554 <UART_SetConfig>
 80053a0:	0003      	movs	r3, r0
 80053a2:	2b01      	cmp	r3, #1
 80053a4:	d101      	bne.n	80053aa <HAL_UART_Init+0x52>
  {
    return HAL_ERROR;
 80053a6:	2301      	movs	r3, #1
 80053a8:	e024      	b.n	80053f4 <HAL_UART_Init+0x9c>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 80053aa:	687b      	ldr	r3, [r7, #4]
 80053ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053ae:	2b00      	cmp	r3, #0
 80053b0:	d003      	beq.n	80053ba <HAL_UART_Init+0x62>
  {
    UART_AdvFeatureConfig(huart);
 80053b2:	687b      	ldr	r3, [r7, #4]
 80053b4:	0018      	movs	r0, r3
 80053b6:	f000 fa0d 	bl	80057d4 <UART_AdvFeatureConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
  - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 register.*/
#if defined (USART_CR2_LINEN)
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	681b      	ldr	r3, [r3, #0]
 80053be:	685a      	ldr	r2, [r3, #4]
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	681b      	ldr	r3, [r3, #0]
 80053c4:	490d      	ldr	r1, [pc, #52]	; (80053fc <HAL_UART_Init+0xa4>)
 80053c6:	400a      	ands	r2, r1
 80053c8:	605a      	str	r2, [r3, #4]
#else
  CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
#endif /* USART_CR2_LINEN */
#if defined (USART_CR3_SCEN)
#if defined (USART_CR3_IREN)
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80053ca:	687b      	ldr	r3, [r7, #4]
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	689a      	ldr	r2, [r3, #8]
 80053d0:	687b      	ldr	r3, [r7, #4]
 80053d2:	681b      	ldr	r3, [r3, #0]
 80053d4:	212a      	movs	r1, #42	; 0x2a
 80053d6:	438a      	bics	r2, r1
 80053d8:	609a      	str	r2, [r3, #8]
#else
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
#endif /* USART_CR3_IREN*/
#endif /* USART_CR3_SCEN */

  __HAL_UART_ENABLE(huart);
 80053da:	687b      	ldr	r3, [r7, #4]
 80053dc:	681b      	ldr	r3, [r3, #0]
 80053de:	681a      	ldr	r2, [r3, #0]
 80053e0:	687b      	ldr	r3, [r7, #4]
 80053e2:	681b      	ldr	r3, [r3, #0]
 80053e4:	2101      	movs	r1, #1
 80053e6:	430a      	orrs	r2, r1
 80053e8:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 80053ea:	687b      	ldr	r3, [r7, #4]
 80053ec:	0018      	movs	r0, r3
 80053ee:	f000 faa5 	bl	800593c <UART_CheckIdleState>
 80053f2:	0003      	movs	r3, r0
}
 80053f4:	0018      	movs	r0, r3
 80053f6:	46bd      	mov	sp, r7
 80053f8:	b002      	add	sp, #8
 80053fa:	bd80      	pop	{r7, pc}
 80053fc:	ffffb7ff 	.word	0xffffb7ff

08005400 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005400:	b580      	push	{r7, lr}
 8005402:	b08a      	sub	sp, #40	; 0x28
 8005404:	af02      	add	r7, sp, #8
 8005406:	60f8      	str	r0, [r7, #12]
 8005408:	60b9      	str	r1, [r7, #8]
 800540a:	603b      	str	r3, [r7, #0]
 800540c:	1dbb      	adds	r3, r7, #6
 800540e:	801a      	strh	r2, [r3, #0]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8005410:	68fb      	ldr	r3, [r7, #12]
 8005412:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8005414:	2b20      	cmp	r3, #32
 8005416:	d000      	beq.n	800541a <HAL_UART_Transmit+0x1a>
 8005418:	e096      	b.n	8005548 <HAL_UART_Transmit+0x148>
  {
    if ((pData == NULL) || (Size == 0U))
 800541a:	68bb      	ldr	r3, [r7, #8]
 800541c:	2b00      	cmp	r3, #0
 800541e:	d003      	beq.n	8005428 <HAL_UART_Transmit+0x28>
 8005420:	1dbb      	adds	r3, r7, #6
 8005422:	881b      	ldrh	r3, [r3, #0]
 8005424:	2b00      	cmp	r3, #0
 8005426:	d101      	bne.n	800542c <HAL_UART_Transmit+0x2c>
    {
      return  HAL_ERROR;
 8005428:	2301      	movs	r3, #1
 800542a:	e08e      	b.n	800554a <HAL_UART_Transmit+0x14a>
    }

    /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
       should be aligned on a u16 frontier, as data to be filled into TDR will be
       handled through a u16 cast. */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800542c:	68fb      	ldr	r3, [r7, #12]
 800542e:	689a      	ldr	r2, [r3, #8]
 8005430:	2380      	movs	r3, #128	; 0x80
 8005432:	015b      	lsls	r3, r3, #5
 8005434:	429a      	cmp	r2, r3
 8005436:	d109      	bne.n	800544c <HAL_UART_Transmit+0x4c>
 8005438:	68fb      	ldr	r3, [r7, #12]
 800543a:	691b      	ldr	r3, [r3, #16]
 800543c:	2b00      	cmp	r3, #0
 800543e:	d105      	bne.n	800544c <HAL_UART_Transmit+0x4c>
    {
      if ((((uint32_t)pData) & 1U) != 0U)
 8005440:	68bb      	ldr	r3, [r7, #8]
 8005442:	2201      	movs	r2, #1
 8005444:	4013      	ands	r3, r2
 8005446:	d001      	beq.n	800544c <HAL_UART_Transmit+0x4c>
      {
        return  HAL_ERROR;
 8005448:	2301      	movs	r3, #1
 800544a:	e07e      	b.n	800554a <HAL_UART_Transmit+0x14a>
      }
    }

    __HAL_LOCK(huart);
 800544c:	68fb      	ldr	r3, [r7, #12]
 800544e:	2274      	movs	r2, #116	; 0x74
 8005450:	5c9b      	ldrb	r3, [r3, r2]
 8005452:	2b01      	cmp	r3, #1
 8005454:	d101      	bne.n	800545a <HAL_UART_Transmit+0x5a>
 8005456:	2302      	movs	r3, #2
 8005458:	e077      	b.n	800554a <HAL_UART_Transmit+0x14a>
 800545a:	68fb      	ldr	r3, [r7, #12]
 800545c:	2274      	movs	r2, #116	; 0x74
 800545e:	2101      	movs	r1, #1
 8005460:	5499      	strb	r1, [r3, r2]

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8005462:	68fb      	ldr	r3, [r7, #12]
 8005464:	2280      	movs	r2, #128	; 0x80
 8005466:	2100      	movs	r1, #0
 8005468:	5099      	str	r1, [r3, r2]
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800546a:	68fb      	ldr	r3, [r7, #12]
 800546c:	2221      	movs	r2, #33	; 0x21
 800546e:	679a      	str	r2, [r3, #120]	; 0x78

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 8005470:	f7ff f8ba 	bl	80045e8 <HAL_GetTick>
 8005474:	0003      	movs	r3, r0
 8005476:	617b      	str	r3, [r7, #20]

    huart->TxXferSize  = Size;
 8005478:	68fb      	ldr	r3, [r7, #12]
 800547a:	1dba      	adds	r2, r7, #6
 800547c:	2150      	movs	r1, #80	; 0x50
 800547e:	8812      	ldrh	r2, [r2, #0]
 8005480:	525a      	strh	r2, [r3, r1]
    huart->TxXferCount = Size;
 8005482:	68fb      	ldr	r3, [r7, #12]
 8005484:	1dba      	adds	r2, r7, #6
 8005486:	2152      	movs	r1, #82	; 0x52
 8005488:	8812      	ldrh	r2, [r2, #0]
 800548a:	525a      	strh	r2, [r3, r1]

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800548c:	68fb      	ldr	r3, [r7, #12]
 800548e:	689a      	ldr	r2, [r3, #8]
 8005490:	2380      	movs	r3, #128	; 0x80
 8005492:	015b      	lsls	r3, r3, #5
 8005494:	429a      	cmp	r2, r3
 8005496:	d108      	bne.n	80054aa <HAL_UART_Transmit+0xaa>
 8005498:	68fb      	ldr	r3, [r7, #12]
 800549a:	691b      	ldr	r3, [r3, #16]
 800549c:	2b00      	cmp	r3, #0
 800549e:	d104      	bne.n	80054aa <HAL_UART_Transmit+0xaa>
    {
      pdata8bits  = NULL;
 80054a0:	2300      	movs	r3, #0
 80054a2:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 80054a4:	68bb      	ldr	r3, [r7, #8]
 80054a6:	61bb      	str	r3, [r7, #24]
 80054a8:	e003      	b.n	80054b2 <HAL_UART_Transmit+0xb2>
    }
    else
    {
      pdata8bits  = pData;
 80054aa:	68bb      	ldr	r3, [r7, #8]
 80054ac:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 80054ae:	2300      	movs	r3, #0
 80054b0:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 80054b2:	68fb      	ldr	r3, [r7, #12]
 80054b4:	2274      	movs	r2, #116	; 0x74
 80054b6:	2100      	movs	r1, #0
 80054b8:	5499      	strb	r1, [r3, r2]

    while (huart->TxXferCount > 0U)
 80054ba:	e02d      	b.n	8005518 <HAL_UART_Transmit+0x118>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80054bc:	697a      	ldr	r2, [r7, #20]
 80054be:	68f8      	ldr	r0, [r7, #12]
 80054c0:	683b      	ldr	r3, [r7, #0]
 80054c2:	9300      	str	r3, [sp, #0]
 80054c4:	0013      	movs	r3, r2
 80054c6:	2200      	movs	r2, #0
 80054c8:	2180      	movs	r1, #128	; 0x80
 80054ca:	f000 fa7f 	bl	80059cc <UART_WaitOnFlagUntilTimeout>
 80054ce:	1e03      	subs	r3, r0, #0
 80054d0:	d001      	beq.n	80054d6 <HAL_UART_Transmit+0xd6>
      {
        return HAL_TIMEOUT;
 80054d2:	2303      	movs	r3, #3
 80054d4:	e039      	b.n	800554a <HAL_UART_Transmit+0x14a>
      }
      if (pdata8bits == NULL)
 80054d6:	69fb      	ldr	r3, [r7, #28]
 80054d8:	2b00      	cmp	r3, #0
 80054da:	d10b      	bne.n	80054f4 <HAL_UART_Transmit+0xf4>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 80054dc:	69bb      	ldr	r3, [r7, #24]
 80054de:	881a      	ldrh	r2, [r3, #0]
 80054e0:	68fb      	ldr	r3, [r7, #12]
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	05d2      	lsls	r2, r2, #23
 80054e6:	0dd2      	lsrs	r2, r2, #23
 80054e8:	b292      	uxth	r2, r2
 80054ea:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata16bits++;
 80054ec:	69bb      	ldr	r3, [r7, #24]
 80054ee:	3302      	adds	r3, #2
 80054f0:	61bb      	str	r3, [r7, #24]
 80054f2:	e008      	b.n	8005506 <HAL_UART_Transmit+0x106>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 80054f4:	69fb      	ldr	r3, [r7, #28]
 80054f6:	781a      	ldrb	r2, [r3, #0]
 80054f8:	68fb      	ldr	r3, [r7, #12]
 80054fa:	681b      	ldr	r3, [r3, #0]
 80054fc:	b292      	uxth	r2, r2
 80054fe:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata8bits++;
 8005500:	69fb      	ldr	r3, [r7, #28]
 8005502:	3301      	adds	r3, #1
 8005504:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8005506:	68fb      	ldr	r3, [r7, #12]
 8005508:	2252      	movs	r2, #82	; 0x52
 800550a:	5a9b      	ldrh	r3, [r3, r2]
 800550c:	b29b      	uxth	r3, r3
 800550e:	3b01      	subs	r3, #1
 8005510:	b299      	uxth	r1, r3
 8005512:	68fb      	ldr	r3, [r7, #12]
 8005514:	2252      	movs	r2, #82	; 0x52
 8005516:	5299      	strh	r1, [r3, r2]
    while (huart->TxXferCount > 0U)
 8005518:	68fb      	ldr	r3, [r7, #12]
 800551a:	2252      	movs	r2, #82	; 0x52
 800551c:	5a9b      	ldrh	r3, [r3, r2]
 800551e:	b29b      	uxth	r3, r3
 8005520:	2b00      	cmp	r3, #0
 8005522:	d1cb      	bne.n	80054bc <HAL_UART_Transmit+0xbc>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8005524:	697a      	ldr	r2, [r7, #20]
 8005526:	68f8      	ldr	r0, [r7, #12]
 8005528:	683b      	ldr	r3, [r7, #0]
 800552a:	9300      	str	r3, [sp, #0]
 800552c:	0013      	movs	r3, r2
 800552e:	2200      	movs	r2, #0
 8005530:	2140      	movs	r1, #64	; 0x40
 8005532:	f000 fa4b 	bl	80059cc <UART_WaitOnFlagUntilTimeout>
 8005536:	1e03      	subs	r3, r0, #0
 8005538:	d001      	beq.n	800553e <HAL_UART_Transmit+0x13e>
    {
      return HAL_TIMEOUT;
 800553a:	2303      	movs	r3, #3
 800553c:	e005      	b.n	800554a <HAL_UART_Transmit+0x14a>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 800553e:	68fb      	ldr	r3, [r7, #12]
 8005540:	2220      	movs	r2, #32
 8005542:	679a      	str	r2, [r3, #120]	; 0x78

    return HAL_OK;
 8005544:	2300      	movs	r3, #0
 8005546:	e000      	b.n	800554a <HAL_UART_Transmit+0x14a>
  }
  else
  {
    return HAL_BUSY;
 8005548:	2302      	movs	r3, #2
  }
}
 800554a:	0018      	movs	r0, r3
 800554c:	46bd      	mov	sp, r7
 800554e:	b008      	add	sp, #32
 8005550:	bd80      	pop	{r7, pc}
	...

08005554 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8005554:	b580      	push	{r7, lr}
 8005556:	b088      	sub	sp, #32
 8005558:	af00      	add	r7, sp, #0
 800555a:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 800555c:	231e      	movs	r3, #30
 800555e:	18fb      	adds	r3, r7, r3
 8005560:	2200      	movs	r2, #0
 8005562:	701a      	strb	r2, [r3, #0]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	689a      	ldr	r2, [r3, #8]
 8005568:	687b      	ldr	r3, [r7, #4]
 800556a:	691b      	ldr	r3, [r3, #16]
 800556c:	431a      	orrs	r2, r3
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	695b      	ldr	r3, [r3, #20]
 8005572:	431a      	orrs	r2, r3
 8005574:	687b      	ldr	r3, [r7, #4]
 8005576:	69db      	ldr	r3, [r3, #28]
 8005578:	4313      	orrs	r3, r2
 800557a:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800557c:	687b      	ldr	r3, [r7, #4]
 800557e:	681b      	ldr	r3, [r3, #0]
 8005580:	681b      	ldr	r3, [r3, #0]
 8005582:	4a8d      	ldr	r2, [pc, #564]	; (80057b8 <UART_SetConfig+0x264>)
 8005584:	4013      	ands	r3, r2
 8005586:	0019      	movs	r1, r3
 8005588:	687b      	ldr	r3, [r7, #4]
 800558a:	681b      	ldr	r3, [r3, #0]
 800558c:	697a      	ldr	r2, [r7, #20]
 800558e:	430a      	orrs	r2, r1
 8005590:	601a      	str	r2, [r3, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8005592:	687b      	ldr	r3, [r7, #4]
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	685b      	ldr	r3, [r3, #4]
 8005598:	4a88      	ldr	r2, [pc, #544]	; (80057bc <UART_SetConfig+0x268>)
 800559a:	4013      	ands	r3, r2
 800559c:	0019      	movs	r1, r3
 800559e:	687b      	ldr	r3, [r7, #4]
 80055a0:	68da      	ldr	r2, [r3, #12]
 80055a2:	687b      	ldr	r3, [r7, #4]
 80055a4:	681b      	ldr	r3, [r3, #0]
 80055a6:	430a      	orrs	r2, r1
 80055a8:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 80055aa:	687b      	ldr	r3, [r7, #4]
 80055ac:	699b      	ldr	r3, [r3, #24]
 80055ae:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	6a1b      	ldr	r3, [r3, #32]
 80055b4:	697a      	ldr	r2, [r7, #20]
 80055b6:	4313      	orrs	r3, r2
 80055b8:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80055ba:	687b      	ldr	r3, [r7, #4]
 80055bc:	681b      	ldr	r3, [r3, #0]
 80055be:	689b      	ldr	r3, [r3, #8]
 80055c0:	4a7f      	ldr	r2, [pc, #508]	; (80057c0 <UART_SetConfig+0x26c>)
 80055c2:	4013      	ands	r3, r2
 80055c4:	0019      	movs	r1, r3
 80055c6:	687b      	ldr	r3, [r7, #4]
 80055c8:	681b      	ldr	r3, [r3, #0]
 80055ca:	697a      	ldr	r2, [r7, #20]
 80055cc:	430a      	orrs	r2, r1
 80055ce:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 80055d0:	687b      	ldr	r3, [r7, #4]
 80055d2:	681b      	ldr	r3, [r3, #0]
 80055d4:	4a7b      	ldr	r2, [pc, #492]	; (80057c4 <UART_SetConfig+0x270>)
 80055d6:	4293      	cmp	r3, r2
 80055d8:	d127      	bne.n	800562a <UART_SetConfig+0xd6>
 80055da:	4b7b      	ldr	r3, [pc, #492]	; (80057c8 <UART_SetConfig+0x274>)
 80055dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80055de:	2203      	movs	r2, #3
 80055e0:	4013      	ands	r3, r2
 80055e2:	2b03      	cmp	r3, #3
 80055e4:	d00d      	beq.n	8005602 <UART_SetConfig+0xae>
 80055e6:	d81b      	bhi.n	8005620 <UART_SetConfig+0xcc>
 80055e8:	2b02      	cmp	r3, #2
 80055ea:	d014      	beq.n	8005616 <UART_SetConfig+0xc2>
 80055ec:	d818      	bhi.n	8005620 <UART_SetConfig+0xcc>
 80055ee:	2b00      	cmp	r3, #0
 80055f0:	d002      	beq.n	80055f8 <UART_SetConfig+0xa4>
 80055f2:	2b01      	cmp	r3, #1
 80055f4:	d00a      	beq.n	800560c <UART_SetConfig+0xb8>
 80055f6:	e013      	b.n	8005620 <UART_SetConfig+0xcc>
 80055f8:	231f      	movs	r3, #31
 80055fa:	18fb      	adds	r3, r7, r3
 80055fc:	2200      	movs	r2, #0
 80055fe:	701a      	strb	r2, [r3, #0]
 8005600:	e021      	b.n	8005646 <UART_SetConfig+0xf2>
 8005602:	231f      	movs	r3, #31
 8005604:	18fb      	adds	r3, r7, r3
 8005606:	2202      	movs	r2, #2
 8005608:	701a      	strb	r2, [r3, #0]
 800560a:	e01c      	b.n	8005646 <UART_SetConfig+0xf2>
 800560c:	231f      	movs	r3, #31
 800560e:	18fb      	adds	r3, r7, r3
 8005610:	2204      	movs	r2, #4
 8005612:	701a      	strb	r2, [r3, #0]
 8005614:	e017      	b.n	8005646 <UART_SetConfig+0xf2>
 8005616:	231f      	movs	r3, #31
 8005618:	18fb      	adds	r3, r7, r3
 800561a:	2208      	movs	r2, #8
 800561c:	701a      	strb	r2, [r3, #0]
 800561e:	e012      	b.n	8005646 <UART_SetConfig+0xf2>
 8005620:	231f      	movs	r3, #31
 8005622:	18fb      	adds	r3, r7, r3
 8005624:	2210      	movs	r2, #16
 8005626:	701a      	strb	r2, [r3, #0]
 8005628:	e00d      	b.n	8005646 <UART_SetConfig+0xf2>
 800562a:	687b      	ldr	r3, [r7, #4]
 800562c:	681b      	ldr	r3, [r3, #0]
 800562e:	4a67      	ldr	r2, [pc, #412]	; (80057cc <UART_SetConfig+0x278>)
 8005630:	4293      	cmp	r3, r2
 8005632:	d104      	bne.n	800563e <UART_SetConfig+0xea>
 8005634:	231f      	movs	r3, #31
 8005636:	18fb      	adds	r3, r7, r3
 8005638:	2200      	movs	r2, #0
 800563a:	701a      	strb	r2, [r3, #0]
 800563c:	e003      	b.n	8005646 <UART_SetConfig+0xf2>
 800563e:	231f      	movs	r3, #31
 8005640:	18fb      	adds	r3, r7, r3
 8005642:	2210      	movs	r2, #16
 8005644:	701a      	strb	r2, [r3, #0]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8005646:	687b      	ldr	r3, [r7, #4]
 8005648:	69da      	ldr	r2, [r3, #28]
 800564a:	2380      	movs	r3, #128	; 0x80
 800564c:	021b      	lsls	r3, r3, #8
 800564e:	429a      	cmp	r2, r3
 8005650:	d15d      	bne.n	800570e <UART_SetConfig+0x1ba>
  {
    switch (clocksource)
 8005652:	231f      	movs	r3, #31
 8005654:	18fb      	adds	r3, r7, r3
 8005656:	781b      	ldrb	r3, [r3, #0]
 8005658:	2b08      	cmp	r3, #8
 800565a:	d015      	beq.n	8005688 <UART_SetConfig+0x134>
 800565c:	dc18      	bgt.n	8005690 <UART_SetConfig+0x13c>
 800565e:	2b04      	cmp	r3, #4
 8005660:	d00d      	beq.n	800567e <UART_SetConfig+0x12a>
 8005662:	dc15      	bgt.n	8005690 <UART_SetConfig+0x13c>
 8005664:	2b00      	cmp	r3, #0
 8005666:	d002      	beq.n	800566e <UART_SetConfig+0x11a>
 8005668:	2b02      	cmp	r3, #2
 800566a:	d005      	beq.n	8005678 <UART_SetConfig+0x124>
 800566c:	e010      	b.n	8005690 <UART_SetConfig+0x13c>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 800566e:	f7ff fe5d 	bl	800532c <HAL_RCC_GetPCLK1Freq>
 8005672:	0003      	movs	r3, r0
 8005674:	61bb      	str	r3, [r7, #24]
        break;
 8005676:	e012      	b.n	800569e <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8005678:	4b55      	ldr	r3, [pc, #340]	; (80057d0 <UART_SetConfig+0x27c>)
 800567a:	61bb      	str	r3, [r7, #24]
        break;
 800567c:	e00f      	b.n	800569e <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 800567e:	f7ff fde7 	bl	8005250 <HAL_RCC_GetSysClockFreq>
 8005682:	0003      	movs	r3, r0
 8005684:	61bb      	str	r3, [r7, #24]
        break;
 8005686:	e00a      	b.n	800569e <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8005688:	2380      	movs	r3, #128	; 0x80
 800568a:	021b      	lsls	r3, r3, #8
 800568c:	61bb      	str	r3, [r7, #24]
        break;
 800568e:	e006      	b.n	800569e <UART_SetConfig+0x14a>
      default:
        pclk = 0U;
 8005690:	2300      	movs	r3, #0
 8005692:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8005694:	231e      	movs	r3, #30
 8005696:	18fb      	adds	r3, r7, r3
 8005698:	2201      	movs	r2, #1
 800569a:	701a      	strb	r2, [r3, #0]
        break;
 800569c:	46c0      	nop			; (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 800569e:	69bb      	ldr	r3, [r7, #24]
 80056a0:	2b00      	cmp	r3, #0
 80056a2:	d100      	bne.n	80056a6 <UART_SetConfig+0x152>
 80056a4:	e07b      	b.n	800579e <UART_SetConfig+0x24a>
    {
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 80056a6:	69bb      	ldr	r3, [r7, #24]
 80056a8:	005a      	lsls	r2, r3, #1
 80056aa:	687b      	ldr	r3, [r7, #4]
 80056ac:	685b      	ldr	r3, [r3, #4]
 80056ae:	085b      	lsrs	r3, r3, #1
 80056b0:	18d2      	adds	r2, r2, r3
 80056b2:	687b      	ldr	r3, [r7, #4]
 80056b4:	685b      	ldr	r3, [r3, #4]
 80056b6:	0019      	movs	r1, r3
 80056b8:	0010      	movs	r0, r2
 80056ba:	f7fa fd41 	bl	8000140 <__udivsi3>
 80056be:	0003      	movs	r3, r0
 80056c0:	b29b      	uxth	r3, r3
 80056c2:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80056c4:	693b      	ldr	r3, [r7, #16]
 80056c6:	2b0f      	cmp	r3, #15
 80056c8:	d91c      	bls.n	8005704 <UART_SetConfig+0x1b0>
 80056ca:	693a      	ldr	r2, [r7, #16]
 80056cc:	2380      	movs	r3, #128	; 0x80
 80056ce:	025b      	lsls	r3, r3, #9
 80056d0:	429a      	cmp	r2, r3
 80056d2:	d217      	bcs.n	8005704 <UART_SetConfig+0x1b0>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 80056d4:	693b      	ldr	r3, [r7, #16]
 80056d6:	b29a      	uxth	r2, r3
 80056d8:	200e      	movs	r0, #14
 80056da:	183b      	adds	r3, r7, r0
 80056dc:	210f      	movs	r1, #15
 80056de:	438a      	bics	r2, r1
 80056e0:	801a      	strh	r2, [r3, #0]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 80056e2:	693b      	ldr	r3, [r7, #16]
 80056e4:	085b      	lsrs	r3, r3, #1
 80056e6:	b29b      	uxth	r3, r3
 80056e8:	2207      	movs	r2, #7
 80056ea:	4013      	ands	r3, r2
 80056ec:	b299      	uxth	r1, r3
 80056ee:	183b      	adds	r3, r7, r0
 80056f0:	183a      	adds	r2, r7, r0
 80056f2:	8812      	ldrh	r2, [r2, #0]
 80056f4:	430a      	orrs	r2, r1
 80056f6:	801a      	strh	r2, [r3, #0]
        huart->Instance->BRR = brrtemp;
 80056f8:	687b      	ldr	r3, [r7, #4]
 80056fa:	681b      	ldr	r3, [r3, #0]
 80056fc:	183a      	adds	r2, r7, r0
 80056fe:	8812      	ldrh	r2, [r2, #0]
 8005700:	60da      	str	r2, [r3, #12]
 8005702:	e04c      	b.n	800579e <UART_SetConfig+0x24a>
      }
      else
      {
        ret = HAL_ERROR;
 8005704:	231e      	movs	r3, #30
 8005706:	18fb      	adds	r3, r7, r3
 8005708:	2201      	movs	r2, #1
 800570a:	701a      	strb	r2, [r3, #0]
 800570c:	e047      	b.n	800579e <UART_SetConfig+0x24a>
      }
    }
  }
  else
  {
    switch (clocksource)
 800570e:	231f      	movs	r3, #31
 8005710:	18fb      	adds	r3, r7, r3
 8005712:	781b      	ldrb	r3, [r3, #0]
 8005714:	2b08      	cmp	r3, #8
 8005716:	d015      	beq.n	8005744 <UART_SetConfig+0x1f0>
 8005718:	dc18      	bgt.n	800574c <UART_SetConfig+0x1f8>
 800571a:	2b04      	cmp	r3, #4
 800571c:	d00d      	beq.n	800573a <UART_SetConfig+0x1e6>
 800571e:	dc15      	bgt.n	800574c <UART_SetConfig+0x1f8>
 8005720:	2b00      	cmp	r3, #0
 8005722:	d002      	beq.n	800572a <UART_SetConfig+0x1d6>
 8005724:	2b02      	cmp	r3, #2
 8005726:	d005      	beq.n	8005734 <UART_SetConfig+0x1e0>
 8005728:	e010      	b.n	800574c <UART_SetConfig+0x1f8>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 800572a:	f7ff fdff 	bl	800532c <HAL_RCC_GetPCLK1Freq>
 800572e:	0003      	movs	r3, r0
 8005730:	61bb      	str	r3, [r7, #24]
        break;
 8005732:	e012      	b.n	800575a <UART_SetConfig+0x206>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8005734:	4b26      	ldr	r3, [pc, #152]	; (80057d0 <UART_SetConfig+0x27c>)
 8005736:	61bb      	str	r3, [r7, #24]
        break;
 8005738:	e00f      	b.n	800575a <UART_SetConfig+0x206>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 800573a:	f7ff fd89 	bl	8005250 <HAL_RCC_GetSysClockFreq>
 800573e:	0003      	movs	r3, r0
 8005740:	61bb      	str	r3, [r7, #24]
        break;
 8005742:	e00a      	b.n	800575a <UART_SetConfig+0x206>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8005744:	2380      	movs	r3, #128	; 0x80
 8005746:	021b      	lsls	r3, r3, #8
 8005748:	61bb      	str	r3, [r7, #24]
        break;
 800574a:	e006      	b.n	800575a <UART_SetConfig+0x206>
      default:
        pclk = 0U;
 800574c:	2300      	movs	r3, #0
 800574e:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8005750:	231e      	movs	r3, #30
 8005752:	18fb      	adds	r3, r7, r3
 8005754:	2201      	movs	r2, #1
 8005756:	701a      	strb	r2, [r3, #0]
        break;
 8005758:	46c0      	nop			; (mov r8, r8)
    }

    if (pclk != 0U)
 800575a:	69bb      	ldr	r3, [r7, #24]
 800575c:	2b00      	cmp	r3, #0
 800575e:	d01e      	beq.n	800579e <UART_SetConfig+0x24a>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 8005760:	687b      	ldr	r3, [r7, #4]
 8005762:	685b      	ldr	r3, [r3, #4]
 8005764:	085a      	lsrs	r2, r3, #1
 8005766:	69bb      	ldr	r3, [r7, #24]
 8005768:	18d2      	adds	r2, r2, r3
 800576a:	687b      	ldr	r3, [r7, #4]
 800576c:	685b      	ldr	r3, [r3, #4]
 800576e:	0019      	movs	r1, r3
 8005770:	0010      	movs	r0, r2
 8005772:	f7fa fce5 	bl	8000140 <__udivsi3>
 8005776:	0003      	movs	r3, r0
 8005778:	b29b      	uxth	r3, r3
 800577a:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800577c:	693b      	ldr	r3, [r7, #16]
 800577e:	2b0f      	cmp	r3, #15
 8005780:	d909      	bls.n	8005796 <UART_SetConfig+0x242>
 8005782:	693a      	ldr	r2, [r7, #16]
 8005784:	2380      	movs	r3, #128	; 0x80
 8005786:	025b      	lsls	r3, r3, #9
 8005788:	429a      	cmp	r2, r3
 800578a:	d204      	bcs.n	8005796 <UART_SetConfig+0x242>
      {
        huart->Instance->BRR = usartdiv;
 800578c:	687b      	ldr	r3, [r7, #4]
 800578e:	681b      	ldr	r3, [r3, #0]
 8005790:	693a      	ldr	r2, [r7, #16]
 8005792:	60da      	str	r2, [r3, #12]
 8005794:	e003      	b.n	800579e <UART_SetConfig+0x24a>
      }
      else
      {
        ret = HAL_ERROR;
 8005796:	231e      	movs	r3, #30
 8005798:	18fb      	adds	r3, r7, r3
 800579a:	2201      	movs	r2, #1
 800579c:	701a      	strb	r2, [r3, #0]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 800579e:	687b      	ldr	r3, [r7, #4]
 80057a0:	2200      	movs	r2, #0
 80057a2:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 80057a4:	687b      	ldr	r3, [r7, #4]
 80057a6:	2200      	movs	r2, #0
 80057a8:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 80057aa:	231e      	movs	r3, #30
 80057ac:	18fb      	adds	r3, r7, r3
 80057ae:	781b      	ldrb	r3, [r3, #0]
}
 80057b0:	0018      	movs	r0, r3
 80057b2:	46bd      	mov	sp, r7
 80057b4:	b008      	add	sp, #32
 80057b6:	bd80      	pop	{r7, pc}
 80057b8:	ffff69f3 	.word	0xffff69f3
 80057bc:	ffffcfff 	.word	0xffffcfff
 80057c0:	fffff4ff 	.word	0xfffff4ff
 80057c4:	40013800 	.word	0x40013800
 80057c8:	40021000 	.word	0x40021000
 80057cc:	40004400 	.word	0x40004400
 80057d0:	007a1200 	.word	0x007a1200

080057d4 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 80057d4:	b580      	push	{r7, lr}
 80057d6:	b082      	sub	sp, #8
 80057d8:	af00      	add	r7, sp, #0
 80057da:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 80057dc:	687b      	ldr	r3, [r7, #4]
 80057de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80057e0:	2201      	movs	r2, #1
 80057e2:	4013      	ands	r3, r2
 80057e4:	d00b      	beq.n	80057fe <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 80057e6:	687b      	ldr	r3, [r7, #4]
 80057e8:	681b      	ldr	r3, [r3, #0]
 80057ea:	685b      	ldr	r3, [r3, #4]
 80057ec:	4a4a      	ldr	r2, [pc, #296]	; (8005918 <UART_AdvFeatureConfig+0x144>)
 80057ee:	4013      	ands	r3, r2
 80057f0:	0019      	movs	r1, r3
 80057f2:	687b      	ldr	r3, [r7, #4]
 80057f4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80057f6:	687b      	ldr	r3, [r7, #4]
 80057f8:	681b      	ldr	r3, [r3, #0]
 80057fa:	430a      	orrs	r2, r1
 80057fc:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 80057fe:	687b      	ldr	r3, [r7, #4]
 8005800:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005802:	2202      	movs	r2, #2
 8005804:	4013      	ands	r3, r2
 8005806:	d00b      	beq.n	8005820 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8005808:	687b      	ldr	r3, [r7, #4]
 800580a:	681b      	ldr	r3, [r3, #0]
 800580c:	685b      	ldr	r3, [r3, #4]
 800580e:	4a43      	ldr	r2, [pc, #268]	; (800591c <UART_AdvFeatureConfig+0x148>)
 8005810:	4013      	ands	r3, r2
 8005812:	0019      	movs	r1, r3
 8005814:	687b      	ldr	r3, [r7, #4]
 8005816:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005818:	687b      	ldr	r3, [r7, #4]
 800581a:	681b      	ldr	r3, [r3, #0]
 800581c:	430a      	orrs	r2, r1
 800581e:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 8005820:	687b      	ldr	r3, [r7, #4]
 8005822:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005824:	2204      	movs	r2, #4
 8005826:	4013      	ands	r3, r2
 8005828:	d00b      	beq.n	8005842 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 800582a:	687b      	ldr	r3, [r7, #4]
 800582c:	681b      	ldr	r3, [r3, #0]
 800582e:	685b      	ldr	r3, [r3, #4]
 8005830:	4a3b      	ldr	r2, [pc, #236]	; (8005920 <UART_AdvFeatureConfig+0x14c>)
 8005832:	4013      	ands	r3, r2
 8005834:	0019      	movs	r1, r3
 8005836:	687b      	ldr	r3, [r7, #4]
 8005838:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800583a:	687b      	ldr	r3, [r7, #4]
 800583c:	681b      	ldr	r3, [r3, #0]
 800583e:	430a      	orrs	r2, r1
 8005840:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8005842:	687b      	ldr	r3, [r7, #4]
 8005844:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005846:	2208      	movs	r2, #8
 8005848:	4013      	ands	r3, r2
 800584a:	d00b      	beq.n	8005864 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800584c:	687b      	ldr	r3, [r7, #4]
 800584e:	681b      	ldr	r3, [r3, #0]
 8005850:	685b      	ldr	r3, [r3, #4]
 8005852:	4a34      	ldr	r2, [pc, #208]	; (8005924 <UART_AdvFeatureConfig+0x150>)
 8005854:	4013      	ands	r3, r2
 8005856:	0019      	movs	r1, r3
 8005858:	687b      	ldr	r3, [r7, #4]
 800585a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800585c:	687b      	ldr	r3, [r7, #4]
 800585e:	681b      	ldr	r3, [r3, #0]
 8005860:	430a      	orrs	r2, r1
 8005862:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005868:	2210      	movs	r2, #16
 800586a:	4013      	ands	r3, r2
 800586c:	d00b      	beq.n	8005886 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 800586e:	687b      	ldr	r3, [r7, #4]
 8005870:	681b      	ldr	r3, [r3, #0]
 8005872:	689b      	ldr	r3, [r3, #8]
 8005874:	4a2c      	ldr	r2, [pc, #176]	; (8005928 <UART_AdvFeatureConfig+0x154>)
 8005876:	4013      	ands	r3, r2
 8005878:	0019      	movs	r1, r3
 800587a:	687b      	ldr	r3, [r7, #4]
 800587c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800587e:	687b      	ldr	r3, [r7, #4]
 8005880:	681b      	ldr	r3, [r3, #0]
 8005882:	430a      	orrs	r2, r1
 8005884:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8005886:	687b      	ldr	r3, [r7, #4]
 8005888:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800588a:	2220      	movs	r2, #32
 800588c:	4013      	ands	r3, r2
 800588e:	d00b      	beq.n	80058a8 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8005890:	687b      	ldr	r3, [r7, #4]
 8005892:	681b      	ldr	r3, [r3, #0]
 8005894:	689b      	ldr	r3, [r3, #8]
 8005896:	4a25      	ldr	r2, [pc, #148]	; (800592c <UART_AdvFeatureConfig+0x158>)
 8005898:	4013      	ands	r3, r2
 800589a:	0019      	movs	r1, r3
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	681b      	ldr	r3, [r3, #0]
 80058a4:	430a      	orrs	r2, r1
 80058a6:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 80058a8:	687b      	ldr	r3, [r7, #4]
 80058aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80058ac:	2240      	movs	r2, #64	; 0x40
 80058ae:	4013      	ands	r3, r2
 80058b0:	d01d      	beq.n	80058ee <UART_AdvFeatureConfig+0x11a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 80058b2:	687b      	ldr	r3, [r7, #4]
 80058b4:	681b      	ldr	r3, [r3, #0]
 80058b6:	685b      	ldr	r3, [r3, #4]
 80058b8:	4a1d      	ldr	r2, [pc, #116]	; (8005930 <UART_AdvFeatureConfig+0x15c>)
 80058ba:	4013      	ands	r3, r2
 80058bc:	0019      	movs	r1, r3
 80058be:	687b      	ldr	r3, [r7, #4]
 80058c0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80058c2:	687b      	ldr	r3, [r7, #4]
 80058c4:	681b      	ldr	r3, [r3, #0]
 80058c6:	430a      	orrs	r2, r1
 80058c8:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 80058ca:	687b      	ldr	r3, [r7, #4]
 80058cc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80058ce:	2380      	movs	r3, #128	; 0x80
 80058d0:	035b      	lsls	r3, r3, #13
 80058d2:	429a      	cmp	r2, r3
 80058d4:	d10b      	bne.n	80058ee <UART_AdvFeatureConfig+0x11a>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 80058d6:	687b      	ldr	r3, [r7, #4]
 80058d8:	681b      	ldr	r3, [r3, #0]
 80058da:	685b      	ldr	r3, [r3, #4]
 80058dc:	4a15      	ldr	r2, [pc, #84]	; (8005934 <UART_AdvFeatureConfig+0x160>)
 80058de:	4013      	ands	r3, r2
 80058e0:	0019      	movs	r1, r3
 80058e2:	687b      	ldr	r3, [r7, #4]
 80058e4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80058e6:	687b      	ldr	r3, [r7, #4]
 80058e8:	681b      	ldr	r3, [r3, #0]
 80058ea:	430a      	orrs	r2, r1
 80058ec:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 80058ee:	687b      	ldr	r3, [r7, #4]
 80058f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80058f2:	2280      	movs	r2, #128	; 0x80
 80058f4:	4013      	ands	r3, r2
 80058f6:	d00b      	beq.n	8005910 <UART_AdvFeatureConfig+0x13c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 80058f8:	687b      	ldr	r3, [r7, #4]
 80058fa:	681b      	ldr	r3, [r3, #0]
 80058fc:	685b      	ldr	r3, [r3, #4]
 80058fe:	4a0e      	ldr	r2, [pc, #56]	; (8005938 <UART_AdvFeatureConfig+0x164>)
 8005900:	4013      	ands	r3, r2
 8005902:	0019      	movs	r1, r3
 8005904:	687b      	ldr	r3, [r7, #4]
 8005906:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8005908:	687b      	ldr	r3, [r7, #4]
 800590a:	681b      	ldr	r3, [r3, #0]
 800590c:	430a      	orrs	r2, r1
 800590e:	605a      	str	r2, [r3, #4]
  }
}
 8005910:	46c0      	nop			; (mov r8, r8)
 8005912:	46bd      	mov	sp, r7
 8005914:	b002      	add	sp, #8
 8005916:	bd80      	pop	{r7, pc}
 8005918:	fffdffff 	.word	0xfffdffff
 800591c:	fffeffff 	.word	0xfffeffff
 8005920:	fffbffff 	.word	0xfffbffff
 8005924:	ffff7fff 	.word	0xffff7fff
 8005928:	ffffefff 	.word	0xffffefff
 800592c:	ffffdfff 	.word	0xffffdfff
 8005930:	ffefffff 	.word	0xffefffff
 8005934:	ff9fffff 	.word	0xff9fffff
 8005938:	fff7ffff 	.word	0xfff7ffff

0800593c <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 800593c:	b580      	push	{r7, lr}
 800593e:	b086      	sub	sp, #24
 8005940:	af02      	add	r7, sp, #8
 8005942:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8005944:	687b      	ldr	r3, [r7, #4]
 8005946:	2280      	movs	r2, #128	; 0x80
 8005948:	2100      	movs	r1, #0
 800594a:	5099      	str	r1, [r3, r2]

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 800594c:	f7fe fe4c 	bl	80045e8 <HAL_GetTick>
 8005950:	0003      	movs	r3, r0
 8005952:	60fb      	str	r3, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8005954:	687b      	ldr	r3, [r7, #4]
 8005956:	681b      	ldr	r3, [r3, #0]
 8005958:	681b      	ldr	r3, [r3, #0]
 800595a:	2208      	movs	r2, #8
 800595c:	4013      	ands	r3, r2
 800595e:	2b08      	cmp	r3, #8
 8005960:	d10c      	bne.n	800597c <UART_CheckIdleState+0x40>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8005962:	68fb      	ldr	r3, [r7, #12]
 8005964:	2280      	movs	r2, #128	; 0x80
 8005966:	0391      	lsls	r1, r2, #14
 8005968:	6878      	ldr	r0, [r7, #4]
 800596a:	4a17      	ldr	r2, [pc, #92]	; (80059c8 <UART_CheckIdleState+0x8c>)
 800596c:	9200      	str	r2, [sp, #0]
 800596e:	2200      	movs	r2, #0
 8005970:	f000 f82c 	bl	80059cc <UART_WaitOnFlagUntilTimeout>
 8005974:	1e03      	subs	r3, r0, #0
 8005976:	d001      	beq.n	800597c <UART_CheckIdleState+0x40>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 8005978:	2303      	movs	r3, #3
 800597a:	e021      	b.n	80059c0 <UART_CheckIdleState+0x84>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 800597c:	687b      	ldr	r3, [r7, #4]
 800597e:	681b      	ldr	r3, [r3, #0]
 8005980:	681b      	ldr	r3, [r3, #0]
 8005982:	2204      	movs	r2, #4
 8005984:	4013      	ands	r3, r2
 8005986:	2b04      	cmp	r3, #4
 8005988:	d10c      	bne.n	80059a4 <UART_CheckIdleState+0x68>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800598a:	68fb      	ldr	r3, [r7, #12]
 800598c:	2280      	movs	r2, #128	; 0x80
 800598e:	03d1      	lsls	r1, r2, #15
 8005990:	6878      	ldr	r0, [r7, #4]
 8005992:	4a0d      	ldr	r2, [pc, #52]	; (80059c8 <UART_CheckIdleState+0x8c>)
 8005994:	9200      	str	r2, [sp, #0]
 8005996:	2200      	movs	r2, #0
 8005998:	f000 f818 	bl	80059cc <UART_WaitOnFlagUntilTimeout>
 800599c:	1e03      	subs	r3, r0, #0
 800599e:	d001      	beq.n	80059a4 <UART_CheckIdleState+0x68>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 80059a0:	2303      	movs	r3, #3
 80059a2:	e00d      	b.n	80059c0 <UART_CheckIdleState+0x84>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 80059a4:	687b      	ldr	r3, [r7, #4]
 80059a6:	2220      	movs	r2, #32
 80059a8:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 80059aa:	687b      	ldr	r3, [r7, #4]
 80059ac:	2220      	movs	r2, #32
 80059ae:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	2200      	movs	r2, #0
 80059b4:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 80059b6:	687b      	ldr	r3, [r7, #4]
 80059b8:	2274      	movs	r2, #116	; 0x74
 80059ba:	2100      	movs	r1, #0
 80059bc:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 80059be:	2300      	movs	r3, #0
}
 80059c0:	0018      	movs	r0, r3
 80059c2:	46bd      	mov	sp, r7
 80059c4:	b004      	add	sp, #16
 80059c6:	bd80      	pop	{r7, pc}
 80059c8:	01ffffff 	.word	0x01ffffff

080059cc <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 80059cc:	b580      	push	{r7, lr}
 80059ce:	b094      	sub	sp, #80	; 0x50
 80059d0:	af00      	add	r7, sp, #0
 80059d2:	60f8      	str	r0, [r7, #12]
 80059d4:	60b9      	str	r1, [r7, #8]
 80059d6:	603b      	str	r3, [r7, #0]
 80059d8:	1dfb      	adds	r3, r7, #7
 80059da:	701a      	strb	r2, [r3, #0]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80059dc:	e0a3      	b.n	8005b26 <UART_WaitOnFlagUntilTimeout+0x15a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80059de:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80059e0:	3301      	adds	r3, #1
 80059e2:	d100      	bne.n	80059e6 <UART_WaitOnFlagUntilTimeout+0x1a>
 80059e4:	e09f      	b.n	8005b26 <UART_WaitOnFlagUntilTimeout+0x15a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80059e6:	f7fe fdff 	bl	80045e8 <HAL_GetTick>
 80059ea:	0002      	movs	r2, r0
 80059ec:	683b      	ldr	r3, [r7, #0]
 80059ee:	1ad3      	subs	r3, r2, r3
 80059f0:	6dba      	ldr	r2, [r7, #88]	; 0x58
 80059f2:	429a      	cmp	r2, r3
 80059f4:	d302      	bcc.n	80059fc <UART_WaitOnFlagUntilTimeout+0x30>
 80059f6:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 80059f8:	2b00      	cmp	r3, #0
 80059fa:	d13d      	bne.n	8005a78 <UART_WaitOnFlagUntilTimeout+0xac>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80059fc:	f3ef 8310 	mrs	r3, PRIMASK
 8005a00:	62bb      	str	r3, [r7, #40]	; 0x28
  return(result);
 8005a02:	6abb      	ldr	r3, [r7, #40]	; 0x28
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
           interrupts for the interrupt process */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8005a04:	647b      	str	r3, [r7, #68]	; 0x44
 8005a06:	2301      	movs	r3, #1
 8005a08:	62fb      	str	r3, [r7, #44]	; 0x2c
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005a0a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005a0c:	f383 8810 	msr	PRIMASK, r3
}
 8005a10:	46c0      	nop			; (mov r8, r8)
 8005a12:	68fb      	ldr	r3, [r7, #12]
 8005a14:	681b      	ldr	r3, [r3, #0]
 8005a16:	681a      	ldr	r2, [r3, #0]
 8005a18:	68fb      	ldr	r3, [r7, #12]
 8005a1a:	681b      	ldr	r3, [r3, #0]
 8005a1c:	494c      	ldr	r1, [pc, #304]	; (8005b50 <UART_WaitOnFlagUntilTimeout+0x184>)
 8005a1e:	400a      	ands	r2, r1
 8005a20:	601a      	str	r2, [r3, #0]
 8005a22:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8005a24:	633b      	str	r3, [r7, #48]	; 0x30
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005a26:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8005a28:	f383 8810 	msr	PRIMASK, r3
}
 8005a2c:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8005a2e:	f3ef 8310 	mrs	r3, PRIMASK
 8005a32:	637b      	str	r3, [r7, #52]	; 0x34
  return(result);
 8005a34:	6b7b      	ldr	r3, [r7, #52]	; 0x34
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8005a36:	643b      	str	r3, [r7, #64]	; 0x40
 8005a38:	2301      	movs	r3, #1
 8005a3a:	63bb      	str	r3, [r7, #56]	; 0x38
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005a3c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8005a3e:	f383 8810 	msr	PRIMASK, r3
}
 8005a42:	46c0      	nop			; (mov r8, r8)
 8005a44:	68fb      	ldr	r3, [r7, #12]
 8005a46:	681b      	ldr	r3, [r3, #0]
 8005a48:	689a      	ldr	r2, [r3, #8]
 8005a4a:	68fb      	ldr	r3, [r7, #12]
 8005a4c:	681b      	ldr	r3, [r3, #0]
 8005a4e:	2101      	movs	r1, #1
 8005a50:	438a      	bics	r2, r1
 8005a52:	609a      	str	r2, [r3, #8]
 8005a54:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8005a56:	63fb      	str	r3, [r7, #60]	; 0x3c
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005a58:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8005a5a:	f383 8810 	msr	PRIMASK, r3
}
 8005a5e:	46c0      	nop			; (mov r8, r8)

        huart->gState = HAL_UART_STATE_READY;
 8005a60:	68fb      	ldr	r3, [r7, #12]
 8005a62:	2220      	movs	r2, #32
 8005a64:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 8005a66:	68fb      	ldr	r3, [r7, #12]
 8005a68:	2220      	movs	r2, #32
 8005a6a:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 8005a6c:	68fb      	ldr	r3, [r7, #12]
 8005a6e:	2274      	movs	r2, #116	; 0x74
 8005a70:	2100      	movs	r1, #0
 8005a72:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 8005a74:	2303      	movs	r3, #3
 8005a76:	e067      	b.n	8005b48 <UART_WaitOnFlagUntilTimeout+0x17c>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8005a78:	68fb      	ldr	r3, [r7, #12]
 8005a7a:	681b      	ldr	r3, [r3, #0]
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	2204      	movs	r2, #4
 8005a80:	4013      	ands	r3, r2
 8005a82:	d050      	beq.n	8005b26 <UART_WaitOnFlagUntilTimeout+0x15a>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8005a84:	68fb      	ldr	r3, [r7, #12]
 8005a86:	681b      	ldr	r3, [r3, #0]
 8005a88:	69da      	ldr	r2, [r3, #28]
 8005a8a:	2380      	movs	r3, #128	; 0x80
 8005a8c:	011b      	lsls	r3, r3, #4
 8005a8e:	401a      	ands	r2, r3
 8005a90:	2380      	movs	r3, #128	; 0x80
 8005a92:	011b      	lsls	r3, r3, #4
 8005a94:	429a      	cmp	r2, r3
 8005a96:	d146      	bne.n	8005b26 <UART_WaitOnFlagUntilTimeout+0x15a>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8005a98:	68fb      	ldr	r3, [r7, #12]
 8005a9a:	681b      	ldr	r3, [r3, #0]
 8005a9c:	2280      	movs	r2, #128	; 0x80
 8005a9e:	0112      	lsls	r2, r2, #4
 8005aa0:	621a      	str	r2, [r3, #32]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8005aa2:	f3ef 8310 	mrs	r3, PRIMASK
 8005aa6:	613b      	str	r3, [r7, #16]
  return(result);
 8005aa8:	693b      	ldr	r3, [r7, #16]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8005aaa:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005aac:	2301      	movs	r3, #1
 8005aae:	617b      	str	r3, [r7, #20]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005ab0:	697b      	ldr	r3, [r7, #20]
 8005ab2:	f383 8810 	msr	PRIMASK, r3
}
 8005ab6:	46c0      	nop			; (mov r8, r8)
 8005ab8:	68fb      	ldr	r3, [r7, #12]
 8005aba:	681b      	ldr	r3, [r3, #0]
 8005abc:	681a      	ldr	r2, [r3, #0]
 8005abe:	68fb      	ldr	r3, [r7, #12]
 8005ac0:	681b      	ldr	r3, [r3, #0]
 8005ac2:	4923      	ldr	r1, [pc, #140]	; (8005b50 <UART_WaitOnFlagUntilTimeout+0x184>)
 8005ac4:	400a      	ands	r2, r1
 8005ac6:	601a      	str	r2, [r3, #0]
 8005ac8:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8005aca:	61bb      	str	r3, [r7, #24]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005acc:	69bb      	ldr	r3, [r7, #24]
 8005ace:	f383 8810 	msr	PRIMASK, r3
}
 8005ad2:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8005ad4:	f3ef 8310 	mrs	r3, PRIMASK
 8005ad8:	61fb      	str	r3, [r7, #28]
  return(result);
 8005ada:	69fb      	ldr	r3, [r7, #28]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8005adc:	64bb      	str	r3, [r7, #72]	; 0x48
 8005ade:	2301      	movs	r3, #1
 8005ae0:	623b      	str	r3, [r7, #32]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005ae2:	6a3b      	ldr	r3, [r7, #32]
 8005ae4:	f383 8810 	msr	PRIMASK, r3
}
 8005ae8:	46c0      	nop			; (mov r8, r8)
 8005aea:	68fb      	ldr	r3, [r7, #12]
 8005aec:	681b      	ldr	r3, [r3, #0]
 8005aee:	689a      	ldr	r2, [r3, #8]
 8005af0:	68fb      	ldr	r3, [r7, #12]
 8005af2:	681b      	ldr	r3, [r3, #0]
 8005af4:	2101      	movs	r1, #1
 8005af6:	438a      	bics	r2, r1
 8005af8:	609a      	str	r2, [r3, #8]
 8005afa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8005afc:	627b      	str	r3, [r7, #36]	; 0x24
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8005afe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8005b00:	f383 8810 	msr	PRIMASK, r3
}
 8005b04:	46c0      	nop			; (mov r8, r8)

          huart->gState = HAL_UART_STATE_READY;
 8005b06:	68fb      	ldr	r3, [r7, #12]
 8005b08:	2220      	movs	r2, #32
 8005b0a:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 8005b0c:	68fb      	ldr	r3, [r7, #12]
 8005b0e:	2220      	movs	r2, #32
 8005b10:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8005b12:	68fb      	ldr	r3, [r7, #12]
 8005b14:	2280      	movs	r2, #128	; 0x80
 8005b16:	2120      	movs	r1, #32
 8005b18:	5099      	str	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8005b1a:	68fb      	ldr	r3, [r7, #12]
 8005b1c:	2274      	movs	r2, #116	; 0x74
 8005b1e:	2100      	movs	r1, #0
 8005b20:	5499      	strb	r1, [r3, r2]

          return HAL_TIMEOUT;
 8005b22:	2303      	movs	r3, #3
 8005b24:	e010      	b.n	8005b48 <UART_WaitOnFlagUntilTimeout+0x17c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8005b26:	68fb      	ldr	r3, [r7, #12]
 8005b28:	681b      	ldr	r3, [r3, #0]
 8005b2a:	69db      	ldr	r3, [r3, #28]
 8005b2c:	68ba      	ldr	r2, [r7, #8]
 8005b2e:	4013      	ands	r3, r2
 8005b30:	68ba      	ldr	r2, [r7, #8]
 8005b32:	1ad3      	subs	r3, r2, r3
 8005b34:	425a      	negs	r2, r3
 8005b36:	4153      	adcs	r3, r2
 8005b38:	b2db      	uxtb	r3, r3
 8005b3a:	001a      	movs	r2, r3
 8005b3c:	1dfb      	adds	r3, r7, #7
 8005b3e:	781b      	ldrb	r3, [r3, #0]
 8005b40:	429a      	cmp	r2, r3
 8005b42:	d100      	bne.n	8005b46 <UART_WaitOnFlagUntilTimeout+0x17a>
 8005b44:	e74b      	b.n	80059de <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8005b46:	2300      	movs	r3, #0
}
 8005b48:	0018      	movs	r0, r3
 8005b4a:	46bd      	mov	sp, r7
 8005b4c:	b014      	add	sp, #80	; 0x50
 8005b4e:	bd80      	pop	{r7, pc}
 8005b50:	fffffe5f 	.word	0xfffffe5f

08005b54 <__errno>:
 8005b54:	4b01      	ldr	r3, [pc, #4]	; (8005b5c <__errno+0x8>)
 8005b56:	6818      	ldr	r0, [r3, #0]
 8005b58:	4770      	bx	lr
 8005b5a:	46c0      	nop			; (mov r8, r8)
 8005b5c:	2000000c 	.word	0x2000000c

08005b60 <__libc_init_array>:
 8005b60:	b570      	push	{r4, r5, r6, lr}
 8005b62:	2600      	movs	r6, #0
 8005b64:	4d0c      	ldr	r5, [pc, #48]	; (8005b98 <__libc_init_array+0x38>)
 8005b66:	4c0d      	ldr	r4, [pc, #52]	; (8005b9c <__libc_init_array+0x3c>)
 8005b68:	1b64      	subs	r4, r4, r5
 8005b6a:	10a4      	asrs	r4, r4, #2
 8005b6c:	42a6      	cmp	r6, r4
 8005b6e:	d109      	bne.n	8005b84 <__libc_init_array+0x24>
 8005b70:	2600      	movs	r6, #0
 8005b72:	f002 ffbb 	bl	8008aec <_init>
 8005b76:	4d0a      	ldr	r5, [pc, #40]	; (8005ba0 <__libc_init_array+0x40>)
 8005b78:	4c0a      	ldr	r4, [pc, #40]	; (8005ba4 <__libc_init_array+0x44>)
 8005b7a:	1b64      	subs	r4, r4, r5
 8005b7c:	10a4      	asrs	r4, r4, #2
 8005b7e:	42a6      	cmp	r6, r4
 8005b80:	d105      	bne.n	8005b8e <__libc_init_array+0x2e>
 8005b82:	bd70      	pop	{r4, r5, r6, pc}
 8005b84:	00b3      	lsls	r3, r6, #2
 8005b86:	58eb      	ldr	r3, [r5, r3]
 8005b88:	4798      	blx	r3
 8005b8a:	3601      	adds	r6, #1
 8005b8c:	e7ee      	b.n	8005b6c <__libc_init_array+0xc>
 8005b8e:	00b3      	lsls	r3, r6, #2
 8005b90:	58eb      	ldr	r3, [r5, r3]
 8005b92:	4798      	blx	r3
 8005b94:	3601      	adds	r6, #1
 8005b96:	e7f2      	b.n	8005b7e <__libc_init_array+0x1e>
 8005b98:	0800905c 	.word	0x0800905c
 8005b9c:	0800905c 	.word	0x0800905c
 8005ba0:	0800905c 	.word	0x0800905c
 8005ba4:	08009060 	.word	0x08009060

08005ba8 <memset>:
 8005ba8:	0003      	movs	r3, r0
 8005baa:	1882      	adds	r2, r0, r2
 8005bac:	4293      	cmp	r3, r2
 8005bae:	d100      	bne.n	8005bb2 <memset+0xa>
 8005bb0:	4770      	bx	lr
 8005bb2:	7019      	strb	r1, [r3, #0]
 8005bb4:	3301      	adds	r3, #1
 8005bb6:	e7f9      	b.n	8005bac <memset+0x4>

08005bb8 <__cvt>:
 8005bb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005bba:	001e      	movs	r6, r3
 8005bbc:	2300      	movs	r3, #0
 8005bbe:	0014      	movs	r4, r2
 8005bc0:	b08b      	sub	sp, #44	; 0x2c
 8005bc2:	429e      	cmp	r6, r3
 8005bc4:	da04      	bge.n	8005bd0 <__cvt+0x18>
 8005bc6:	2180      	movs	r1, #128	; 0x80
 8005bc8:	0609      	lsls	r1, r1, #24
 8005bca:	1873      	adds	r3, r6, r1
 8005bcc:	001e      	movs	r6, r3
 8005bce:	232d      	movs	r3, #45	; 0x2d
 8005bd0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005bd2:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8005bd4:	7013      	strb	r3, [r2, #0]
 8005bd6:	2320      	movs	r3, #32
 8005bd8:	2203      	movs	r2, #3
 8005bda:	439f      	bics	r7, r3
 8005bdc:	2f46      	cmp	r7, #70	; 0x46
 8005bde:	d007      	beq.n	8005bf0 <__cvt+0x38>
 8005be0:	003b      	movs	r3, r7
 8005be2:	3b45      	subs	r3, #69	; 0x45
 8005be4:	4259      	negs	r1, r3
 8005be6:	414b      	adcs	r3, r1
 8005be8:	9910      	ldr	r1, [sp, #64]	; 0x40
 8005bea:	3a01      	subs	r2, #1
 8005bec:	18cb      	adds	r3, r1, r3
 8005bee:	9310      	str	r3, [sp, #64]	; 0x40
 8005bf0:	ab09      	add	r3, sp, #36	; 0x24
 8005bf2:	9304      	str	r3, [sp, #16]
 8005bf4:	ab08      	add	r3, sp, #32
 8005bf6:	9303      	str	r3, [sp, #12]
 8005bf8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005bfa:	9200      	str	r2, [sp, #0]
 8005bfc:	9302      	str	r3, [sp, #8]
 8005bfe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005c00:	0022      	movs	r2, r4
 8005c02:	9301      	str	r3, [sp, #4]
 8005c04:	0033      	movs	r3, r6
 8005c06:	f000 fcf1 	bl	80065ec <_dtoa_r>
 8005c0a:	0005      	movs	r5, r0
 8005c0c:	2f47      	cmp	r7, #71	; 0x47
 8005c0e:	d102      	bne.n	8005c16 <__cvt+0x5e>
 8005c10:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005c12:	07db      	lsls	r3, r3, #31
 8005c14:	d528      	bpl.n	8005c68 <__cvt+0xb0>
 8005c16:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005c18:	18eb      	adds	r3, r5, r3
 8005c1a:	9307      	str	r3, [sp, #28]
 8005c1c:	2f46      	cmp	r7, #70	; 0x46
 8005c1e:	d114      	bne.n	8005c4a <__cvt+0x92>
 8005c20:	782b      	ldrb	r3, [r5, #0]
 8005c22:	2b30      	cmp	r3, #48	; 0x30
 8005c24:	d10c      	bne.n	8005c40 <__cvt+0x88>
 8005c26:	2200      	movs	r2, #0
 8005c28:	2300      	movs	r3, #0
 8005c2a:	0020      	movs	r0, r4
 8005c2c:	0031      	movs	r1, r6
 8005c2e:	f7fa fc0d 	bl	800044c <__aeabi_dcmpeq>
 8005c32:	2800      	cmp	r0, #0
 8005c34:	d104      	bne.n	8005c40 <__cvt+0x88>
 8005c36:	2301      	movs	r3, #1
 8005c38:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005c3a:	1a9b      	subs	r3, r3, r2
 8005c3c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8005c3e:	6013      	str	r3, [r2, #0]
 8005c40:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005c42:	9a07      	ldr	r2, [sp, #28]
 8005c44:	681b      	ldr	r3, [r3, #0]
 8005c46:	18d3      	adds	r3, r2, r3
 8005c48:	9307      	str	r3, [sp, #28]
 8005c4a:	2200      	movs	r2, #0
 8005c4c:	2300      	movs	r3, #0
 8005c4e:	0020      	movs	r0, r4
 8005c50:	0031      	movs	r1, r6
 8005c52:	f7fa fbfb 	bl	800044c <__aeabi_dcmpeq>
 8005c56:	2800      	cmp	r0, #0
 8005c58:	d001      	beq.n	8005c5e <__cvt+0xa6>
 8005c5a:	9b07      	ldr	r3, [sp, #28]
 8005c5c:	9309      	str	r3, [sp, #36]	; 0x24
 8005c5e:	2230      	movs	r2, #48	; 0x30
 8005c60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005c62:	9907      	ldr	r1, [sp, #28]
 8005c64:	428b      	cmp	r3, r1
 8005c66:	d306      	bcc.n	8005c76 <__cvt+0xbe>
 8005c68:	0028      	movs	r0, r5
 8005c6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005c6c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8005c6e:	1b5b      	subs	r3, r3, r5
 8005c70:	6013      	str	r3, [r2, #0]
 8005c72:	b00b      	add	sp, #44	; 0x2c
 8005c74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005c76:	1c59      	adds	r1, r3, #1
 8005c78:	9109      	str	r1, [sp, #36]	; 0x24
 8005c7a:	701a      	strb	r2, [r3, #0]
 8005c7c:	e7f0      	b.n	8005c60 <__cvt+0xa8>

08005c7e <__exponent>:
 8005c7e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c80:	1c83      	adds	r3, r0, #2
 8005c82:	b087      	sub	sp, #28
 8005c84:	9303      	str	r3, [sp, #12]
 8005c86:	0005      	movs	r5, r0
 8005c88:	000c      	movs	r4, r1
 8005c8a:	232b      	movs	r3, #43	; 0x2b
 8005c8c:	7002      	strb	r2, [r0, #0]
 8005c8e:	2900      	cmp	r1, #0
 8005c90:	da01      	bge.n	8005c96 <__exponent+0x18>
 8005c92:	424c      	negs	r4, r1
 8005c94:	3302      	adds	r3, #2
 8005c96:	706b      	strb	r3, [r5, #1]
 8005c98:	2c09      	cmp	r4, #9
 8005c9a:	dd31      	ble.n	8005d00 <__exponent+0x82>
 8005c9c:	270a      	movs	r7, #10
 8005c9e:	ab04      	add	r3, sp, #16
 8005ca0:	1dde      	adds	r6, r3, #7
 8005ca2:	0020      	movs	r0, r4
 8005ca4:	0039      	movs	r1, r7
 8005ca6:	9601      	str	r6, [sp, #4]
 8005ca8:	f7fa fbba 	bl	8000420 <__aeabi_idivmod>
 8005cac:	3e01      	subs	r6, #1
 8005cae:	3130      	adds	r1, #48	; 0x30
 8005cb0:	0020      	movs	r0, r4
 8005cb2:	7031      	strb	r1, [r6, #0]
 8005cb4:	0039      	movs	r1, r7
 8005cb6:	9402      	str	r4, [sp, #8]
 8005cb8:	f7fa facc 	bl	8000254 <__divsi3>
 8005cbc:	9b02      	ldr	r3, [sp, #8]
 8005cbe:	0004      	movs	r4, r0
 8005cc0:	2b63      	cmp	r3, #99	; 0x63
 8005cc2:	dcee      	bgt.n	8005ca2 <__exponent+0x24>
 8005cc4:	9b01      	ldr	r3, [sp, #4]
 8005cc6:	3430      	adds	r4, #48	; 0x30
 8005cc8:	1e9a      	subs	r2, r3, #2
 8005cca:	0013      	movs	r3, r2
 8005ccc:	9903      	ldr	r1, [sp, #12]
 8005cce:	7014      	strb	r4, [r2, #0]
 8005cd0:	a804      	add	r0, sp, #16
 8005cd2:	3007      	adds	r0, #7
 8005cd4:	4298      	cmp	r0, r3
 8005cd6:	d80e      	bhi.n	8005cf6 <__exponent+0x78>
 8005cd8:	ab04      	add	r3, sp, #16
 8005cda:	3307      	adds	r3, #7
 8005cdc:	2000      	movs	r0, #0
 8005cde:	429a      	cmp	r2, r3
 8005ce0:	d804      	bhi.n	8005cec <__exponent+0x6e>
 8005ce2:	ab04      	add	r3, sp, #16
 8005ce4:	3009      	adds	r0, #9
 8005ce6:	18c0      	adds	r0, r0, r3
 8005ce8:	9b01      	ldr	r3, [sp, #4]
 8005cea:	1ac0      	subs	r0, r0, r3
 8005cec:	9b03      	ldr	r3, [sp, #12]
 8005cee:	1818      	adds	r0, r3, r0
 8005cf0:	1b40      	subs	r0, r0, r5
 8005cf2:	b007      	add	sp, #28
 8005cf4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005cf6:	7818      	ldrb	r0, [r3, #0]
 8005cf8:	3301      	adds	r3, #1
 8005cfa:	7008      	strb	r0, [r1, #0]
 8005cfc:	3101      	adds	r1, #1
 8005cfe:	e7e7      	b.n	8005cd0 <__exponent+0x52>
 8005d00:	2330      	movs	r3, #48	; 0x30
 8005d02:	18e4      	adds	r4, r4, r3
 8005d04:	70ab      	strb	r3, [r5, #2]
 8005d06:	1d28      	adds	r0, r5, #4
 8005d08:	70ec      	strb	r4, [r5, #3]
 8005d0a:	e7f1      	b.n	8005cf0 <__exponent+0x72>

08005d0c <_printf_float>:
 8005d0c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d0e:	b095      	sub	sp, #84	; 0x54
 8005d10:	000c      	movs	r4, r1
 8005d12:	9209      	str	r2, [sp, #36]	; 0x24
 8005d14:	001e      	movs	r6, r3
 8005d16:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8005d18:	0007      	movs	r7, r0
 8005d1a:	f001 fa81 	bl	8007220 <_localeconv_r>
 8005d1e:	6803      	ldr	r3, [r0, #0]
 8005d20:	0018      	movs	r0, r3
 8005d22:	930c      	str	r3, [sp, #48]	; 0x30
 8005d24:	f7fa f9f0 	bl	8000108 <strlen>
 8005d28:	2300      	movs	r3, #0
 8005d2a:	9312      	str	r3, [sp, #72]	; 0x48
 8005d2c:	7e23      	ldrb	r3, [r4, #24]
 8005d2e:	2207      	movs	r2, #7
 8005d30:	930a      	str	r3, [sp, #40]	; 0x28
 8005d32:	6823      	ldr	r3, [r4, #0]
 8005d34:	900e      	str	r0, [sp, #56]	; 0x38
 8005d36:	930d      	str	r3, [sp, #52]	; 0x34
 8005d38:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005d3a:	682b      	ldr	r3, [r5, #0]
 8005d3c:	05c9      	lsls	r1, r1, #23
 8005d3e:	d547      	bpl.n	8005dd0 <_printf_float+0xc4>
 8005d40:	189b      	adds	r3, r3, r2
 8005d42:	4393      	bics	r3, r2
 8005d44:	001a      	movs	r2, r3
 8005d46:	3208      	adds	r2, #8
 8005d48:	602a      	str	r2, [r5, #0]
 8005d4a:	681a      	ldr	r2, [r3, #0]
 8005d4c:	685b      	ldr	r3, [r3, #4]
 8005d4e:	64a2      	str	r2, [r4, #72]	; 0x48
 8005d50:	64e3      	str	r3, [r4, #76]	; 0x4c
 8005d52:	2201      	movs	r2, #1
 8005d54:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8005d56:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8005d58:	930b      	str	r3, [sp, #44]	; 0x2c
 8005d5a:	006b      	lsls	r3, r5, #1
 8005d5c:	085b      	lsrs	r3, r3, #1
 8005d5e:	930f      	str	r3, [sp, #60]	; 0x3c
 8005d60:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005d62:	4ba7      	ldr	r3, [pc, #668]	; (8006000 <_printf_float+0x2f4>)
 8005d64:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005d66:	4252      	negs	r2, r2
 8005d68:	f7fc fb38 	bl	80023dc <__aeabi_dcmpun>
 8005d6c:	2800      	cmp	r0, #0
 8005d6e:	d131      	bne.n	8005dd4 <_printf_float+0xc8>
 8005d70:	2201      	movs	r2, #1
 8005d72:	4ba3      	ldr	r3, [pc, #652]	; (8006000 <_printf_float+0x2f4>)
 8005d74:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005d76:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005d78:	4252      	negs	r2, r2
 8005d7a:	f7fa fb77 	bl	800046c <__aeabi_dcmple>
 8005d7e:	2800      	cmp	r0, #0
 8005d80:	d128      	bne.n	8005dd4 <_printf_float+0xc8>
 8005d82:	2200      	movs	r2, #0
 8005d84:	2300      	movs	r3, #0
 8005d86:	0029      	movs	r1, r5
 8005d88:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005d8a:	f7fa fb65 	bl	8000458 <__aeabi_dcmplt>
 8005d8e:	2800      	cmp	r0, #0
 8005d90:	d003      	beq.n	8005d9a <_printf_float+0x8e>
 8005d92:	0023      	movs	r3, r4
 8005d94:	222d      	movs	r2, #45	; 0x2d
 8005d96:	3343      	adds	r3, #67	; 0x43
 8005d98:	701a      	strb	r2, [r3, #0]
 8005d9a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005d9c:	4d99      	ldr	r5, [pc, #612]	; (8006004 <_printf_float+0x2f8>)
 8005d9e:	2b47      	cmp	r3, #71	; 0x47
 8005da0:	d900      	bls.n	8005da4 <_printf_float+0x98>
 8005da2:	4d99      	ldr	r5, [pc, #612]	; (8006008 <_printf_float+0x2fc>)
 8005da4:	2303      	movs	r3, #3
 8005da6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005da8:	6123      	str	r3, [r4, #16]
 8005daa:	3301      	adds	r3, #1
 8005dac:	439a      	bics	r2, r3
 8005dae:	2300      	movs	r3, #0
 8005db0:	6022      	str	r2, [r4, #0]
 8005db2:	930b      	str	r3, [sp, #44]	; 0x2c
 8005db4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005db6:	0021      	movs	r1, r4
 8005db8:	0038      	movs	r0, r7
 8005dba:	9600      	str	r6, [sp, #0]
 8005dbc:	aa13      	add	r2, sp, #76	; 0x4c
 8005dbe:	f000 f9e7 	bl	8006190 <_printf_common>
 8005dc2:	1c43      	adds	r3, r0, #1
 8005dc4:	d000      	beq.n	8005dc8 <_printf_float+0xbc>
 8005dc6:	e0a2      	b.n	8005f0e <_printf_float+0x202>
 8005dc8:	2001      	movs	r0, #1
 8005dca:	4240      	negs	r0, r0
 8005dcc:	b015      	add	sp, #84	; 0x54
 8005dce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005dd0:	3307      	adds	r3, #7
 8005dd2:	e7b6      	b.n	8005d42 <_printf_float+0x36>
 8005dd4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005dd6:	002b      	movs	r3, r5
 8005dd8:	0010      	movs	r0, r2
 8005dda:	0029      	movs	r1, r5
 8005ddc:	f7fc fafe 	bl	80023dc <__aeabi_dcmpun>
 8005de0:	2800      	cmp	r0, #0
 8005de2:	d00b      	beq.n	8005dfc <_printf_float+0xf0>
 8005de4:	2d00      	cmp	r5, #0
 8005de6:	da03      	bge.n	8005df0 <_printf_float+0xe4>
 8005de8:	0023      	movs	r3, r4
 8005dea:	222d      	movs	r2, #45	; 0x2d
 8005dec:	3343      	adds	r3, #67	; 0x43
 8005dee:	701a      	strb	r2, [r3, #0]
 8005df0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005df2:	4d86      	ldr	r5, [pc, #536]	; (800600c <_printf_float+0x300>)
 8005df4:	2b47      	cmp	r3, #71	; 0x47
 8005df6:	d9d5      	bls.n	8005da4 <_printf_float+0x98>
 8005df8:	4d85      	ldr	r5, [pc, #532]	; (8006010 <_printf_float+0x304>)
 8005dfa:	e7d3      	b.n	8005da4 <_printf_float+0x98>
 8005dfc:	2220      	movs	r2, #32
 8005dfe:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005e00:	6863      	ldr	r3, [r4, #4]
 8005e02:	4391      	bics	r1, r2
 8005e04:	910f      	str	r1, [sp, #60]	; 0x3c
 8005e06:	1c5a      	adds	r2, r3, #1
 8005e08:	d149      	bne.n	8005e9e <_printf_float+0x192>
 8005e0a:	3307      	adds	r3, #7
 8005e0c:	6063      	str	r3, [r4, #4]
 8005e0e:	2380      	movs	r3, #128	; 0x80
 8005e10:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005e12:	00db      	lsls	r3, r3, #3
 8005e14:	4313      	orrs	r3, r2
 8005e16:	2200      	movs	r2, #0
 8005e18:	9206      	str	r2, [sp, #24]
 8005e1a:	aa12      	add	r2, sp, #72	; 0x48
 8005e1c:	9205      	str	r2, [sp, #20]
 8005e1e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005e20:	a908      	add	r1, sp, #32
 8005e22:	9204      	str	r2, [sp, #16]
 8005e24:	aa11      	add	r2, sp, #68	; 0x44
 8005e26:	9203      	str	r2, [sp, #12]
 8005e28:	2223      	movs	r2, #35	; 0x23
 8005e2a:	6023      	str	r3, [r4, #0]
 8005e2c:	9301      	str	r3, [sp, #4]
 8005e2e:	6863      	ldr	r3, [r4, #4]
 8005e30:	1852      	adds	r2, r2, r1
 8005e32:	9202      	str	r2, [sp, #8]
 8005e34:	9300      	str	r3, [sp, #0]
 8005e36:	0038      	movs	r0, r7
 8005e38:	002b      	movs	r3, r5
 8005e3a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8005e3c:	f7ff febc 	bl	8005bb8 <__cvt>
 8005e40:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005e42:	0005      	movs	r5, r0
 8005e44:	9911      	ldr	r1, [sp, #68]	; 0x44
 8005e46:	2b47      	cmp	r3, #71	; 0x47
 8005e48:	d108      	bne.n	8005e5c <_printf_float+0x150>
 8005e4a:	1ccb      	adds	r3, r1, #3
 8005e4c:	db02      	blt.n	8005e54 <_printf_float+0x148>
 8005e4e:	6863      	ldr	r3, [r4, #4]
 8005e50:	4299      	cmp	r1, r3
 8005e52:	dd48      	ble.n	8005ee6 <_printf_float+0x1da>
 8005e54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005e56:	3b02      	subs	r3, #2
 8005e58:	b2db      	uxtb	r3, r3
 8005e5a:	930a      	str	r3, [sp, #40]	; 0x28
 8005e5c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005e5e:	2b65      	cmp	r3, #101	; 0x65
 8005e60:	d824      	bhi.n	8005eac <_printf_float+0x1a0>
 8005e62:	0020      	movs	r0, r4
 8005e64:	001a      	movs	r2, r3
 8005e66:	3901      	subs	r1, #1
 8005e68:	3050      	adds	r0, #80	; 0x50
 8005e6a:	9111      	str	r1, [sp, #68]	; 0x44
 8005e6c:	f7ff ff07 	bl	8005c7e <__exponent>
 8005e70:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005e72:	900b      	str	r0, [sp, #44]	; 0x2c
 8005e74:	1813      	adds	r3, r2, r0
 8005e76:	6123      	str	r3, [r4, #16]
 8005e78:	2a01      	cmp	r2, #1
 8005e7a:	dc02      	bgt.n	8005e82 <_printf_float+0x176>
 8005e7c:	6822      	ldr	r2, [r4, #0]
 8005e7e:	07d2      	lsls	r2, r2, #31
 8005e80:	d501      	bpl.n	8005e86 <_printf_float+0x17a>
 8005e82:	3301      	adds	r3, #1
 8005e84:	6123      	str	r3, [r4, #16]
 8005e86:	2323      	movs	r3, #35	; 0x23
 8005e88:	aa08      	add	r2, sp, #32
 8005e8a:	189b      	adds	r3, r3, r2
 8005e8c:	781b      	ldrb	r3, [r3, #0]
 8005e8e:	2b00      	cmp	r3, #0
 8005e90:	d100      	bne.n	8005e94 <_printf_float+0x188>
 8005e92:	e78f      	b.n	8005db4 <_printf_float+0xa8>
 8005e94:	0023      	movs	r3, r4
 8005e96:	222d      	movs	r2, #45	; 0x2d
 8005e98:	3343      	adds	r3, #67	; 0x43
 8005e9a:	701a      	strb	r2, [r3, #0]
 8005e9c:	e78a      	b.n	8005db4 <_printf_float+0xa8>
 8005e9e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005ea0:	2a47      	cmp	r2, #71	; 0x47
 8005ea2:	d1b4      	bne.n	8005e0e <_printf_float+0x102>
 8005ea4:	2b00      	cmp	r3, #0
 8005ea6:	d1b2      	bne.n	8005e0e <_printf_float+0x102>
 8005ea8:	3301      	adds	r3, #1
 8005eaa:	e7af      	b.n	8005e0c <_printf_float+0x100>
 8005eac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005eae:	2b66      	cmp	r3, #102	; 0x66
 8005eb0:	d11b      	bne.n	8005eea <_printf_float+0x1de>
 8005eb2:	6863      	ldr	r3, [r4, #4]
 8005eb4:	2900      	cmp	r1, #0
 8005eb6:	dd0d      	ble.n	8005ed4 <_printf_float+0x1c8>
 8005eb8:	6121      	str	r1, [r4, #16]
 8005eba:	2b00      	cmp	r3, #0
 8005ebc:	d102      	bne.n	8005ec4 <_printf_float+0x1b8>
 8005ebe:	6822      	ldr	r2, [r4, #0]
 8005ec0:	07d2      	lsls	r2, r2, #31
 8005ec2:	d502      	bpl.n	8005eca <_printf_float+0x1be>
 8005ec4:	3301      	adds	r3, #1
 8005ec6:	1859      	adds	r1, r3, r1
 8005ec8:	6121      	str	r1, [r4, #16]
 8005eca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005ecc:	65a3      	str	r3, [r4, #88]	; 0x58
 8005ece:	2300      	movs	r3, #0
 8005ed0:	930b      	str	r3, [sp, #44]	; 0x2c
 8005ed2:	e7d8      	b.n	8005e86 <_printf_float+0x17a>
 8005ed4:	2b00      	cmp	r3, #0
 8005ed6:	d103      	bne.n	8005ee0 <_printf_float+0x1d4>
 8005ed8:	2201      	movs	r2, #1
 8005eda:	6821      	ldr	r1, [r4, #0]
 8005edc:	4211      	tst	r1, r2
 8005ede:	d000      	beq.n	8005ee2 <_printf_float+0x1d6>
 8005ee0:	1c9a      	adds	r2, r3, #2
 8005ee2:	6122      	str	r2, [r4, #16]
 8005ee4:	e7f1      	b.n	8005eca <_printf_float+0x1be>
 8005ee6:	2367      	movs	r3, #103	; 0x67
 8005ee8:	930a      	str	r3, [sp, #40]	; 0x28
 8005eea:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005eec:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005eee:	4293      	cmp	r3, r2
 8005ef0:	db06      	blt.n	8005f00 <_printf_float+0x1f4>
 8005ef2:	6822      	ldr	r2, [r4, #0]
 8005ef4:	6123      	str	r3, [r4, #16]
 8005ef6:	07d2      	lsls	r2, r2, #31
 8005ef8:	d5e7      	bpl.n	8005eca <_printf_float+0x1be>
 8005efa:	3301      	adds	r3, #1
 8005efc:	6123      	str	r3, [r4, #16]
 8005efe:	e7e4      	b.n	8005eca <_printf_float+0x1be>
 8005f00:	2101      	movs	r1, #1
 8005f02:	2b00      	cmp	r3, #0
 8005f04:	dc01      	bgt.n	8005f0a <_printf_float+0x1fe>
 8005f06:	1849      	adds	r1, r1, r1
 8005f08:	1ac9      	subs	r1, r1, r3
 8005f0a:	1852      	adds	r2, r2, r1
 8005f0c:	e7e9      	b.n	8005ee2 <_printf_float+0x1d6>
 8005f0e:	6822      	ldr	r2, [r4, #0]
 8005f10:	0553      	lsls	r3, r2, #21
 8005f12:	d407      	bmi.n	8005f24 <_printf_float+0x218>
 8005f14:	6923      	ldr	r3, [r4, #16]
 8005f16:	002a      	movs	r2, r5
 8005f18:	0038      	movs	r0, r7
 8005f1a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005f1c:	47b0      	blx	r6
 8005f1e:	1c43      	adds	r3, r0, #1
 8005f20:	d128      	bne.n	8005f74 <_printf_float+0x268>
 8005f22:	e751      	b.n	8005dc8 <_printf_float+0xbc>
 8005f24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005f26:	2b65      	cmp	r3, #101	; 0x65
 8005f28:	d800      	bhi.n	8005f2c <_printf_float+0x220>
 8005f2a:	e0e1      	b.n	80060f0 <_printf_float+0x3e4>
 8005f2c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8005f2e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8005f30:	2200      	movs	r2, #0
 8005f32:	2300      	movs	r3, #0
 8005f34:	f7fa fa8a 	bl	800044c <__aeabi_dcmpeq>
 8005f38:	2800      	cmp	r0, #0
 8005f3a:	d031      	beq.n	8005fa0 <_printf_float+0x294>
 8005f3c:	2301      	movs	r3, #1
 8005f3e:	0038      	movs	r0, r7
 8005f40:	4a34      	ldr	r2, [pc, #208]	; (8006014 <_printf_float+0x308>)
 8005f42:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005f44:	47b0      	blx	r6
 8005f46:	1c43      	adds	r3, r0, #1
 8005f48:	d100      	bne.n	8005f4c <_printf_float+0x240>
 8005f4a:	e73d      	b.n	8005dc8 <_printf_float+0xbc>
 8005f4c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005f4e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005f50:	4293      	cmp	r3, r2
 8005f52:	db02      	blt.n	8005f5a <_printf_float+0x24e>
 8005f54:	6823      	ldr	r3, [r4, #0]
 8005f56:	07db      	lsls	r3, r3, #31
 8005f58:	d50c      	bpl.n	8005f74 <_printf_float+0x268>
 8005f5a:	0038      	movs	r0, r7
 8005f5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005f5e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005f60:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005f62:	47b0      	blx	r6
 8005f64:	2500      	movs	r5, #0
 8005f66:	1c43      	adds	r3, r0, #1
 8005f68:	d100      	bne.n	8005f6c <_printf_float+0x260>
 8005f6a:	e72d      	b.n	8005dc8 <_printf_float+0xbc>
 8005f6c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005f6e:	3b01      	subs	r3, #1
 8005f70:	42ab      	cmp	r3, r5
 8005f72:	dc0a      	bgt.n	8005f8a <_printf_float+0x27e>
 8005f74:	6823      	ldr	r3, [r4, #0]
 8005f76:	079b      	lsls	r3, r3, #30
 8005f78:	d500      	bpl.n	8005f7c <_printf_float+0x270>
 8005f7a:	e106      	b.n	800618a <_printf_float+0x47e>
 8005f7c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005f7e:	68e0      	ldr	r0, [r4, #12]
 8005f80:	4298      	cmp	r0, r3
 8005f82:	db00      	blt.n	8005f86 <_printf_float+0x27a>
 8005f84:	e722      	b.n	8005dcc <_printf_float+0xc0>
 8005f86:	0018      	movs	r0, r3
 8005f88:	e720      	b.n	8005dcc <_printf_float+0xc0>
 8005f8a:	0022      	movs	r2, r4
 8005f8c:	2301      	movs	r3, #1
 8005f8e:	0038      	movs	r0, r7
 8005f90:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005f92:	321a      	adds	r2, #26
 8005f94:	47b0      	blx	r6
 8005f96:	1c43      	adds	r3, r0, #1
 8005f98:	d100      	bne.n	8005f9c <_printf_float+0x290>
 8005f9a:	e715      	b.n	8005dc8 <_printf_float+0xbc>
 8005f9c:	3501      	adds	r5, #1
 8005f9e:	e7e5      	b.n	8005f6c <_printf_float+0x260>
 8005fa0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005fa2:	2b00      	cmp	r3, #0
 8005fa4:	dc38      	bgt.n	8006018 <_printf_float+0x30c>
 8005fa6:	2301      	movs	r3, #1
 8005fa8:	0038      	movs	r0, r7
 8005faa:	4a1a      	ldr	r2, [pc, #104]	; (8006014 <_printf_float+0x308>)
 8005fac:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005fae:	47b0      	blx	r6
 8005fb0:	1c43      	adds	r3, r0, #1
 8005fb2:	d100      	bne.n	8005fb6 <_printf_float+0x2aa>
 8005fb4:	e708      	b.n	8005dc8 <_printf_float+0xbc>
 8005fb6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005fb8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005fba:	4313      	orrs	r3, r2
 8005fbc:	d102      	bne.n	8005fc4 <_printf_float+0x2b8>
 8005fbe:	6823      	ldr	r3, [r4, #0]
 8005fc0:	07db      	lsls	r3, r3, #31
 8005fc2:	d5d7      	bpl.n	8005f74 <_printf_float+0x268>
 8005fc4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005fc6:	0038      	movs	r0, r7
 8005fc8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8005fca:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005fcc:	47b0      	blx	r6
 8005fce:	1c43      	adds	r3, r0, #1
 8005fd0:	d100      	bne.n	8005fd4 <_printf_float+0x2c8>
 8005fd2:	e6f9      	b.n	8005dc8 <_printf_float+0xbc>
 8005fd4:	2300      	movs	r3, #0
 8005fd6:	930a      	str	r3, [sp, #40]	; 0x28
 8005fd8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005fda:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005fdc:	425b      	negs	r3, r3
 8005fde:	4293      	cmp	r3, r2
 8005fe0:	dc01      	bgt.n	8005fe6 <_printf_float+0x2da>
 8005fe2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8005fe4:	e797      	b.n	8005f16 <_printf_float+0x20a>
 8005fe6:	0022      	movs	r2, r4
 8005fe8:	2301      	movs	r3, #1
 8005fea:	0038      	movs	r0, r7
 8005fec:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005fee:	321a      	adds	r2, #26
 8005ff0:	47b0      	blx	r6
 8005ff2:	1c43      	adds	r3, r0, #1
 8005ff4:	d100      	bne.n	8005ff8 <_printf_float+0x2ec>
 8005ff6:	e6e7      	b.n	8005dc8 <_printf_float+0xbc>
 8005ff8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005ffa:	3301      	adds	r3, #1
 8005ffc:	e7eb      	b.n	8005fd6 <_printf_float+0x2ca>
 8005ffe:	46c0      	nop			; (mov r8, r8)
 8006000:	7fefffff 	.word	0x7fefffff
 8006004:	08008c88 	.word	0x08008c88
 8006008:	08008c8c 	.word	0x08008c8c
 800600c:	08008c90 	.word	0x08008c90
 8006010:	08008c94 	.word	0x08008c94
 8006014:	08008c98 	.word	0x08008c98
 8006018:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800601a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800601c:	920a      	str	r2, [sp, #40]	; 0x28
 800601e:	429a      	cmp	r2, r3
 8006020:	dd00      	ble.n	8006024 <_printf_float+0x318>
 8006022:	930a      	str	r3, [sp, #40]	; 0x28
 8006024:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006026:	2b00      	cmp	r3, #0
 8006028:	dc3c      	bgt.n	80060a4 <_printf_float+0x398>
 800602a:	2300      	movs	r3, #0
 800602c:	930d      	str	r3, [sp, #52]	; 0x34
 800602e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006030:	43db      	mvns	r3, r3
 8006032:	17db      	asrs	r3, r3, #31
 8006034:	930f      	str	r3, [sp, #60]	; 0x3c
 8006036:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8006038:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800603a:	930b      	str	r3, [sp, #44]	; 0x2c
 800603c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800603e:	4013      	ands	r3, r2
 8006040:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8006042:	1ad3      	subs	r3, r2, r3
 8006044:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006046:	4293      	cmp	r3, r2
 8006048:	dc34      	bgt.n	80060b4 <_printf_float+0x3a8>
 800604a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800604c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800604e:	4293      	cmp	r3, r2
 8006050:	db3d      	blt.n	80060ce <_printf_float+0x3c2>
 8006052:	6823      	ldr	r3, [r4, #0]
 8006054:	07db      	lsls	r3, r3, #31
 8006056:	d43a      	bmi.n	80060ce <_printf_float+0x3c2>
 8006058:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800605a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800605c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800605e:	1ad3      	subs	r3, r2, r3
 8006060:	1a52      	subs	r2, r2, r1
 8006062:	920a      	str	r2, [sp, #40]	; 0x28
 8006064:	429a      	cmp	r2, r3
 8006066:	dd00      	ble.n	800606a <_printf_float+0x35e>
 8006068:	930a      	str	r3, [sp, #40]	; 0x28
 800606a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800606c:	2b00      	cmp	r3, #0
 800606e:	dc36      	bgt.n	80060de <_printf_float+0x3d2>
 8006070:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006072:	2500      	movs	r5, #0
 8006074:	43db      	mvns	r3, r3
 8006076:	17db      	asrs	r3, r3, #31
 8006078:	930b      	str	r3, [sp, #44]	; 0x2c
 800607a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800607c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800607e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006080:	1a9b      	subs	r3, r3, r2
 8006082:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006084:	400a      	ands	r2, r1
 8006086:	1a9b      	subs	r3, r3, r2
 8006088:	42ab      	cmp	r3, r5
 800608a:	dc00      	bgt.n	800608e <_printf_float+0x382>
 800608c:	e772      	b.n	8005f74 <_printf_float+0x268>
 800608e:	0022      	movs	r2, r4
 8006090:	2301      	movs	r3, #1
 8006092:	0038      	movs	r0, r7
 8006094:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006096:	321a      	adds	r2, #26
 8006098:	47b0      	blx	r6
 800609a:	1c43      	adds	r3, r0, #1
 800609c:	d100      	bne.n	80060a0 <_printf_float+0x394>
 800609e:	e693      	b.n	8005dc8 <_printf_float+0xbc>
 80060a0:	3501      	adds	r5, #1
 80060a2:	e7ea      	b.n	800607a <_printf_float+0x36e>
 80060a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80060a6:	002a      	movs	r2, r5
 80060a8:	0038      	movs	r0, r7
 80060aa:	9909      	ldr	r1, [sp, #36]	; 0x24
 80060ac:	47b0      	blx	r6
 80060ae:	1c43      	adds	r3, r0, #1
 80060b0:	d1bb      	bne.n	800602a <_printf_float+0x31e>
 80060b2:	e689      	b.n	8005dc8 <_printf_float+0xbc>
 80060b4:	0022      	movs	r2, r4
 80060b6:	2301      	movs	r3, #1
 80060b8:	0038      	movs	r0, r7
 80060ba:	9909      	ldr	r1, [sp, #36]	; 0x24
 80060bc:	321a      	adds	r2, #26
 80060be:	47b0      	blx	r6
 80060c0:	1c43      	adds	r3, r0, #1
 80060c2:	d100      	bne.n	80060c6 <_printf_float+0x3ba>
 80060c4:	e680      	b.n	8005dc8 <_printf_float+0xbc>
 80060c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80060c8:	3301      	adds	r3, #1
 80060ca:	930d      	str	r3, [sp, #52]	; 0x34
 80060cc:	e7b3      	b.n	8006036 <_printf_float+0x32a>
 80060ce:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80060d0:	0038      	movs	r0, r7
 80060d2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80060d4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80060d6:	47b0      	blx	r6
 80060d8:	1c43      	adds	r3, r0, #1
 80060da:	d1bd      	bne.n	8006058 <_printf_float+0x34c>
 80060dc:	e674      	b.n	8005dc8 <_printf_float+0xbc>
 80060de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80060e0:	0038      	movs	r0, r7
 80060e2:	18ea      	adds	r2, r5, r3
 80060e4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80060e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80060e8:	47b0      	blx	r6
 80060ea:	1c43      	adds	r3, r0, #1
 80060ec:	d1c0      	bne.n	8006070 <_printf_float+0x364>
 80060ee:	e66b      	b.n	8005dc8 <_printf_float+0xbc>
 80060f0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80060f2:	2b01      	cmp	r3, #1
 80060f4:	dc02      	bgt.n	80060fc <_printf_float+0x3f0>
 80060f6:	2301      	movs	r3, #1
 80060f8:	421a      	tst	r2, r3
 80060fa:	d034      	beq.n	8006166 <_printf_float+0x45a>
 80060fc:	2301      	movs	r3, #1
 80060fe:	002a      	movs	r2, r5
 8006100:	0038      	movs	r0, r7
 8006102:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006104:	47b0      	blx	r6
 8006106:	1c43      	adds	r3, r0, #1
 8006108:	d100      	bne.n	800610c <_printf_float+0x400>
 800610a:	e65d      	b.n	8005dc8 <_printf_float+0xbc>
 800610c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800610e:	0038      	movs	r0, r7
 8006110:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006112:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006114:	47b0      	blx	r6
 8006116:	1c43      	adds	r3, r0, #1
 8006118:	d100      	bne.n	800611c <_printf_float+0x410>
 800611a:	e655      	b.n	8005dc8 <_printf_float+0xbc>
 800611c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 800611e:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8006120:	2200      	movs	r2, #0
 8006122:	2300      	movs	r3, #0
 8006124:	f7fa f992 	bl	800044c <__aeabi_dcmpeq>
 8006128:	2800      	cmp	r0, #0
 800612a:	d11a      	bne.n	8006162 <_printf_float+0x456>
 800612c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800612e:	1c6a      	adds	r2, r5, #1
 8006130:	3b01      	subs	r3, #1
 8006132:	0038      	movs	r0, r7
 8006134:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006136:	47b0      	blx	r6
 8006138:	1c43      	adds	r3, r0, #1
 800613a:	d10e      	bne.n	800615a <_printf_float+0x44e>
 800613c:	e644      	b.n	8005dc8 <_printf_float+0xbc>
 800613e:	0022      	movs	r2, r4
 8006140:	2301      	movs	r3, #1
 8006142:	0038      	movs	r0, r7
 8006144:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006146:	321a      	adds	r2, #26
 8006148:	47b0      	blx	r6
 800614a:	1c43      	adds	r3, r0, #1
 800614c:	d100      	bne.n	8006150 <_printf_float+0x444>
 800614e:	e63b      	b.n	8005dc8 <_printf_float+0xbc>
 8006150:	3501      	adds	r5, #1
 8006152:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006154:	3b01      	subs	r3, #1
 8006156:	42ab      	cmp	r3, r5
 8006158:	dcf1      	bgt.n	800613e <_printf_float+0x432>
 800615a:	0022      	movs	r2, r4
 800615c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800615e:	3250      	adds	r2, #80	; 0x50
 8006160:	e6da      	b.n	8005f18 <_printf_float+0x20c>
 8006162:	2500      	movs	r5, #0
 8006164:	e7f5      	b.n	8006152 <_printf_float+0x446>
 8006166:	002a      	movs	r2, r5
 8006168:	e7e3      	b.n	8006132 <_printf_float+0x426>
 800616a:	0022      	movs	r2, r4
 800616c:	2301      	movs	r3, #1
 800616e:	0038      	movs	r0, r7
 8006170:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006172:	3219      	adds	r2, #25
 8006174:	47b0      	blx	r6
 8006176:	1c43      	adds	r3, r0, #1
 8006178:	d100      	bne.n	800617c <_printf_float+0x470>
 800617a:	e625      	b.n	8005dc8 <_printf_float+0xbc>
 800617c:	3501      	adds	r5, #1
 800617e:	68e3      	ldr	r3, [r4, #12]
 8006180:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8006182:	1a9b      	subs	r3, r3, r2
 8006184:	42ab      	cmp	r3, r5
 8006186:	dcf0      	bgt.n	800616a <_printf_float+0x45e>
 8006188:	e6f8      	b.n	8005f7c <_printf_float+0x270>
 800618a:	2500      	movs	r5, #0
 800618c:	e7f7      	b.n	800617e <_printf_float+0x472>
 800618e:	46c0      	nop			; (mov r8, r8)

08006190 <_printf_common>:
 8006190:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006192:	0015      	movs	r5, r2
 8006194:	9301      	str	r3, [sp, #4]
 8006196:	688a      	ldr	r2, [r1, #8]
 8006198:	690b      	ldr	r3, [r1, #16]
 800619a:	000c      	movs	r4, r1
 800619c:	9000      	str	r0, [sp, #0]
 800619e:	4293      	cmp	r3, r2
 80061a0:	da00      	bge.n	80061a4 <_printf_common+0x14>
 80061a2:	0013      	movs	r3, r2
 80061a4:	0022      	movs	r2, r4
 80061a6:	602b      	str	r3, [r5, #0]
 80061a8:	3243      	adds	r2, #67	; 0x43
 80061aa:	7812      	ldrb	r2, [r2, #0]
 80061ac:	2a00      	cmp	r2, #0
 80061ae:	d001      	beq.n	80061b4 <_printf_common+0x24>
 80061b0:	3301      	adds	r3, #1
 80061b2:	602b      	str	r3, [r5, #0]
 80061b4:	6823      	ldr	r3, [r4, #0]
 80061b6:	069b      	lsls	r3, r3, #26
 80061b8:	d502      	bpl.n	80061c0 <_printf_common+0x30>
 80061ba:	682b      	ldr	r3, [r5, #0]
 80061bc:	3302      	adds	r3, #2
 80061be:	602b      	str	r3, [r5, #0]
 80061c0:	6822      	ldr	r2, [r4, #0]
 80061c2:	2306      	movs	r3, #6
 80061c4:	0017      	movs	r7, r2
 80061c6:	401f      	ands	r7, r3
 80061c8:	421a      	tst	r2, r3
 80061ca:	d027      	beq.n	800621c <_printf_common+0x8c>
 80061cc:	0023      	movs	r3, r4
 80061ce:	3343      	adds	r3, #67	; 0x43
 80061d0:	781b      	ldrb	r3, [r3, #0]
 80061d2:	1e5a      	subs	r2, r3, #1
 80061d4:	4193      	sbcs	r3, r2
 80061d6:	6822      	ldr	r2, [r4, #0]
 80061d8:	0692      	lsls	r2, r2, #26
 80061da:	d430      	bmi.n	800623e <_printf_common+0xae>
 80061dc:	0022      	movs	r2, r4
 80061de:	9901      	ldr	r1, [sp, #4]
 80061e0:	9800      	ldr	r0, [sp, #0]
 80061e2:	9e08      	ldr	r6, [sp, #32]
 80061e4:	3243      	adds	r2, #67	; 0x43
 80061e6:	47b0      	blx	r6
 80061e8:	1c43      	adds	r3, r0, #1
 80061ea:	d025      	beq.n	8006238 <_printf_common+0xa8>
 80061ec:	2306      	movs	r3, #6
 80061ee:	6820      	ldr	r0, [r4, #0]
 80061f0:	682a      	ldr	r2, [r5, #0]
 80061f2:	68e1      	ldr	r1, [r4, #12]
 80061f4:	2500      	movs	r5, #0
 80061f6:	4003      	ands	r3, r0
 80061f8:	2b04      	cmp	r3, #4
 80061fa:	d103      	bne.n	8006204 <_printf_common+0x74>
 80061fc:	1a8d      	subs	r5, r1, r2
 80061fe:	43eb      	mvns	r3, r5
 8006200:	17db      	asrs	r3, r3, #31
 8006202:	401d      	ands	r5, r3
 8006204:	68a3      	ldr	r3, [r4, #8]
 8006206:	6922      	ldr	r2, [r4, #16]
 8006208:	4293      	cmp	r3, r2
 800620a:	dd01      	ble.n	8006210 <_printf_common+0x80>
 800620c:	1a9b      	subs	r3, r3, r2
 800620e:	18ed      	adds	r5, r5, r3
 8006210:	2700      	movs	r7, #0
 8006212:	42bd      	cmp	r5, r7
 8006214:	d120      	bne.n	8006258 <_printf_common+0xc8>
 8006216:	2000      	movs	r0, #0
 8006218:	e010      	b.n	800623c <_printf_common+0xac>
 800621a:	3701      	adds	r7, #1
 800621c:	68e3      	ldr	r3, [r4, #12]
 800621e:	682a      	ldr	r2, [r5, #0]
 8006220:	1a9b      	subs	r3, r3, r2
 8006222:	42bb      	cmp	r3, r7
 8006224:	ddd2      	ble.n	80061cc <_printf_common+0x3c>
 8006226:	0022      	movs	r2, r4
 8006228:	2301      	movs	r3, #1
 800622a:	9901      	ldr	r1, [sp, #4]
 800622c:	9800      	ldr	r0, [sp, #0]
 800622e:	9e08      	ldr	r6, [sp, #32]
 8006230:	3219      	adds	r2, #25
 8006232:	47b0      	blx	r6
 8006234:	1c43      	adds	r3, r0, #1
 8006236:	d1f0      	bne.n	800621a <_printf_common+0x8a>
 8006238:	2001      	movs	r0, #1
 800623a:	4240      	negs	r0, r0
 800623c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800623e:	2030      	movs	r0, #48	; 0x30
 8006240:	18e1      	adds	r1, r4, r3
 8006242:	3143      	adds	r1, #67	; 0x43
 8006244:	7008      	strb	r0, [r1, #0]
 8006246:	0021      	movs	r1, r4
 8006248:	1c5a      	adds	r2, r3, #1
 800624a:	3145      	adds	r1, #69	; 0x45
 800624c:	7809      	ldrb	r1, [r1, #0]
 800624e:	18a2      	adds	r2, r4, r2
 8006250:	3243      	adds	r2, #67	; 0x43
 8006252:	3302      	adds	r3, #2
 8006254:	7011      	strb	r1, [r2, #0]
 8006256:	e7c1      	b.n	80061dc <_printf_common+0x4c>
 8006258:	0022      	movs	r2, r4
 800625a:	2301      	movs	r3, #1
 800625c:	9901      	ldr	r1, [sp, #4]
 800625e:	9800      	ldr	r0, [sp, #0]
 8006260:	9e08      	ldr	r6, [sp, #32]
 8006262:	321a      	adds	r2, #26
 8006264:	47b0      	blx	r6
 8006266:	1c43      	adds	r3, r0, #1
 8006268:	d0e6      	beq.n	8006238 <_printf_common+0xa8>
 800626a:	3701      	adds	r7, #1
 800626c:	e7d1      	b.n	8006212 <_printf_common+0x82>
	...

08006270 <_printf_i>:
 8006270:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006272:	b08b      	sub	sp, #44	; 0x2c
 8006274:	9206      	str	r2, [sp, #24]
 8006276:	000a      	movs	r2, r1
 8006278:	3243      	adds	r2, #67	; 0x43
 800627a:	9307      	str	r3, [sp, #28]
 800627c:	9005      	str	r0, [sp, #20]
 800627e:	9204      	str	r2, [sp, #16]
 8006280:	7e0a      	ldrb	r2, [r1, #24]
 8006282:	000c      	movs	r4, r1
 8006284:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006286:	2a78      	cmp	r2, #120	; 0x78
 8006288:	d807      	bhi.n	800629a <_printf_i+0x2a>
 800628a:	2a62      	cmp	r2, #98	; 0x62
 800628c:	d809      	bhi.n	80062a2 <_printf_i+0x32>
 800628e:	2a00      	cmp	r2, #0
 8006290:	d100      	bne.n	8006294 <_printf_i+0x24>
 8006292:	e0c1      	b.n	8006418 <_printf_i+0x1a8>
 8006294:	2a58      	cmp	r2, #88	; 0x58
 8006296:	d100      	bne.n	800629a <_printf_i+0x2a>
 8006298:	e08c      	b.n	80063b4 <_printf_i+0x144>
 800629a:	0026      	movs	r6, r4
 800629c:	3642      	adds	r6, #66	; 0x42
 800629e:	7032      	strb	r2, [r6, #0]
 80062a0:	e022      	b.n	80062e8 <_printf_i+0x78>
 80062a2:	0010      	movs	r0, r2
 80062a4:	3863      	subs	r0, #99	; 0x63
 80062a6:	2815      	cmp	r0, #21
 80062a8:	d8f7      	bhi.n	800629a <_printf_i+0x2a>
 80062aa:	f7f9 ff3f 	bl	800012c <__gnu_thumb1_case_shi>
 80062ae:	0016      	.short	0x0016
 80062b0:	fff6001f 	.word	0xfff6001f
 80062b4:	fff6fff6 	.word	0xfff6fff6
 80062b8:	001ffff6 	.word	0x001ffff6
 80062bc:	fff6fff6 	.word	0xfff6fff6
 80062c0:	fff6fff6 	.word	0xfff6fff6
 80062c4:	003600a8 	.word	0x003600a8
 80062c8:	fff6009a 	.word	0xfff6009a
 80062cc:	00b9fff6 	.word	0x00b9fff6
 80062d0:	0036fff6 	.word	0x0036fff6
 80062d4:	fff6fff6 	.word	0xfff6fff6
 80062d8:	009e      	.short	0x009e
 80062da:	0026      	movs	r6, r4
 80062dc:	681a      	ldr	r2, [r3, #0]
 80062de:	3642      	adds	r6, #66	; 0x42
 80062e0:	1d11      	adds	r1, r2, #4
 80062e2:	6019      	str	r1, [r3, #0]
 80062e4:	6813      	ldr	r3, [r2, #0]
 80062e6:	7033      	strb	r3, [r6, #0]
 80062e8:	2301      	movs	r3, #1
 80062ea:	e0a7      	b.n	800643c <_printf_i+0x1cc>
 80062ec:	6808      	ldr	r0, [r1, #0]
 80062ee:	6819      	ldr	r1, [r3, #0]
 80062f0:	1d0a      	adds	r2, r1, #4
 80062f2:	0605      	lsls	r5, r0, #24
 80062f4:	d50b      	bpl.n	800630e <_printf_i+0x9e>
 80062f6:	680d      	ldr	r5, [r1, #0]
 80062f8:	601a      	str	r2, [r3, #0]
 80062fa:	2d00      	cmp	r5, #0
 80062fc:	da03      	bge.n	8006306 <_printf_i+0x96>
 80062fe:	232d      	movs	r3, #45	; 0x2d
 8006300:	9a04      	ldr	r2, [sp, #16]
 8006302:	426d      	negs	r5, r5
 8006304:	7013      	strb	r3, [r2, #0]
 8006306:	4b61      	ldr	r3, [pc, #388]	; (800648c <_printf_i+0x21c>)
 8006308:	270a      	movs	r7, #10
 800630a:	9303      	str	r3, [sp, #12]
 800630c:	e01b      	b.n	8006346 <_printf_i+0xd6>
 800630e:	680d      	ldr	r5, [r1, #0]
 8006310:	601a      	str	r2, [r3, #0]
 8006312:	0641      	lsls	r1, r0, #25
 8006314:	d5f1      	bpl.n	80062fa <_printf_i+0x8a>
 8006316:	b22d      	sxth	r5, r5
 8006318:	e7ef      	b.n	80062fa <_printf_i+0x8a>
 800631a:	680d      	ldr	r5, [r1, #0]
 800631c:	6819      	ldr	r1, [r3, #0]
 800631e:	1d08      	adds	r0, r1, #4
 8006320:	6018      	str	r0, [r3, #0]
 8006322:	062e      	lsls	r6, r5, #24
 8006324:	d501      	bpl.n	800632a <_printf_i+0xba>
 8006326:	680d      	ldr	r5, [r1, #0]
 8006328:	e003      	b.n	8006332 <_printf_i+0xc2>
 800632a:	066d      	lsls	r5, r5, #25
 800632c:	d5fb      	bpl.n	8006326 <_printf_i+0xb6>
 800632e:	680d      	ldr	r5, [r1, #0]
 8006330:	b2ad      	uxth	r5, r5
 8006332:	4b56      	ldr	r3, [pc, #344]	; (800648c <_printf_i+0x21c>)
 8006334:	2708      	movs	r7, #8
 8006336:	9303      	str	r3, [sp, #12]
 8006338:	2a6f      	cmp	r2, #111	; 0x6f
 800633a:	d000      	beq.n	800633e <_printf_i+0xce>
 800633c:	3702      	adds	r7, #2
 800633e:	0023      	movs	r3, r4
 8006340:	2200      	movs	r2, #0
 8006342:	3343      	adds	r3, #67	; 0x43
 8006344:	701a      	strb	r2, [r3, #0]
 8006346:	6863      	ldr	r3, [r4, #4]
 8006348:	60a3      	str	r3, [r4, #8]
 800634a:	2b00      	cmp	r3, #0
 800634c:	db03      	blt.n	8006356 <_printf_i+0xe6>
 800634e:	2204      	movs	r2, #4
 8006350:	6821      	ldr	r1, [r4, #0]
 8006352:	4391      	bics	r1, r2
 8006354:	6021      	str	r1, [r4, #0]
 8006356:	2d00      	cmp	r5, #0
 8006358:	d102      	bne.n	8006360 <_printf_i+0xf0>
 800635a:	9e04      	ldr	r6, [sp, #16]
 800635c:	2b00      	cmp	r3, #0
 800635e:	d00c      	beq.n	800637a <_printf_i+0x10a>
 8006360:	9e04      	ldr	r6, [sp, #16]
 8006362:	0028      	movs	r0, r5
 8006364:	0039      	movs	r1, r7
 8006366:	f7f9 ff71 	bl	800024c <__aeabi_uidivmod>
 800636a:	9b03      	ldr	r3, [sp, #12]
 800636c:	3e01      	subs	r6, #1
 800636e:	5c5b      	ldrb	r3, [r3, r1]
 8006370:	7033      	strb	r3, [r6, #0]
 8006372:	002b      	movs	r3, r5
 8006374:	0005      	movs	r5, r0
 8006376:	429f      	cmp	r7, r3
 8006378:	d9f3      	bls.n	8006362 <_printf_i+0xf2>
 800637a:	2f08      	cmp	r7, #8
 800637c:	d109      	bne.n	8006392 <_printf_i+0x122>
 800637e:	6823      	ldr	r3, [r4, #0]
 8006380:	07db      	lsls	r3, r3, #31
 8006382:	d506      	bpl.n	8006392 <_printf_i+0x122>
 8006384:	6863      	ldr	r3, [r4, #4]
 8006386:	6922      	ldr	r2, [r4, #16]
 8006388:	4293      	cmp	r3, r2
 800638a:	dc02      	bgt.n	8006392 <_printf_i+0x122>
 800638c:	2330      	movs	r3, #48	; 0x30
 800638e:	3e01      	subs	r6, #1
 8006390:	7033      	strb	r3, [r6, #0]
 8006392:	9b04      	ldr	r3, [sp, #16]
 8006394:	1b9b      	subs	r3, r3, r6
 8006396:	6123      	str	r3, [r4, #16]
 8006398:	9b07      	ldr	r3, [sp, #28]
 800639a:	0021      	movs	r1, r4
 800639c:	9300      	str	r3, [sp, #0]
 800639e:	9805      	ldr	r0, [sp, #20]
 80063a0:	9b06      	ldr	r3, [sp, #24]
 80063a2:	aa09      	add	r2, sp, #36	; 0x24
 80063a4:	f7ff fef4 	bl	8006190 <_printf_common>
 80063a8:	1c43      	adds	r3, r0, #1
 80063aa:	d14c      	bne.n	8006446 <_printf_i+0x1d6>
 80063ac:	2001      	movs	r0, #1
 80063ae:	4240      	negs	r0, r0
 80063b0:	b00b      	add	sp, #44	; 0x2c
 80063b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80063b4:	3145      	adds	r1, #69	; 0x45
 80063b6:	700a      	strb	r2, [r1, #0]
 80063b8:	4a34      	ldr	r2, [pc, #208]	; (800648c <_printf_i+0x21c>)
 80063ba:	9203      	str	r2, [sp, #12]
 80063bc:	681a      	ldr	r2, [r3, #0]
 80063be:	6821      	ldr	r1, [r4, #0]
 80063c0:	ca20      	ldmia	r2!, {r5}
 80063c2:	601a      	str	r2, [r3, #0]
 80063c4:	0608      	lsls	r0, r1, #24
 80063c6:	d516      	bpl.n	80063f6 <_printf_i+0x186>
 80063c8:	07cb      	lsls	r3, r1, #31
 80063ca:	d502      	bpl.n	80063d2 <_printf_i+0x162>
 80063cc:	2320      	movs	r3, #32
 80063ce:	4319      	orrs	r1, r3
 80063d0:	6021      	str	r1, [r4, #0]
 80063d2:	2710      	movs	r7, #16
 80063d4:	2d00      	cmp	r5, #0
 80063d6:	d1b2      	bne.n	800633e <_printf_i+0xce>
 80063d8:	2320      	movs	r3, #32
 80063da:	6822      	ldr	r2, [r4, #0]
 80063dc:	439a      	bics	r2, r3
 80063de:	6022      	str	r2, [r4, #0]
 80063e0:	e7ad      	b.n	800633e <_printf_i+0xce>
 80063e2:	2220      	movs	r2, #32
 80063e4:	6809      	ldr	r1, [r1, #0]
 80063e6:	430a      	orrs	r2, r1
 80063e8:	6022      	str	r2, [r4, #0]
 80063ea:	0022      	movs	r2, r4
 80063ec:	2178      	movs	r1, #120	; 0x78
 80063ee:	3245      	adds	r2, #69	; 0x45
 80063f0:	7011      	strb	r1, [r2, #0]
 80063f2:	4a27      	ldr	r2, [pc, #156]	; (8006490 <_printf_i+0x220>)
 80063f4:	e7e1      	b.n	80063ba <_printf_i+0x14a>
 80063f6:	0648      	lsls	r0, r1, #25
 80063f8:	d5e6      	bpl.n	80063c8 <_printf_i+0x158>
 80063fa:	b2ad      	uxth	r5, r5
 80063fc:	e7e4      	b.n	80063c8 <_printf_i+0x158>
 80063fe:	681a      	ldr	r2, [r3, #0]
 8006400:	680d      	ldr	r5, [r1, #0]
 8006402:	1d10      	adds	r0, r2, #4
 8006404:	6949      	ldr	r1, [r1, #20]
 8006406:	6018      	str	r0, [r3, #0]
 8006408:	6813      	ldr	r3, [r2, #0]
 800640a:	062e      	lsls	r6, r5, #24
 800640c:	d501      	bpl.n	8006412 <_printf_i+0x1a2>
 800640e:	6019      	str	r1, [r3, #0]
 8006410:	e002      	b.n	8006418 <_printf_i+0x1a8>
 8006412:	066d      	lsls	r5, r5, #25
 8006414:	d5fb      	bpl.n	800640e <_printf_i+0x19e>
 8006416:	8019      	strh	r1, [r3, #0]
 8006418:	2300      	movs	r3, #0
 800641a:	9e04      	ldr	r6, [sp, #16]
 800641c:	6123      	str	r3, [r4, #16]
 800641e:	e7bb      	b.n	8006398 <_printf_i+0x128>
 8006420:	681a      	ldr	r2, [r3, #0]
 8006422:	1d11      	adds	r1, r2, #4
 8006424:	6019      	str	r1, [r3, #0]
 8006426:	6816      	ldr	r6, [r2, #0]
 8006428:	2100      	movs	r1, #0
 800642a:	0030      	movs	r0, r6
 800642c:	6862      	ldr	r2, [r4, #4]
 800642e:	f000 ff05 	bl	800723c <memchr>
 8006432:	2800      	cmp	r0, #0
 8006434:	d001      	beq.n	800643a <_printf_i+0x1ca>
 8006436:	1b80      	subs	r0, r0, r6
 8006438:	6060      	str	r0, [r4, #4]
 800643a:	6863      	ldr	r3, [r4, #4]
 800643c:	6123      	str	r3, [r4, #16]
 800643e:	2300      	movs	r3, #0
 8006440:	9a04      	ldr	r2, [sp, #16]
 8006442:	7013      	strb	r3, [r2, #0]
 8006444:	e7a8      	b.n	8006398 <_printf_i+0x128>
 8006446:	6923      	ldr	r3, [r4, #16]
 8006448:	0032      	movs	r2, r6
 800644a:	9906      	ldr	r1, [sp, #24]
 800644c:	9805      	ldr	r0, [sp, #20]
 800644e:	9d07      	ldr	r5, [sp, #28]
 8006450:	47a8      	blx	r5
 8006452:	1c43      	adds	r3, r0, #1
 8006454:	d0aa      	beq.n	80063ac <_printf_i+0x13c>
 8006456:	6823      	ldr	r3, [r4, #0]
 8006458:	079b      	lsls	r3, r3, #30
 800645a:	d415      	bmi.n	8006488 <_printf_i+0x218>
 800645c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800645e:	68e0      	ldr	r0, [r4, #12]
 8006460:	4298      	cmp	r0, r3
 8006462:	daa5      	bge.n	80063b0 <_printf_i+0x140>
 8006464:	0018      	movs	r0, r3
 8006466:	e7a3      	b.n	80063b0 <_printf_i+0x140>
 8006468:	0022      	movs	r2, r4
 800646a:	2301      	movs	r3, #1
 800646c:	9906      	ldr	r1, [sp, #24]
 800646e:	9805      	ldr	r0, [sp, #20]
 8006470:	9e07      	ldr	r6, [sp, #28]
 8006472:	3219      	adds	r2, #25
 8006474:	47b0      	blx	r6
 8006476:	1c43      	adds	r3, r0, #1
 8006478:	d098      	beq.n	80063ac <_printf_i+0x13c>
 800647a:	3501      	adds	r5, #1
 800647c:	68e3      	ldr	r3, [r4, #12]
 800647e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006480:	1a9b      	subs	r3, r3, r2
 8006482:	42ab      	cmp	r3, r5
 8006484:	dcf0      	bgt.n	8006468 <_printf_i+0x1f8>
 8006486:	e7e9      	b.n	800645c <_printf_i+0x1ec>
 8006488:	2500      	movs	r5, #0
 800648a:	e7f7      	b.n	800647c <_printf_i+0x20c>
 800648c:	08008c9a 	.word	0x08008c9a
 8006490:	08008cab 	.word	0x08008cab

08006494 <siprintf>:
 8006494:	b40e      	push	{r1, r2, r3}
 8006496:	b500      	push	{lr}
 8006498:	490b      	ldr	r1, [pc, #44]	; (80064c8 <siprintf+0x34>)
 800649a:	b09c      	sub	sp, #112	; 0x70
 800649c:	ab1d      	add	r3, sp, #116	; 0x74
 800649e:	9002      	str	r0, [sp, #8]
 80064a0:	9006      	str	r0, [sp, #24]
 80064a2:	9107      	str	r1, [sp, #28]
 80064a4:	9104      	str	r1, [sp, #16]
 80064a6:	4809      	ldr	r0, [pc, #36]	; (80064cc <siprintf+0x38>)
 80064a8:	4909      	ldr	r1, [pc, #36]	; (80064d0 <siprintf+0x3c>)
 80064aa:	cb04      	ldmia	r3!, {r2}
 80064ac:	9105      	str	r1, [sp, #20]
 80064ae:	6800      	ldr	r0, [r0, #0]
 80064b0:	a902      	add	r1, sp, #8
 80064b2:	9301      	str	r3, [sp, #4]
 80064b4:	f001 fbe2 	bl	8007c7c <_svfiprintf_r>
 80064b8:	2300      	movs	r3, #0
 80064ba:	9a02      	ldr	r2, [sp, #8]
 80064bc:	7013      	strb	r3, [r2, #0]
 80064be:	b01c      	add	sp, #112	; 0x70
 80064c0:	bc08      	pop	{r3}
 80064c2:	b003      	add	sp, #12
 80064c4:	4718      	bx	r3
 80064c6:	46c0      	nop			; (mov r8, r8)
 80064c8:	7fffffff 	.word	0x7fffffff
 80064cc:	2000000c 	.word	0x2000000c
 80064d0:	ffff0208 	.word	0xffff0208

080064d4 <quorem>:
 80064d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80064d6:	0006      	movs	r6, r0
 80064d8:	690b      	ldr	r3, [r1, #16]
 80064da:	6932      	ldr	r2, [r6, #16]
 80064dc:	b087      	sub	sp, #28
 80064de:	2000      	movs	r0, #0
 80064e0:	9103      	str	r1, [sp, #12]
 80064e2:	429a      	cmp	r2, r3
 80064e4:	db65      	blt.n	80065b2 <quorem+0xde>
 80064e6:	3b01      	subs	r3, #1
 80064e8:	009c      	lsls	r4, r3, #2
 80064ea:	9300      	str	r3, [sp, #0]
 80064ec:	000b      	movs	r3, r1
 80064ee:	3314      	adds	r3, #20
 80064f0:	9305      	str	r3, [sp, #20]
 80064f2:	191b      	adds	r3, r3, r4
 80064f4:	9304      	str	r3, [sp, #16]
 80064f6:	0033      	movs	r3, r6
 80064f8:	3314      	adds	r3, #20
 80064fa:	9302      	str	r3, [sp, #8]
 80064fc:	191c      	adds	r4, r3, r4
 80064fe:	9b04      	ldr	r3, [sp, #16]
 8006500:	6827      	ldr	r7, [r4, #0]
 8006502:	681b      	ldr	r3, [r3, #0]
 8006504:	0038      	movs	r0, r7
 8006506:	1c5d      	adds	r5, r3, #1
 8006508:	0029      	movs	r1, r5
 800650a:	9301      	str	r3, [sp, #4]
 800650c:	f7f9 fe18 	bl	8000140 <__udivsi3>
 8006510:	9001      	str	r0, [sp, #4]
 8006512:	42af      	cmp	r7, r5
 8006514:	d324      	bcc.n	8006560 <quorem+0x8c>
 8006516:	2500      	movs	r5, #0
 8006518:	46ac      	mov	ip, r5
 800651a:	9802      	ldr	r0, [sp, #8]
 800651c:	9f05      	ldr	r7, [sp, #20]
 800651e:	cf08      	ldmia	r7!, {r3}
 8006520:	9a01      	ldr	r2, [sp, #4]
 8006522:	b299      	uxth	r1, r3
 8006524:	4351      	muls	r1, r2
 8006526:	0c1b      	lsrs	r3, r3, #16
 8006528:	4353      	muls	r3, r2
 800652a:	1949      	adds	r1, r1, r5
 800652c:	0c0a      	lsrs	r2, r1, #16
 800652e:	189b      	adds	r3, r3, r2
 8006530:	6802      	ldr	r2, [r0, #0]
 8006532:	b289      	uxth	r1, r1
 8006534:	b292      	uxth	r2, r2
 8006536:	4462      	add	r2, ip
 8006538:	1a52      	subs	r2, r2, r1
 800653a:	6801      	ldr	r1, [r0, #0]
 800653c:	0c1d      	lsrs	r5, r3, #16
 800653e:	0c09      	lsrs	r1, r1, #16
 8006540:	b29b      	uxth	r3, r3
 8006542:	1acb      	subs	r3, r1, r3
 8006544:	1411      	asrs	r1, r2, #16
 8006546:	185b      	adds	r3, r3, r1
 8006548:	1419      	asrs	r1, r3, #16
 800654a:	b292      	uxth	r2, r2
 800654c:	041b      	lsls	r3, r3, #16
 800654e:	431a      	orrs	r2, r3
 8006550:	9b04      	ldr	r3, [sp, #16]
 8006552:	468c      	mov	ip, r1
 8006554:	c004      	stmia	r0!, {r2}
 8006556:	42bb      	cmp	r3, r7
 8006558:	d2e1      	bcs.n	800651e <quorem+0x4a>
 800655a:	6823      	ldr	r3, [r4, #0]
 800655c:	2b00      	cmp	r3, #0
 800655e:	d030      	beq.n	80065c2 <quorem+0xee>
 8006560:	0030      	movs	r0, r6
 8006562:	9903      	ldr	r1, [sp, #12]
 8006564:	f001 f902 	bl	800776c <__mcmp>
 8006568:	2800      	cmp	r0, #0
 800656a:	db21      	blt.n	80065b0 <quorem+0xdc>
 800656c:	0030      	movs	r0, r6
 800656e:	2400      	movs	r4, #0
 8006570:	9b01      	ldr	r3, [sp, #4]
 8006572:	9903      	ldr	r1, [sp, #12]
 8006574:	3301      	adds	r3, #1
 8006576:	9301      	str	r3, [sp, #4]
 8006578:	3014      	adds	r0, #20
 800657a:	3114      	adds	r1, #20
 800657c:	6803      	ldr	r3, [r0, #0]
 800657e:	c920      	ldmia	r1!, {r5}
 8006580:	b29a      	uxth	r2, r3
 8006582:	1914      	adds	r4, r2, r4
 8006584:	b2aa      	uxth	r2, r5
 8006586:	1aa2      	subs	r2, r4, r2
 8006588:	0c1b      	lsrs	r3, r3, #16
 800658a:	0c2d      	lsrs	r5, r5, #16
 800658c:	1414      	asrs	r4, r2, #16
 800658e:	1b5b      	subs	r3, r3, r5
 8006590:	191b      	adds	r3, r3, r4
 8006592:	141c      	asrs	r4, r3, #16
 8006594:	b292      	uxth	r2, r2
 8006596:	041b      	lsls	r3, r3, #16
 8006598:	4313      	orrs	r3, r2
 800659a:	c008      	stmia	r0!, {r3}
 800659c:	9b04      	ldr	r3, [sp, #16]
 800659e:	428b      	cmp	r3, r1
 80065a0:	d2ec      	bcs.n	800657c <quorem+0xa8>
 80065a2:	9b00      	ldr	r3, [sp, #0]
 80065a4:	9a02      	ldr	r2, [sp, #8]
 80065a6:	009b      	lsls	r3, r3, #2
 80065a8:	18d3      	adds	r3, r2, r3
 80065aa:	681a      	ldr	r2, [r3, #0]
 80065ac:	2a00      	cmp	r2, #0
 80065ae:	d015      	beq.n	80065dc <quorem+0x108>
 80065b0:	9801      	ldr	r0, [sp, #4]
 80065b2:	b007      	add	sp, #28
 80065b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80065b6:	6823      	ldr	r3, [r4, #0]
 80065b8:	2b00      	cmp	r3, #0
 80065ba:	d106      	bne.n	80065ca <quorem+0xf6>
 80065bc:	9b00      	ldr	r3, [sp, #0]
 80065be:	3b01      	subs	r3, #1
 80065c0:	9300      	str	r3, [sp, #0]
 80065c2:	9b02      	ldr	r3, [sp, #8]
 80065c4:	3c04      	subs	r4, #4
 80065c6:	42a3      	cmp	r3, r4
 80065c8:	d3f5      	bcc.n	80065b6 <quorem+0xe2>
 80065ca:	9b00      	ldr	r3, [sp, #0]
 80065cc:	6133      	str	r3, [r6, #16]
 80065ce:	e7c7      	b.n	8006560 <quorem+0x8c>
 80065d0:	681a      	ldr	r2, [r3, #0]
 80065d2:	2a00      	cmp	r2, #0
 80065d4:	d106      	bne.n	80065e4 <quorem+0x110>
 80065d6:	9a00      	ldr	r2, [sp, #0]
 80065d8:	3a01      	subs	r2, #1
 80065da:	9200      	str	r2, [sp, #0]
 80065dc:	9a02      	ldr	r2, [sp, #8]
 80065de:	3b04      	subs	r3, #4
 80065e0:	429a      	cmp	r2, r3
 80065e2:	d3f5      	bcc.n	80065d0 <quorem+0xfc>
 80065e4:	9b00      	ldr	r3, [sp, #0]
 80065e6:	6133      	str	r3, [r6, #16]
 80065e8:	e7e2      	b.n	80065b0 <quorem+0xdc>
	...

080065ec <_dtoa_r>:
 80065ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80065ee:	b09d      	sub	sp, #116	; 0x74
 80065f0:	9202      	str	r2, [sp, #8]
 80065f2:	9303      	str	r3, [sp, #12]
 80065f4:	9b02      	ldr	r3, [sp, #8]
 80065f6:	9c03      	ldr	r4, [sp, #12]
 80065f8:	9308      	str	r3, [sp, #32]
 80065fa:	9409      	str	r4, [sp, #36]	; 0x24
 80065fc:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80065fe:	0007      	movs	r7, r0
 8006600:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8006602:	2c00      	cmp	r4, #0
 8006604:	d10e      	bne.n	8006624 <_dtoa_r+0x38>
 8006606:	2010      	movs	r0, #16
 8006608:	f000 fe0e 	bl	8007228 <malloc>
 800660c:	1e02      	subs	r2, r0, #0
 800660e:	6278      	str	r0, [r7, #36]	; 0x24
 8006610:	d104      	bne.n	800661c <_dtoa_r+0x30>
 8006612:	21ea      	movs	r1, #234	; 0xea
 8006614:	4bc7      	ldr	r3, [pc, #796]	; (8006934 <_dtoa_r+0x348>)
 8006616:	48c8      	ldr	r0, [pc, #800]	; (8006938 <_dtoa_r+0x34c>)
 8006618:	f001 fc42 	bl	8007ea0 <__assert_func>
 800661c:	6044      	str	r4, [r0, #4]
 800661e:	6084      	str	r4, [r0, #8]
 8006620:	6004      	str	r4, [r0, #0]
 8006622:	60c4      	str	r4, [r0, #12]
 8006624:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006626:	6819      	ldr	r1, [r3, #0]
 8006628:	2900      	cmp	r1, #0
 800662a:	d00a      	beq.n	8006642 <_dtoa_r+0x56>
 800662c:	685a      	ldr	r2, [r3, #4]
 800662e:	2301      	movs	r3, #1
 8006630:	4093      	lsls	r3, r2
 8006632:	604a      	str	r2, [r1, #4]
 8006634:	608b      	str	r3, [r1, #8]
 8006636:	0038      	movs	r0, r7
 8006638:	f000 fe58 	bl	80072ec <_Bfree>
 800663c:	2200      	movs	r2, #0
 800663e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006640:	601a      	str	r2, [r3, #0]
 8006642:	9b03      	ldr	r3, [sp, #12]
 8006644:	2b00      	cmp	r3, #0
 8006646:	da20      	bge.n	800668a <_dtoa_r+0x9e>
 8006648:	2301      	movs	r3, #1
 800664a:	602b      	str	r3, [r5, #0]
 800664c:	9b03      	ldr	r3, [sp, #12]
 800664e:	005b      	lsls	r3, r3, #1
 8006650:	085b      	lsrs	r3, r3, #1
 8006652:	9309      	str	r3, [sp, #36]	; 0x24
 8006654:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8006656:	4bb9      	ldr	r3, [pc, #740]	; (800693c <_dtoa_r+0x350>)
 8006658:	4ab8      	ldr	r2, [pc, #736]	; (800693c <_dtoa_r+0x350>)
 800665a:	402b      	ands	r3, r5
 800665c:	4293      	cmp	r3, r2
 800665e:	d117      	bne.n	8006690 <_dtoa_r+0xa4>
 8006660:	4bb7      	ldr	r3, [pc, #732]	; (8006940 <_dtoa_r+0x354>)
 8006662:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8006664:	0328      	lsls	r0, r5, #12
 8006666:	6013      	str	r3, [r2, #0]
 8006668:	9b02      	ldr	r3, [sp, #8]
 800666a:	0b00      	lsrs	r0, r0, #12
 800666c:	4318      	orrs	r0, r3
 800666e:	d101      	bne.n	8006674 <_dtoa_r+0x88>
 8006670:	f000 fdbf 	bl	80071f2 <_dtoa_r+0xc06>
 8006674:	48b3      	ldr	r0, [pc, #716]	; (8006944 <_dtoa_r+0x358>)
 8006676:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8006678:	9006      	str	r0, [sp, #24]
 800667a:	2b00      	cmp	r3, #0
 800667c:	d002      	beq.n	8006684 <_dtoa_r+0x98>
 800667e:	4bb2      	ldr	r3, [pc, #712]	; (8006948 <_dtoa_r+0x35c>)
 8006680:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8006682:	6013      	str	r3, [r2, #0]
 8006684:	9806      	ldr	r0, [sp, #24]
 8006686:	b01d      	add	sp, #116	; 0x74
 8006688:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800668a:	2300      	movs	r3, #0
 800668c:	602b      	str	r3, [r5, #0]
 800668e:	e7e1      	b.n	8006654 <_dtoa_r+0x68>
 8006690:	9b08      	ldr	r3, [sp, #32]
 8006692:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8006694:	9312      	str	r3, [sp, #72]	; 0x48
 8006696:	9413      	str	r4, [sp, #76]	; 0x4c
 8006698:	9812      	ldr	r0, [sp, #72]	; 0x48
 800669a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800669c:	2200      	movs	r2, #0
 800669e:	2300      	movs	r3, #0
 80066a0:	f7f9 fed4 	bl	800044c <__aeabi_dcmpeq>
 80066a4:	1e04      	subs	r4, r0, #0
 80066a6:	d009      	beq.n	80066bc <_dtoa_r+0xd0>
 80066a8:	2301      	movs	r3, #1
 80066aa:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80066ac:	6013      	str	r3, [r2, #0]
 80066ae:	4ba7      	ldr	r3, [pc, #668]	; (800694c <_dtoa_r+0x360>)
 80066b0:	9306      	str	r3, [sp, #24]
 80066b2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80066b4:	2b00      	cmp	r3, #0
 80066b6:	d0e5      	beq.n	8006684 <_dtoa_r+0x98>
 80066b8:	4ba5      	ldr	r3, [pc, #660]	; (8006950 <_dtoa_r+0x364>)
 80066ba:	e7e1      	b.n	8006680 <_dtoa_r+0x94>
 80066bc:	ab1a      	add	r3, sp, #104	; 0x68
 80066be:	9301      	str	r3, [sp, #4]
 80066c0:	ab1b      	add	r3, sp, #108	; 0x6c
 80066c2:	9300      	str	r3, [sp, #0]
 80066c4:	0038      	movs	r0, r7
 80066c6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80066c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80066ca:	f001 f903 	bl	80078d4 <__d2b>
 80066ce:	006e      	lsls	r6, r5, #1
 80066d0:	9005      	str	r0, [sp, #20]
 80066d2:	0d76      	lsrs	r6, r6, #21
 80066d4:	d100      	bne.n	80066d8 <_dtoa_r+0xec>
 80066d6:	e07c      	b.n	80067d2 <_dtoa_r+0x1e6>
 80066d8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80066da:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80066dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80066de:	4a9d      	ldr	r2, [pc, #628]	; (8006954 <_dtoa_r+0x368>)
 80066e0:	031b      	lsls	r3, r3, #12
 80066e2:	0b1b      	lsrs	r3, r3, #12
 80066e4:	431a      	orrs	r2, r3
 80066e6:	0011      	movs	r1, r2
 80066e8:	4b9b      	ldr	r3, [pc, #620]	; (8006958 <_dtoa_r+0x36c>)
 80066ea:	9418      	str	r4, [sp, #96]	; 0x60
 80066ec:	18f6      	adds	r6, r6, r3
 80066ee:	2200      	movs	r2, #0
 80066f0:	4b9a      	ldr	r3, [pc, #616]	; (800695c <_dtoa_r+0x370>)
 80066f2:	f7fb fae1 	bl	8001cb8 <__aeabi_dsub>
 80066f6:	4a9a      	ldr	r2, [pc, #616]	; (8006960 <_dtoa_r+0x374>)
 80066f8:	4b9a      	ldr	r3, [pc, #616]	; (8006964 <_dtoa_r+0x378>)
 80066fa:	f7fb f871 	bl	80017e0 <__aeabi_dmul>
 80066fe:	4a9a      	ldr	r2, [pc, #616]	; (8006968 <_dtoa_r+0x37c>)
 8006700:	4b9a      	ldr	r3, [pc, #616]	; (800696c <_dtoa_r+0x380>)
 8006702:	f7fa f92f 	bl	8000964 <__aeabi_dadd>
 8006706:	0004      	movs	r4, r0
 8006708:	0030      	movs	r0, r6
 800670a:	000d      	movs	r5, r1
 800670c:	f7fb feba 	bl	8002484 <__aeabi_i2d>
 8006710:	4a97      	ldr	r2, [pc, #604]	; (8006970 <_dtoa_r+0x384>)
 8006712:	4b98      	ldr	r3, [pc, #608]	; (8006974 <_dtoa_r+0x388>)
 8006714:	f7fb f864 	bl	80017e0 <__aeabi_dmul>
 8006718:	0002      	movs	r2, r0
 800671a:	000b      	movs	r3, r1
 800671c:	0020      	movs	r0, r4
 800671e:	0029      	movs	r1, r5
 8006720:	f7fa f920 	bl	8000964 <__aeabi_dadd>
 8006724:	0004      	movs	r4, r0
 8006726:	000d      	movs	r5, r1
 8006728:	f7fb fe76 	bl	8002418 <__aeabi_d2iz>
 800672c:	2200      	movs	r2, #0
 800672e:	9002      	str	r0, [sp, #8]
 8006730:	2300      	movs	r3, #0
 8006732:	0020      	movs	r0, r4
 8006734:	0029      	movs	r1, r5
 8006736:	f7f9 fe8f 	bl	8000458 <__aeabi_dcmplt>
 800673a:	2800      	cmp	r0, #0
 800673c:	d00b      	beq.n	8006756 <_dtoa_r+0x16a>
 800673e:	9802      	ldr	r0, [sp, #8]
 8006740:	f7fb fea0 	bl	8002484 <__aeabi_i2d>
 8006744:	002b      	movs	r3, r5
 8006746:	0022      	movs	r2, r4
 8006748:	f7f9 fe80 	bl	800044c <__aeabi_dcmpeq>
 800674c:	4243      	negs	r3, r0
 800674e:	4158      	adcs	r0, r3
 8006750:	9b02      	ldr	r3, [sp, #8]
 8006752:	1a1b      	subs	r3, r3, r0
 8006754:	9302      	str	r3, [sp, #8]
 8006756:	2301      	movs	r3, #1
 8006758:	9316      	str	r3, [sp, #88]	; 0x58
 800675a:	9b02      	ldr	r3, [sp, #8]
 800675c:	2b16      	cmp	r3, #22
 800675e:	d80f      	bhi.n	8006780 <_dtoa_r+0x194>
 8006760:	9812      	ldr	r0, [sp, #72]	; 0x48
 8006762:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8006764:	00da      	lsls	r2, r3, #3
 8006766:	4b84      	ldr	r3, [pc, #528]	; (8006978 <_dtoa_r+0x38c>)
 8006768:	189b      	adds	r3, r3, r2
 800676a:	681a      	ldr	r2, [r3, #0]
 800676c:	685b      	ldr	r3, [r3, #4]
 800676e:	f7f9 fe73 	bl	8000458 <__aeabi_dcmplt>
 8006772:	2800      	cmp	r0, #0
 8006774:	d049      	beq.n	800680a <_dtoa_r+0x21e>
 8006776:	9b02      	ldr	r3, [sp, #8]
 8006778:	3b01      	subs	r3, #1
 800677a:	9302      	str	r3, [sp, #8]
 800677c:	2300      	movs	r3, #0
 800677e:	9316      	str	r3, [sp, #88]	; 0x58
 8006780:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8006782:	1b9e      	subs	r6, r3, r6
 8006784:	2300      	movs	r3, #0
 8006786:	930a      	str	r3, [sp, #40]	; 0x28
 8006788:	0033      	movs	r3, r6
 800678a:	3b01      	subs	r3, #1
 800678c:	930d      	str	r3, [sp, #52]	; 0x34
 800678e:	d504      	bpl.n	800679a <_dtoa_r+0x1ae>
 8006790:	2301      	movs	r3, #1
 8006792:	1b9b      	subs	r3, r3, r6
 8006794:	930a      	str	r3, [sp, #40]	; 0x28
 8006796:	2300      	movs	r3, #0
 8006798:	930d      	str	r3, [sp, #52]	; 0x34
 800679a:	9b02      	ldr	r3, [sp, #8]
 800679c:	2b00      	cmp	r3, #0
 800679e:	db36      	blt.n	800680e <_dtoa_r+0x222>
 80067a0:	9a02      	ldr	r2, [sp, #8]
 80067a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80067a4:	4694      	mov	ip, r2
 80067a6:	4463      	add	r3, ip
 80067a8:	930d      	str	r3, [sp, #52]	; 0x34
 80067aa:	2300      	movs	r3, #0
 80067ac:	9215      	str	r2, [sp, #84]	; 0x54
 80067ae:	930e      	str	r3, [sp, #56]	; 0x38
 80067b0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80067b2:	2401      	movs	r4, #1
 80067b4:	2b09      	cmp	r3, #9
 80067b6:	d864      	bhi.n	8006882 <_dtoa_r+0x296>
 80067b8:	2b05      	cmp	r3, #5
 80067ba:	dd02      	ble.n	80067c2 <_dtoa_r+0x1d6>
 80067bc:	2400      	movs	r4, #0
 80067be:	3b04      	subs	r3, #4
 80067c0:	9322      	str	r3, [sp, #136]	; 0x88
 80067c2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80067c4:	1e98      	subs	r0, r3, #2
 80067c6:	2803      	cmp	r0, #3
 80067c8:	d864      	bhi.n	8006894 <_dtoa_r+0x2a8>
 80067ca:	f7f9 fca5 	bl	8000118 <__gnu_thumb1_case_uqi>
 80067ce:	3829      	.short	0x3829
 80067d0:	5836      	.short	0x5836
 80067d2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80067d4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80067d6:	189e      	adds	r6, r3, r2
 80067d8:	4b68      	ldr	r3, [pc, #416]	; (800697c <_dtoa_r+0x390>)
 80067da:	18f2      	adds	r2, r6, r3
 80067dc:	2a20      	cmp	r2, #32
 80067de:	dd0f      	ble.n	8006800 <_dtoa_r+0x214>
 80067e0:	2340      	movs	r3, #64	; 0x40
 80067e2:	1a9b      	subs	r3, r3, r2
 80067e4:	409d      	lsls	r5, r3
 80067e6:	4b66      	ldr	r3, [pc, #408]	; (8006980 <_dtoa_r+0x394>)
 80067e8:	9802      	ldr	r0, [sp, #8]
 80067ea:	18f3      	adds	r3, r6, r3
 80067ec:	40d8      	lsrs	r0, r3
 80067ee:	4328      	orrs	r0, r5
 80067f0:	f7fb fe78 	bl	80024e4 <__aeabi_ui2d>
 80067f4:	2301      	movs	r3, #1
 80067f6:	4c63      	ldr	r4, [pc, #396]	; (8006984 <_dtoa_r+0x398>)
 80067f8:	3e01      	subs	r6, #1
 80067fa:	1909      	adds	r1, r1, r4
 80067fc:	9318      	str	r3, [sp, #96]	; 0x60
 80067fe:	e776      	b.n	80066ee <_dtoa_r+0x102>
 8006800:	2320      	movs	r3, #32
 8006802:	9802      	ldr	r0, [sp, #8]
 8006804:	1a9b      	subs	r3, r3, r2
 8006806:	4098      	lsls	r0, r3
 8006808:	e7f2      	b.n	80067f0 <_dtoa_r+0x204>
 800680a:	9016      	str	r0, [sp, #88]	; 0x58
 800680c:	e7b8      	b.n	8006780 <_dtoa_r+0x194>
 800680e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006810:	9a02      	ldr	r2, [sp, #8]
 8006812:	1a9b      	subs	r3, r3, r2
 8006814:	930a      	str	r3, [sp, #40]	; 0x28
 8006816:	4253      	negs	r3, r2
 8006818:	930e      	str	r3, [sp, #56]	; 0x38
 800681a:	2300      	movs	r3, #0
 800681c:	9315      	str	r3, [sp, #84]	; 0x54
 800681e:	e7c7      	b.n	80067b0 <_dtoa_r+0x1c4>
 8006820:	2300      	movs	r3, #0
 8006822:	930f      	str	r3, [sp, #60]	; 0x3c
 8006824:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006826:	930c      	str	r3, [sp, #48]	; 0x30
 8006828:	9307      	str	r3, [sp, #28]
 800682a:	2b00      	cmp	r3, #0
 800682c:	dc13      	bgt.n	8006856 <_dtoa_r+0x26a>
 800682e:	2301      	movs	r3, #1
 8006830:	001a      	movs	r2, r3
 8006832:	930c      	str	r3, [sp, #48]	; 0x30
 8006834:	9307      	str	r3, [sp, #28]
 8006836:	9223      	str	r2, [sp, #140]	; 0x8c
 8006838:	e00d      	b.n	8006856 <_dtoa_r+0x26a>
 800683a:	2301      	movs	r3, #1
 800683c:	e7f1      	b.n	8006822 <_dtoa_r+0x236>
 800683e:	2300      	movs	r3, #0
 8006840:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8006842:	930f      	str	r3, [sp, #60]	; 0x3c
 8006844:	4694      	mov	ip, r2
 8006846:	9b02      	ldr	r3, [sp, #8]
 8006848:	4463      	add	r3, ip
 800684a:	930c      	str	r3, [sp, #48]	; 0x30
 800684c:	3301      	adds	r3, #1
 800684e:	9307      	str	r3, [sp, #28]
 8006850:	2b00      	cmp	r3, #0
 8006852:	dc00      	bgt.n	8006856 <_dtoa_r+0x26a>
 8006854:	2301      	movs	r3, #1
 8006856:	2200      	movs	r2, #0
 8006858:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800685a:	6042      	str	r2, [r0, #4]
 800685c:	3204      	adds	r2, #4
 800685e:	0015      	movs	r5, r2
 8006860:	3514      	adds	r5, #20
 8006862:	6841      	ldr	r1, [r0, #4]
 8006864:	429d      	cmp	r5, r3
 8006866:	d919      	bls.n	800689c <_dtoa_r+0x2b0>
 8006868:	0038      	movs	r0, r7
 800686a:	f000 fcfb 	bl	8007264 <_Balloc>
 800686e:	9006      	str	r0, [sp, #24]
 8006870:	2800      	cmp	r0, #0
 8006872:	d117      	bne.n	80068a4 <_dtoa_r+0x2b8>
 8006874:	21d5      	movs	r1, #213	; 0xd5
 8006876:	0002      	movs	r2, r0
 8006878:	4b43      	ldr	r3, [pc, #268]	; (8006988 <_dtoa_r+0x39c>)
 800687a:	0049      	lsls	r1, r1, #1
 800687c:	e6cb      	b.n	8006616 <_dtoa_r+0x2a>
 800687e:	2301      	movs	r3, #1
 8006880:	e7de      	b.n	8006840 <_dtoa_r+0x254>
 8006882:	2300      	movs	r3, #0
 8006884:	940f      	str	r4, [sp, #60]	; 0x3c
 8006886:	9322      	str	r3, [sp, #136]	; 0x88
 8006888:	3b01      	subs	r3, #1
 800688a:	930c      	str	r3, [sp, #48]	; 0x30
 800688c:	9307      	str	r3, [sp, #28]
 800688e:	2200      	movs	r2, #0
 8006890:	3313      	adds	r3, #19
 8006892:	e7d0      	b.n	8006836 <_dtoa_r+0x24a>
 8006894:	2301      	movs	r3, #1
 8006896:	930f      	str	r3, [sp, #60]	; 0x3c
 8006898:	3b02      	subs	r3, #2
 800689a:	e7f6      	b.n	800688a <_dtoa_r+0x29e>
 800689c:	3101      	adds	r1, #1
 800689e:	6041      	str	r1, [r0, #4]
 80068a0:	0052      	lsls	r2, r2, #1
 80068a2:	e7dc      	b.n	800685e <_dtoa_r+0x272>
 80068a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80068a6:	9a06      	ldr	r2, [sp, #24]
 80068a8:	601a      	str	r2, [r3, #0]
 80068aa:	9b07      	ldr	r3, [sp, #28]
 80068ac:	2b0e      	cmp	r3, #14
 80068ae:	d900      	bls.n	80068b2 <_dtoa_r+0x2c6>
 80068b0:	e0eb      	b.n	8006a8a <_dtoa_r+0x49e>
 80068b2:	2c00      	cmp	r4, #0
 80068b4:	d100      	bne.n	80068b8 <_dtoa_r+0x2cc>
 80068b6:	e0e8      	b.n	8006a8a <_dtoa_r+0x49e>
 80068b8:	9b02      	ldr	r3, [sp, #8]
 80068ba:	2b00      	cmp	r3, #0
 80068bc:	dd68      	ble.n	8006990 <_dtoa_r+0x3a4>
 80068be:	001a      	movs	r2, r3
 80068c0:	210f      	movs	r1, #15
 80068c2:	4b2d      	ldr	r3, [pc, #180]	; (8006978 <_dtoa_r+0x38c>)
 80068c4:	400a      	ands	r2, r1
 80068c6:	00d2      	lsls	r2, r2, #3
 80068c8:	189b      	adds	r3, r3, r2
 80068ca:	681d      	ldr	r5, [r3, #0]
 80068cc:	685e      	ldr	r6, [r3, #4]
 80068ce:	9b02      	ldr	r3, [sp, #8]
 80068d0:	111c      	asrs	r4, r3, #4
 80068d2:	2302      	movs	r3, #2
 80068d4:	9310      	str	r3, [sp, #64]	; 0x40
 80068d6:	9b02      	ldr	r3, [sp, #8]
 80068d8:	05db      	lsls	r3, r3, #23
 80068da:	d50b      	bpl.n	80068f4 <_dtoa_r+0x308>
 80068dc:	4b2b      	ldr	r3, [pc, #172]	; (800698c <_dtoa_r+0x3a0>)
 80068de:	400c      	ands	r4, r1
 80068e0:	6a1a      	ldr	r2, [r3, #32]
 80068e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80068e4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80068e6:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80068e8:	f7fa fb78 	bl	8000fdc <__aeabi_ddiv>
 80068ec:	2303      	movs	r3, #3
 80068ee:	9008      	str	r0, [sp, #32]
 80068f0:	9109      	str	r1, [sp, #36]	; 0x24
 80068f2:	9310      	str	r3, [sp, #64]	; 0x40
 80068f4:	4b25      	ldr	r3, [pc, #148]	; (800698c <_dtoa_r+0x3a0>)
 80068f6:	9314      	str	r3, [sp, #80]	; 0x50
 80068f8:	2c00      	cmp	r4, #0
 80068fa:	d108      	bne.n	800690e <_dtoa_r+0x322>
 80068fc:	9808      	ldr	r0, [sp, #32]
 80068fe:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006900:	002a      	movs	r2, r5
 8006902:	0033      	movs	r3, r6
 8006904:	f7fa fb6a 	bl	8000fdc <__aeabi_ddiv>
 8006908:	9008      	str	r0, [sp, #32]
 800690a:	9109      	str	r1, [sp, #36]	; 0x24
 800690c:	e05c      	b.n	80069c8 <_dtoa_r+0x3dc>
 800690e:	2301      	movs	r3, #1
 8006910:	421c      	tst	r4, r3
 8006912:	d00b      	beq.n	800692c <_dtoa_r+0x340>
 8006914:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006916:	0028      	movs	r0, r5
 8006918:	3301      	adds	r3, #1
 800691a:	9310      	str	r3, [sp, #64]	; 0x40
 800691c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800691e:	0031      	movs	r1, r6
 8006920:	681a      	ldr	r2, [r3, #0]
 8006922:	685b      	ldr	r3, [r3, #4]
 8006924:	f7fa ff5c 	bl	80017e0 <__aeabi_dmul>
 8006928:	0005      	movs	r5, r0
 800692a:	000e      	movs	r6, r1
 800692c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800692e:	1064      	asrs	r4, r4, #1
 8006930:	3308      	adds	r3, #8
 8006932:	e7e0      	b.n	80068f6 <_dtoa_r+0x30a>
 8006934:	08008cc9 	.word	0x08008cc9
 8006938:	08008ce0 	.word	0x08008ce0
 800693c:	7ff00000 	.word	0x7ff00000
 8006940:	0000270f 	.word	0x0000270f
 8006944:	08008cc5 	.word	0x08008cc5
 8006948:	08008cc8 	.word	0x08008cc8
 800694c:	08008c98 	.word	0x08008c98
 8006950:	08008c99 	.word	0x08008c99
 8006954:	3ff00000 	.word	0x3ff00000
 8006958:	fffffc01 	.word	0xfffffc01
 800695c:	3ff80000 	.word	0x3ff80000
 8006960:	636f4361 	.word	0x636f4361
 8006964:	3fd287a7 	.word	0x3fd287a7
 8006968:	8b60c8b3 	.word	0x8b60c8b3
 800696c:	3fc68a28 	.word	0x3fc68a28
 8006970:	509f79fb 	.word	0x509f79fb
 8006974:	3fd34413 	.word	0x3fd34413
 8006978:	08008dd0 	.word	0x08008dd0
 800697c:	00000432 	.word	0x00000432
 8006980:	00000412 	.word	0x00000412
 8006984:	fe100000 	.word	0xfe100000
 8006988:	08008d3b 	.word	0x08008d3b
 800698c:	08008da8 	.word	0x08008da8
 8006990:	2302      	movs	r3, #2
 8006992:	9310      	str	r3, [sp, #64]	; 0x40
 8006994:	9b02      	ldr	r3, [sp, #8]
 8006996:	2b00      	cmp	r3, #0
 8006998:	d016      	beq.n	80069c8 <_dtoa_r+0x3dc>
 800699a:	9812      	ldr	r0, [sp, #72]	; 0x48
 800699c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800699e:	425c      	negs	r4, r3
 80069a0:	230f      	movs	r3, #15
 80069a2:	4ab6      	ldr	r2, [pc, #728]	; (8006c7c <_dtoa_r+0x690>)
 80069a4:	4023      	ands	r3, r4
 80069a6:	00db      	lsls	r3, r3, #3
 80069a8:	18d3      	adds	r3, r2, r3
 80069aa:	681a      	ldr	r2, [r3, #0]
 80069ac:	685b      	ldr	r3, [r3, #4]
 80069ae:	f7fa ff17 	bl	80017e0 <__aeabi_dmul>
 80069b2:	2601      	movs	r6, #1
 80069b4:	2300      	movs	r3, #0
 80069b6:	9008      	str	r0, [sp, #32]
 80069b8:	9109      	str	r1, [sp, #36]	; 0x24
 80069ba:	4db1      	ldr	r5, [pc, #708]	; (8006c80 <_dtoa_r+0x694>)
 80069bc:	1124      	asrs	r4, r4, #4
 80069be:	2c00      	cmp	r4, #0
 80069c0:	d000      	beq.n	80069c4 <_dtoa_r+0x3d8>
 80069c2:	e094      	b.n	8006aee <_dtoa_r+0x502>
 80069c4:	2b00      	cmp	r3, #0
 80069c6:	d19f      	bne.n	8006908 <_dtoa_r+0x31c>
 80069c8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80069ca:	2b00      	cmp	r3, #0
 80069cc:	d100      	bne.n	80069d0 <_dtoa_r+0x3e4>
 80069ce:	e09b      	b.n	8006b08 <_dtoa_r+0x51c>
 80069d0:	9c08      	ldr	r4, [sp, #32]
 80069d2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80069d4:	2200      	movs	r2, #0
 80069d6:	0020      	movs	r0, r4
 80069d8:	0029      	movs	r1, r5
 80069da:	4baa      	ldr	r3, [pc, #680]	; (8006c84 <_dtoa_r+0x698>)
 80069dc:	f7f9 fd3c 	bl	8000458 <__aeabi_dcmplt>
 80069e0:	2800      	cmp	r0, #0
 80069e2:	d100      	bne.n	80069e6 <_dtoa_r+0x3fa>
 80069e4:	e090      	b.n	8006b08 <_dtoa_r+0x51c>
 80069e6:	9b07      	ldr	r3, [sp, #28]
 80069e8:	2b00      	cmp	r3, #0
 80069ea:	d100      	bne.n	80069ee <_dtoa_r+0x402>
 80069ec:	e08c      	b.n	8006b08 <_dtoa_r+0x51c>
 80069ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80069f0:	2b00      	cmp	r3, #0
 80069f2:	dd46      	ble.n	8006a82 <_dtoa_r+0x496>
 80069f4:	9b02      	ldr	r3, [sp, #8]
 80069f6:	2200      	movs	r2, #0
 80069f8:	0020      	movs	r0, r4
 80069fa:	0029      	movs	r1, r5
 80069fc:	1e5e      	subs	r6, r3, #1
 80069fe:	4ba2      	ldr	r3, [pc, #648]	; (8006c88 <_dtoa_r+0x69c>)
 8006a00:	f7fa feee 	bl	80017e0 <__aeabi_dmul>
 8006a04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006a06:	9008      	str	r0, [sp, #32]
 8006a08:	9109      	str	r1, [sp, #36]	; 0x24
 8006a0a:	3301      	adds	r3, #1
 8006a0c:	9310      	str	r3, [sp, #64]	; 0x40
 8006a0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006a10:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006a12:	9c08      	ldr	r4, [sp, #32]
 8006a14:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8006a16:	9314      	str	r3, [sp, #80]	; 0x50
 8006a18:	f7fb fd34 	bl	8002484 <__aeabi_i2d>
 8006a1c:	0022      	movs	r2, r4
 8006a1e:	002b      	movs	r3, r5
 8006a20:	f7fa fede 	bl	80017e0 <__aeabi_dmul>
 8006a24:	2200      	movs	r2, #0
 8006a26:	4b99      	ldr	r3, [pc, #612]	; (8006c8c <_dtoa_r+0x6a0>)
 8006a28:	f7f9 ff9c 	bl	8000964 <__aeabi_dadd>
 8006a2c:	9010      	str	r0, [sp, #64]	; 0x40
 8006a2e:	9111      	str	r1, [sp, #68]	; 0x44
 8006a30:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006a32:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006a34:	9208      	str	r2, [sp, #32]
 8006a36:	9309      	str	r3, [sp, #36]	; 0x24
 8006a38:	4a95      	ldr	r2, [pc, #596]	; (8006c90 <_dtoa_r+0x6a4>)
 8006a3a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006a3c:	4694      	mov	ip, r2
 8006a3e:	4463      	add	r3, ip
 8006a40:	9317      	str	r3, [sp, #92]	; 0x5c
 8006a42:	9309      	str	r3, [sp, #36]	; 0x24
 8006a44:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006a46:	2b00      	cmp	r3, #0
 8006a48:	d161      	bne.n	8006b0e <_dtoa_r+0x522>
 8006a4a:	2200      	movs	r2, #0
 8006a4c:	0020      	movs	r0, r4
 8006a4e:	0029      	movs	r1, r5
 8006a50:	4b90      	ldr	r3, [pc, #576]	; (8006c94 <_dtoa_r+0x6a8>)
 8006a52:	f7fb f931 	bl	8001cb8 <__aeabi_dsub>
 8006a56:	9a08      	ldr	r2, [sp, #32]
 8006a58:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8006a5a:	0004      	movs	r4, r0
 8006a5c:	000d      	movs	r5, r1
 8006a5e:	f7f9 fd0f 	bl	8000480 <__aeabi_dcmpgt>
 8006a62:	2800      	cmp	r0, #0
 8006a64:	d000      	beq.n	8006a68 <_dtoa_r+0x47c>
 8006a66:	e2af      	b.n	8006fc8 <_dtoa_r+0x9dc>
 8006a68:	488b      	ldr	r0, [pc, #556]	; (8006c98 <_dtoa_r+0x6ac>)
 8006a6a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006a6c:	4684      	mov	ip, r0
 8006a6e:	4461      	add	r1, ip
 8006a70:	000b      	movs	r3, r1
 8006a72:	0020      	movs	r0, r4
 8006a74:	0029      	movs	r1, r5
 8006a76:	9a08      	ldr	r2, [sp, #32]
 8006a78:	f7f9 fcee 	bl	8000458 <__aeabi_dcmplt>
 8006a7c:	2800      	cmp	r0, #0
 8006a7e:	d000      	beq.n	8006a82 <_dtoa_r+0x496>
 8006a80:	e29f      	b.n	8006fc2 <_dtoa_r+0x9d6>
 8006a82:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006a84:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8006a86:	9308      	str	r3, [sp, #32]
 8006a88:	9409      	str	r4, [sp, #36]	; 0x24
 8006a8a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8006a8c:	2b00      	cmp	r3, #0
 8006a8e:	da00      	bge.n	8006a92 <_dtoa_r+0x4a6>
 8006a90:	e172      	b.n	8006d78 <_dtoa_r+0x78c>
 8006a92:	9a02      	ldr	r2, [sp, #8]
 8006a94:	2a0e      	cmp	r2, #14
 8006a96:	dd00      	ble.n	8006a9a <_dtoa_r+0x4ae>
 8006a98:	e16e      	b.n	8006d78 <_dtoa_r+0x78c>
 8006a9a:	4b78      	ldr	r3, [pc, #480]	; (8006c7c <_dtoa_r+0x690>)
 8006a9c:	00d2      	lsls	r2, r2, #3
 8006a9e:	189b      	adds	r3, r3, r2
 8006aa0:	685c      	ldr	r4, [r3, #4]
 8006aa2:	681b      	ldr	r3, [r3, #0]
 8006aa4:	930a      	str	r3, [sp, #40]	; 0x28
 8006aa6:	940b      	str	r4, [sp, #44]	; 0x2c
 8006aa8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006aaa:	2b00      	cmp	r3, #0
 8006aac:	db00      	blt.n	8006ab0 <_dtoa_r+0x4c4>
 8006aae:	e0f7      	b.n	8006ca0 <_dtoa_r+0x6b4>
 8006ab0:	9b07      	ldr	r3, [sp, #28]
 8006ab2:	2b00      	cmp	r3, #0
 8006ab4:	dd00      	ble.n	8006ab8 <_dtoa_r+0x4cc>
 8006ab6:	e0f3      	b.n	8006ca0 <_dtoa_r+0x6b4>
 8006ab8:	d000      	beq.n	8006abc <_dtoa_r+0x4d0>
 8006aba:	e282      	b.n	8006fc2 <_dtoa_r+0x9d6>
 8006abc:	980a      	ldr	r0, [sp, #40]	; 0x28
 8006abe:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006ac0:	2200      	movs	r2, #0
 8006ac2:	4b74      	ldr	r3, [pc, #464]	; (8006c94 <_dtoa_r+0x6a8>)
 8006ac4:	f7fa fe8c 	bl	80017e0 <__aeabi_dmul>
 8006ac8:	9a08      	ldr	r2, [sp, #32]
 8006aca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006acc:	f7f9 fce2 	bl	8000494 <__aeabi_dcmpge>
 8006ad0:	9e07      	ldr	r6, [sp, #28]
 8006ad2:	0035      	movs	r5, r6
 8006ad4:	2800      	cmp	r0, #0
 8006ad6:	d000      	beq.n	8006ada <_dtoa_r+0x4ee>
 8006ad8:	e259      	b.n	8006f8e <_dtoa_r+0x9a2>
 8006ada:	9b06      	ldr	r3, [sp, #24]
 8006adc:	9a06      	ldr	r2, [sp, #24]
 8006ade:	3301      	adds	r3, #1
 8006ae0:	9308      	str	r3, [sp, #32]
 8006ae2:	2331      	movs	r3, #49	; 0x31
 8006ae4:	7013      	strb	r3, [r2, #0]
 8006ae6:	9b02      	ldr	r3, [sp, #8]
 8006ae8:	3301      	adds	r3, #1
 8006aea:	9302      	str	r3, [sp, #8]
 8006aec:	e254      	b.n	8006f98 <_dtoa_r+0x9ac>
 8006aee:	4234      	tst	r4, r6
 8006af0:	d007      	beq.n	8006b02 <_dtoa_r+0x516>
 8006af2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006af4:	3301      	adds	r3, #1
 8006af6:	9310      	str	r3, [sp, #64]	; 0x40
 8006af8:	682a      	ldr	r2, [r5, #0]
 8006afa:	686b      	ldr	r3, [r5, #4]
 8006afc:	f7fa fe70 	bl	80017e0 <__aeabi_dmul>
 8006b00:	0033      	movs	r3, r6
 8006b02:	1064      	asrs	r4, r4, #1
 8006b04:	3508      	adds	r5, #8
 8006b06:	e75a      	b.n	80069be <_dtoa_r+0x3d2>
 8006b08:	9e02      	ldr	r6, [sp, #8]
 8006b0a:	9b07      	ldr	r3, [sp, #28]
 8006b0c:	e780      	b.n	8006a10 <_dtoa_r+0x424>
 8006b0e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006b10:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006b12:	1e5a      	subs	r2, r3, #1
 8006b14:	4b59      	ldr	r3, [pc, #356]	; (8006c7c <_dtoa_r+0x690>)
 8006b16:	00d2      	lsls	r2, r2, #3
 8006b18:	189b      	adds	r3, r3, r2
 8006b1a:	681a      	ldr	r2, [r3, #0]
 8006b1c:	685b      	ldr	r3, [r3, #4]
 8006b1e:	2900      	cmp	r1, #0
 8006b20:	d051      	beq.n	8006bc6 <_dtoa_r+0x5da>
 8006b22:	2000      	movs	r0, #0
 8006b24:	495d      	ldr	r1, [pc, #372]	; (8006c9c <_dtoa_r+0x6b0>)
 8006b26:	f7fa fa59 	bl	8000fdc <__aeabi_ddiv>
 8006b2a:	9a08      	ldr	r2, [sp, #32]
 8006b2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006b2e:	f7fb f8c3 	bl	8001cb8 <__aeabi_dsub>
 8006b32:	9a06      	ldr	r2, [sp, #24]
 8006b34:	9b06      	ldr	r3, [sp, #24]
 8006b36:	4694      	mov	ip, r2
 8006b38:	9317      	str	r3, [sp, #92]	; 0x5c
 8006b3a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006b3c:	9010      	str	r0, [sp, #64]	; 0x40
 8006b3e:	9111      	str	r1, [sp, #68]	; 0x44
 8006b40:	4463      	add	r3, ip
 8006b42:	9319      	str	r3, [sp, #100]	; 0x64
 8006b44:	0029      	movs	r1, r5
 8006b46:	0020      	movs	r0, r4
 8006b48:	f7fb fc66 	bl	8002418 <__aeabi_d2iz>
 8006b4c:	9014      	str	r0, [sp, #80]	; 0x50
 8006b4e:	f7fb fc99 	bl	8002484 <__aeabi_i2d>
 8006b52:	0002      	movs	r2, r0
 8006b54:	000b      	movs	r3, r1
 8006b56:	0020      	movs	r0, r4
 8006b58:	0029      	movs	r1, r5
 8006b5a:	f7fb f8ad 	bl	8001cb8 <__aeabi_dsub>
 8006b5e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8006b60:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8006b62:	3301      	adds	r3, #1
 8006b64:	9308      	str	r3, [sp, #32]
 8006b66:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006b68:	0004      	movs	r4, r0
 8006b6a:	3330      	adds	r3, #48	; 0x30
 8006b6c:	7013      	strb	r3, [r2, #0]
 8006b6e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006b70:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006b72:	000d      	movs	r5, r1
 8006b74:	f7f9 fc70 	bl	8000458 <__aeabi_dcmplt>
 8006b78:	2800      	cmp	r0, #0
 8006b7a:	d175      	bne.n	8006c68 <_dtoa_r+0x67c>
 8006b7c:	0022      	movs	r2, r4
 8006b7e:	002b      	movs	r3, r5
 8006b80:	2000      	movs	r0, #0
 8006b82:	4940      	ldr	r1, [pc, #256]	; (8006c84 <_dtoa_r+0x698>)
 8006b84:	f7fb f898 	bl	8001cb8 <__aeabi_dsub>
 8006b88:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006b8a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006b8c:	f7f9 fc64 	bl	8000458 <__aeabi_dcmplt>
 8006b90:	2800      	cmp	r0, #0
 8006b92:	d000      	beq.n	8006b96 <_dtoa_r+0x5aa>
 8006b94:	e0d2      	b.n	8006d3c <_dtoa_r+0x750>
 8006b96:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8006b98:	9a08      	ldr	r2, [sp, #32]
 8006b9a:	4293      	cmp	r3, r2
 8006b9c:	d100      	bne.n	8006ba0 <_dtoa_r+0x5b4>
 8006b9e:	e770      	b.n	8006a82 <_dtoa_r+0x496>
 8006ba0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006ba2:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006ba4:	2200      	movs	r2, #0
 8006ba6:	4b38      	ldr	r3, [pc, #224]	; (8006c88 <_dtoa_r+0x69c>)
 8006ba8:	f7fa fe1a 	bl	80017e0 <__aeabi_dmul>
 8006bac:	4b36      	ldr	r3, [pc, #216]	; (8006c88 <_dtoa_r+0x69c>)
 8006bae:	9010      	str	r0, [sp, #64]	; 0x40
 8006bb0:	9111      	str	r1, [sp, #68]	; 0x44
 8006bb2:	2200      	movs	r2, #0
 8006bb4:	0020      	movs	r0, r4
 8006bb6:	0029      	movs	r1, r5
 8006bb8:	f7fa fe12 	bl	80017e0 <__aeabi_dmul>
 8006bbc:	9b08      	ldr	r3, [sp, #32]
 8006bbe:	0004      	movs	r4, r0
 8006bc0:	000d      	movs	r5, r1
 8006bc2:	9317      	str	r3, [sp, #92]	; 0x5c
 8006bc4:	e7be      	b.n	8006b44 <_dtoa_r+0x558>
 8006bc6:	9808      	ldr	r0, [sp, #32]
 8006bc8:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006bca:	f7fa fe09 	bl	80017e0 <__aeabi_dmul>
 8006bce:	9a06      	ldr	r2, [sp, #24]
 8006bd0:	9b06      	ldr	r3, [sp, #24]
 8006bd2:	4694      	mov	ip, r2
 8006bd4:	9308      	str	r3, [sp, #32]
 8006bd6:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006bd8:	9010      	str	r0, [sp, #64]	; 0x40
 8006bda:	9111      	str	r1, [sp, #68]	; 0x44
 8006bdc:	4463      	add	r3, ip
 8006bde:	9319      	str	r3, [sp, #100]	; 0x64
 8006be0:	0029      	movs	r1, r5
 8006be2:	0020      	movs	r0, r4
 8006be4:	f7fb fc18 	bl	8002418 <__aeabi_d2iz>
 8006be8:	9017      	str	r0, [sp, #92]	; 0x5c
 8006bea:	f7fb fc4b 	bl	8002484 <__aeabi_i2d>
 8006bee:	0002      	movs	r2, r0
 8006bf0:	000b      	movs	r3, r1
 8006bf2:	0020      	movs	r0, r4
 8006bf4:	0029      	movs	r1, r5
 8006bf6:	f7fb f85f 	bl	8001cb8 <__aeabi_dsub>
 8006bfa:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8006bfc:	9a08      	ldr	r2, [sp, #32]
 8006bfe:	3330      	adds	r3, #48	; 0x30
 8006c00:	7013      	strb	r3, [r2, #0]
 8006c02:	0013      	movs	r3, r2
 8006c04:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8006c06:	3301      	adds	r3, #1
 8006c08:	0004      	movs	r4, r0
 8006c0a:	000d      	movs	r5, r1
 8006c0c:	9308      	str	r3, [sp, #32]
 8006c0e:	4293      	cmp	r3, r2
 8006c10:	d12c      	bne.n	8006c6c <_dtoa_r+0x680>
 8006c12:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006c14:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006c16:	9a06      	ldr	r2, [sp, #24]
 8006c18:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006c1a:	4694      	mov	ip, r2
 8006c1c:	4463      	add	r3, ip
 8006c1e:	2200      	movs	r2, #0
 8006c20:	9308      	str	r3, [sp, #32]
 8006c22:	4b1e      	ldr	r3, [pc, #120]	; (8006c9c <_dtoa_r+0x6b0>)
 8006c24:	f7f9 fe9e 	bl	8000964 <__aeabi_dadd>
 8006c28:	0002      	movs	r2, r0
 8006c2a:	000b      	movs	r3, r1
 8006c2c:	0020      	movs	r0, r4
 8006c2e:	0029      	movs	r1, r5
 8006c30:	f7f9 fc26 	bl	8000480 <__aeabi_dcmpgt>
 8006c34:	2800      	cmp	r0, #0
 8006c36:	d000      	beq.n	8006c3a <_dtoa_r+0x64e>
 8006c38:	e080      	b.n	8006d3c <_dtoa_r+0x750>
 8006c3a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006c3c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006c3e:	2000      	movs	r0, #0
 8006c40:	4916      	ldr	r1, [pc, #88]	; (8006c9c <_dtoa_r+0x6b0>)
 8006c42:	f7fb f839 	bl	8001cb8 <__aeabi_dsub>
 8006c46:	0002      	movs	r2, r0
 8006c48:	000b      	movs	r3, r1
 8006c4a:	0020      	movs	r0, r4
 8006c4c:	0029      	movs	r1, r5
 8006c4e:	f7f9 fc03 	bl	8000458 <__aeabi_dcmplt>
 8006c52:	2800      	cmp	r0, #0
 8006c54:	d100      	bne.n	8006c58 <_dtoa_r+0x66c>
 8006c56:	e714      	b.n	8006a82 <_dtoa_r+0x496>
 8006c58:	9b08      	ldr	r3, [sp, #32]
 8006c5a:	001a      	movs	r2, r3
 8006c5c:	3a01      	subs	r2, #1
 8006c5e:	9208      	str	r2, [sp, #32]
 8006c60:	7812      	ldrb	r2, [r2, #0]
 8006c62:	2a30      	cmp	r2, #48	; 0x30
 8006c64:	d0f8      	beq.n	8006c58 <_dtoa_r+0x66c>
 8006c66:	9308      	str	r3, [sp, #32]
 8006c68:	9602      	str	r6, [sp, #8]
 8006c6a:	e055      	b.n	8006d18 <_dtoa_r+0x72c>
 8006c6c:	2200      	movs	r2, #0
 8006c6e:	4b06      	ldr	r3, [pc, #24]	; (8006c88 <_dtoa_r+0x69c>)
 8006c70:	f7fa fdb6 	bl	80017e0 <__aeabi_dmul>
 8006c74:	0004      	movs	r4, r0
 8006c76:	000d      	movs	r5, r1
 8006c78:	e7b2      	b.n	8006be0 <_dtoa_r+0x5f4>
 8006c7a:	46c0      	nop			; (mov r8, r8)
 8006c7c:	08008dd0 	.word	0x08008dd0
 8006c80:	08008da8 	.word	0x08008da8
 8006c84:	3ff00000 	.word	0x3ff00000
 8006c88:	40240000 	.word	0x40240000
 8006c8c:	401c0000 	.word	0x401c0000
 8006c90:	fcc00000 	.word	0xfcc00000
 8006c94:	40140000 	.word	0x40140000
 8006c98:	7cc00000 	.word	0x7cc00000
 8006c9c:	3fe00000 	.word	0x3fe00000
 8006ca0:	9b07      	ldr	r3, [sp, #28]
 8006ca2:	9e06      	ldr	r6, [sp, #24]
 8006ca4:	3b01      	subs	r3, #1
 8006ca6:	199b      	adds	r3, r3, r6
 8006ca8:	930c      	str	r3, [sp, #48]	; 0x30
 8006caa:	9c08      	ldr	r4, [sp, #32]
 8006cac:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8006cae:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006cb0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006cb2:	0020      	movs	r0, r4
 8006cb4:	0029      	movs	r1, r5
 8006cb6:	f7fa f991 	bl	8000fdc <__aeabi_ddiv>
 8006cba:	f7fb fbad 	bl	8002418 <__aeabi_d2iz>
 8006cbe:	9007      	str	r0, [sp, #28]
 8006cc0:	f7fb fbe0 	bl	8002484 <__aeabi_i2d>
 8006cc4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006cc6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006cc8:	f7fa fd8a 	bl	80017e0 <__aeabi_dmul>
 8006ccc:	0002      	movs	r2, r0
 8006cce:	000b      	movs	r3, r1
 8006cd0:	0020      	movs	r0, r4
 8006cd2:	0029      	movs	r1, r5
 8006cd4:	f7fa fff0 	bl	8001cb8 <__aeabi_dsub>
 8006cd8:	0033      	movs	r3, r6
 8006cda:	9a07      	ldr	r2, [sp, #28]
 8006cdc:	3601      	adds	r6, #1
 8006cde:	3230      	adds	r2, #48	; 0x30
 8006ce0:	701a      	strb	r2, [r3, #0]
 8006ce2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006ce4:	9608      	str	r6, [sp, #32]
 8006ce6:	429a      	cmp	r2, r3
 8006ce8:	d139      	bne.n	8006d5e <_dtoa_r+0x772>
 8006cea:	0002      	movs	r2, r0
 8006cec:	000b      	movs	r3, r1
 8006cee:	f7f9 fe39 	bl	8000964 <__aeabi_dadd>
 8006cf2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006cf4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006cf6:	0004      	movs	r4, r0
 8006cf8:	000d      	movs	r5, r1
 8006cfa:	f7f9 fbc1 	bl	8000480 <__aeabi_dcmpgt>
 8006cfe:	2800      	cmp	r0, #0
 8006d00:	d11b      	bne.n	8006d3a <_dtoa_r+0x74e>
 8006d02:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006d04:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006d06:	0020      	movs	r0, r4
 8006d08:	0029      	movs	r1, r5
 8006d0a:	f7f9 fb9f 	bl	800044c <__aeabi_dcmpeq>
 8006d0e:	2800      	cmp	r0, #0
 8006d10:	d002      	beq.n	8006d18 <_dtoa_r+0x72c>
 8006d12:	9b07      	ldr	r3, [sp, #28]
 8006d14:	07db      	lsls	r3, r3, #31
 8006d16:	d410      	bmi.n	8006d3a <_dtoa_r+0x74e>
 8006d18:	0038      	movs	r0, r7
 8006d1a:	9905      	ldr	r1, [sp, #20]
 8006d1c:	f000 fae6 	bl	80072ec <_Bfree>
 8006d20:	2300      	movs	r3, #0
 8006d22:	9a08      	ldr	r2, [sp, #32]
 8006d24:	9802      	ldr	r0, [sp, #8]
 8006d26:	7013      	strb	r3, [r2, #0]
 8006d28:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8006d2a:	3001      	adds	r0, #1
 8006d2c:	6018      	str	r0, [r3, #0]
 8006d2e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8006d30:	2b00      	cmp	r3, #0
 8006d32:	d100      	bne.n	8006d36 <_dtoa_r+0x74a>
 8006d34:	e4a6      	b.n	8006684 <_dtoa_r+0x98>
 8006d36:	601a      	str	r2, [r3, #0]
 8006d38:	e4a4      	b.n	8006684 <_dtoa_r+0x98>
 8006d3a:	9e02      	ldr	r6, [sp, #8]
 8006d3c:	9b08      	ldr	r3, [sp, #32]
 8006d3e:	9308      	str	r3, [sp, #32]
 8006d40:	3b01      	subs	r3, #1
 8006d42:	781a      	ldrb	r2, [r3, #0]
 8006d44:	2a39      	cmp	r2, #57	; 0x39
 8006d46:	d106      	bne.n	8006d56 <_dtoa_r+0x76a>
 8006d48:	9a06      	ldr	r2, [sp, #24]
 8006d4a:	429a      	cmp	r2, r3
 8006d4c:	d1f7      	bne.n	8006d3e <_dtoa_r+0x752>
 8006d4e:	2230      	movs	r2, #48	; 0x30
 8006d50:	9906      	ldr	r1, [sp, #24]
 8006d52:	3601      	adds	r6, #1
 8006d54:	700a      	strb	r2, [r1, #0]
 8006d56:	781a      	ldrb	r2, [r3, #0]
 8006d58:	3201      	adds	r2, #1
 8006d5a:	701a      	strb	r2, [r3, #0]
 8006d5c:	e784      	b.n	8006c68 <_dtoa_r+0x67c>
 8006d5e:	2200      	movs	r2, #0
 8006d60:	4baa      	ldr	r3, [pc, #680]	; (800700c <_dtoa_r+0xa20>)
 8006d62:	f7fa fd3d 	bl	80017e0 <__aeabi_dmul>
 8006d66:	2200      	movs	r2, #0
 8006d68:	2300      	movs	r3, #0
 8006d6a:	0004      	movs	r4, r0
 8006d6c:	000d      	movs	r5, r1
 8006d6e:	f7f9 fb6d 	bl	800044c <__aeabi_dcmpeq>
 8006d72:	2800      	cmp	r0, #0
 8006d74:	d09b      	beq.n	8006cae <_dtoa_r+0x6c2>
 8006d76:	e7cf      	b.n	8006d18 <_dtoa_r+0x72c>
 8006d78:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8006d7a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8006d7c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8006d7e:	2d00      	cmp	r5, #0
 8006d80:	d012      	beq.n	8006da8 <_dtoa_r+0x7bc>
 8006d82:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8006d84:	2a01      	cmp	r2, #1
 8006d86:	dc66      	bgt.n	8006e56 <_dtoa_r+0x86a>
 8006d88:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8006d8a:	2a00      	cmp	r2, #0
 8006d8c:	d05d      	beq.n	8006e4a <_dtoa_r+0x85e>
 8006d8e:	4aa0      	ldr	r2, [pc, #640]	; (8007010 <_dtoa_r+0xa24>)
 8006d90:	189b      	adds	r3, r3, r2
 8006d92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006d94:	2101      	movs	r1, #1
 8006d96:	18d2      	adds	r2, r2, r3
 8006d98:	920a      	str	r2, [sp, #40]	; 0x28
 8006d9a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006d9c:	0038      	movs	r0, r7
 8006d9e:	18d3      	adds	r3, r2, r3
 8006da0:	930d      	str	r3, [sp, #52]	; 0x34
 8006da2:	f000 fb53 	bl	800744c <__i2b>
 8006da6:	0005      	movs	r5, r0
 8006da8:	2c00      	cmp	r4, #0
 8006daa:	dd0e      	ble.n	8006dca <_dtoa_r+0x7de>
 8006dac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006dae:	2b00      	cmp	r3, #0
 8006db0:	dd0b      	ble.n	8006dca <_dtoa_r+0x7de>
 8006db2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006db4:	0023      	movs	r3, r4
 8006db6:	4294      	cmp	r4, r2
 8006db8:	dd00      	ble.n	8006dbc <_dtoa_r+0x7d0>
 8006dba:	0013      	movs	r3, r2
 8006dbc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006dbe:	1ae4      	subs	r4, r4, r3
 8006dc0:	1ad2      	subs	r2, r2, r3
 8006dc2:	920a      	str	r2, [sp, #40]	; 0x28
 8006dc4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006dc6:	1ad3      	subs	r3, r2, r3
 8006dc8:	930d      	str	r3, [sp, #52]	; 0x34
 8006dca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006dcc:	2b00      	cmp	r3, #0
 8006dce:	d01f      	beq.n	8006e10 <_dtoa_r+0x824>
 8006dd0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006dd2:	2b00      	cmp	r3, #0
 8006dd4:	d054      	beq.n	8006e80 <_dtoa_r+0x894>
 8006dd6:	2e00      	cmp	r6, #0
 8006dd8:	dd11      	ble.n	8006dfe <_dtoa_r+0x812>
 8006dda:	0029      	movs	r1, r5
 8006ddc:	0032      	movs	r2, r6
 8006dde:	0038      	movs	r0, r7
 8006de0:	f000 fbfa 	bl	80075d8 <__pow5mult>
 8006de4:	9a05      	ldr	r2, [sp, #20]
 8006de6:	0001      	movs	r1, r0
 8006de8:	0005      	movs	r5, r0
 8006dea:	0038      	movs	r0, r7
 8006dec:	f000 fb44 	bl	8007478 <__multiply>
 8006df0:	9905      	ldr	r1, [sp, #20]
 8006df2:	9014      	str	r0, [sp, #80]	; 0x50
 8006df4:	0038      	movs	r0, r7
 8006df6:	f000 fa79 	bl	80072ec <_Bfree>
 8006dfa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006dfc:	9305      	str	r3, [sp, #20]
 8006dfe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006e00:	1b9a      	subs	r2, r3, r6
 8006e02:	42b3      	cmp	r3, r6
 8006e04:	d004      	beq.n	8006e10 <_dtoa_r+0x824>
 8006e06:	0038      	movs	r0, r7
 8006e08:	9905      	ldr	r1, [sp, #20]
 8006e0a:	f000 fbe5 	bl	80075d8 <__pow5mult>
 8006e0e:	9005      	str	r0, [sp, #20]
 8006e10:	2101      	movs	r1, #1
 8006e12:	0038      	movs	r0, r7
 8006e14:	f000 fb1a 	bl	800744c <__i2b>
 8006e18:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006e1a:	0006      	movs	r6, r0
 8006e1c:	2b00      	cmp	r3, #0
 8006e1e:	dd31      	ble.n	8006e84 <_dtoa_r+0x898>
 8006e20:	001a      	movs	r2, r3
 8006e22:	0001      	movs	r1, r0
 8006e24:	0038      	movs	r0, r7
 8006e26:	f000 fbd7 	bl	80075d8 <__pow5mult>
 8006e2a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006e2c:	0006      	movs	r6, r0
 8006e2e:	2b01      	cmp	r3, #1
 8006e30:	dd2d      	ble.n	8006e8e <_dtoa_r+0x8a2>
 8006e32:	2300      	movs	r3, #0
 8006e34:	930e      	str	r3, [sp, #56]	; 0x38
 8006e36:	6933      	ldr	r3, [r6, #16]
 8006e38:	3303      	adds	r3, #3
 8006e3a:	009b      	lsls	r3, r3, #2
 8006e3c:	18f3      	adds	r3, r6, r3
 8006e3e:	6858      	ldr	r0, [r3, #4]
 8006e40:	f000 fabc 	bl	80073bc <__hi0bits>
 8006e44:	2320      	movs	r3, #32
 8006e46:	1a18      	subs	r0, r3, r0
 8006e48:	e039      	b.n	8006ebe <_dtoa_r+0x8d2>
 8006e4a:	2336      	movs	r3, #54	; 0x36
 8006e4c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8006e4e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8006e50:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8006e52:	1a9b      	subs	r3, r3, r2
 8006e54:	e79d      	b.n	8006d92 <_dtoa_r+0x7a6>
 8006e56:	9b07      	ldr	r3, [sp, #28]
 8006e58:	1e5e      	subs	r6, r3, #1
 8006e5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006e5c:	42b3      	cmp	r3, r6
 8006e5e:	db07      	blt.n	8006e70 <_dtoa_r+0x884>
 8006e60:	1b9e      	subs	r6, r3, r6
 8006e62:	9b07      	ldr	r3, [sp, #28]
 8006e64:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8006e66:	2b00      	cmp	r3, #0
 8006e68:	da93      	bge.n	8006d92 <_dtoa_r+0x7a6>
 8006e6a:	1ae4      	subs	r4, r4, r3
 8006e6c:	2300      	movs	r3, #0
 8006e6e:	e790      	b.n	8006d92 <_dtoa_r+0x7a6>
 8006e70:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006e72:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8006e74:	1af3      	subs	r3, r6, r3
 8006e76:	18d3      	adds	r3, r2, r3
 8006e78:	960e      	str	r6, [sp, #56]	; 0x38
 8006e7a:	9315      	str	r3, [sp, #84]	; 0x54
 8006e7c:	2600      	movs	r6, #0
 8006e7e:	e7f0      	b.n	8006e62 <_dtoa_r+0x876>
 8006e80:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8006e82:	e7c0      	b.n	8006e06 <_dtoa_r+0x81a>
 8006e84:	2300      	movs	r3, #0
 8006e86:	930e      	str	r3, [sp, #56]	; 0x38
 8006e88:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006e8a:	2b01      	cmp	r3, #1
 8006e8c:	dc13      	bgt.n	8006eb6 <_dtoa_r+0x8ca>
 8006e8e:	2300      	movs	r3, #0
 8006e90:	930e      	str	r3, [sp, #56]	; 0x38
 8006e92:	9b08      	ldr	r3, [sp, #32]
 8006e94:	2b00      	cmp	r3, #0
 8006e96:	d10e      	bne.n	8006eb6 <_dtoa_r+0x8ca>
 8006e98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006e9a:	031b      	lsls	r3, r3, #12
 8006e9c:	d10b      	bne.n	8006eb6 <_dtoa_r+0x8ca>
 8006e9e:	4b5d      	ldr	r3, [pc, #372]	; (8007014 <_dtoa_r+0xa28>)
 8006ea0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006ea2:	4213      	tst	r3, r2
 8006ea4:	d007      	beq.n	8006eb6 <_dtoa_r+0x8ca>
 8006ea6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006ea8:	3301      	adds	r3, #1
 8006eaa:	930a      	str	r3, [sp, #40]	; 0x28
 8006eac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006eae:	3301      	adds	r3, #1
 8006eb0:	930d      	str	r3, [sp, #52]	; 0x34
 8006eb2:	2301      	movs	r3, #1
 8006eb4:	930e      	str	r3, [sp, #56]	; 0x38
 8006eb6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8006eb8:	2001      	movs	r0, #1
 8006eba:	2b00      	cmp	r3, #0
 8006ebc:	d1bb      	bne.n	8006e36 <_dtoa_r+0x84a>
 8006ebe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006ec0:	221f      	movs	r2, #31
 8006ec2:	1818      	adds	r0, r3, r0
 8006ec4:	0003      	movs	r3, r0
 8006ec6:	4013      	ands	r3, r2
 8006ec8:	4210      	tst	r0, r2
 8006eca:	d046      	beq.n	8006f5a <_dtoa_r+0x96e>
 8006ecc:	3201      	adds	r2, #1
 8006ece:	1ad2      	subs	r2, r2, r3
 8006ed0:	2a04      	cmp	r2, #4
 8006ed2:	dd3f      	ble.n	8006f54 <_dtoa_r+0x968>
 8006ed4:	221c      	movs	r2, #28
 8006ed6:	1ad3      	subs	r3, r2, r3
 8006ed8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006eda:	18e4      	adds	r4, r4, r3
 8006edc:	18d2      	adds	r2, r2, r3
 8006ede:	920a      	str	r2, [sp, #40]	; 0x28
 8006ee0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006ee2:	18d3      	adds	r3, r2, r3
 8006ee4:	930d      	str	r3, [sp, #52]	; 0x34
 8006ee6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006ee8:	2b00      	cmp	r3, #0
 8006eea:	dd05      	ble.n	8006ef8 <_dtoa_r+0x90c>
 8006eec:	001a      	movs	r2, r3
 8006eee:	0038      	movs	r0, r7
 8006ef0:	9905      	ldr	r1, [sp, #20]
 8006ef2:	f000 fbcd 	bl	8007690 <__lshift>
 8006ef6:	9005      	str	r0, [sp, #20]
 8006ef8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006efa:	2b00      	cmp	r3, #0
 8006efc:	dd05      	ble.n	8006f0a <_dtoa_r+0x91e>
 8006efe:	0031      	movs	r1, r6
 8006f00:	001a      	movs	r2, r3
 8006f02:	0038      	movs	r0, r7
 8006f04:	f000 fbc4 	bl	8007690 <__lshift>
 8006f08:	0006      	movs	r6, r0
 8006f0a:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8006f0c:	2b00      	cmp	r3, #0
 8006f0e:	d026      	beq.n	8006f5e <_dtoa_r+0x972>
 8006f10:	0031      	movs	r1, r6
 8006f12:	9805      	ldr	r0, [sp, #20]
 8006f14:	f000 fc2a 	bl	800776c <__mcmp>
 8006f18:	2800      	cmp	r0, #0
 8006f1a:	da20      	bge.n	8006f5e <_dtoa_r+0x972>
 8006f1c:	9b02      	ldr	r3, [sp, #8]
 8006f1e:	220a      	movs	r2, #10
 8006f20:	3b01      	subs	r3, #1
 8006f22:	9302      	str	r3, [sp, #8]
 8006f24:	0038      	movs	r0, r7
 8006f26:	2300      	movs	r3, #0
 8006f28:	9905      	ldr	r1, [sp, #20]
 8006f2a:	f000 fa03 	bl	8007334 <__multadd>
 8006f2e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006f30:	9005      	str	r0, [sp, #20]
 8006f32:	2b00      	cmp	r3, #0
 8006f34:	d100      	bne.n	8006f38 <_dtoa_r+0x94c>
 8006f36:	e166      	b.n	8007206 <_dtoa_r+0xc1a>
 8006f38:	2300      	movs	r3, #0
 8006f3a:	0029      	movs	r1, r5
 8006f3c:	220a      	movs	r2, #10
 8006f3e:	0038      	movs	r0, r7
 8006f40:	f000 f9f8 	bl	8007334 <__multadd>
 8006f44:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006f46:	0005      	movs	r5, r0
 8006f48:	2b00      	cmp	r3, #0
 8006f4a:	dc47      	bgt.n	8006fdc <_dtoa_r+0x9f0>
 8006f4c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006f4e:	2b02      	cmp	r3, #2
 8006f50:	dc0d      	bgt.n	8006f6e <_dtoa_r+0x982>
 8006f52:	e043      	b.n	8006fdc <_dtoa_r+0x9f0>
 8006f54:	2a04      	cmp	r2, #4
 8006f56:	d0c6      	beq.n	8006ee6 <_dtoa_r+0x8fa>
 8006f58:	0013      	movs	r3, r2
 8006f5a:	331c      	adds	r3, #28
 8006f5c:	e7bc      	b.n	8006ed8 <_dtoa_r+0x8ec>
 8006f5e:	9b07      	ldr	r3, [sp, #28]
 8006f60:	2b00      	cmp	r3, #0
 8006f62:	dc35      	bgt.n	8006fd0 <_dtoa_r+0x9e4>
 8006f64:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8006f66:	2b02      	cmp	r3, #2
 8006f68:	dd32      	ble.n	8006fd0 <_dtoa_r+0x9e4>
 8006f6a:	9b07      	ldr	r3, [sp, #28]
 8006f6c:	930c      	str	r3, [sp, #48]	; 0x30
 8006f6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8006f70:	2b00      	cmp	r3, #0
 8006f72:	d10c      	bne.n	8006f8e <_dtoa_r+0x9a2>
 8006f74:	0031      	movs	r1, r6
 8006f76:	2205      	movs	r2, #5
 8006f78:	0038      	movs	r0, r7
 8006f7a:	f000 f9db 	bl	8007334 <__multadd>
 8006f7e:	0006      	movs	r6, r0
 8006f80:	0001      	movs	r1, r0
 8006f82:	9805      	ldr	r0, [sp, #20]
 8006f84:	f000 fbf2 	bl	800776c <__mcmp>
 8006f88:	2800      	cmp	r0, #0
 8006f8a:	dd00      	ble.n	8006f8e <_dtoa_r+0x9a2>
 8006f8c:	e5a5      	b.n	8006ada <_dtoa_r+0x4ee>
 8006f8e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8006f90:	43db      	mvns	r3, r3
 8006f92:	9302      	str	r3, [sp, #8]
 8006f94:	9b06      	ldr	r3, [sp, #24]
 8006f96:	9308      	str	r3, [sp, #32]
 8006f98:	2400      	movs	r4, #0
 8006f9a:	0031      	movs	r1, r6
 8006f9c:	0038      	movs	r0, r7
 8006f9e:	f000 f9a5 	bl	80072ec <_Bfree>
 8006fa2:	2d00      	cmp	r5, #0
 8006fa4:	d100      	bne.n	8006fa8 <_dtoa_r+0x9bc>
 8006fa6:	e6b7      	b.n	8006d18 <_dtoa_r+0x72c>
 8006fa8:	2c00      	cmp	r4, #0
 8006faa:	d005      	beq.n	8006fb8 <_dtoa_r+0x9cc>
 8006fac:	42ac      	cmp	r4, r5
 8006fae:	d003      	beq.n	8006fb8 <_dtoa_r+0x9cc>
 8006fb0:	0021      	movs	r1, r4
 8006fb2:	0038      	movs	r0, r7
 8006fb4:	f000 f99a 	bl	80072ec <_Bfree>
 8006fb8:	0029      	movs	r1, r5
 8006fba:	0038      	movs	r0, r7
 8006fbc:	f000 f996 	bl	80072ec <_Bfree>
 8006fc0:	e6aa      	b.n	8006d18 <_dtoa_r+0x72c>
 8006fc2:	2600      	movs	r6, #0
 8006fc4:	0035      	movs	r5, r6
 8006fc6:	e7e2      	b.n	8006f8e <_dtoa_r+0x9a2>
 8006fc8:	9602      	str	r6, [sp, #8]
 8006fca:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8006fcc:	0035      	movs	r5, r6
 8006fce:	e584      	b.n	8006ada <_dtoa_r+0x4ee>
 8006fd0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006fd2:	2b00      	cmp	r3, #0
 8006fd4:	d100      	bne.n	8006fd8 <_dtoa_r+0x9ec>
 8006fd6:	e0ce      	b.n	8007176 <_dtoa_r+0xb8a>
 8006fd8:	9b07      	ldr	r3, [sp, #28]
 8006fda:	930c      	str	r3, [sp, #48]	; 0x30
 8006fdc:	2c00      	cmp	r4, #0
 8006fde:	dd05      	ble.n	8006fec <_dtoa_r+0xa00>
 8006fe0:	0029      	movs	r1, r5
 8006fe2:	0022      	movs	r2, r4
 8006fe4:	0038      	movs	r0, r7
 8006fe6:	f000 fb53 	bl	8007690 <__lshift>
 8006fea:	0005      	movs	r5, r0
 8006fec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006fee:	0028      	movs	r0, r5
 8006ff0:	2b00      	cmp	r3, #0
 8006ff2:	d022      	beq.n	800703a <_dtoa_r+0xa4e>
 8006ff4:	0038      	movs	r0, r7
 8006ff6:	6869      	ldr	r1, [r5, #4]
 8006ff8:	f000 f934 	bl	8007264 <_Balloc>
 8006ffc:	1e04      	subs	r4, r0, #0
 8006ffe:	d10f      	bne.n	8007020 <_dtoa_r+0xa34>
 8007000:	0002      	movs	r2, r0
 8007002:	4b05      	ldr	r3, [pc, #20]	; (8007018 <_dtoa_r+0xa2c>)
 8007004:	4905      	ldr	r1, [pc, #20]	; (800701c <_dtoa_r+0xa30>)
 8007006:	f7ff fb06 	bl	8006616 <_dtoa_r+0x2a>
 800700a:	46c0      	nop			; (mov r8, r8)
 800700c:	40240000 	.word	0x40240000
 8007010:	00000433 	.word	0x00000433
 8007014:	7ff00000 	.word	0x7ff00000
 8007018:	08008d3b 	.word	0x08008d3b
 800701c:	000002ea 	.word	0x000002ea
 8007020:	0029      	movs	r1, r5
 8007022:	692b      	ldr	r3, [r5, #16]
 8007024:	310c      	adds	r1, #12
 8007026:	1c9a      	adds	r2, r3, #2
 8007028:	0092      	lsls	r2, r2, #2
 800702a:	300c      	adds	r0, #12
 800702c:	f000 f911 	bl	8007252 <memcpy>
 8007030:	2201      	movs	r2, #1
 8007032:	0021      	movs	r1, r4
 8007034:	0038      	movs	r0, r7
 8007036:	f000 fb2b 	bl	8007690 <__lshift>
 800703a:	9b06      	ldr	r3, [sp, #24]
 800703c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800703e:	930a      	str	r3, [sp, #40]	; 0x28
 8007040:	3b01      	subs	r3, #1
 8007042:	189b      	adds	r3, r3, r2
 8007044:	2201      	movs	r2, #1
 8007046:	002c      	movs	r4, r5
 8007048:	0005      	movs	r5, r0
 800704a:	9314      	str	r3, [sp, #80]	; 0x50
 800704c:	9b08      	ldr	r3, [sp, #32]
 800704e:	4013      	ands	r3, r2
 8007050:	930f      	str	r3, [sp, #60]	; 0x3c
 8007052:	0031      	movs	r1, r6
 8007054:	9805      	ldr	r0, [sp, #20]
 8007056:	f7ff fa3d 	bl	80064d4 <quorem>
 800705a:	0003      	movs	r3, r0
 800705c:	0021      	movs	r1, r4
 800705e:	3330      	adds	r3, #48	; 0x30
 8007060:	900d      	str	r0, [sp, #52]	; 0x34
 8007062:	9805      	ldr	r0, [sp, #20]
 8007064:	9307      	str	r3, [sp, #28]
 8007066:	f000 fb81 	bl	800776c <__mcmp>
 800706a:	002a      	movs	r2, r5
 800706c:	900e      	str	r0, [sp, #56]	; 0x38
 800706e:	0031      	movs	r1, r6
 8007070:	0038      	movs	r0, r7
 8007072:	f000 fb97 	bl	80077a4 <__mdiff>
 8007076:	68c3      	ldr	r3, [r0, #12]
 8007078:	9008      	str	r0, [sp, #32]
 800707a:	9310      	str	r3, [sp, #64]	; 0x40
 800707c:	2301      	movs	r3, #1
 800707e:	930c      	str	r3, [sp, #48]	; 0x30
 8007080:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8007082:	2b00      	cmp	r3, #0
 8007084:	d104      	bne.n	8007090 <_dtoa_r+0xaa4>
 8007086:	0001      	movs	r1, r0
 8007088:	9805      	ldr	r0, [sp, #20]
 800708a:	f000 fb6f 	bl	800776c <__mcmp>
 800708e:	900c      	str	r0, [sp, #48]	; 0x30
 8007090:	0038      	movs	r0, r7
 8007092:	9908      	ldr	r1, [sp, #32]
 8007094:	f000 f92a 	bl	80072ec <_Bfree>
 8007098:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800709a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800709c:	3301      	adds	r3, #1
 800709e:	9308      	str	r3, [sp, #32]
 80070a0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80070a2:	4313      	orrs	r3, r2
 80070a4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80070a6:	4313      	orrs	r3, r2
 80070a8:	d10c      	bne.n	80070c4 <_dtoa_r+0xad8>
 80070aa:	9b07      	ldr	r3, [sp, #28]
 80070ac:	2b39      	cmp	r3, #57	; 0x39
 80070ae:	d026      	beq.n	80070fe <_dtoa_r+0xb12>
 80070b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80070b2:	2b00      	cmp	r3, #0
 80070b4:	dd02      	ble.n	80070bc <_dtoa_r+0xad0>
 80070b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80070b8:	3331      	adds	r3, #49	; 0x31
 80070ba:	9307      	str	r3, [sp, #28]
 80070bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80070be:	9a07      	ldr	r2, [sp, #28]
 80070c0:	701a      	strb	r2, [r3, #0]
 80070c2:	e76a      	b.n	8006f9a <_dtoa_r+0x9ae>
 80070c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80070c6:	2b00      	cmp	r3, #0
 80070c8:	db04      	blt.n	80070d4 <_dtoa_r+0xae8>
 80070ca:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80070cc:	4313      	orrs	r3, r2
 80070ce:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80070d0:	4313      	orrs	r3, r2
 80070d2:	d11f      	bne.n	8007114 <_dtoa_r+0xb28>
 80070d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80070d6:	2b00      	cmp	r3, #0
 80070d8:	ddf0      	ble.n	80070bc <_dtoa_r+0xad0>
 80070da:	9905      	ldr	r1, [sp, #20]
 80070dc:	2201      	movs	r2, #1
 80070de:	0038      	movs	r0, r7
 80070e0:	f000 fad6 	bl	8007690 <__lshift>
 80070e4:	0031      	movs	r1, r6
 80070e6:	9005      	str	r0, [sp, #20]
 80070e8:	f000 fb40 	bl	800776c <__mcmp>
 80070ec:	2800      	cmp	r0, #0
 80070ee:	dc03      	bgt.n	80070f8 <_dtoa_r+0xb0c>
 80070f0:	d1e4      	bne.n	80070bc <_dtoa_r+0xad0>
 80070f2:	9b07      	ldr	r3, [sp, #28]
 80070f4:	07db      	lsls	r3, r3, #31
 80070f6:	d5e1      	bpl.n	80070bc <_dtoa_r+0xad0>
 80070f8:	9b07      	ldr	r3, [sp, #28]
 80070fa:	2b39      	cmp	r3, #57	; 0x39
 80070fc:	d1db      	bne.n	80070b6 <_dtoa_r+0xaca>
 80070fe:	2339      	movs	r3, #57	; 0x39
 8007100:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007102:	7013      	strb	r3, [r2, #0]
 8007104:	9b08      	ldr	r3, [sp, #32]
 8007106:	9308      	str	r3, [sp, #32]
 8007108:	3b01      	subs	r3, #1
 800710a:	781a      	ldrb	r2, [r3, #0]
 800710c:	2a39      	cmp	r2, #57	; 0x39
 800710e:	d068      	beq.n	80071e2 <_dtoa_r+0xbf6>
 8007110:	3201      	adds	r2, #1
 8007112:	e7d5      	b.n	80070c0 <_dtoa_r+0xad4>
 8007114:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007116:	2b00      	cmp	r3, #0
 8007118:	dd07      	ble.n	800712a <_dtoa_r+0xb3e>
 800711a:	9b07      	ldr	r3, [sp, #28]
 800711c:	2b39      	cmp	r3, #57	; 0x39
 800711e:	d0ee      	beq.n	80070fe <_dtoa_r+0xb12>
 8007120:	9b07      	ldr	r3, [sp, #28]
 8007122:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007124:	3301      	adds	r3, #1
 8007126:	7013      	strb	r3, [r2, #0]
 8007128:	e737      	b.n	8006f9a <_dtoa_r+0x9ae>
 800712a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800712c:	9a07      	ldr	r2, [sp, #28]
 800712e:	701a      	strb	r2, [r3, #0]
 8007130:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007132:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007134:	4293      	cmp	r3, r2
 8007136:	d03e      	beq.n	80071b6 <_dtoa_r+0xbca>
 8007138:	2300      	movs	r3, #0
 800713a:	220a      	movs	r2, #10
 800713c:	9905      	ldr	r1, [sp, #20]
 800713e:	0038      	movs	r0, r7
 8007140:	f000 f8f8 	bl	8007334 <__multadd>
 8007144:	2300      	movs	r3, #0
 8007146:	9005      	str	r0, [sp, #20]
 8007148:	220a      	movs	r2, #10
 800714a:	0021      	movs	r1, r4
 800714c:	0038      	movs	r0, r7
 800714e:	42ac      	cmp	r4, r5
 8007150:	d106      	bne.n	8007160 <_dtoa_r+0xb74>
 8007152:	f000 f8ef 	bl	8007334 <__multadd>
 8007156:	0004      	movs	r4, r0
 8007158:	0005      	movs	r5, r0
 800715a:	9b08      	ldr	r3, [sp, #32]
 800715c:	930a      	str	r3, [sp, #40]	; 0x28
 800715e:	e778      	b.n	8007052 <_dtoa_r+0xa66>
 8007160:	f000 f8e8 	bl	8007334 <__multadd>
 8007164:	0029      	movs	r1, r5
 8007166:	0004      	movs	r4, r0
 8007168:	2300      	movs	r3, #0
 800716a:	220a      	movs	r2, #10
 800716c:	0038      	movs	r0, r7
 800716e:	f000 f8e1 	bl	8007334 <__multadd>
 8007172:	0005      	movs	r5, r0
 8007174:	e7f1      	b.n	800715a <_dtoa_r+0xb6e>
 8007176:	9b07      	ldr	r3, [sp, #28]
 8007178:	930c      	str	r3, [sp, #48]	; 0x30
 800717a:	2400      	movs	r4, #0
 800717c:	0031      	movs	r1, r6
 800717e:	9805      	ldr	r0, [sp, #20]
 8007180:	f7ff f9a8 	bl	80064d4 <quorem>
 8007184:	9b06      	ldr	r3, [sp, #24]
 8007186:	3030      	adds	r0, #48	; 0x30
 8007188:	5518      	strb	r0, [r3, r4]
 800718a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800718c:	3401      	adds	r4, #1
 800718e:	9007      	str	r0, [sp, #28]
 8007190:	42a3      	cmp	r3, r4
 8007192:	dd07      	ble.n	80071a4 <_dtoa_r+0xbb8>
 8007194:	2300      	movs	r3, #0
 8007196:	220a      	movs	r2, #10
 8007198:	0038      	movs	r0, r7
 800719a:	9905      	ldr	r1, [sp, #20]
 800719c:	f000 f8ca 	bl	8007334 <__multadd>
 80071a0:	9005      	str	r0, [sp, #20]
 80071a2:	e7eb      	b.n	800717c <_dtoa_r+0xb90>
 80071a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80071a6:	2001      	movs	r0, #1
 80071a8:	2b00      	cmp	r3, #0
 80071aa:	dd00      	ble.n	80071ae <_dtoa_r+0xbc2>
 80071ac:	0018      	movs	r0, r3
 80071ae:	2400      	movs	r4, #0
 80071b0:	9b06      	ldr	r3, [sp, #24]
 80071b2:	181b      	adds	r3, r3, r0
 80071b4:	9308      	str	r3, [sp, #32]
 80071b6:	9905      	ldr	r1, [sp, #20]
 80071b8:	2201      	movs	r2, #1
 80071ba:	0038      	movs	r0, r7
 80071bc:	f000 fa68 	bl	8007690 <__lshift>
 80071c0:	0031      	movs	r1, r6
 80071c2:	9005      	str	r0, [sp, #20]
 80071c4:	f000 fad2 	bl	800776c <__mcmp>
 80071c8:	2800      	cmp	r0, #0
 80071ca:	dc9b      	bgt.n	8007104 <_dtoa_r+0xb18>
 80071cc:	d102      	bne.n	80071d4 <_dtoa_r+0xbe8>
 80071ce:	9b07      	ldr	r3, [sp, #28]
 80071d0:	07db      	lsls	r3, r3, #31
 80071d2:	d497      	bmi.n	8007104 <_dtoa_r+0xb18>
 80071d4:	9b08      	ldr	r3, [sp, #32]
 80071d6:	9308      	str	r3, [sp, #32]
 80071d8:	3b01      	subs	r3, #1
 80071da:	781a      	ldrb	r2, [r3, #0]
 80071dc:	2a30      	cmp	r2, #48	; 0x30
 80071de:	d0fa      	beq.n	80071d6 <_dtoa_r+0xbea>
 80071e0:	e6db      	b.n	8006f9a <_dtoa_r+0x9ae>
 80071e2:	9a06      	ldr	r2, [sp, #24]
 80071e4:	429a      	cmp	r2, r3
 80071e6:	d18e      	bne.n	8007106 <_dtoa_r+0xb1a>
 80071e8:	9b02      	ldr	r3, [sp, #8]
 80071ea:	3301      	adds	r3, #1
 80071ec:	9302      	str	r3, [sp, #8]
 80071ee:	2331      	movs	r3, #49	; 0x31
 80071f0:	e799      	b.n	8007126 <_dtoa_r+0xb3a>
 80071f2:	4b09      	ldr	r3, [pc, #36]	; (8007218 <_dtoa_r+0xc2c>)
 80071f4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80071f6:	9306      	str	r3, [sp, #24]
 80071f8:	4b08      	ldr	r3, [pc, #32]	; (800721c <_dtoa_r+0xc30>)
 80071fa:	2a00      	cmp	r2, #0
 80071fc:	d001      	beq.n	8007202 <_dtoa_r+0xc16>
 80071fe:	f7ff fa3f 	bl	8006680 <_dtoa_r+0x94>
 8007202:	f7ff fa3f 	bl	8006684 <_dtoa_r+0x98>
 8007206:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007208:	2b00      	cmp	r3, #0
 800720a:	dcb6      	bgt.n	800717a <_dtoa_r+0xb8e>
 800720c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800720e:	2b02      	cmp	r3, #2
 8007210:	dd00      	ble.n	8007214 <_dtoa_r+0xc28>
 8007212:	e6ac      	b.n	8006f6e <_dtoa_r+0x982>
 8007214:	e7b1      	b.n	800717a <_dtoa_r+0xb8e>
 8007216:	46c0      	nop			; (mov r8, r8)
 8007218:	08008cbc 	.word	0x08008cbc
 800721c:	08008cc4 	.word	0x08008cc4

08007220 <_localeconv_r>:
 8007220:	4800      	ldr	r0, [pc, #0]	; (8007224 <_localeconv_r+0x4>)
 8007222:	4770      	bx	lr
 8007224:	20000160 	.word	0x20000160

08007228 <malloc>:
 8007228:	b510      	push	{r4, lr}
 800722a:	4b03      	ldr	r3, [pc, #12]	; (8007238 <malloc+0x10>)
 800722c:	0001      	movs	r1, r0
 800722e:	6818      	ldr	r0, [r3, #0]
 8007230:	f000 fc4c 	bl	8007acc <_malloc_r>
 8007234:	bd10      	pop	{r4, pc}
 8007236:	46c0      	nop			; (mov r8, r8)
 8007238:	2000000c 	.word	0x2000000c

0800723c <memchr>:
 800723c:	b2c9      	uxtb	r1, r1
 800723e:	1882      	adds	r2, r0, r2
 8007240:	4290      	cmp	r0, r2
 8007242:	d101      	bne.n	8007248 <memchr+0xc>
 8007244:	2000      	movs	r0, #0
 8007246:	4770      	bx	lr
 8007248:	7803      	ldrb	r3, [r0, #0]
 800724a:	428b      	cmp	r3, r1
 800724c:	d0fb      	beq.n	8007246 <memchr+0xa>
 800724e:	3001      	adds	r0, #1
 8007250:	e7f6      	b.n	8007240 <memchr+0x4>

08007252 <memcpy>:
 8007252:	2300      	movs	r3, #0
 8007254:	b510      	push	{r4, lr}
 8007256:	429a      	cmp	r2, r3
 8007258:	d100      	bne.n	800725c <memcpy+0xa>
 800725a:	bd10      	pop	{r4, pc}
 800725c:	5ccc      	ldrb	r4, [r1, r3]
 800725e:	54c4      	strb	r4, [r0, r3]
 8007260:	3301      	adds	r3, #1
 8007262:	e7f8      	b.n	8007256 <memcpy+0x4>

08007264 <_Balloc>:
 8007264:	b570      	push	{r4, r5, r6, lr}
 8007266:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8007268:	0006      	movs	r6, r0
 800726a:	000c      	movs	r4, r1
 800726c:	2d00      	cmp	r5, #0
 800726e:	d10e      	bne.n	800728e <_Balloc+0x2a>
 8007270:	2010      	movs	r0, #16
 8007272:	f7ff ffd9 	bl	8007228 <malloc>
 8007276:	1e02      	subs	r2, r0, #0
 8007278:	6270      	str	r0, [r6, #36]	; 0x24
 800727a:	d104      	bne.n	8007286 <_Balloc+0x22>
 800727c:	2166      	movs	r1, #102	; 0x66
 800727e:	4b19      	ldr	r3, [pc, #100]	; (80072e4 <_Balloc+0x80>)
 8007280:	4819      	ldr	r0, [pc, #100]	; (80072e8 <_Balloc+0x84>)
 8007282:	f000 fe0d 	bl	8007ea0 <__assert_func>
 8007286:	6045      	str	r5, [r0, #4]
 8007288:	6085      	str	r5, [r0, #8]
 800728a:	6005      	str	r5, [r0, #0]
 800728c:	60c5      	str	r5, [r0, #12]
 800728e:	6a75      	ldr	r5, [r6, #36]	; 0x24
 8007290:	68eb      	ldr	r3, [r5, #12]
 8007292:	2b00      	cmp	r3, #0
 8007294:	d013      	beq.n	80072be <_Balloc+0x5a>
 8007296:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8007298:	00a2      	lsls	r2, r4, #2
 800729a:	68db      	ldr	r3, [r3, #12]
 800729c:	189b      	adds	r3, r3, r2
 800729e:	6818      	ldr	r0, [r3, #0]
 80072a0:	2800      	cmp	r0, #0
 80072a2:	d118      	bne.n	80072d6 <_Balloc+0x72>
 80072a4:	2101      	movs	r1, #1
 80072a6:	000d      	movs	r5, r1
 80072a8:	40a5      	lsls	r5, r4
 80072aa:	1d6a      	adds	r2, r5, #5
 80072ac:	0030      	movs	r0, r6
 80072ae:	0092      	lsls	r2, r2, #2
 80072b0:	f000 fb74 	bl	800799c <_calloc_r>
 80072b4:	2800      	cmp	r0, #0
 80072b6:	d00c      	beq.n	80072d2 <_Balloc+0x6e>
 80072b8:	6044      	str	r4, [r0, #4]
 80072ba:	6085      	str	r5, [r0, #8]
 80072bc:	e00d      	b.n	80072da <_Balloc+0x76>
 80072be:	2221      	movs	r2, #33	; 0x21
 80072c0:	2104      	movs	r1, #4
 80072c2:	0030      	movs	r0, r6
 80072c4:	f000 fb6a 	bl	800799c <_calloc_r>
 80072c8:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80072ca:	60e8      	str	r0, [r5, #12]
 80072cc:	68db      	ldr	r3, [r3, #12]
 80072ce:	2b00      	cmp	r3, #0
 80072d0:	d1e1      	bne.n	8007296 <_Balloc+0x32>
 80072d2:	2000      	movs	r0, #0
 80072d4:	bd70      	pop	{r4, r5, r6, pc}
 80072d6:	6802      	ldr	r2, [r0, #0]
 80072d8:	601a      	str	r2, [r3, #0]
 80072da:	2300      	movs	r3, #0
 80072dc:	6103      	str	r3, [r0, #16]
 80072de:	60c3      	str	r3, [r0, #12]
 80072e0:	e7f8      	b.n	80072d4 <_Balloc+0x70>
 80072e2:	46c0      	nop			; (mov r8, r8)
 80072e4:	08008cc9 	.word	0x08008cc9
 80072e8:	08008d4c 	.word	0x08008d4c

080072ec <_Bfree>:
 80072ec:	b570      	push	{r4, r5, r6, lr}
 80072ee:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80072f0:	0005      	movs	r5, r0
 80072f2:	000c      	movs	r4, r1
 80072f4:	2e00      	cmp	r6, #0
 80072f6:	d10e      	bne.n	8007316 <_Bfree+0x2a>
 80072f8:	2010      	movs	r0, #16
 80072fa:	f7ff ff95 	bl	8007228 <malloc>
 80072fe:	1e02      	subs	r2, r0, #0
 8007300:	6268      	str	r0, [r5, #36]	; 0x24
 8007302:	d104      	bne.n	800730e <_Bfree+0x22>
 8007304:	218a      	movs	r1, #138	; 0x8a
 8007306:	4b09      	ldr	r3, [pc, #36]	; (800732c <_Bfree+0x40>)
 8007308:	4809      	ldr	r0, [pc, #36]	; (8007330 <_Bfree+0x44>)
 800730a:	f000 fdc9 	bl	8007ea0 <__assert_func>
 800730e:	6046      	str	r6, [r0, #4]
 8007310:	6086      	str	r6, [r0, #8]
 8007312:	6006      	str	r6, [r0, #0]
 8007314:	60c6      	str	r6, [r0, #12]
 8007316:	2c00      	cmp	r4, #0
 8007318:	d007      	beq.n	800732a <_Bfree+0x3e>
 800731a:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800731c:	6862      	ldr	r2, [r4, #4]
 800731e:	68db      	ldr	r3, [r3, #12]
 8007320:	0092      	lsls	r2, r2, #2
 8007322:	189b      	adds	r3, r3, r2
 8007324:	681a      	ldr	r2, [r3, #0]
 8007326:	6022      	str	r2, [r4, #0]
 8007328:	601c      	str	r4, [r3, #0]
 800732a:	bd70      	pop	{r4, r5, r6, pc}
 800732c:	08008cc9 	.word	0x08008cc9
 8007330:	08008d4c 	.word	0x08008d4c

08007334 <__multadd>:
 8007334:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007336:	000e      	movs	r6, r1
 8007338:	9001      	str	r0, [sp, #4]
 800733a:	000c      	movs	r4, r1
 800733c:	001d      	movs	r5, r3
 800733e:	2000      	movs	r0, #0
 8007340:	690f      	ldr	r7, [r1, #16]
 8007342:	3614      	adds	r6, #20
 8007344:	6833      	ldr	r3, [r6, #0]
 8007346:	3001      	adds	r0, #1
 8007348:	b299      	uxth	r1, r3
 800734a:	4351      	muls	r1, r2
 800734c:	0c1b      	lsrs	r3, r3, #16
 800734e:	4353      	muls	r3, r2
 8007350:	1949      	adds	r1, r1, r5
 8007352:	0c0d      	lsrs	r5, r1, #16
 8007354:	195b      	adds	r3, r3, r5
 8007356:	0c1d      	lsrs	r5, r3, #16
 8007358:	b289      	uxth	r1, r1
 800735a:	041b      	lsls	r3, r3, #16
 800735c:	185b      	adds	r3, r3, r1
 800735e:	c608      	stmia	r6!, {r3}
 8007360:	4287      	cmp	r7, r0
 8007362:	dcef      	bgt.n	8007344 <__multadd+0x10>
 8007364:	2d00      	cmp	r5, #0
 8007366:	d022      	beq.n	80073ae <__multadd+0x7a>
 8007368:	68a3      	ldr	r3, [r4, #8]
 800736a:	42bb      	cmp	r3, r7
 800736c:	dc19      	bgt.n	80073a2 <__multadd+0x6e>
 800736e:	6863      	ldr	r3, [r4, #4]
 8007370:	9801      	ldr	r0, [sp, #4]
 8007372:	1c59      	adds	r1, r3, #1
 8007374:	f7ff ff76 	bl	8007264 <_Balloc>
 8007378:	1e06      	subs	r6, r0, #0
 800737a:	d105      	bne.n	8007388 <__multadd+0x54>
 800737c:	0002      	movs	r2, r0
 800737e:	21b5      	movs	r1, #181	; 0xb5
 8007380:	4b0c      	ldr	r3, [pc, #48]	; (80073b4 <__multadd+0x80>)
 8007382:	480d      	ldr	r0, [pc, #52]	; (80073b8 <__multadd+0x84>)
 8007384:	f000 fd8c 	bl	8007ea0 <__assert_func>
 8007388:	0021      	movs	r1, r4
 800738a:	6923      	ldr	r3, [r4, #16]
 800738c:	310c      	adds	r1, #12
 800738e:	1c9a      	adds	r2, r3, #2
 8007390:	0092      	lsls	r2, r2, #2
 8007392:	300c      	adds	r0, #12
 8007394:	f7ff ff5d 	bl	8007252 <memcpy>
 8007398:	0021      	movs	r1, r4
 800739a:	9801      	ldr	r0, [sp, #4]
 800739c:	f7ff ffa6 	bl	80072ec <_Bfree>
 80073a0:	0034      	movs	r4, r6
 80073a2:	1d3b      	adds	r3, r7, #4
 80073a4:	009b      	lsls	r3, r3, #2
 80073a6:	18e3      	adds	r3, r4, r3
 80073a8:	605d      	str	r5, [r3, #4]
 80073aa:	1c7b      	adds	r3, r7, #1
 80073ac:	6123      	str	r3, [r4, #16]
 80073ae:	0020      	movs	r0, r4
 80073b0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80073b2:	46c0      	nop			; (mov r8, r8)
 80073b4:	08008d3b 	.word	0x08008d3b
 80073b8:	08008d4c 	.word	0x08008d4c

080073bc <__hi0bits>:
 80073bc:	0003      	movs	r3, r0
 80073be:	0c02      	lsrs	r2, r0, #16
 80073c0:	2000      	movs	r0, #0
 80073c2:	4282      	cmp	r2, r0
 80073c4:	d101      	bne.n	80073ca <__hi0bits+0xe>
 80073c6:	041b      	lsls	r3, r3, #16
 80073c8:	3010      	adds	r0, #16
 80073ca:	0e1a      	lsrs	r2, r3, #24
 80073cc:	d101      	bne.n	80073d2 <__hi0bits+0x16>
 80073ce:	3008      	adds	r0, #8
 80073d0:	021b      	lsls	r3, r3, #8
 80073d2:	0f1a      	lsrs	r2, r3, #28
 80073d4:	d101      	bne.n	80073da <__hi0bits+0x1e>
 80073d6:	3004      	adds	r0, #4
 80073d8:	011b      	lsls	r3, r3, #4
 80073da:	0f9a      	lsrs	r2, r3, #30
 80073dc:	d101      	bne.n	80073e2 <__hi0bits+0x26>
 80073de:	3002      	adds	r0, #2
 80073e0:	009b      	lsls	r3, r3, #2
 80073e2:	2b00      	cmp	r3, #0
 80073e4:	db03      	blt.n	80073ee <__hi0bits+0x32>
 80073e6:	3001      	adds	r0, #1
 80073e8:	005b      	lsls	r3, r3, #1
 80073ea:	d400      	bmi.n	80073ee <__hi0bits+0x32>
 80073ec:	2020      	movs	r0, #32
 80073ee:	4770      	bx	lr

080073f0 <__lo0bits>:
 80073f0:	6803      	ldr	r3, [r0, #0]
 80073f2:	0002      	movs	r2, r0
 80073f4:	2107      	movs	r1, #7
 80073f6:	0018      	movs	r0, r3
 80073f8:	4008      	ands	r0, r1
 80073fa:	420b      	tst	r3, r1
 80073fc:	d00d      	beq.n	800741a <__lo0bits+0x2a>
 80073fe:	3906      	subs	r1, #6
 8007400:	2000      	movs	r0, #0
 8007402:	420b      	tst	r3, r1
 8007404:	d105      	bne.n	8007412 <__lo0bits+0x22>
 8007406:	3002      	adds	r0, #2
 8007408:	4203      	tst	r3, r0
 800740a:	d003      	beq.n	8007414 <__lo0bits+0x24>
 800740c:	40cb      	lsrs	r3, r1
 800740e:	0008      	movs	r0, r1
 8007410:	6013      	str	r3, [r2, #0]
 8007412:	4770      	bx	lr
 8007414:	089b      	lsrs	r3, r3, #2
 8007416:	6013      	str	r3, [r2, #0]
 8007418:	e7fb      	b.n	8007412 <__lo0bits+0x22>
 800741a:	b299      	uxth	r1, r3
 800741c:	2900      	cmp	r1, #0
 800741e:	d101      	bne.n	8007424 <__lo0bits+0x34>
 8007420:	2010      	movs	r0, #16
 8007422:	0c1b      	lsrs	r3, r3, #16
 8007424:	b2d9      	uxtb	r1, r3
 8007426:	2900      	cmp	r1, #0
 8007428:	d101      	bne.n	800742e <__lo0bits+0x3e>
 800742a:	3008      	adds	r0, #8
 800742c:	0a1b      	lsrs	r3, r3, #8
 800742e:	0719      	lsls	r1, r3, #28
 8007430:	d101      	bne.n	8007436 <__lo0bits+0x46>
 8007432:	3004      	adds	r0, #4
 8007434:	091b      	lsrs	r3, r3, #4
 8007436:	0799      	lsls	r1, r3, #30
 8007438:	d101      	bne.n	800743e <__lo0bits+0x4e>
 800743a:	3002      	adds	r0, #2
 800743c:	089b      	lsrs	r3, r3, #2
 800743e:	07d9      	lsls	r1, r3, #31
 8007440:	d4e9      	bmi.n	8007416 <__lo0bits+0x26>
 8007442:	3001      	adds	r0, #1
 8007444:	085b      	lsrs	r3, r3, #1
 8007446:	d1e6      	bne.n	8007416 <__lo0bits+0x26>
 8007448:	2020      	movs	r0, #32
 800744a:	e7e2      	b.n	8007412 <__lo0bits+0x22>

0800744c <__i2b>:
 800744c:	b510      	push	{r4, lr}
 800744e:	000c      	movs	r4, r1
 8007450:	2101      	movs	r1, #1
 8007452:	f7ff ff07 	bl	8007264 <_Balloc>
 8007456:	2800      	cmp	r0, #0
 8007458:	d106      	bne.n	8007468 <__i2b+0x1c>
 800745a:	21a0      	movs	r1, #160	; 0xa0
 800745c:	0002      	movs	r2, r0
 800745e:	4b04      	ldr	r3, [pc, #16]	; (8007470 <__i2b+0x24>)
 8007460:	4804      	ldr	r0, [pc, #16]	; (8007474 <__i2b+0x28>)
 8007462:	0049      	lsls	r1, r1, #1
 8007464:	f000 fd1c 	bl	8007ea0 <__assert_func>
 8007468:	2301      	movs	r3, #1
 800746a:	6144      	str	r4, [r0, #20]
 800746c:	6103      	str	r3, [r0, #16]
 800746e:	bd10      	pop	{r4, pc}
 8007470:	08008d3b 	.word	0x08008d3b
 8007474:	08008d4c 	.word	0x08008d4c

08007478 <__multiply>:
 8007478:	b5f0      	push	{r4, r5, r6, r7, lr}
 800747a:	690b      	ldr	r3, [r1, #16]
 800747c:	0014      	movs	r4, r2
 800747e:	6912      	ldr	r2, [r2, #16]
 8007480:	000d      	movs	r5, r1
 8007482:	b089      	sub	sp, #36	; 0x24
 8007484:	4293      	cmp	r3, r2
 8007486:	da01      	bge.n	800748c <__multiply+0x14>
 8007488:	0025      	movs	r5, r4
 800748a:	000c      	movs	r4, r1
 800748c:	692f      	ldr	r7, [r5, #16]
 800748e:	6926      	ldr	r6, [r4, #16]
 8007490:	6869      	ldr	r1, [r5, #4]
 8007492:	19bb      	adds	r3, r7, r6
 8007494:	9302      	str	r3, [sp, #8]
 8007496:	68ab      	ldr	r3, [r5, #8]
 8007498:	19ba      	adds	r2, r7, r6
 800749a:	4293      	cmp	r3, r2
 800749c:	da00      	bge.n	80074a0 <__multiply+0x28>
 800749e:	3101      	adds	r1, #1
 80074a0:	f7ff fee0 	bl	8007264 <_Balloc>
 80074a4:	9001      	str	r0, [sp, #4]
 80074a6:	2800      	cmp	r0, #0
 80074a8:	d106      	bne.n	80074b8 <__multiply+0x40>
 80074aa:	215e      	movs	r1, #94	; 0x5e
 80074ac:	0002      	movs	r2, r0
 80074ae:	4b48      	ldr	r3, [pc, #288]	; (80075d0 <__multiply+0x158>)
 80074b0:	4848      	ldr	r0, [pc, #288]	; (80075d4 <__multiply+0x15c>)
 80074b2:	31ff      	adds	r1, #255	; 0xff
 80074b4:	f000 fcf4 	bl	8007ea0 <__assert_func>
 80074b8:	9b01      	ldr	r3, [sp, #4]
 80074ba:	2200      	movs	r2, #0
 80074bc:	3314      	adds	r3, #20
 80074be:	469c      	mov	ip, r3
 80074c0:	19bb      	adds	r3, r7, r6
 80074c2:	009b      	lsls	r3, r3, #2
 80074c4:	4463      	add	r3, ip
 80074c6:	9303      	str	r3, [sp, #12]
 80074c8:	4663      	mov	r3, ip
 80074ca:	9903      	ldr	r1, [sp, #12]
 80074cc:	428b      	cmp	r3, r1
 80074ce:	d32c      	bcc.n	800752a <__multiply+0xb2>
 80074d0:	002b      	movs	r3, r5
 80074d2:	0022      	movs	r2, r4
 80074d4:	3314      	adds	r3, #20
 80074d6:	00bf      	lsls	r7, r7, #2
 80074d8:	3214      	adds	r2, #20
 80074da:	9306      	str	r3, [sp, #24]
 80074dc:	00b6      	lsls	r6, r6, #2
 80074de:	19db      	adds	r3, r3, r7
 80074e0:	9304      	str	r3, [sp, #16]
 80074e2:	1993      	adds	r3, r2, r6
 80074e4:	9307      	str	r3, [sp, #28]
 80074e6:	2304      	movs	r3, #4
 80074e8:	9305      	str	r3, [sp, #20]
 80074ea:	002b      	movs	r3, r5
 80074ec:	9904      	ldr	r1, [sp, #16]
 80074ee:	3315      	adds	r3, #21
 80074f0:	9200      	str	r2, [sp, #0]
 80074f2:	4299      	cmp	r1, r3
 80074f4:	d305      	bcc.n	8007502 <__multiply+0x8a>
 80074f6:	1b4b      	subs	r3, r1, r5
 80074f8:	3b15      	subs	r3, #21
 80074fa:	089b      	lsrs	r3, r3, #2
 80074fc:	3301      	adds	r3, #1
 80074fe:	009b      	lsls	r3, r3, #2
 8007500:	9305      	str	r3, [sp, #20]
 8007502:	9b07      	ldr	r3, [sp, #28]
 8007504:	9a00      	ldr	r2, [sp, #0]
 8007506:	429a      	cmp	r2, r3
 8007508:	d311      	bcc.n	800752e <__multiply+0xb6>
 800750a:	9b02      	ldr	r3, [sp, #8]
 800750c:	2b00      	cmp	r3, #0
 800750e:	dd06      	ble.n	800751e <__multiply+0xa6>
 8007510:	9b03      	ldr	r3, [sp, #12]
 8007512:	3b04      	subs	r3, #4
 8007514:	9303      	str	r3, [sp, #12]
 8007516:	681b      	ldr	r3, [r3, #0]
 8007518:	9300      	str	r3, [sp, #0]
 800751a:	2b00      	cmp	r3, #0
 800751c:	d053      	beq.n	80075c6 <__multiply+0x14e>
 800751e:	9b01      	ldr	r3, [sp, #4]
 8007520:	9a02      	ldr	r2, [sp, #8]
 8007522:	0018      	movs	r0, r3
 8007524:	611a      	str	r2, [r3, #16]
 8007526:	b009      	add	sp, #36	; 0x24
 8007528:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800752a:	c304      	stmia	r3!, {r2}
 800752c:	e7cd      	b.n	80074ca <__multiply+0x52>
 800752e:	9b00      	ldr	r3, [sp, #0]
 8007530:	681b      	ldr	r3, [r3, #0]
 8007532:	b298      	uxth	r0, r3
 8007534:	2800      	cmp	r0, #0
 8007536:	d01b      	beq.n	8007570 <__multiply+0xf8>
 8007538:	4667      	mov	r7, ip
 800753a:	2400      	movs	r4, #0
 800753c:	9e06      	ldr	r6, [sp, #24]
 800753e:	ce02      	ldmia	r6!, {r1}
 8007540:	683a      	ldr	r2, [r7, #0]
 8007542:	b28b      	uxth	r3, r1
 8007544:	4343      	muls	r3, r0
 8007546:	b292      	uxth	r2, r2
 8007548:	189b      	adds	r3, r3, r2
 800754a:	191b      	adds	r3, r3, r4
 800754c:	0c0c      	lsrs	r4, r1, #16
 800754e:	4344      	muls	r4, r0
 8007550:	683a      	ldr	r2, [r7, #0]
 8007552:	0c11      	lsrs	r1, r2, #16
 8007554:	1861      	adds	r1, r4, r1
 8007556:	0c1c      	lsrs	r4, r3, #16
 8007558:	1909      	adds	r1, r1, r4
 800755a:	0c0c      	lsrs	r4, r1, #16
 800755c:	b29b      	uxth	r3, r3
 800755e:	0409      	lsls	r1, r1, #16
 8007560:	430b      	orrs	r3, r1
 8007562:	c708      	stmia	r7!, {r3}
 8007564:	9b04      	ldr	r3, [sp, #16]
 8007566:	42b3      	cmp	r3, r6
 8007568:	d8e9      	bhi.n	800753e <__multiply+0xc6>
 800756a:	4663      	mov	r3, ip
 800756c:	9a05      	ldr	r2, [sp, #20]
 800756e:	509c      	str	r4, [r3, r2]
 8007570:	9b00      	ldr	r3, [sp, #0]
 8007572:	681b      	ldr	r3, [r3, #0]
 8007574:	0c1e      	lsrs	r6, r3, #16
 8007576:	d020      	beq.n	80075ba <__multiply+0x142>
 8007578:	4663      	mov	r3, ip
 800757a:	002c      	movs	r4, r5
 800757c:	4660      	mov	r0, ip
 800757e:	2700      	movs	r7, #0
 8007580:	681b      	ldr	r3, [r3, #0]
 8007582:	3414      	adds	r4, #20
 8007584:	6822      	ldr	r2, [r4, #0]
 8007586:	b29b      	uxth	r3, r3
 8007588:	b291      	uxth	r1, r2
 800758a:	4371      	muls	r1, r6
 800758c:	6802      	ldr	r2, [r0, #0]
 800758e:	0c12      	lsrs	r2, r2, #16
 8007590:	1889      	adds	r1, r1, r2
 8007592:	19cf      	adds	r7, r1, r7
 8007594:	0439      	lsls	r1, r7, #16
 8007596:	430b      	orrs	r3, r1
 8007598:	6003      	str	r3, [r0, #0]
 800759a:	cc02      	ldmia	r4!, {r1}
 800759c:	6843      	ldr	r3, [r0, #4]
 800759e:	0c09      	lsrs	r1, r1, #16
 80075a0:	4371      	muls	r1, r6
 80075a2:	b29b      	uxth	r3, r3
 80075a4:	0c3f      	lsrs	r7, r7, #16
 80075a6:	18cb      	adds	r3, r1, r3
 80075a8:	9a04      	ldr	r2, [sp, #16]
 80075aa:	19db      	adds	r3, r3, r7
 80075ac:	0c1f      	lsrs	r7, r3, #16
 80075ae:	3004      	adds	r0, #4
 80075b0:	42a2      	cmp	r2, r4
 80075b2:	d8e7      	bhi.n	8007584 <__multiply+0x10c>
 80075b4:	4662      	mov	r2, ip
 80075b6:	9905      	ldr	r1, [sp, #20]
 80075b8:	5053      	str	r3, [r2, r1]
 80075ba:	9b00      	ldr	r3, [sp, #0]
 80075bc:	3304      	adds	r3, #4
 80075be:	9300      	str	r3, [sp, #0]
 80075c0:	2304      	movs	r3, #4
 80075c2:	449c      	add	ip, r3
 80075c4:	e79d      	b.n	8007502 <__multiply+0x8a>
 80075c6:	9b02      	ldr	r3, [sp, #8]
 80075c8:	3b01      	subs	r3, #1
 80075ca:	9302      	str	r3, [sp, #8]
 80075cc:	e79d      	b.n	800750a <__multiply+0x92>
 80075ce:	46c0      	nop			; (mov r8, r8)
 80075d0:	08008d3b 	.word	0x08008d3b
 80075d4:	08008d4c 	.word	0x08008d4c

080075d8 <__pow5mult>:
 80075d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80075da:	2303      	movs	r3, #3
 80075dc:	0015      	movs	r5, r2
 80075de:	0007      	movs	r7, r0
 80075e0:	000e      	movs	r6, r1
 80075e2:	401a      	ands	r2, r3
 80075e4:	421d      	tst	r5, r3
 80075e6:	d008      	beq.n	80075fa <__pow5mult+0x22>
 80075e8:	4925      	ldr	r1, [pc, #148]	; (8007680 <__pow5mult+0xa8>)
 80075ea:	3a01      	subs	r2, #1
 80075ec:	0092      	lsls	r2, r2, #2
 80075ee:	5852      	ldr	r2, [r2, r1]
 80075f0:	2300      	movs	r3, #0
 80075f2:	0031      	movs	r1, r6
 80075f4:	f7ff fe9e 	bl	8007334 <__multadd>
 80075f8:	0006      	movs	r6, r0
 80075fa:	10ad      	asrs	r5, r5, #2
 80075fc:	d03d      	beq.n	800767a <__pow5mult+0xa2>
 80075fe:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 8007600:	2c00      	cmp	r4, #0
 8007602:	d10f      	bne.n	8007624 <__pow5mult+0x4c>
 8007604:	2010      	movs	r0, #16
 8007606:	f7ff fe0f 	bl	8007228 <malloc>
 800760a:	1e02      	subs	r2, r0, #0
 800760c:	6278      	str	r0, [r7, #36]	; 0x24
 800760e:	d105      	bne.n	800761c <__pow5mult+0x44>
 8007610:	21d7      	movs	r1, #215	; 0xd7
 8007612:	4b1c      	ldr	r3, [pc, #112]	; (8007684 <__pow5mult+0xac>)
 8007614:	481c      	ldr	r0, [pc, #112]	; (8007688 <__pow5mult+0xb0>)
 8007616:	0049      	lsls	r1, r1, #1
 8007618:	f000 fc42 	bl	8007ea0 <__assert_func>
 800761c:	6044      	str	r4, [r0, #4]
 800761e:	6084      	str	r4, [r0, #8]
 8007620:	6004      	str	r4, [r0, #0]
 8007622:	60c4      	str	r4, [r0, #12]
 8007624:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007626:	689c      	ldr	r4, [r3, #8]
 8007628:	9301      	str	r3, [sp, #4]
 800762a:	2c00      	cmp	r4, #0
 800762c:	d108      	bne.n	8007640 <__pow5mult+0x68>
 800762e:	0038      	movs	r0, r7
 8007630:	4916      	ldr	r1, [pc, #88]	; (800768c <__pow5mult+0xb4>)
 8007632:	f7ff ff0b 	bl	800744c <__i2b>
 8007636:	9b01      	ldr	r3, [sp, #4]
 8007638:	0004      	movs	r4, r0
 800763a:	6098      	str	r0, [r3, #8]
 800763c:	2300      	movs	r3, #0
 800763e:	6003      	str	r3, [r0, #0]
 8007640:	2301      	movs	r3, #1
 8007642:	421d      	tst	r5, r3
 8007644:	d00a      	beq.n	800765c <__pow5mult+0x84>
 8007646:	0031      	movs	r1, r6
 8007648:	0022      	movs	r2, r4
 800764a:	0038      	movs	r0, r7
 800764c:	f7ff ff14 	bl	8007478 <__multiply>
 8007650:	0031      	movs	r1, r6
 8007652:	9001      	str	r0, [sp, #4]
 8007654:	0038      	movs	r0, r7
 8007656:	f7ff fe49 	bl	80072ec <_Bfree>
 800765a:	9e01      	ldr	r6, [sp, #4]
 800765c:	106d      	asrs	r5, r5, #1
 800765e:	d00c      	beq.n	800767a <__pow5mult+0xa2>
 8007660:	6820      	ldr	r0, [r4, #0]
 8007662:	2800      	cmp	r0, #0
 8007664:	d107      	bne.n	8007676 <__pow5mult+0x9e>
 8007666:	0022      	movs	r2, r4
 8007668:	0021      	movs	r1, r4
 800766a:	0038      	movs	r0, r7
 800766c:	f7ff ff04 	bl	8007478 <__multiply>
 8007670:	2300      	movs	r3, #0
 8007672:	6020      	str	r0, [r4, #0]
 8007674:	6003      	str	r3, [r0, #0]
 8007676:	0004      	movs	r4, r0
 8007678:	e7e2      	b.n	8007640 <__pow5mult+0x68>
 800767a:	0030      	movs	r0, r6
 800767c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800767e:	46c0      	nop			; (mov r8, r8)
 8007680:	08008e98 	.word	0x08008e98
 8007684:	08008cc9 	.word	0x08008cc9
 8007688:	08008d4c 	.word	0x08008d4c
 800768c:	00000271 	.word	0x00000271

08007690 <__lshift>:
 8007690:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007692:	000c      	movs	r4, r1
 8007694:	0017      	movs	r7, r2
 8007696:	6923      	ldr	r3, [r4, #16]
 8007698:	1155      	asrs	r5, r2, #5
 800769a:	b087      	sub	sp, #28
 800769c:	18eb      	adds	r3, r5, r3
 800769e:	9302      	str	r3, [sp, #8]
 80076a0:	3301      	adds	r3, #1
 80076a2:	9301      	str	r3, [sp, #4]
 80076a4:	6849      	ldr	r1, [r1, #4]
 80076a6:	68a3      	ldr	r3, [r4, #8]
 80076a8:	9004      	str	r0, [sp, #16]
 80076aa:	9a01      	ldr	r2, [sp, #4]
 80076ac:	4293      	cmp	r3, r2
 80076ae:	db10      	blt.n	80076d2 <__lshift+0x42>
 80076b0:	9804      	ldr	r0, [sp, #16]
 80076b2:	f7ff fdd7 	bl	8007264 <_Balloc>
 80076b6:	2300      	movs	r3, #0
 80076b8:	0002      	movs	r2, r0
 80076ba:	0006      	movs	r6, r0
 80076bc:	0019      	movs	r1, r3
 80076be:	3214      	adds	r2, #20
 80076c0:	4298      	cmp	r0, r3
 80076c2:	d10c      	bne.n	80076de <__lshift+0x4e>
 80076c4:	21da      	movs	r1, #218	; 0xda
 80076c6:	0002      	movs	r2, r0
 80076c8:	4b26      	ldr	r3, [pc, #152]	; (8007764 <__lshift+0xd4>)
 80076ca:	4827      	ldr	r0, [pc, #156]	; (8007768 <__lshift+0xd8>)
 80076cc:	31ff      	adds	r1, #255	; 0xff
 80076ce:	f000 fbe7 	bl	8007ea0 <__assert_func>
 80076d2:	3101      	adds	r1, #1
 80076d4:	005b      	lsls	r3, r3, #1
 80076d6:	e7e8      	b.n	80076aa <__lshift+0x1a>
 80076d8:	0098      	lsls	r0, r3, #2
 80076da:	5011      	str	r1, [r2, r0]
 80076dc:	3301      	adds	r3, #1
 80076de:	42ab      	cmp	r3, r5
 80076e0:	dbfa      	blt.n	80076d8 <__lshift+0x48>
 80076e2:	43eb      	mvns	r3, r5
 80076e4:	17db      	asrs	r3, r3, #31
 80076e6:	401d      	ands	r5, r3
 80076e8:	211f      	movs	r1, #31
 80076ea:	0023      	movs	r3, r4
 80076ec:	0038      	movs	r0, r7
 80076ee:	00ad      	lsls	r5, r5, #2
 80076f0:	1955      	adds	r5, r2, r5
 80076f2:	6922      	ldr	r2, [r4, #16]
 80076f4:	3314      	adds	r3, #20
 80076f6:	0092      	lsls	r2, r2, #2
 80076f8:	4008      	ands	r0, r1
 80076fa:	4684      	mov	ip, r0
 80076fc:	189a      	adds	r2, r3, r2
 80076fe:	420f      	tst	r7, r1
 8007700:	d02a      	beq.n	8007758 <__lshift+0xc8>
 8007702:	3101      	adds	r1, #1
 8007704:	1a09      	subs	r1, r1, r0
 8007706:	9105      	str	r1, [sp, #20]
 8007708:	2100      	movs	r1, #0
 800770a:	9503      	str	r5, [sp, #12]
 800770c:	4667      	mov	r7, ip
 800770e:	6818      	ldr	r0, [r3, #0]
 8007710:	40b8      	lsls	r0, r7
 8007712:	4301      	orrs	r1, r0
 8007714:	9803      	ldr	r0, [sp, #12]
 8007716:	c002      	stmia	r0!, {r1}
 8007718:	cb02      	ldmia	r3!, {r1}
 800771a:	9003      	str	r0, [sp, #12]
 800771c:	9805      	ldr	r0, [sp, #20]
 800771e:	40c1      	lsrs	r1, r0
 8007720:	429a      	cmp	r2, r3
 8007722:	d8f3      	bhi.n	800770c <__lshift+0x7c>
 8007724:	0020      	movs	r0, r4
 8007726:	3015      	adds	r0, #21
 8007728:	2304      	movs	r3, #4
 800772a:	4282      	cmp	r2, r0
 800772c:	d304      	bcc.n	8007738 <__lshift+0xa8>
 800772e:	1b13      	subs	r3, r2, r4
 8007730:	3b15      	subs	r3, #21
 8007732:	089b      	lsrs	r3, r3, #2
 8007734:	3301      	adds	r3, #1
 8007736:	009b      	lsls	r3, r3, #2
 8007738:	50e9      	str	r1, [r5, r3]
 800773a:	2900      	cmp	r1, #0
 800773c:	d002      	beq.n	8007744 <__lshift+0xb4>
 800773e:	9b02      	ldr	r3, [sp, #8]
 8007740:	3302      	adds	r3, #2
 8007742:	9301      	str	r3, [sp, #4]
 8007744:	9b01      	ldr	r3, [sp, #4]
 8007746:	9804      	ldr	r0, [sp, #16]
 8007748:	3b01      	subs	r3, #1
 800774a:	0021      	movs	r1, r4
 800774c:	6133      	str	r3, [r6, #16]
 800774e:	f7ff fdcd 	bl	80072ec <_Bfree>
 8007752:	0030      	movs	r0, r6
 8007754:	b007      	add	sp, #28
 8007756:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007758:	cb02      	ldmia	r3!, {r1}
 800775a:	c502      	stmia	r5!, {r1}
 800775c:	429a      	cmp	r2, r3
 800775e:	d8fb      	bhi.n	8007758 <__lshift+0xc8>
 8007760:	e7f0      	b.n	8007744 <__lshift+0xb4>
 8007762:	46c0      	nop			; (mov r8, r8)
 8007764:	08008d3b 	.word	0x08008d3b
 8007768:	08008d4c 	.word	0x08008d4c

0800776c <__mcmp>:
 800776c:	6902      	ldr	r2, [r0, #16]
 800776e:	690b      	ldr	r3, [r1, #16]
 8007770:	b530      	push	{r4, r5, lr}
 8007772:	0004      	movs	r4, r0
 8007774:	1ad0      	subs	r0, r2, r3
 8007776:	429a      	cmp	r2, r3
 8007778:	d10d      	bne.n	8007796 <__mcmp+0x2a>
 800777a:	009b      	lsls	r3, r3, #2
 800777c:	3414      	adds	r4, #20
 800777e:	3114      	adds	r1, #20
 8007780:	18e2      	adds	r2, r4, r3
 8007782:	18c9      	adds	r1, r1, r3
 8007784:	3a04      	subs	r2, #4
 8007786:	3904      	subs	r1, #4
 8007788:	6815      	ldr	r5, [r2, #0]
 800778a:	680b      	ldr	r3, [r1, #0]
 800778c:	429d      	cmp	r5, r3
 800778e:	d003      	beq.n	8007798 <__mcmp+0x2c>
 8007790:	2001      	movs	r0, #1
 8007792:	429d      	cmp	r5, r3
 8007794:	d303      	bcc.n	800779e <__mcmp+0x32>
 8007796:	bd30      	pop	{r4, r5, pc}
 8007798:	4294      	cmp	r4, r2
 800779a:	d3f3      	bcc.n	8007784 <__mcmp+0x18>
 800779c:	e7fb      	b.n	8007796 <__mcmp+0x2a>
 800779e:	4240      	negs	r0, r0
 80077a0:	e7f9      	b.n	8007796 <__mcmp+0x2a>
	...

080077a4 <__mdiff>:
 80077a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80077a6:	000e      	movs	r6, r1
 80077a8:	0007      	movs	r7, r0
 80077aa:	0011      	movs	r1, r2
 80077ac:	0030      	movs	r0, r6
 80077ae:	b087      	sub	sp, #28
 80077b0:	0014      	movs	r4, r2
 80077b2:	f7ff ffdb 	bl	800776c <__mcmp>
 80077b6:	1e05      	subs	r5, r0, #0
 80077b8:	d110      	bne.n	80077dc <__mdiff+0x38>
 80077ba:	0001      	movs	r1, r0
 80077bc:	0038      	movs	r0, r7
 80077be:	f7ff fd51 	bl	8007264 <_Balloc>
 80077c2:	1e02      	subs	r2, r0, #0
 80077c4:	d104      	bne.n	80077d0 <__mdiff+0x2c>
 80077c6:	4b40      	ldr	r3, [pc, #256]	; (80078c8 <__mdiff+0x124>)
 80077c8:	4940      	ldr	r1, [pc, #256]	; (80078cc <__mdiff+0x128>)
 80077ca:	4841      	ldr	r0, [pc, #260]	; (80078d0 <__mdiff+0x12c>)
 80077cc:	f000 fb68 	bl	8007ea0 <__assert_func>
 80077d0:	2301      	movs	r3, #1
 80077d2:	6145      	str	r5, [r0, #20]
 80077d4:	6103      	str	r3, [r0, #16]
 80077d6:	0010      	movs	r0, r2
 80077d8:	b007      	add	sp, #28
 80077da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80077dc:	2301      	movs	r3, #1
 80077de:	9301      	str	r3, [sp, #4]
 80077e0:	2800      	cmp	r0, #0
 80077e2:	db04      	blt.n	80077ee <__mdiff+0x4a>
 80077e4:	0023      	movs	r3, r4
 80077e6:	0034      	movs	r4, r6
 80077e8:	001e      	movs	r6, r3
 80077ea:	2300      	movs	r3, #0
 80077ec:	9301      	str	r3, [sp, #4]
 80077ee:	0038      	movs	r0, r7
 80077f0:	6861      	ldr	r1, [r4, #4]
 80077f2:	f7ff fd37 	bl	8007264 <_Balloc>
 80077f6:	1e02      	subs	r2, r0, #0
 80077f8:	d103      	bne.n	8007802 <__mdiff+0x5e>
 80077fa:	2190      	movs	r1, #144	; 0x90
 80077fc:	4b32      	ldr	r3, [pc, #200]	; (80078c8 <__mdiff+0x124>)
 80077fe:	0089      	lsls	r1, r1, #2
 8007800:	e7e3      	b.n	80077ca <__mdiff+0x26>
 8007802:	9b01      	ldr	r3, [sp, #4]
 8007804:	2700      	movs	r7, #0
 8007806:	60c3      	str	r3, [r0, #12]
 8007808:	6920      	ldr	r0, [r4, #16]
 800780a:	3414      	adds	r4, #20
 800780c:	9401      	str	r4, [sp, #4]
 800780e:	9b01      	ldr	r3, [sp, #4]
 8007810:	0084      	lsls	r4, r0, #2
 8007812:	191b      	adds	r3, r3, r4
 8007814:	0034      	movs	r4, r6
 8007816:	9302      	str	r3, [sp, #8]
 8007818:	6933      	ldr	r3, [r6, #16]
 800781a:	3414      	adds	r4, #20
 800781c:	0099      	lsls	r1, r3, #2
 800781e:	1863      	adds	r3, r4, r1
 8007820:	9303      	str	r3, [sp, #12]
 8007822:	0013      	movs	r3, r2
 8007824:	3314      	adds	r3, #20
 8007826:	469c      	mov	ip, r3
 8007828:	9305      	str	r3, [sp, #20]
 800782a:	9b01      	ldr	r3, [sp, #4]
 800782c:	9304      	str	r3, [sp, #16]
 800782e:	9b04      	ldr	r3, [sp, #16]
 8007830:	cc02      	ldmia	r4!, {r1}
 8007832:	cb20      	ldmia	r3!, {r5}
 8007834:	9304      	str	r3, [sp, #16]
 8007836:	b2ab      	uxth	r3, r5
 8007838:	19df      	adds	r7, r3, r7
 800783a:	b28b      	uxth	r3, r1
 800783c:	1afb      	subs	r3, r7, r3
 800783e:	0c09      	lsrs	r1, r1, #16
 8007840:	0c2d      	lsrs	r5, r5, #16
 8007842:	1a6d      	subs	r5, r5, r1
 8007844:	1419      	asrs	r1, r3, #16
 8007846:	186d      	adds	r5, r5, r1
 8007848:	4661      	mov	r1, ip
 800784a:	142f      	asrs	r7, r5, #16
 800784c:	b29b      	uxth	r3, r3
 800784e:	042d      	lsls	r5, r5, #16
 8007850:	432b      	orrs	r3, r5
 8007852:	c108      	stmia	r1!, {r3}
 8007854:	9b03      	ldr	r3, [sp, #12]
 8007856:	468c      	mov	ip, r1
 8007858:	42a3      	cmp	r3, r4
 800785a:	d8e8      	bhi.n	800782e <__mdiff+0x8a>
 800785c:	0031      	movs	r1, r6
 800785e:	9c03      	ldr	r4, [sp, #12]
 8007860:	3115      	adds	r1, #21
 8007862:	2304      	movs	r3, #4
 8007864:	428c      	cmp	r4, r1
 8007866:	d304      	bcc.n	8007872 <__mdiff+0xce>
 8007868:	1ba3      	subs	r3, r4, r6
 800786a:	3b15      	subs	r3, #21
 800786c:	089b      	lsrs	r3, r3, #2
 800786e:	3301      	adds	r3, #1
 8007870:	009b      	lsls	r3, r3, #2
 8007872:	9901      	ldr	r1, [sp, #4]
 8007874:	18cc      	adds	r4, r1, r3
 8007876:	9905      	ldr	r1, [sp, #20]
 8007878:	0026      	movs	r6, r4
 800787a:	18cb      	adds	r3, r1, r3
 800787c:	469c      	mov	ip, r3
 800787e:	9902      	ldr	r1, [sp, #8]
 8007880:	428e      	cmp	r6, r1
 8007882:	d310      	bcc.n	80078a6 <__mdiff+0x102>
 8007884:	9e02      	ldr	r6, [sp, #8]
 8007886:	1ee1      	subs	r1, r4, #3
 8007888:	2500      	movs	r5, #0
 800788a:	428e      	cmp	r6, r1
 800788c:	d304      	bcc.n	8007898 <__mdiff+0xf4>
 800788e:	0031      	movs	r1, r6
 8007890:	3103      	adds	r1, #3
 8007892:	1b0c      	subs	r4, r1, r4
 8007894:	08a4      	lsrs	r4, r4, #2
 8007896:	00a5      	lsls	r5, r4, #2
 8007898:	195b      	adds	r3, r3, r5
 800789a:	3b04      	subs	r3, #4
 800789c:	6819      	ldr	r1, [r3, #0]
 800789e:	2900      	cmp	r1, #0
 80078a0:	d00f      	beq.n	80078c2 <__mdiff+0x11e>
 80078a2:	6110      	str	r0, [r2, #16]
 80078a4:	e797      	b.n	80077d6 <__mdiff+0x32>
 80078a6:	ce02      	ldmia	r6!, {r1}
 80078a8:	b28d      	uxth	r5, r1
 80078aa:	19ed      	adds	r5, r5, r7
 80078ac:	0c0f      	lsrs	r7, r1, #16
 80078ae:	1429      	asrs	r1, r5, #16
 80078b0:	1879      	adds	r1, r7, r1
 80078b2:	140f      	asrs	r7, r1, #16
 80078b4:	b2ad      	uxth	r5, r5
 80078b6:	0409      	lsls	r1, r1, #16
 80078b8:	430d      	orrs	r5, r1
 80078ba:	4661      	mov	r1, ip
 80078bc:	c120      	stmia	r1!, {r5}
 80078be:	468c      	mov	ip, r1
 80078c0:	e7dd      	b.n	800787e <__mdiff+0xda>
 80078c2:	3801      	subs	r0, #1
 80078c4:	e7e9      	b.n	800789a <__mdiff+0xf6>
 80078c6:	46c0      	nop			; (mov r8, r8)
 80078c8:	08008d3b 	.word	0x08008d3b
 80078cc:	00000232 	.word	0x00000232
 80078d0:	08008d4c 	.word	0x08008d4c

080078d4 <__d2b>:
 80078d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80078d6:	2101      	movs	r1, #1
 80078d8:	0014      	movs	r4, r2
 80078da:	001e      	movs	r6, r3
 80078dc:	9f08      	ldr	r7, [sp, #32]
 80078de:	f7ff fcc1 	bl	8007264 <_Balloc>
 80078e2:	1e05      	subs	r5, r0, #0
 80078e4:	d105      	bne.n	80078f2 <__d2b+0x1e>
 80078e6:	0002      	movs	r2, r0
 80078e8:	4b26      	ldr	r3, [pc, #152]	; (8007984 <__d2b+0xb0>)
 80078ea:	4927      	ldr	r1, [pc, #156]	; (8007988 <__d2b+0xb4>)
 80078ec:	4827      	ldr	r0, [pc, #156]	; (800798c <__d2b+0xb8>)
 80078ee:	f000 fad7 	bl	8007ea0 <__assert_func>
 80078f2:	0333      	lsls	r3, r6, #12
 80078f4:	0076      	lsls	r6, r6, #1
 80078f6:	0b1b      	lsrs	r3, r3, #12
 80078f8:	0d76      	lsrs	r6, r6, #21
 80078fa:	d124      	bne.n	8007946 <__d2b+0x72>
 80078fc:	9301      	str	r3, [sp, #4]
 80078fe:	2c00      	cmp	r4, #0
 8007900:	d027      	beq.n	8007952 <__d2b+0x7e>
 8007902:	4668      	mov	r0, sp
 8007904:	9400      	str	r4, [sp, #0]
 8007906:	f7ff fd73 	bl	80073f0 <__lo0bits>
 800790a:	9c00      	ldr	r4, [sp, #0]
 800790c:	2800      	cmp	r0, #0
 800790e:	d01e      	beq.n	800794e <__d2b+0x7a>
 8007910:	9b01      	ldr	r3, [sp, #4]
 8007912:	2120      	movs	r1, #32
 8007914:	001a      	movs	r2, r3
 8007916:	1a09      	subs	r1, r1, r0
 8007918:	408a      	lsls	r2, r1
 800791a:	40c3      	lsrs	r3, r0
 800791c:	4322      	orrs	r2, r4
 800791e:	616a      	str	r2, [r5, #20]
 8007920:	9301      	str	r3, [sp, #4]
 8007922:	9c01      	ldr	r4, [sp, #4]
 8007924:	61ac      	str	r4, [r5, #24]
 8007926:	1e63      	subs	r3, r4, #1
 8007928:	419c      	sbcs	r4, r3
 800792a:	3401      	adds	r4, #1
 800792c:	612c      	str	r4, [r5, #16]
 800792e:	2e00      	cmp	r6, #0
 8007930:	d018      	beq.n	8007964 <__d2b+0x90>
 8007932:	4b17      	ldr	r3, [pc, #92]	; (8007990 <__d2b+0xbc>)
 8007934:	18f6      	adds	r6, r6, r3
 8007936:	2335      	movs	r3, #53	; 0x35
 8007938:	1836      	adds	r6, r6, r0
 800793a:	1a18      	subs	r0, r3, r0
 800793c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800793e:	603e      	str	r6, [r7, #0]
 8007940:	6018      	str	r0, [r3, #0]
 8007942:	0028      	movs	r0, r5
 8007944:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007946:	2280      	movs	r2, #128	; 0x80
 8007948:	0352      	lsls	r2, r2, #13
 800794a:	4313      	orrs	r3, r2
 800794c:	e7d6      	b.n	80078fc <__d2b+0x28>
 800794e:	616c      	str	r4, [r5, #20]
 8007950:	e7e7      	b.n	8007922 <__d2b+0x4e>
 8007952:	a801      	add	r0, sp, #4
 8007954:	f7ff fd4c 	bl	80073f0 <__lo0bits>
 8007958:	2401      	movs	r4, #1
 800795a:	9b01      	ldr	r3, [sp, #4]
 800795c:	612c      	str	r4, [r5, #16]
 800795e:	616b      	str	r3, [r5, #20]
 8007960:	3020      	adds	r0, #32
 8007962:	e7e4      	b.n	800792e <__d2b+0x5a>
 8007964:	4b0b      	ldr	r3, [pc, #44]	; (8007994 <__d2b+0xc0>)
 8007966:	18c0      	adds	r0, r0, r3
 8007968:	4b0b      	ldr	r3, [pc, #44]	; (8007998 <__d2b+0xc4>)
 800796a:	6038      	str	r0, [r7, #0]
 800796c:	18e3      	adds	r3, r4, r3
 800796e:	009b      	lsls	r3, r3, #2
 8007970:	18eb      	adds	r3, r5, r3
 8007972:	6958      	ldr	r0, [r3, #20]
 8007974:	f7ff fd22 	bl	80073bc <__hi0bits>
 8007978:	0164      	lsls	r4, r4, #5
 800797a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800797c:	1a24      	subs	r4, r4, r0
 800797e:	601c      	str	r4, [r3, #0]
 8007980:	e7df      	b.n	8007942 <__d2b+0x6e>
 8007982:	46c0      	nop			; (mov r8, r8)
 8007984:	08008d3b 	.word	0x08008d3b
 8007988:	0000030a 	.word	0x0000030a
 800798c:	08008d4c 	.word	0x08008d4c
 8007990:	fffffbcd 	.word	0xfffffbcd
 8007994:	fffffbce 	.word	0xfffffbce
 8007998:	3fffffff 	.word	0x3fffffff

0800799c <_calloc_r>:
 800799c:	b570      	push	{r4, r5, r6, lr}
 800799e:	0c13      	lsrs	r3, r2, #16
 80079a0:	0c0d      	lsrs	r5, r1, #16
 80079a2:	d11e      	bne.n	80079e2 <_calloc_r+0x46>
 80079a4:	2b00      	cmp	r3, #0
 80079a6:	d10c      	bne.n	80079c2 <_calloc_r+0x26>
 80079a8:	b289      	uxth	r1, r1
 80079aa:	b294      	uxth	r4, r2
 80079ac:	434c      	muls	r4, r1
 80079ae:	0021      	movs	r1, r4
 80079b0:	f000 f88c 	bl	8007acc <_malloc_r>
 80079b4:	1e05      	subs	r5, r0, #0
 80079b6:	d01b      	beq.n	80079f0 <_calloc_r+0x54>
 80079b8:	0022      	movs	r2, r4
 80079ba:	2100      	movs	r1, #0
 80079bc:	f7fe f8f4 	bl	8005ba8 <memset>
 80079c0:	e016      	b.n	80079f0 <_calloc_r+0x54>
 80079c2:	1c1d      	adds	r5, r3, #0
 80079c4:	1c0b      	adds	r3, r1, #0
 80079c6:	b292      	uxth	r2, r2
 80079c8:	b289      	uxth	r1, r1
 80079ca:	b29c      	uxth	r4, r3
 80079cc:	4351      	muls	r1, r2
 80079ce:	b2ab      	uxth	r3, r5
 80079d0:	4363      	muls	r3, r4
 80079d2:	0c0c      	lsrs	r4, r1, #16
 80079d4:	191c      	adds	r4, r3, r4
 80079d6:	0c22      	lsrs	r2, r4, #16
 80079d8:	d107      	bne.n	80079ea <_calloc_r+0x4e>
 80079da:	0424      	lsls	r4, r4, #16
 80079dc:	b289      	uxth	r1, r1
 80079de:	430c      	orrs	r4, r1
 80079e0:	e7e5      	b.n	80079ae <_calloc_r+0x12>
 80079e2:	2b00      	cmp	r3, #0
 80079e4:	d101      	bne.n	80079ea <_calloc_r+0x4e>
 80079e6:	1c13      	adds	r3, r2, #0
 80079e8:	e7ed      	b.n	80079c6 <_calloc_r+0x2a>
 80079ea:	230c      	movs	r3, #12
 80079ec:	2500      	movs	r5, #0
 80079ee:	6003      	str	r3, [r0, #0]
 80079f0:	0028      	movs	r0, r5
 80079f2:	bd70      	pop	{r4, r5, r6, pc}

080079f4 <_free_r>:
 80079f4:	b570      	push	{r4, r5, r6, lr}
 80079f6:	0005      	movs	r5, r0
 80079f8:	2900      	cmp	r1, #0
 80079fa:	d010      	beq.n	8007a1e <_free_r+0x2a>
 80079fc:	1f0c      	subs	r4, r1, #4
 80079fe:	6823      	ldr	r3, [r4, #0]
 8007a00:	2b00      	cmp	r3, #0
 8007a02:	da00      	bge.n	8007a06 <_free_r+0x12>
 8007a04:	18e4      	adds	r4, r4, r3
 8007a06:	0028      	movs	r0, r5
 8007a08:	f000 fa9e 	bl	8007f48 <__malloc_lock>
 8007a0c:	4a1d      	ldr	r2, [pc, #116]	; (8007a84 <_free_r+0x90>)
 8007a0e:	6813      	ldr	r3, [r2, #0]
 8007a10:	2b00      	cmp	r3, #0
 8007a12:	d105      	bne.n	8007a20 <_free_r+0x2c>
 8007a14:	6063      	str	r3, [r4, #4]
 8007a16:	6014      	str	r4, [r2, #0]
 8007a18:	0028      	movs	r0, r5
 8007a1a:	f000 fa9d 	bl	8007f58 <__malloc_unlock>
 8007a1e:	bd70      	pop	{r4, r5, r6, pc}
 8007a20:	42a3      	cmp	r3, r4
 8007a22:	d908      	bls.n	8007a36 <_free_r+0x42>
 8007a24:	6821      	ldr	r1, [r4, #0]
 8007a26:	1860      	adds	r0, r4, r1
 8007a28:	4283      	cmp	r3, r0
 8007a2a:	d1f3      	bne.n	8007a14 <_free_r+0x20>
 8007a2c:	6818      	ldr	r0, [r3, #0]
 8007a2e:	685b      	ldr	r3, [r3, #4]
 8007a30:	1841      	adds	r1, r0, r1
 8007a32:	6021      	str	r1, [r4, #0]
 8007a34:	e7ee      	b.n	8007a14 <_free_r+0x20>
 8007a36:	001a      	movs	r2, r3
 8007a38:	685b      	ldr	r3, [r3, #4]
 8007a3a:	2b00      	cmp	r3, #0
 8007a3c:	d001      	beq.n	8007a42 <_free_r+0x4e>
 8007a3e:	42a3      	cmp	r3, r4
 8007a40:	d9f9      	bls.n	8007a36 <_free_r+0x42>
 8007a42:	6811      	ldr	r1, [r2, #0]
 8007a44:	1850      	adds	r0, r2, r1
 8007a46:	42a0      	cmp	r0, r4
 8007a48:	d10b      	bne.n	8007a62 <_free_r+0x6e>
 8007a4a:	6820      	ldr	r0, [r4, #0]
 8007a4c:	1809      	adds	r1, r1, r0
 8007a4e:	1850      	adds	r0, r2, r1
 8007a50:	6011      	str	r1, [r2, #0]
 8007a52:	4283      	cmp	r3, r0
 8007a54:	d1e0      	bne.n	8007a18 <_free_r+0x24>
 8007a56:	6818      	ldr	r0, [r3, #0]
 8007a58:	685b      	ldr	r3, [r3, #4]
 8007a5a:	1841      	adds	r1, r0, r1
 8007a5c:	6011      	str	r1, [r2, #0]
 8007a5e:	6053      	str	r3, [r2, #4]
 8007a60:	e7da      	b.n	8007a18 <_free_r+0x24>
 8007a62:	42a0      	cmp	r0, r4
 8007a64:	d902      	bls.n	8007a6c <_free_r+0x78>
 8007a66:	230c      	movs	r3, #12
 8007a68:	602b      	str	r3, [r5, #0]
 8007a6a:	e7d5      	b.n	8007a18 <_free_r+0x24>
 8007a6c:	6821      	ldr	r1, [r4, #0]
 8007a6e:	1860      	adds	r0, r4, r1
 8007a70:	4283      	cmp	r3, r0
 8007a72:	d103      	bne.n	8007a7c <_free_r+0x88>
 8007a74:	6818      	ldr	r0, [r3, #0]
 8007a76:	685b      	ldr	r3, [r3, #4]
 8007a78:	1841      	adds	r1, r0, r1
 8007a7a:	6021      	str	r1, [r4, #0]
 8007a7c:	6063      	str	r3, [r4, #4]
 8007a7e:	6054      	str	r4, [r2, #4]
 8007a80:	e7ca      	b.n	8007a18 <_free_r+0x24>
 8007a82:	46c0      	nop			; (mov r8, r8)
 8007a84:	20000288 	.word	0x20000288

08007a88 <sbrk_aligned>:
 8007a88:	b570      	push	{r4, r5, r6, lr}
 8007a8a:	4e0f      	ldr	r6, [pc, #60]	; (8007ac8 <sbrk_aligned+0x40>)
 8007a8c:	000d      	movs	r5, r1
 8007a8e:	6831      	ldr	r1, [r6, #0]
 8007a90:	0004      	movs	r4, r0
 8007a92:	2900      	cmp	r1, #0
 8007a94:	d102      	bne.n	8007a9c <sbrk_aligned+0x14>
 8007a96:	f000 f9f1 	bl	8007e7c <_sbrk_r>
 8007a9a:	6030      	str	r0, [r6, #0]
 8007a9c:	0029      	movs	r1, r5
 8007a9e:	0020      	movs	r0, r4
 8007aa0:	f000 f9ec 	bl	8007e7c <_sbrk_r>
 8007aa4:	1c43      	adds	r3, r0, #1
 8007aa6:	d00a      	beq.n	8007abe <sbrk_aligned+0x36>
 8007aa8:	2303      	movs	r3, #3
 8007aaa:	1cc5      	adds	r5, r0, #3
 8007aac:	439d      	bics	r5, r3
 8007aae:	42a8      	cmp	r0, r5
 8007ab0:	d007      	beq.n	8007ac2 <sbrk_aligned+0x3a>
 8007ab2:	1a29      	subs	r1, r5, r0
 8007ab4:	0020      	movs	r0, r4
 8007ab6:	f000 f9e1 	bl	8007e7c <_sbrk_r>
 8007aba:	1c43      	adds	r3, r0, #1
 8007abc:	d101      	bne.n	8007ac2 <sbrk_aligned+0x3a>
 8007abe:	2501      	movs	r5, #1
 8007ac0:	426d      	negs	r5, r5
 8007ac2:	0028      	movs	r0, r5
 8007ac4:	bd70      	pop	{r4, r5, r6, pc}
 8007ac6:	46c0      	nop			; (mov r8, r8)
 8007ac8:	2000028c 	.word	0x2000028c

08007acc <_malloc_r>:
 8007acc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007ace:	2203      	movs	r2, #3
 8007ad0:	1ccb      	adds	r3, r1, #3
 8007ad2:	4393      	bics	r3, r2
 8007ad4:	3308      	adds	r3, #8
 8007ad6:	0006      	movs	r6, r0
 8007ad8:	001f      	movs	r7, r3
 8007ada:	2b0c      	cmp	r3, #12
 8007adc:	d232      	bcs.n	8007b44 <_malloc_r+0x78>
 8007ade:	270c      	movs	r7, #12
 8007ae0:	42b9      	cmp	r1, r7
 8007ae2:	d831      	bhi.n	8007b48 <_malloc_r+0x7c>
 8007ae4:	0030      	movs	r0, r6
 8007ae6:	f000 fa2f 	bl	8007f48 <__malloc_lock>
 8007aea:	4d32      	ldr	r5, [pc, #200]	; (8007bb4 <_malloc_r+0xe8>)
 8007aec:	682b      	ldr	r3, [r5, #0]
 8007aee:	001c      	movs	r4, r3
 8007af0:	2c00      	cmp	r4, #0
 8007af2:	d12e      	bne.n	8007b52 <_malloc_r+0x86>
 8007af4:	0039      	movs	r1, r7
 8007af6:	0030      	movs	r0, r6
 8007af8:	f7ff ffc6 	bl	8007a88 <sbrk_aligned>
 8007afc:	0004      	movs	r4, r0
 8007afe:	1c43      	adds	r3, r0, #1
 8007b00:	d11e      	bne.n	8007b40 <_malloc_r+0x74>
 8007b02:	682c      	ldr	r4, [r5, #0]
 8007b04:	0025      	movs	r5, r4
 8007b06:	2d00      	cmp	r5, #0
 8007b08:	d14a      	bne.n	8007ba0 <_malloc_r+0xd4>
 8007b0a:	6823      	ldr	r3, [r4, #0]
 8007b0c:	0029      	movs	r1, r5
 8007b0e:	18e3      	adds	r3, r4, r3
 8007b10:	0030      	movs	r0, r6
 8007b12:	9301      	str	r3, [sp, #4]
 8007b14:	f000 f9b2 	bl	8007e7c <_sbrk_r>
 8007b18:	9b01      	ldr	r3, [sp, #4]
 8007b1a:	4283      	cmp	r3, r0
 8007b1c:	d143      	bne.n	8007ba6 <_malloc_r+0xda>
 8007b1e:	6823      	ldr	r3, [r4, #0]
 8007b20:	3703      	adds	r7, #3
 8007b22:	1aff      	subs	r7, r7, r3
 8007b24:	2303      	movs	r3, #3
 8007b26:	439f      	bics	r7, r3
 8007b28:	3708      	adds	r7, #8
 8007b2a:	2f0c      	cmp	r7, #12
 8007b2c:	d200      	bcs.n	8007b30 <_malloc_r+0x64>
 8007b2e:	270c      	movs	r7, #12
 8007b30:	0039      	movs	r1, r7
 8007b32:	0030      	movs	r0, r6
 8007b34:	f7ff ffa8 	bl	8007a88 <sbrk_aligned>
 8007b38:	1c43      	adds	r3, r0, #1
 8007b3a:	d034      	beq.n	8007ba6 <_malloc_r+0xda>
 8007b3c:	6823      	ldr	r3, [r4, #0]
 8007b3e:	19df      	adds	r7, r3, r7
 8007b40:	6027      	str	r7, [r4, #0]
 8007b42:	e013      	b.n	8007b6c <_malloc_r+0xa0>
 8007b44:	2b00      	cmp	r3, #0
 8007b46:	dacb      	bge.n	8007ae0 <_malloc_r+0x14>
 8007b48:	230c      	movs	r3, #12
 8007b4a:	2500      	movs	r5, #0
 8007b4c:	6033      	str	r3, [r6, #0]
 8007b4e:	0028      	movs	r0, r5
 8007b50:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007b52:	6822      	ldr	r2, [r4, #0]
 8007b54:	1bd1      	subs	r1, r2, r7
 8007b56:	d420      	bmi.n	8007b9a <_malloc_r+0xce>
 8007b58:	290b      	cmp	r1, #11
 8007b5a:	d917      	bls.n	8007b8c <_malloc_r+0xc0>
 8007b5c:	19e2      	adds	r2, r4, r7
 8007b5e:	6027      	str	r7, [r4, #0]
 8007b60:	42a3      	cmp	r3, r4
 8007b62:	d111      	bne.n	8007b88 <_malloc_r+0xbc>
 8007b64:	602a      	str	r2, [r5, #0]
 8007b66:	6863      	ldr	r3, [r4, #4]
 8007b68:	6011      	str	r1, [r2, #0]
 8007b6a:	6053      	str	r3, [r2, #4]
 8007b6c:	0030      	movs	r0, r6
 8007b6e:	0025      	movs	r5, r4
 8007b70:	f000 f9f2 	bl	8007f58 <__malloc_unlock>
 8007b74:	2207      	movs	r2, #7
 8007b76:	350b      	adds	r5, #11
 8007b78:	1d23      	adds	r3, r4, #4
 8007b7a:	4395      	bics	r5, r2
 8007b7c:	1aea      	subs	r2, r5, r3
 8007b7e:	429d      	cmp	r5, r3
 8007b80:	d0e5      	beq.n	8007b4e <_malloc_r+0x82>
 8007b82:	1b5b      	subs	r3, r3, r5
 8007b84:	50a3      	str	r3, [r4, r2]
 8007b86:	e7e2      	b.n	8007b4e <_malloc_r+0x82>
 8007b88:	605a      	str	r2, [r3, #4]
 8007b8a:	e7ec      	b.n	8007b66 <_malloc_r+0x9a>
 8007b8c:	6862      	ldr	r2, [r4, #4]
 8007b8e:	42a3      	cmp	r3, r4
 8007b90:	d101      	bne.n	8007b96 <_malloc_r+0xca>
 8007b92:	602a      	str	r2, [r5, #0]
 8007b94:	e7ea      	b.n	8007b6c <_malloc_r+0xa0>
 8007b96:	605a      	str	r2, [r3, #4]
 8007b98:	e7e8      	b.n	8007b6c <_malloc_r+0xa0>
 8007b9a:	0023      	movs	r3, r4
 8007b9c:	6864      	ldr	r4, [r4, #4]
 8007b9e:	e7a7      	b.n	8007af0 <_malloc_r+0x24>
 8007ba0:	002c      	movs	r4, r5
 8007ba2:	686d      	ldr	r5, [r5, #4]
 8007ba4:	e7af      	b.n	8007b06 <_malloc_r+0x3a>
 8007ba6:	230c      	movs	r3, #12
 8007ba8:	0030      	movs	r0, r6
 8007baa:	6033      	str	r3, [r6, #0]
 8007bac:	f000 f9d4 	bl	8007f58 <__malloc_unlock>
 8007bb0:	e7cd      	b.n	8007b4e <_malloc_r+0x82>
 8007bb2:	46c0      	nop			; (mov r8, r8)
 8007bb4:	20000288 	.word	0x20000288

08007bb8 <__ssputs_r>:
 8007bb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007bba:	688e      	ldr	r6, [r1, #8]
 8007bbc:	b085      	sub	sp, #20
 8007bbe:	0007      	movs	r7, r0
 8007bc0:	000c      	movs	r4, r1
 8007bc2:	9203      	str	r2, [sp, #12]
 8007bc4:	9301      	str	r3, [sp, #4]
 8007bc6:	429e      	cmp	r6, r3
 8007bc8:	d83c      	bhi.n	8007c44 <__ssputs_r+0x8c>
 8007bca:	2390      	movs	r3, #144	; 0x90
 8007bcc:	898a      	ldrh	r2, [r1, #12]
 8007bce:	00db      	lsls	r3, r3, #3
 8007bd0:	421a      	tst	r2, r3
 8007bd2:	d034      	beq.n	8007c3e <__ssputs_r+0x86>
 8007bd4:	6909      	ldr	r1, [r1, #16]
 8007bd6:	6823      	ldr	r3, [r4, #0]
 8007bd8:	6960      	ldr	r0, [r4, #20]
 8007bda:	1a5b      	subs	r3, r3, r1
 8007bdc:	9302      	str	r3, [sp, #8]
 8007bde:	2303      	movs	r3, #3
 8007be0:	4343      	muls	r3, r0
 8007be2:	0fdd      	lsrs	r5, r3, #31
 8007be4:	18ed      	adds	r5, r5, r3
 8007be6:	9b01      	ldr	r3, [sp, #4]
 8007be8:	9802      	ldr	r0, [sp, #8]
 8007bea:	3301      	adds	r3, #1
 8007bec:	181b      	adds	r3, r3, r0
 8007bee:	106d      	asrs	r5, r5, #1
 8007bf0:	42ab      	cmp	r3, r5
 8007bf2:	d900      	bls.n	8007bf6 <__ssputs_r+0x3e>
 8007bf4:	001d      	movs	r5, r3
 8007bf6:	0553      	lsls	r3, r2, #21
 8007bf8:	d532      	bpl.n	8007c60 <__ssputs_r+0xa8>
 8007bfa:	0029      	movs	r1, r5
 8007bfc:	0038      	movs	r0, r7
 8007bfe:	f7ff ff65 	bl	8007acc <_malloc_r>
 8007c02:	1e06      	subs	r6, r0, #0
 8007c04:	d109      	bne.n	8007c1a <__ssputs_r+0x62>
 8007c06:	230c      	movs	r3, #12
 8007c08:	603b      	str	r3, [r7, #0]
 8007c0a:	2340      	movs	r3, #64	; 0x40
 8007c0c:	2001      	movs	r0, #1
 8007c0e:	89a2      	ldrh	r2, [r4, #12]
 8007c10:	4240      	negs	r0, r0
 8007c12:	4313      	orrs	r3, r2
 8007c14:	81a3      	strh	r3, [r4, #12]
 8007c16:	b005      	add	sp, #20
 8007c18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007c1a:	9a02      	ldr	r2, [sp, #8]
 8007c1c:	6921      	ldr	r1, [r4, #16]
 8007c1e:	f7ff fb18 	bl	8007252 <memcpy>
 8007c22:	89a3      	ldrh	r3, [r4, #12]
 8007c24:	4a14      	ldr	r2, [pc, #80]	; (8007c78 <__ssputs_r+0xc0>)
 8007c26:	401a      	ands	r2, r3
 8007c28:	2380      	movs	r3, #128	; 0x80
 8007c2a:	4313      	orrs	r3, r2
 8007c2c:	81a3      	strh	r3, [r4, #12]
 8007c2e:	9b02      	ldr	r3, [sp, #8]
 8007c30:	6126      	str	r6, [r4, #16]
 8007c32:	18f6      	adds	r6, r6, r3
 8007c34:	6026      	str	r6, [r4, #0]
 8007c36:	6165      	str	r5, [r4, #20]
 8007c38:	9e01      	ldr	r6, [sp, #4]
 8007c3a:	1aed      	subs	r5, r5, r3
 8007c3c:	60a5      	str	r5, [r4, #8]
 8007c3e:	9b01      	ldr	r3, [sp, #4]
 8007c40:	429e      	cmp	r6, r3
 8007c42:	d900      	bls.n	8007c46 <__ssputs_r+0x8e>
 8007c44:	9e01      	ldr	r6, [sp, #4]
 8007c46:	0032      	movs	r2, r6
 8007c48:	9903      	ldr	r1, [sp, #12]
 8007c4a:	6820      	ldr	r0, [r4, #0]
 8007c4c:	f000 f968 	bl	8007f20 <memmove>
 8007c50:	68a3      	ldr	r3, [r4, #8]
 8007c52:	2000      	movs	r0, #0
 8007c54:	1b9b      	subs	r3, r3, r6
 8007c56:	60a3      	str	r3, [r4, #8]
 8007c58:	6823      	ldr	r3, [r4, #0]
 8007c5a:	199e      	adds	r6, r3, r6
 8007c5c:	6026      	str	r6, [r4, #0]
 8007c5e:	e7da      	b.n	8007c16 <__ssputs_r+0x5e>
 8007c60:	002a      	movs	r2, r5
 8007c62:	0038      	movs	r0, r7
 8007c64:	f000 f980 	bl	8007f68 <_realloc_r>
 8007c68:	1e06      	subs	r6, r0, #0
 8007c6a:	d1e0      	bne.n	8007c2e <__ssputs_r+0x76>
 8007c6c:	0038      	movs	r0, r7
 8007c6e:	6921      	ldr	r1, [r4, #16]
 8007c70:	f7ff fec0 	bl	80079f4 <_free_r>
 8007c74:	e7c7      	b.n	8007c06 <__ssputs_r+0x4e>
 8007c76:	46c0      	nop			; (mov r8, r8)
 8007c78:	fffffb7f 	.word	0xfffffb7f

08007c7c <_svfiprintf_r>:
 8007c7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007c7e:	b0a1      	sub	sp, #132	; 0x84
 8007c80:	9003      	str	r0, [sp, #12]
 8007c82:	001d      	movs	r5, r3
 8007c84:	898b      	ldrh	r3, [r1, #12]
 8007c86:	000f      	movs	r7, r1
 8007c88:	0016      	movs	r6, r2
 8007c8a:	061b      	lsls	r3, r3, #24
 8007c8c:	d511      	bpl.n	8007cb2 <_svfiprintf_r+0x36>
 8007c8e:	690b      	ldr	r3, [r1, #16]
 8007c90:	2b00      	cmp	r3, #0
 8007c92:	d10e      	bne.n	8007cb2 <_svfiprintf_r+0x36>
 8007c94:	2140      	movs	r1, #64	; 0x40
 8007c96:	f7ff ff19 	bl	8007acc <_malloc_r>
 8007c9a:	6038      	str	r0, [r7, #0]
 8007c9c:	6138      	str	r0, [r7, #16]
 8007c9e:	2800      	cmp	r0, #0
 8007ca0:	d105      	bne.n	8007cae <_svfiprintf_r+0x32>
 8007ca2:	230c      	movs	r3, #12
 8007ca4:	9a03      	ldr	r2, [sp, #12]
 8007ca6:	3801      	subs	r0, #1
 8007ca8:	6013      	str	r3, [r2, #0]
 8007caa:	b021      	add	sp, #132	; 0x84
 8007cac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007cae:	2340      	movs	r3, #64	; 0x40
 8007cb0:	617b      	str	r3, [r7, #20]
 8007cb2:	2300      	movs	r3, #0
 8007cb4:	ac08      	add	r4, sp, #32
 8007cb6:	6163      	str	r3, [r4, #20]
 8007cb8:	3320      	adds	r3, #32
 8007cba:	7663      	strb	r3, [r4, #25]
 8007cbc:	3310      	adds	r3, #16
 8007cbe:	76a3      	strb	r3, [r4, #26]
 8007cc0:	9507      	str	r5, [sp, #28]
 8007cc2:	0035      	movs	r5, r6
 8007cc4:	782b      	ldrb	r3, [r5, #0]
 8007cc6:	2b00      	cmp	r3, #0
 8007cc8:	d001      	beq.n	8007cce <_svfiprintf_r+0x52>
 8007cca:	2b25      	cmp	r3, #37	; 0x25
 8007ccc:	d147      	bne.n	8007d5e <_svfiprintf_r+0xe2>
 8007cce:	1bab      	subs	r3, r5, r6
 8007cd0:	9305      	str	r3, [sp, #20]
 8007cd2:	42b5      	cmp	r5, r6
 8007cd4:	d00c      	beq.n	8007cf0 <_svfiprintf_r+0x74>
 8007cd6:	0032      	movs	r2, r6
 8007cd8:	0039      	movs	r1, r7
 8007cda:	9803      	ldr	r0, [sp, #12]
 8007cdc:	f7ff ff6c 	bl	8007bb8 <__ssputs_r>
 8007ce0:	1c43      	adds	r3, r0, #1
 8007ce2:	d100      	bne.n	8007ce6 <_svfiprintf_r+0x6a>
 8007ce4:	e0ae      	b.n	8007e44 <_svfiprintf_r+0x1c8>
 8007ce6:	6962      	ldr	r2, [r4, #20]
 8007ce8:	9b05      	ldr	r3, [sp, #20]
 8007cea:	4694      	mov	ip, r2
 8007cec:	4463      	add	r3, ip
 8007cee:	6163      	str	r3, [r4, #20]
 8007cf0:	782b      	ldrb	r3, [r5, #0]
 8007cf2:	2b00      	cmp	r3, #0
 8007cf4:	d100      	bne.n	8007cf8 <_svfiprintf_r+0x7c>
 8007cf6:	e0a5      	b.n	8007e44 <_svfiprintf_r+0x1c8>
 8007cf8:	2201      	movs	r2, #1
 8007cfa:	2300      	movs	r3, #0
 8007cfc:	4252      	negs	r2, r2
 8007cfe:	6062      	str	r2, [r4, #4]
 8007d00:	a904      	add	r1, sp, #16
 8007d02:	3254      	adds	r2, #84	; 0x54
 8007d04:	1852      	adds	r2, r2, r1
 8007d06:	1c6e      	adds	r6, r5, #1
 8007d08:	6023      	str	r3, [r4, #0]
 8007d0a:	60e3      	str	r3, [r4, #12]
 8007d0c:	60a3      	str	r3, [r4, #8]
 8007d0e:	7013      	strb	r3, [r2, #0]
 8007d10:	65a3      	str	r3, [r4, #88]	; 0x58
 8007d12:	2205      	movs	r2, #5
 8007d14:	7831      	ldrb	r1, [r6, #0]
 8007d16:	4854      	ldr	r0, [pc, #336]	; (8007e68 <_svfiprintf_r+0x1ec>)
 8007d18:	f7ff fa90 	bl	800723c <memchr>
 8007d1c:	1c75      	adds	r5, r6, #1
 8007d1e:	2800      	cmp	r0, #0
 8007d20:	d11f      	bne.n	8007d62 <_svfiprintf_r+0xe6>
 8007d22:	6822      	ldr	r2, [r4, #0]
 8007d24:	06d3      	lsls	r3, r2, #27
 8007d26:	d504      	bpl.n	8007d32 <_svfiprintf_r+0xb6>
 8007d28:	2353      	movs	r3, #83	; 0x53
 8007d2a:	a904      	add	r1, sp, #16
 8007d2c:	185b      	adds	r3, r3, r1
 8007d2e:	2120      	movs	r1, #32
 8007d30:	7019      	strb	r1, [r3, #0]
 8007d32:	0713      	lsls	r3, r2, #28
 8007d34:	d504      	bpl.n	8007d40 <_svfiprintf_r+0xc4>
 8007d36:	2353      	movs	r3, #83	; 0x53
 8007d38:	a904      	add	r1, sp, #16
 8007d3a:	185b      	adds	r3, r3, r1
 8007d3c:	212b      	movs	r1, #43	; 0x2b
 8007d3e:	7019      	strb	r1, [r3, #0]
 8007d40:	7833      	ldrb	r3, [r6, #0]
 8007d42:	2b2a      	cmp	r3, #42	; 0x2a
 8007d44:	d016      	beq.n	8007d74 <_svfiprintf_r+0xf8>
 8007d46:	0035      	movs	r5, r6
 8007d48:	2100      	movs	r1, #0
 8007d4a:	200a      	movs	r0, #10
 8007d4c:	68e3      	ldr	r3, [r4, #12]
 8007d4e:	782a      	ldrb	r2, [r5, #0]
 8007d50:	1c6e      	adds	r6, r5, #1
 8007d52:	3a30      	subs	r2, #48	; 0x30
 8007d54:	2a09      	cmp	r2, #9
 8007d56:	d94e      	bls.n	8007df6 <_svfiprintf_r+0x17a>
 8007d58:	2900      	cmp	r1, #0
 8007d5a:	d111      	bne.n	8007d80 <_svfiprintf_r+0x104>
 8007d5c:	e017      	b.n	8007d8e <_svfiprintf_r+0x112>
 8007d5e:	3501      	adds	r5, #1
 8007d60:	e7b0      	b.n	8007cc4 <_svfiprintf_r+0x48>
 8007d62:	4b41      	ldr	r3, [pc, #260]	; (8007e68 <_svfiprintf_r+0x1ec>)
 8007d64:	6822      	ldr	r2, [r4, #0]
 8007d66:	1ac0      	subs	r0, r0, r3
 8007d68:	2301      	movs	r3, #1
 8007d6a:	4083      	lsls	r3, r0
 8007d6c:	4313      	orrs	r3, r2
 8007d6e:	002e      	movs	r6, r5
 8007d70:	6023      	str	r3, [r4, #0]
 8007d72:	e7ce      	b.n	8007d12 <_svfiprintf_r+0x96>
 8007d74:	9b07      	ldr	r3, [sp, #28]
 8007d76:	1d19      	adds	r1, r3, #4
 8007d78:	681b      	ldr	r3, [r3, #0]
 8007d7a:	9107      	str	r1, [sp, #28]
 8007d7c:	2b00      	cmp	r3, #0
 8007d7e:	db01      	blt.n	8007d84 <_svfiprintf_r+0x108>
 8007d80:	930b      	str	r3, [sp, #44]	; 0x2c
 8007d82:	e004      	b.n	8007d8e <_svfiprintf_r+0x112>
 8007d84:	425b      	negs	r3, r3
 8007d86:	60e3      	str	r3, [r4, #12]
 8007d88:	2302      	movs	r3, #2
 8007d8a:	4313      	orrs	r3, r2
 8007d8c:	6023      	str	r3, [r4, #0]
 8007d8e:	782b      	ldrb	r3, [r5, #0]
 8007d90:	2b2e      	cmp	r3, #46	; 0x2e
 8007d92:	d10a      	bne.n	8007daa <_svfiprintf_r+0x12e>
 8007d94:	786b      	ldrb	r3, [r5, #1]
 8007d96:	2b2a      	cmp	r3, #42	; 0x2a
 8007d98:	d135      	bne.n	8007e06 <_svfiprintf_r+0x18a>
 8007d9a:	9b07      	ldr	r3, [sp, #28]
 8007d9c:	3502      	adds	r5, #2
 8007d9e:	1d1a      	adds	r2, r3, #4
 8007da0:	681b      	ldr	r3, [r3, #0]
 8007da2:	9207      	str	r2, [sp, #28]
 8007da4:	2b00      	cmp	r3, #0
 8007da6:	db2b      	blt.n	8007e00 <_svfiprintf_r+0x184>
 8007da8:	9309      	str	r3, [sp, #36]	; 0x24
 8007daa:	4e30      	ldr	r6, [pc, #192]	; (8007e6c <_svfiprintf_r+0x1f0>)
 8007dac:	2203      	movs	r2, #3
 8007dae:	0030      	movs	r0, r6
 8007db0:	7829      	ldrb	r1, [r5, #0]
 8007db2:	f7ff fa43 	bl	800723c <memchr>
 8007db6:	2800      	cmp	r0, #0
 8007db8:	d006      	beq.n	8007dc8 <_svfiprintf_r+0x14c>
 8007dba:	2340      	movs	r3, #64	; 0x40
 8007dbc:	1b80      	subs	r0, r0, r6
 8007dbe:	4083      	lsls	r3, r0
 8007dc0:	6822      	ldr	r2, [r4, #0]
 8007dc2:	3501      	adds	r5, #1
 8007dc4:	4313      	orrs	r3, r2
 8007dc6:	6023      	str	r3, [r4, #0]
 8007dc8:	7829      	ldrb	r1, [r5, #0]
 8007dca:	2206      	movs	r2, #6
 8007dcc:	4828      	ldr	r0, [pc, #160]	; (8007e70 <_svfiprintf_r+0x1f4>)
 8007dce:	1c6e      	adds	r6, r5, #1
 8007dd0:	7621      	strb	r1, [r4, #24]
 8007dd2:	f7ff fa33 	bl	800723c <memchr>
 8007dd6:	2800      	cmp	r0, #0
 8007dd8:	d03c      	beq.n	8007e54 <_svfiprintf_r+0x1d8>
 8007dda:	4b26      	ldr	r3, [pc, #152]	; (8007e74 <_svfiprintf_r+0x1f8>)
 8007ddc:	2b00      	cmp	r3, #0
 8007dde:	d125      	bne.n	8007e2c <_svfiprintf_r+0x1b0>
 8007de0:	2207      	movs	r2, #7
 8007de2:	9b07      	ldr	r3, [sp, #28]
 8007de4:	3307      	adds	r3, #7
 8007de6:	4393      	bics	r3, r2
 8007de8:	3308      	adds	r3, #8
 8007dea:	9307      	str	r3, [sp, #28]
 8007dec:	6963      	ldr	r3, [r4, #20]
 8007dee:	9a04      	ldr	r2, [sp, #16]
 8007df0:	189b      	adds	r3, r3, r2
 8007df2:	6163      	str	r3, [r4, #20]
 8007df4:	e765      	b.n	8007cc2 <_svfiprintf_r+0x46>
 8007df6:	4343      	muls	r3, r0
 8007df8:	0035      	movs	r5, r6
 8007dfa:	2101      	movs	r1, #1
 8007dfc:	189b      	adds	r3, r3, r2
 8007dfe:	e7a6      	b.n	8007d4e <_svfiprintf_r+0xd2>
 8007e00:	2301      	movs	r3, #1
 8007e02:	425b      	negs	r3, r3
 8007e04:	e7d0      	b.n	8007da8 <_svfiprintf_r+0x12c>
 8007e06:	2300      	movs	r3, #0
 8007e08:	200a      	movs	r0, #10
 8007e0a:	001a      	movs	r2, r3
 8007e0c:	3501      	adds	r5, #1
 8007e0e:	6063      	str	r3, [r4, #4]
 8007e10:	7829      	ldrb	r1, [r5, #0]
 8007e12:	1c6e      	adds	r6, r5, #1
 8007e14:	3930      	subs	r1, #48	; 0x30
 8007e16:	2909      	cmp	r1, #9
 8007e18:	d903      	bls.n	8007e22 <_svfiprintf_r+0x1a6>
 8007e1a:	2b00      	cmp	r3, #0
 8007e1c:	d0c5      	beq.n	8007daa <_svfiprintf_r+0x12e>
 8007e1e:	9209      	str	r2, [sp, #36]	; 0x24
 8007e20:	e7c3      	b.n	8007daa <_svfiprintf_r+0x12e>
 8007e22:	4342      	muls	r2, r0
 8007e24:	0035      	movs	r5, r6
 8007e26:	2301      	movs	r3, #1
 8007e28:	1852      	adds	r2, r2, r1
 8007e2a:	e7f1      	b.n	8007e10 <_svfiprintf_r+0x194>
 8007e2c:	ab07      	add	r3, sp, #28
 8007e2e:	9300      	str	r3, [sp, #0]
 8007e30:	003a      	movs	r2, r7
 8007e32:	0021      	movs	r1, r4
 8007e34:	4b10      	ldr	r3, [pc, #64]	; (8007e78 <_svfiprintf_r+0x1fc>)
 8007e36:	9803      	ldr	r0, [sp, #12]
 8007e38:	f7fd ff68 	bl	8005d0c <_printf_float>
 8007e3c:	9004      	str	r0, [sp, #16]
 8007e3e:	9b04      	ldr	r3, [sp, #16]
 8007e40:	3301      	adds	r3, #1
 8007e42:	d1d3      	bne.n	8007dec <_svfiprintf_r+0x170>
 8007e44:	89bb      	ldrh	r3, [r7, #12]
 8007e46:	980d      	ldr	r0, [sp, #52]	; 0x34
 8007e48:	065b      	lsls	r3, r3, #25
 8007e4a:	d400      	bmi.n	8007e4e <_svfiprintf_r+0x1d2>
 8007e4c:	e72d      	b.n	8007caa <_svfiprintf_r+0x2e>
 8007e4e:	2001      	movs	r0, #1
 8007e50:	4240      	negs	r0, r0
 8007e52:	e72a      	b.n	8007caa <_svfiprintf_r+0x2e>
 8007e54:	ab07      	add	r3, sp, #28
 8007e56:	9300      	str	r3, [sp, #0]
 8007e58:	003a      	movs	r2, r7
 8007e5a:	0021      	movs	r1, r4
 8007e5c:	4b06      	ldr	r3, [pc, #24]	; (8007e78 <_svfiprintf_r+0x1fc>)
 8007e5e:	9803      	ldr	r0, [sp, #12]
 8007e60:	f7fe fa06 	bl	8006270 <_printf_i>
 8007e64:	e7ea      	b.n	8007e3c <_svfiprintf_r+0x1c0>
 8007e66:	46c0      	nop			; (mov r8, r8)
 8007e68:	08008ea4 	.word	0x08008ea4
 8007e6c:	08008eaa 	.word	0x08008eaa
 8007e70:	08008eae 	.word	0x08008eae
 8007e74:	08005d0d 	.word	0x08005d0d
 8007e78:	08007bb9 	.word	0x08007bb9

08007e7c <_sbrk_r>:
 8007e7c:	2300      	movs	r3, #0
 8007e7e:	b570      	push	{r4, r5, r6, lr}
 8007e80:	4d06      	ldr	r5, [pc, #24]	; (8007e9c <_sbrk_r+0x20>)
 8007e82:	0004      	movs	r4, r0
 8007e84:	0008      	movs	r0, r1
 8007e86:	602b      	str	r3, [r5, #0]
 8007e88:	f7fc faee 	bl	8004468 <_sbrk>
 8007e8c:	1c43      	adds	r3, r0, #1
 8007e8e:	d103      	bne.n	8007e98 <_sbrk_r+0x1c>
 8007e90:	682b      	ldr	r3, [r5, #0]
 8007e92:	2b00      	cmp	r3, #0
 8007e94:	d000      	beq.n	8007e98 <_sbrk_r+0x1c>
 8007e96:	6023      	str	r3, [r4, #0]
 8007e98:	bd70      	pop	{r4, r5, r6, pc}
 8007e9a:	46c0      	nop			; (mov r8, r8)
 8007e9c:	20000290 	.word	0x20000290

08007ea0 <__assert_func>:
 8007ea0:	b530      	push	{r4, r5, lr}
 8007ea2:	0014      	movs	r4, r2
 8007ea4:	001a      	movs	r2, r3
 8007ea6:	4b09      	ldr	r3, [pc, #36]	; (8007ecc <__assert_func+0x2c>)
 8007ea8:	0005      	movs	r5, r0
 8007eaa:	681b      	ldr	r3, [r3, #0]
 8007eac:	b085      	sub	sp, #20
 8007eae:	68d8      	ldr	r0, [r3, #12]
 8007eb0:	4b07      	ldr	r3, [pc, #28]	; (8007ed0 <__assert_func+0x30>)
 8007eb2:	2c00      	cmp	r4, #0
 8007eb4:	d101      	bne.n	8007eba <__assert_func+0x1a>
 8007eb6:	4b07      	ldr	r3, [pc, #28]	; (8007ed4 <__assert_func+0x34>)
 8007eb8:	001c      	movs	r4, r3
 8007eba:	9301      	str	r3, [sp, #4]
 8007ebc:	9100      	str	r1, [sp, #0]
 8007ebe:	002b      	movs	r3, r5
 8007ec0:	4905      	ldr	r1, [pc, #20]	; (8007ed8 <__assert_func+0x38>)
 8007ec2:	9402      	str	r4, [sp, #8]
 8007ec4:	f000 f80a 	bl	8007edc <fiprintf>
 8007ec8:	f000 faba 	bl	8008440 <abort>
 8007ecc:	2000000c 	.word	0x2000000c
 8007ed0:	08008eb5 	.word	0x08008eb5
 8007ed4:	08008ef0 	.word	0x08008ef0
 8007ed8:	08008ec2 	.word	0x08008ec2

08007edc <fiprintf>:
 8007edc:	b40e      	push	{r1, r2, r3}
 8007ede:	b503      	push	{r0, r1, lr}
 8007ee0:	0001      	movs	r1, r0
 8007ee2:	ab03      	add	r3, sp, #12
 8007ee4:	4804      	ldr	r0, [pc, #16]	; (8007ef8 <fiprintf+0x1c>)
 8007ee6:	cb04      	ldmia	r3!, {r2}
 8007ee8:	6800      	ldr	r0, [r0, #0]
 8007eea:	9301      	str	r3, [sp, #4]
 8007eec:	f000 f892 	bl	8008014 <_vfiprintf_r>
 8007ef0:	b002      	add	sp, #8
 8007ef2:	bc08      	pop	{r3}
 8007ef4:	b003      	add	sp, #12
 8007ef6:	4718      	bx	r3
 8007ef8:	2000000c 	.word	0x2000000c

08007efc <__ascii_mbtowc>:
 8007efc:	b082      	sub	sp, #8
 8007efe:	2900      	cmp	r1, #0
 8007f00:	d100      	bne.n	8007f04 <__ascii_mbtowc+0x8>
 8007f02:	a901      	add	r1, sp, #4
 8007f04:	1e10      	subs	r0, r2, #0
 8007f06:	d006      	beq.n	8007f16 <__ascii_mbtowc+0x1a>
 8007f08:	2b00      	cmp	r3, #0
 8007f0a:	d006      	beq.n	8007f1a <__ascii_mbtowc+0x1e>
 8007f0c:	7813      	ldrb	r3, [r2, #0]
 8007f0e:	600b      	str	r3, [r1, #0]
 8007f10:	7810      	ldrb	r0, [r2, #0]
 8007f12:	1e43      	subs	r3, r0, #1
 8007f14:	4198      	sbcs	r0, r3
 8007f16:	b002      	add	sp, #8
 8007f18:	4770      	bx	lr
 8007f1a:	2002      	movs	r0, #2
 8007f1c:	4240      	negs	r0, r0
 8007f1e:	e7fa      	b.n	8007f16 <__ascii_mbtowc+0x1a>

08007f20 <memmove>:
 8007f20:	b510      	push	{r4, lr}
 8007f22:	4288      	cmp	r0, r1
 8007f24:	d902      	bls.n	8007f2c <memmove+0xc>
 8007f26:	188b      	adds	r3, r1, r2
 8007f28:	4298      	cmp	r0, r3
 8007f2a:	d303      	bcc.n	8007f34 <memmove+0x14>
 8007f2c:	2300      	movs	r3, #0
 8007f2e:	e007      	b.n	8007f40 <memmove+0x20>
 8007f30:	5c8b      	ldrb	r3, [r1, r2]
 8007f32:	5483      	strb	r3, [r0, r2]
 8007f34:	3a01      	subs	r2, #1
 8007f36:	d2fb      	bcs.n	8007f30 <memmove+0x10>
 8007f38:	bd10      	pop	{r4, pc}
 8007f3a:	5ccc      	ldrb	r4, [r1, r3]
 8007f3c:	54c4      	strb	r4, [r0, r3]
 8007f3e:	3301      	adds	r3, #1
 8007f40:	429a      	cmp	r2, r3
 8007f42:	d1fa      	bne.n	8007f3a <memmove+0x1a>
 8007f44:	e7f8      	b.n	8007f38 <memmove+0x18>
	...

08007f48 <__malloc_lock>:
 8007f48:	b510      	push	{r4, lr}
 8007f4a:	4802      	ldr	r0, [pc, #8]	; (8007f54 <__malloc_lock+0xc>)
 8007f4c:	f000 fc4f 	bl	80087ee <__retarget_lock_acquire_recursive>
 8007f50:	bd10      	pop	{r4, pc}
 8007f52:	46c0      	nop			; (mov r8, r8)
 8007f54:	20000294 	.word	0x20000294

08007f58 <__malloc_unlock>:
 8007f58:	b510      	push	{r4, lr}
 8007f5a:	4802      	ldr	r0, [pc, #8]	; (8007f64 <__malloc_unlock+0xc>)
 8007f5c:	f000 fc48 	bl	80087f0 <__retarget_lock_release_recursive>
 8007f60:	bd10      	pop	{r4, pc}
 8007f62:	46c0      	nop			; (mov r8, r8)
 8007f64:	20000294 	.word	0x20000294

08007f68 <_realloc_r>:
 8007f68:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007f6a:	0007      	movs	r7, r0
 8007f6c:	000e      	movs	r6, r1
 8007f6e:	0014      	movs	r4, r2
 8007f70:	2900      	cmp	r1, #0
 8007f72:	d105      	bne.n	8007f80 <_realloc_r+0x18>
 8007f74:	0011      	movs	r1, r2
 8007f76:	f7ff fda9 	bl	8007acc <_malloc_r>
 8007f7a:	0005      	movs	r5, r0
 8007f7c:	0028      	movs	r0, r5
 8007f7e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007f80:	2a00      	cmp	r2, #0
 8007f82:	d103      	bne.n	8007f8c <_realloc_r+0x24>
 8007f84:	f7ff fd36 	bl	80079f4 <_free_r>
 8007f88:	0025      	movs	r5, r4
 8007f8a:	e7f7      	b.n	8007f7c <_realloc_r+0x14>
 8007f8c:	f000 fc9e 	bl	80088cc <_malloc_usable_size_r>
 8007f90:	9001      	str	r0, [sp, #4]
 8007f92:	4284      	cmp	r4, r0
 8007f94:	d803      	bhi.n	8007f9e <_realloc_r+0x36>
 8007f96:	0035      	movs	r5, r6
 8007f98:	0843      	lsrs	r3, r0, #1
 8007f9a:	42a3      	cmp	r3, r4
 8007f9c:	d3ee      	bcc.n	8007f7c <_realloc_r+0x14>
 8007f9e:	0021      	movs	r1, r4
 8007fa0:	0038      	movs	r0, r7
 8007fa2:	f7ff fd93 	bl	8007acc <_malloc_r>
 8007fa6:	1e05      	subs	r5, r0, #0
 8007fa8:	d0e8      	beq.n	8007f7c <_realloc_r+0x14>
 8007faa:	9b01      	ldr	r3, [sp, #4]
 8007fac:	0022      	movs	r2, r4
 8007fae:	429c      	cmp	r4, r3
 8007fb0:	d900      	bls.n	8007fb4 <_realloc_r+0x4c>
 8007fb2:	001a      	movs	r2, r3
 8007fb4:	0031      	movs	r1, r6
 8007fb6:	0028      	movs	r0, r5
 8007fb8:	f7ff f94b 	bl	8007252 <memcpy>
 8007fbc:	0031      	movs	r1, r6
 8007fbe:	0038      	movs	r0, r7
 8007fc0:	f7ff fd18 	bl	80079f4 <_free_r>
 8007fc4:	e7da      	b.n	8007f7c <_realloc_r+0x14>

08007fc6 <__sfputc_r>:
 8007fc6:	6893      	ldr	r3, [r2, #8]
 8007fc8:	b510      	push	{r4, lr}
 8007fca:	3b01      	subs	r3, #1
 8007fcc:	6093      	str	r3, [r2, #8]
 8007fce:	2b00      	cmp	r3, #0
 8007fd0:	da04      	bge.n	8007fdc <__sfputc_r+0x16>
 8007fd2:	6994      	ldr	r4, [r2, #24]
 8007fd4:	42a3      	cmp	r3, r4
 8007fd6:	db07      	blt.n	8007fe8 <__sfputc_r+0x22>
 8007fd8:	290a      	cmp	r1, #10
 8007fda:	d005      	beq.n	8007fe8 <__sfputc_r+0x22>
 8007fdc:	6813      	ldr	r3, [r2, #0]
 8007fde:	1c58      	adds	r0, r3, #1
 8007fe0:	6010      	str	r0, [r2, #0]
 8007fe2:	7019      	strb	r1, [r3, #0]
 8007fe4:	0008      	movs	r0, r1
 8007fe6:	bd10      	pop	{r4, pc}
 8007fe8:	f000 f94e 	bl	8008288 <__swbuf_r>
 8007fec:	0001      	movs	r1, r0
 8007fee:	e7f9      	b.n	8007fe4 <__sfputc_r+0x1e>

08007ff0 <__sfputs_r>:
 8007ff0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007ff2:	0006      	movs	r6, r0
 8007ff4:	000f      	movs	r7, r1
 8007ff6:	0014      	movs	r4, r2
 8007ff8:	18d5      	adds	r5, r2, r3
 8007ffa:	42ac      	cmp	r4, r5
 8007ffc:	d101      	bne.n	8008002 <__sfputs_r+0x12>
 8007ffe:	2000      	movs	r0, #0
 8008000:	e007      	b.n	8008012 <__sfputs_r+0x22>
 8008002:	7821      	ldrb	r1, [r4, #0]
 8008004:	003a      	movs	r2, r7
 8008006:	0030      	movs	r0, r6
 8008008:	f7ff ffdd 	bl	8007fc6 <__sfputc_r>
 800800c:	3401      	adds	r4, #1
 800800e:	1c43      	adds	r3, r0, #1
 8008010:	d1f3      	bne.n	8007ffa <__sfputs_r+0xa>
 8008012:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08008014 <_vfiprintf_r>:
 8008014:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008016:	b0a1      	sub	sp, #132	; 0x84
 8008018:	0006      	movs	r6, r0
 800801a:	000c      	movs	r4, r1
 800801c:	001f      	movs	r7, r3
 800801e:	9203      	str	r2, [sp, #12]
 8008020:	2800      	cmp	r0, #0
 8008022:	d004      	beq.n	800802e <_vfiprintf_r+0x1a>
 8008024:	6983      	ldr	r3, [r0, #24]
 8008026:	2b00      	cmp	r3, #0
 8008028:	d101      	bne.n	800802e <_vfiprintf_r+0x1a>
 800802a:	f000 fb3f 	bl	80086ac <__sinit>
 800802e:	4b8e      	ldr	r3, [pc, #568]	; (8008268 <_vfiprintf_r+0x254>)
 8008030:	429c      	cmp	r4, r3
 8008032:	d11c      	bne.n	800806e <_vfiprintf_r+0x5a>
 8008034:	6874      	ldr	r4, [r6, #4]
 8008036:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008038:	07db      	lsls	r3, r3, #31
 800803a:	d405      	bmi.n	8008048 <_vfiprintf_r+0x34>
 800803c:	89a3      	ldrh	r3, [r4, #12]
 800803e:	059b      	lsls	r3, r3, #22
 8008040:	d402      	bmi.n	8008048 <_vfiprintf_r+0x34>
 8008042:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008044:	f000 fbd3 	bl	80087ee <__retarget_lock_acquire_recursive>
 8008048:	89a3      	ldrh	r3, [r4, #12]
 800804a:	071b      	lsls	r3, r3, #28
 800804c:	d502      	bpl.n	8008054 <_vfiprintf_r+0x40>
 800804e:	6923      	ldr	r3, [r4, #16]
 8008050:	2b00      	cmp	r3, #0
 8008052:	d11d      	bne.n	8008090 <_vfiprintf_r+0x7c>
 8008054:	0021      	movs	r1, r4
 8008056:	0030      	movs	r0, r6
 8008058:	f000 f97a 	bl	8008350 <__swsetup_r>
 800805c:	2800      	cmp	r0, #0
 800805e:	d017      	beq.n	8008090 <_vfiprintf_r+0x7c>
 8008060:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008062:	07db      	lsls	r3, r3, #31
 8008064:	d50d      	bpl.n	8008082 <_vfiprintf_r+0x6e>
 8008066:	2001      	movs	r0, #1
 8008068:	4240      	negs	r0, r0
 800806a:	b021      	add	sp, #132	; 0x84
 800806c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800806e:	4b7f      	ldr	r3, [pc, #508]	; (800826c <_vfiprintf_r+0x258>)
 8008070:	429c      	cmp	r4, r3
 8008072:	d101      	bne.n	8008078 <_vfiprintf_r+0x64>
 8008074:	68b4      	ldr	r4, [r6, #8]
 8008076:	e7de      	b.n	8008036 <_vfiprintf_r+0x22>
 8008078:	4b7d      	ldr	r3, [pc, #500]	; (8008270 <_vfiprintf_r+0x25c>)
 800807a:	429c      	cmp	r4, r3
 800807c:	d1db      	bne.n	8008036 <_vfiprintf_r+0x22>
 800807e:	68f4      	ldr	r4, [r6, #12]
 8008080:	e7d9      	b.n	8008036 <_vfiprintf_r+0x22>
 8008082:	89a3      	ldrh	r3, [r4, #12]
 8008084:	059b      	lsls	r3, r3, #22
 8008086:	d4ee      	bmi.n	8008066 <_vfiprintf_r+0x52>
 8008088:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800808a:	f000 fbb1 	bl	80087f0 <__retarget_lock_release_recursive>
 800808e:	e7ea      	b.n	8008066 <_vfiprintf_r+0x52>
 8008090:	2300      	movs	r3, #0
 8008092:	ad08      	add	r5, sp, #32
 8008094:	616b      	str	r3, [r5, #20]
 8008096:	3320      	adds	r3, #32
 8008098:	766b      	strb	r3, [r5, #25]
 800809a:	3310      	adds	r3, #16
 800809c:	76ab      	strb	r3, [r5, #26]
 800809e:	9707      	str	r7, [sp, #28]
 80080a0:	9f03      	ldr	r7, [sp, #12]
 80080a2:	783b      	ldrb	r3, [r7, #0]
 80080a4:	2b00      	cmp	r3, #0
 80080a6:	d001      	beq.n	80080ac <_vfiprintf_r+0x98>
 80080a8:	2b25      	cmp	r3, #37	; 0x25
 80080aa:	d14e      	bne.n	800814a <_vfiprintf_r+0x136>
 80080ac:	9b03      	ldr	r3, [sp, #12]
 80080ae:	1afb      	subs	r3, r7, r3
 80080b0:	9305      	str	r3, [sp, #20]
 80080b2:	9b03      	ldr	r3, [sp, #12]
 80080b4:	429f      	cmp	r7, r3
 80080b6:	d00d      	beq.n	80080d4 <_vfiprintf_r+0xc0>
 80080b8:	9b05      	ldr	r3, [sp, #20]
 80080ba:	0021      	movs	r1, r4
 80080bc:	0030      	movs	r0, r6
 80080be:	9a03      	ldr	r2, [sp, #12]
 80080c0:	f7ff ff96 	bl	8007ff0 <__sfputs_r>
 80080c4:	1c43      	adds	r3, r0, #1
 80080c6:	d100      	bne.n	80080ca <_vfiprintf_r+0xb6>
 80080c8:	e0b5      	b.n	8008236 <_vfiprintf_r+0x222>
 80080ca:	696a      	ldr	r2, [r5, #20]
 80080cc:	9b05      	ldr	r3, [sp, #20]
 80080ce:	4694      	mov	ip, r2
 80080d0:	4463      	add	r3, ip
 80080d2:	616b      	str	r3, [r5, #20]
 80080d4:	783b      	ldrb	r3, [r7, #0]
 80080d6:	2b00      	cmp	r3, #0
 80080d8:	d100      	bne.n	80080dc <_vfiprintf_r+0xc8>
 80080da:	e0ac      	b.n	8008236 <_vfiprintf_r+0x222>
 80080dc:	2201      	movs	r2, #1
 80080de:	1c7b      	adds	r3, r7, #1
 80080e0:	9303      	str	r3, [sp, #12]
 80080e2:	2300      	movs	r3, #0
 80080e4:	4252      	negs	r2, r2
 80080e6:	606a      	str	r2, [r5, #4]
 80080e8:	a904      	add	r1, sp, #16
 80080ea:	3254      	adds	r2, #84	; 0x54
 80080ec:	1852      	adds	r2, r2, r1
 80080ee:	602b      	str	r3, [r5, #0]
 80080f0:	60eb      	str	r3, [r5, #12]
 80080f2:	60ab      	str	r3, [r5, #8]
 80080f4:	7013      	strb	r3, [r2, #0]
 80080f6:	65ab      	str	r3, [r5, #88]	; 0x58
 80080f8:	9b03      	ldr	r3, [sp, #12]
 80080fa:	2205      	movs	r2, #5
 80080fc:	7819      	ldrb	r1, [r3, #0]
 80080fe:	485d      	ldr	r0, [pc, #372]	; (8008274 <_vfiprintf_r+0x260>)
 8008100:	f7ff f89c 	bl	800723c <memchr>
 8008104:	9b03      	ldr	r3, [sp, #12]
 8008106:	1c5f      	adds	r7, r3, #1
 8008108:	2800      	cmp	r0, #0
 800810a:	d120      	bne.n	800814e <_vfiprintf_r+0x13a>
 800810c:	682a      	ldr	r2, [r5, #0]
 800810e:	06d3      	lsls	r3, r2, #27
 8008110:	d504      	bpl.n	800811c <_vfiprintf_r+0x108>
 8008112:	2353      	movs	r3, #83	; 0x53
 8008114:	a904      	add	r1, sp, #16
 8008116:	185b      	adds	r3, r3, r1
 8008118:	2120      	movs	r1, #32
 800811a:	7019      	strb	r1, [r3, #0]
 800811c:	0713      	lsls	r3, r2, #28
 800811e:	d504      	bpl.n	800812a <_vfiprintf_r+0x116>
 8008120:	2353      	movs	r3, #83	; 0x53
 8008122:	a904      	add	r1, sp, #16
 8008124:	185b      	adds	r3, r3, r1
 8008126:	212b      	movs	r1, #43	; 0x2b
 8008128:	7019      	strb	r1, [r3, #0]
 800812a:	9b03      	ldr	r3, [sp, #12]
 800812c:	781b      	ldrb	r3, [r3, #0]
 800812e:	2b2a      	cmp	r3, #42	; 0x2a
 8008130:	d016      	beq.n	8008160 <_vfiprintf_r+0x14c>
 8008132:	2100      	movs	r1, #0
 8008134:	68eb      	ldr	r3, [r5, #12]
 8008136:	9f03      	ldr	r7, [sp, #12]
 8008138:	783a      	ldrb	r2, [r7, #0]
 800813a:	1c78      	adds	r0, r7, #1
 800813c:	3a30      	subs	r2, #48	; 0x30
 800813e:	4684      	mov	ip, r0
 8008140:	2a09      	cmp	r2, #9
 8008142:	d94f      	bls.n	80081e4 <_vfiprintf_r+0x1d0>
 8008144:	2900      	cmp	r1, #0
 8008146:	d111      	bne.n	800816c <_vfiprintf_r+0x158>
 8008148:	e017      	b.n	800817a <_vfiprintf_r+0x166>
 800814a:	3701      	adds	r7, #1
 800814c:	e7a9      	b.n	80080a2 <_vfiprintf_r+0x8e>
 800814e:	4b49      	ldr	r3, [pc, #292]	; (8008274 <_vfiprintf_r+0x260>)
 8008150:	682a      	ldr	r2, [r5, #0]
 8008152:	1ac0      	subs	r0, r0, r3
 8008154:	2301      	movs	r3, #1
 8008156:	4083      	lsls	r3, r0
 8008158:	4313      	orrs	r3, r2
 800815a:	602b      	str	r3, [r5, #0]
 800815c:	9703      	str	r7, [sp, #12]
 800815e:	e7cb      	b.n	80080f8 <_vfiprintf_r+0xe4>
 8008160:	9b07      	ldr	r3, [sp, #28]
 8008162:	1d19      	adds	r1, r3, #4
 8008164:	681b      	ldr	r3, [r3, #0]
 8008166:	9107      	str	r1, [sp, #28]
 8008168:	2b00      	cmp	r3, #0
 800816a:	db01      	blt.n	8008170 <_vfiprintf_r+0x15c>
 800816c:	930b      	str	r3, [sp, #44]	; 0x2c
 800816e:	e004      	b.n	800817a <_vfiprintf_r+0x166>
 8008170:	425b      	negs	r3, r3
 8008172:	60eb      	str	r3, [r5, #12]
 8008174:	2302      	movs	r3, #2
 8008176:	4313      	orrs	r3, r2
 8008178:	602b      	str	r3, [r5, #0]
 800817a:	783b      	ldrb	r3, [r7, #0]
 800817c:	2b2e      	cmp	r3, #46	; 0x2e
 800817e:	d10a      	bne.n	8008196 <_vfiprintf_r+0x182>
 8008180:	787b      	ldrb	r3, [r7, #1]
 8008182:	2b2a      	cmp	r3, #42	; 0x2a
 8008184:	d137      	bne.n	80081f6 <_vfiprintf_r+0x1e2>
 8008186:	9b07      	ldr	r3, [sp, #28]
 8008188:	3702      	adds	r7, #2
 800818a:	1d1a      	adds	r2, r3, #4
 800818c:	681b      	ldr	r3, [r3, #0]
 800818e:	9207      	str	r2, [sp, #28]
 8008190:	2b00      	cmp	r3, #0
 8008192:	db2d      	blt.n	80081f0 <_vfiprintf_r+0x1dc>
 8008194:	9309      	str	r3, [sp, #36]	; 0x24
 8008196:	2203      	movs	r2, #3
 8008198:	7839      	ldrb	r1, [r7, #0]
 800819a:	4837      	ldr	r0, [pc, #220]	; (8008278 <_vfiprintf_r+0x264>)
 800819c:	f7ff f84e 	bl	800723c <memchr>
 80081a0:	2800      	cmp	r0, #0
 80081a2:	d007      	beq.n	80081b4 <_vfiprintf_r+0x1a0>
 80081a4:	4b34      	ldr	r3, [pc, #208]	; (8008278 <_vfiprintf_r+0x264>)
 80081a6:	682a      	ldr	r2, [r5, #0]
 80081a8:	1ac0      	subs	r0, r0, r3
 80081aa:	2340      	movs	r3, #64	; 0x40
 80081ac:	4083      	lsls	r3, r0
 80081ae:	4313      	orrs	r3, r2
 80081b0:	3701      	adds	r7, #1
 80081b2:	602b      	str	r3, [r5, #0]
 80081b4:	7839      	ldrb	r1, [r7, #0]
 80081b6:	1c7b      	adds	r3, r7, #1
 80081b8:	2206      	movs	r2, #6
 80081ba:	4830      	ldr	r0, [pc, #192]	; (800827c <_vfiprintf_r+0x268>)
 80081bc:	9303      	str	r3, [sp, #12]
 80081be:	7629      	strb	r1, [r5, #24]
 80081c0:	f7ff f83c 	bl	800723c <memchr>
 80081c4:	2800      	cmp	r0, #0
 80081c6:	d045      	beq.n	8008254 <_vfiprintf_r+0x240>
 80081c8:	4b2d      	ldr	r3, [pc, #180]	; (8008280 <_vfiprintf_r+0x26c>)
 80081ca:	2b00      	cmp	r3, #0
 80081cc:	d127      	bne.n	800821e <_vfiprintf_r+0x20a>
 80081ce:	2207      	movs	r2, #7
 80081d0:	9b07      	ldr	r3, [sp, #28]
 80081d2:	3307      	adds	r3, #7
 80081d4:	4393      	bics	r3, r2
 80081d6:	3308      	adds	r3, #8
 80081d8:	9307      	str	r3, [sp, #28]
 80081da:	696b      	ldr	r3, [r5, #20]
 80081dc:	9a04      	ldr	r2, [sp, #16]
 80081de:	189b      	adds	r3, r3, r2
 80081e0:	616b      	str	r3, [r5, #20]
 80081e2:	e75d      	b.n	80080a0 <_vfiprintf_r+0x8c>
 80081e4:	210a      	movs	r1, #10
 80081e6:	434b      	muls	r3, r1
 80081e8:	4667      	mov	r7, ip
 80081ea:	189b      	adds	r3, r3, r2
 80081ec:	3909      	subs	r1, #9
 80081ee:	e7a3      	b.n	8008138 <_vfiprintf_r+0x124>
 80081f0:	2301      	movs	r3, #1
 80081f2:	425b      	negs	r3, r3
 80081f4:	e7ce      	b.n	8008194 <_vfiprintf_r+0x180>
 80081f6:	2300      	movs	r3, #0
 80081f8:	001a      	movs	r2, r3
 80081fa:	3701      	adds	r7, #1
 80081fc:	606b      	str	r3, [r5, #4]
 80081fe:	7839      	ldrb	r1, [r7, #0]
 8008200:	1c78      	adds	r0, r7, #1
 8008202:	3930      	subs	r1, #48	; 0x30
 8008204:	4684      	mov	ip, r0
 8008206:	2909      	cmp	r1, #9
 8008208:	d903      	bls.n	8008212 <_vfiprintf_r+0x1fe>
 800820a:	2b00      	cmp	r3, #0
 800820c:	d0c3      	beq.n	8008196 <_vfiprintf_r+0x182>
 800820e:	9209      	str	r2, [sp, #36]	; 0x24
 8008210:	e7c1      	b.n	8008196 <_vfiprintf_r+0x182>
 8008212:	230a      	movs	r3, #10
 8008214:	435a      	muls	r2, r3
 8008216:	4667      	mov	r7, ip
 8008218:	1852      	adds	r2, r2, r1
 800821a:	3b09      	subs	r3, #9
 800821c:	e7ef      	b.n	80081fe <_vfiprintf_r+0x1ea>
 800821e:	ab07      	add	r3, sp, #28
 8008220:	9300      	str	r3, [sp, #0]
 8008222:	0022      	movs	r2, r4
 8008224:	0029      	movs	r1, r5
 8008226:	0030      	movs	r0, r6
 8008228:	4b16      	ldr	r3, [pc, #88]	; (8008284 <_vfiprintf_r+0x270>)
 800822a:	f7fd fd6f 	bl	8005d0c <_printf_float>
 800822e:	9004      	str	r0, [sp, #16]
 8008230:	9b04      	ldr	r3, [sp, #16]
 8008232:	3301      	adds	r3, #1
 8008234:	d1d1      	bne.n	80081da <_vfiprintf_r+0x1c6>
 8008236:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8008238:	07db      	lsls	r3, r3, #31
 800823a:	d405      	bmi.n	8008248 <_vfiprintf_r+0x234>
 800823c:	89a3      	ldrh	r3, [r4, #12]
 800823e:	059b      	lsls	r3, r3, #22
 8008240:	d402      	bmi.n	8008248 <_vfiprintf_r+0x234>
 8008242:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008244:	f000 fad4 	bl	80087f0 <__retarget_lock_release_recursive>
 8008248:	89a3      	ldrh	r3, [r4, #12]
 800824a:	065b      	lsls	r3, r3, #25
 800824c:	d500      	bpl.n	8008250 <_vfiprintf_r+0x23c>
 800824e:	e70a      	b.n	8008066 <_vfiprintf_r+0x52>
 8008250:	980d      	ldr	r0, [sp, #52]	; 0x34
 8008252:	e70a      	b.n	800806a <_vfiprintf_r+0x56>
 8008254:	ab07      	add	r3, sp, #28
 8008256:	9300      	str	r3, [sp, #0]
 8008258:	0022      	movs	r2, r4
 800825a:	0029      	movs	r1, r5
 800825c:	0030      	movs	r0, r6
 800825e:	4b09      	ldr	r3, [pc, #36]	; (8008284 <_vfiprintf_r+0x270>)
 8008260:	f7fe f806 	bl	8006270 <_printf_i>
 8008264:	e7e3      	b.n	800822e <_vfiprintf_r+0x21a>
 8008266:	46c0      	nop			; (mov r8, r8)
 8008268:	0800901c 	.word	0x0800901c
 800826c:	0800903c 	.word	0x0800903c
 8008270:	08008ffc 	.word	0x08008ffc
 8008274:	08008ea4 	.word	0x08008ea4
 8008278:	08008eaa 	.word	0x08008eaa
 800827c:	08008eae 	.word	0x08008eae
 8008280:	08005d0d 	.word	0x08005d0d
 8008284:	08007ff1 	.word	0x08007ff1

08008288 <__swbuf_r>:
 8008288:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800828a:	0005      	movs	r5, r0
 800828c:	000e      	movs	r6, r1
 800828e:	0014      	movs	r4, r2
 8008290:	2800      	cmp	r0, #0
 8008292:	d004      	beq.n	800829e <__swbuf_r+0x16>
 8008294:	6983      	ldr	r3, [r0, #24]
 8008296:	2b00      	cmp	r3, #0
 8008298:	d101      	bne.n	800829e <__swbuf_r+0x16>
 800829a:	f000 fa07 	bl	80086ac <__sinit>
 800829e:	4b22      	ldr	r3, [pc, #136]	; (8008328 <__swbuf_r+0xa0>)
 80082a0:	429c      	cmp	r4, r3
 80082a2:	d12e      	bne.n	8008302 <__swbuf_r+0x7a>
 80082a4:	686c      	ldr	r4, [r5, #4]
 80082a6:	69a3      	ldr	r3, [r4, #24]
 80082a8:	60a3      	str	r3, [r4, #8]
 80082aa:	89a3      	ldrh	r3, [r4, #12]
 80082ac:	071b      	lsls	r3, r3, #28
 80082ae:	d532      	bpl.n	8008316 <__swbuf_r+0x8e>
 80082b0:	6923      	ldr	r3, [r4, #16]
 80082b2:	2b00      	cmp	r3, #0
 80082b4:	d02f      	beq.n	8008316 <__swbuf_r+0x8e>
 80082b6:	6823      	ldr	r3, [r4, #0]
 80082b8:	6922      	ldr	r2, [r4, #16]
 80082ba:	b2f7      	uxtb	r7, r6
 80082bc:	1a98      	subs	r0, r3, r2
 80082be:	6963      	ldr	r3, [r4, #20]
 80082c0:	b2f6      	uxtb	r6, r6
 80082c2:	4283      	cmp	r3, r0
 80082c4:	dc05      	bgt.n	80082d2 <__swbuf_r+0x4a>
 80082c6:	0021      	movs	r1, r4
 80082c8:	0028      	movs	r0, r5
 80082ca:	f000 f94d 	bl	8008568 <_fflush_r>
 80082ce:	2800      	cmp	r0, #0
 80082d0:	d127      	bne.n	8008322 <__swbuf_r+0x9a>
 80082d2:	68a3      	ldr	r3, [r4, #8]
 80082d4:	3001      	adds	r0, #1
 80082d6:	3b01      	subs	r3, #1
 80082d8:	60a3      	str	r3, [r4, #8]
 80082da:	6823      	ldr	r3, [r4, #0]
 80082dc:	1c5a      	adds	r2, r3, #1
 80082de:	6022      	str	r2, [r4, #0]
 80082e0:	701f      	strb	r7, [r3, #0]
 80082e2:	6963      	ldr	r3, [r4, #20]
 80082e4:	4283      	cmp	r3, r0
 80082e6:	d004      	beq.n	80082f2 <__swbuf_r+0x6a>
 80082e8:	89a3      	ldrh	r3, [r4, #12]
 80082ea:	07db      	lsls	r3, r3, #31
 80082ec:	d507      	bpl.n	80082fe <__swbuf_r+0x76>
 80082ee:	2e0a      	cmp	r6, #10
 80082f0:	d105      	bne.n	80082fe <__swbuf_r+0x76>
 80082f2:	0021      	movs	r1, r4
 80082f4:	0028      	movs	r0, r5
 80082f6:	f000 f937 	bl	8008568 <_fflush_r>
 80082fa:	2800      	cmp	r0, #0
 80082fc:	d111      	bne.n	8008322 <__swbuf_r+0x9a>
 80082fe:	0030      	movs	r0, r6
 8008300:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008302:	4b0a      	ldr	r3, [pc, #40]	; (800832c <__swbuf_r+0xa4>)
 8008304:	429c      	cmp	r4, r3
 8008306:	d101      	bne.n	800830c <__swbuf_r+0x84>
 8008308:	68ac      	ldr	r4, [r5, #8]
 800830a:	e7cc      	b.n	80082a6 <__swbuf_r+0x1e>
 800830c:	4b08      	ldr	r3, [pc, #32]	; (8008330 <__swbuf_r+0xa8>)
 800830e:	429c      	cmp	r4, r3
 8008310:	d1c9      	bne.n	80082a6 <__swbuf_r+0x1e>
 8008312:	68ec      	ldr	r4, [r5, #12]
 8008314:	e7c7      	b.n	80082a6 <__swbuf_r+0x1e>
 8008316:	0021      	movs	r1, r4
 8008318:	0028      	movs	r0, r5
 800831a:	f000 f819 	bl	8008350 <__swsetup_r>
 800831e:	2800      	cmp	r0, #0
 8008320:	d0c9      	beq.n	80082b6 <__swbuf_r+0x2e>
 8008322:	2601      	movs	r6, #1
 8008324:	4276      	negs	r6, r6
 8008326:	e7ea      	b.n	80082fe <__swbuf_r+0x76>
 8008328:	0800901c 	.word	0x0800901c
 800832c:	0800903c 	.word	0x0800903c
 8008330:	08008ffc 	.word	0x08008ffc

08008334 <__ascii_wctomb>:
 8008334:	0003      	movs	r3, r0
 8008336:	1e08      	subs	r0, r1, #0
 8008338:	d005      	beq.n	8008346 <__ascii_wctomb+0x12>
 800833a:	2aff      	cmp	r2, #255	; 0xff
 800833c:	d904      	bls.n	8008348 <__ascii_wctomb+0x14>
 800833e:	228a      	movs	r2, #138	; 0x8a
 8008340:	2001      	movs	r0, #1
 8008342:	601a      	str	r2, [r3, #0]
 8008344:	4240      	negs	r0, r0
 8008346:	4770      	bx	lr
 8008348:	2001      	movs	r0, #1
 800834a:	700a      	strb	r2, [r1, #0]
 800834c:	e7fb      	b.n	8008346 <__ascii_wctomb+0x12>
	...

08008350 <__swsetup_r>:
 8008350:	4b37      	ldr	r3, [pc, #220]	; (8008430 <__swsetup_r+0xe0>)
 8008352:	b570      	push	{r4, r5, r6, lr}
 8008354:	681d      	ldr	r5, [r3, #0]
 8008356:	0006      	movs	r6, r0
 8008358:	000c      	movs	r4, r1
 800835a:	2d00      	cmp	r5, #0
 800835c:	d005      	beq.n	800836a <__swsetup_r+0x1a>
 800835e:	69ab      	ldr	r3, [r5, #24]
 8008360:	2b00      	cmp	r3, #0
 8008362:	d102      	bne.n	800836a <__swsetup_r+0x1a>
 8008364:	0028      	movs	r0, r5
 8008366:	f000 f9a1 	bl	80086ac <__sinit>
 800836a:	4b32      	ldr	r3, [pc, #200]	; (8008434 <__swsetup_r+0xe4>)
 800836c:	429c      	cmp	r4, r3
 800836e:	d10f      	bne.n	8008390 <__swsetup_r+0x40>
 8008370:	686c      	ldr	r4, [r5, #4]
 8008372:	230c      	movs	r3, #12
 8008374:	5ee2      	ldrsh	r2, [r4, r3]
 8008376:	b293      	uxth	r3, r2
 8008378:	0711      	lsls	r1, r2, #28
 800837a:	d42d      	bmi.n	80083d8 <__swsetup_r+0x88>
 800837c:	06d9      	lsls	r1, r3, #27
 800837e:	d411      	bmi.n	80083a4 <__swsetup_r+0x54>
 8008380:	2309      	movs	r3, #9
 8008382:	2001      	movs	r0, #1
 8008384:	6033      	str	r3, [r6, #0]
 8008386:	3337      	adds	r3, #55	; 0x37
 8008388:	4313      	orrs	r3, r2
 800838a:	81a3      	strh	r3, [r4, #12]
 800838c:	4240      	negs	r0, r0
 800838e:	bd70      	pop	{r4, r5, r6, pc}
 8008390:	4b29      	ldr	r3, [pc, #164]	; (8008438 <__swsetup_r+0xe8>)
 8008392:	429c      	cmp	r4, r3
 8008394:	d101      	bne.n	800839a <__swsetup_r+0x4a>
 8008396:	68ac      	ldr	r4, [r5, #8]
 8008398:	e7eb      	b.n	8008372 <__swsetup_r+0x22>
 800839a:	4b28      	ldr	r3, [pc, #160]	; (800843c <__swsetup_r+0xec>)
 800839c:	429c      	cmp	r4, r3
 800839e:	d1e8      	bne.n	8008372 <__swsetup_r+0x22>
 80083a0:	68ec      	ldr	r4, [r5, #12]
 80083a2:	e7e6      	b.n	8008372 <__swsetup_r+0x22>
 80083a4:	075b      	lsls	r3, r3, #29
 80083a6:	d513      	bpl.n	80083d0 <__swsetup_r+0x80>
 80083a8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80083aa:	2900      	cmp	r1, #0
 80083ac:	d008      	beq.n	80083c0 <__swsetup_r+0x70>
 80083ae:	0023      	movs	r3, r4
 80083b0:	3344      	adds	r3, #68	; 0x44
 80083b2:	4299      	cmp	r1, r3
 80083b4:	d002      	beq.n	80083bc <__swsetup_r+0x6c>
 80083b6:	0030      	movs	r0, r6
 80083b8:	f7ff fb1c 	bl	80079f4 <_free_r>
 80083bc:	2300      	movs	r3, #0
 80083be:	6363      	str	r3, [r4, #52]	; 0x34
 80083c0:	2224      	movs	r2, #36	; 0x24
 80083c2:	89a3      	ldrh	r3, [r4, #12]
 80083c4:	4393      	bics	r3, r2
 80083c6:	81a3      	strh	r3, [r4, #12]
 80083c8:	2300      	movs	r3, #0
 80083ca:	6063      	str	r3, [r4, #4]
 80083cc:	6923      	ldr	r3, [r4, #16]
 80083ce:	6023      	str	r3, [r4, #0]
 80083d0:	2308      	movs	r3, #8
 80083d2:	89a2      	ldrh	r2, [r4, #12]
 80083d4:	4313      	orrs	r3, r2
 80083d6:	81a3      	strh	r3, [r4, #12]
 80083d8:	6923      	ldr	r3, [r4, #16]
 80083da:	2b00      	cmp	r3, #0
 80083dc:	d10b      	bne.n	80083f6 <__swsetup_r+0xa6>
 80083de:	21a0      	movs	r1, #160	; 0xa0
 80083e0:	2280      	movs	r2, #128	; 0x80
 80083e2:	89a3      	ldrh	r3, [r4, #12]
 80083e4:	0089      	lsls	r1, r1, #2
 80083e6:	0092      	lsls	r2, r2, #2
 80083e8:	400b      	ands	r3, r1
 80083ea:	4293      	cmp	r3, r2
 80083ec:	d003      	beq.n	80083f6 <__swsetup_r+0xa6>
 80083ee:	0021      	movs	r1, r4
 80083f0:	0030      	movs	r0, r6
 80083f2:	f000 fa27 	bl	8008844 <__smakebuf_r>
 80083f6:	220c      	movs	r2, #12
 80083f8:	5ea3      	ldrsh	r3, [r4, r2]
 80083fa:	2001      	movs	r0, #1
 80083fc:	001a      	movs	r2, r3
 80083fe:	b299      	uxth	r1, r3
 8008400:	4002      	ands	r2, r0
 8008402:	4203      	tst	r3, r0
 8008404:	d00f      	beq.n	8008426 <__swsetup_r+0xd6>
 8008406:	2200      	movs	r2, #0
 8008408:	60a2      	str	r2, [r4, #8]
 800840a:	6962      	ldr	r2, [r4, #20]
 800840c:	4252      	negs	r2, r2
 800840e:	61a2      	str	r2, [r4, #24]
 8008410:	2000      	movs	r0, #0
 8008412:	6922      	ldr	r2, [r4, #16]
 8008414:	4282      	cmp	r2, r0
 8008416:	d1ba      	bne.n	800838e <__swsetup_r+0x3e>
 8008418:	060a      	lsls	r2, r1, #24
 800841a:	d5b8      	bpl.n	800838e <__swsetup_r+0x3e>
 800841c:	2240      	movs	r2, #64	; 0x40
 800841e:	4313      	orrs	r3, r2
 8008420:	81a3      	strh	r3, [r4, #12]
 8008422:	3801      	subs	r0, #1
 8008424:	e7b3      	b.n	800838e <__swsetup_r+0x3e>
 8008426:	0788      	lsls	r0, r1, #30
 8008428:	d400      	bmi.n	800842c <__swsetup_r+0xdc>
 800842a:	6962      	ldr	r2, [r4, #20]
 800842c:	60a2      	str	r2, [r4, #8]
 800842e:	e7ef      	b.n	8008410 <__swsetup_r+0xc0>
 8008430:	2000000c 	.word	0x2000000c
 8008434:	0800901c 	.word	0x0800901c
 8008438:	0800903c 	.word	0x0800903c
 800843c:	08008ffc 	.word	0x08008ffc

08008440 <abort>:
 8008440:	2006      	movs	r0, #6
 8008442:	b510      	push	{r4, lr}
 8008444:	f000 fa74 	bl	8008930 <raise>
 8008448:	2001      	movs	r0, #1
 800844a:	f7fb ff9c 	bl	8004386 <_exit>
	...

08008450 <__sflush_r>:
 8008450:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008452:	898b      	ldrh	r3, [r1, #12]
 8008454:	0005      	movs	r5, r0
 8008456:	000c      	movs	r4, r1
 8008458:	071a      	lsls	r2, r3, #28
 800845a:	d45f      	bmi.n	800851c <__sflush_r+0xcc>
 800845c:	684a      	ldr	r2, [r1, #4]
 800845e:	2a00      	cmp	r2, #0
 8008460:	dc04      	bgt.n	800846c <__sflush_r+0x1c>
 8008462:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8008464:	2a00      	cmp	r2, #0
 8008466:	dc01      	bgt.n	800846c <__sflush_r+0x1c>
 8008468:	2000      	movs	r0, #0
 800846a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800846c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800846e:	2f00      	cmp	r7, #0
 8008470:	d0fa      	beq.n	8008468 <__sflush_r+0x18>
 8008472:	2200      	movs	r2, #0
 8008474:	2180      	movs	r1, #128	; 0x80
 8008476:	682e      	ldr	r6, [r5, #0]
 8008478:	602a      	str	r2, [r5, #0]
 800847a:	001a      	movs	r2, r3
 800847c:	0149      	lsls	r1, r1, #5
 800847e:	400a      	ands	r2, r1
 8008480:	420b      	tst	r3, r1
 8008482:	d034      	beq.n	80084ee <__sflush_r+0x9e>
 8008484:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8008486:	89a3      	ldrh	r3, [r4, #12]
 8008488:	075b      	lsls	r3, r3, #29
 800848a:	d506      	bpl.n	800849a <__sflush_r+0x4a>
 800848c:	6863      	ldr	r3, [r4, #4]
 800848e:	1ac0      	subs	r0, r0, r3
 8008490:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8008492:	2b00      	cmp	r3, #0
 8008494:	d001      	beq.n	800849a <__sflush_r+0x4a>
 8008496:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8008498:	1ac0      	subs	r0, r0, r3
 800849a:	0002      	movs	r2, r0
 800849c:	6a21      	ldr	r1, [r4, #32]
 800849e:	2300      	movs	r3, #0
 80084a0:	0028      	movs	r0, r5
 80084a2:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80084a4:	47b8      	blx	r7
 80084a6:	89a1      	ldrh	r1, [r4, #12]
 80084a8:	1c43      	adds	r3, r0, #1
 80084aa:	d106      	bne.n	80084ba <__sflush_r+0x6a>
 80084ac:	682b      	ldr	r3, [r5, #0]
 80084ae:	2b1d      	cmp	r3, #29
 80084b0:	d831      	bhi.n	8008516 <__sflush_r+0xc6>
 80084b2:	4a2c      	ldr	r2, [pc, #176]	; (8008564 <__sflush_r+0x114>)
 80084b4:	40da      	lsrs	r2, r3
 80084b6:	07d3      	lsls	r3, r2, #31
 80084b8:	d52d      	bpl.n	8008516 <__sflush_r+0xc6>
 80084ba:	2300      	movs	r3, #0
 80084bc:	6063      	str	r3, [r4, #4]
 80084be:	6923      	ldr	r3, [r4, #16]
 80084c0:	6023      	str	r3, [r4, #0]
 80084c2:	04cb      	lsls	r3, r1, #19
 80084c4:	d505      	bpl.n	80084d2 <__sflush_r+0x82>
 80084c6:	1c43      	adds	r3, r0, #1
 80084c8:	d102      	bne.n	80084d0 <__sflush_r+0x80>
 80084ca:	682b      	ldr	r3, [r5, #0]
 80084cc:	2b00      	cmp	r3, #0
 80084ce:	d100      	bne.n	80084d2 <__sflush_r+0x82>
 80084d0:	6560      	str	r0, [r4, #84]	; 0x54
 80084d2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80084d4:	602e      	str	r6, [r5, #0]
 80084d6:	2900      	cmp	r1, #0
 80084d8:	d0c6      	beq.n	8008468 <__sflush_r+0x18>
 80084da:	0023      	movs	r3, r4
 80084dc:	3344      	adds	r3, #68	; 0x44
 80084de:	4299      	cmp	r1, r3
 80084e0:	d002      	beq.n	80084e8 <__sflush_r+0x98>
 80084e2:	0028      	movs	r0, r5
 80084e4:	f7ff fa86 	bl	80079f4 <_free_r>
 80084e8:	2000      	movs	r0, #0
 80084ea:	6360      	str	r0, [r4, #52]	; 0x34
 80084ec:	e7bd      	b.n	800846a <__sflush_r+0x1a>
 80084ee:	2301      	movs	r3, #1
 80084f0:	0028      	movs	r0, r5
 80084f2:	6a21      	ldr	r1, [r4, #32]
 80084f4:	47b8      	blx	r7
 80084f6:	1c43      	adds	r3, r0, #1
 80084f8:	d1c5      	bne.n	8008486 <__sflush_r+0x36>
 80084fa:	682b      	ldr	r3, [r5, #0]
 80084fc:	2b00      	cmp	r3, #0
 80084fe:	d0c2      	beq.n	8008486 <__sflush_r+0x36>
 8008500:	2b1d      	cmp	r3, #29
 8008502:	d001      	beq.n	8008508 <__sflush_r+0xb8>
 8008504:	2b16      	cmp	r3, #22
 8008506:	d101      	bne.n	800850c <__sflush_r+0xbc>
 8008508:	602e      	str	r6, [r5, #0]
 800850a:	e7ad      	b.n	8008468 <__sflush_r+0x18>
 800850c:	2340      	movs	r3, #64	; 0x40
 800850e:	89a2      	ldrh	r2, [r4, #12]
 8008510:	4313      	orrs	r3, r2
 8008512:	81a3      	strh	r3, [r4, #12]
 8008514:	e7a9      	b.n	800846a <__sflush_r+0x1a>
 8008516:	2340      	movs	r3, #64	; 0x40
 8008518:	430b      	orrs	r3, r1
 800851a:	e7fa      	b.n	8008512 <__sflush_r+0xc2>
 800851c:	690f      	ldr	r7, [r1, #16]
 800851e:	2f00      	cmp	r7, #0
 8008520:	d0a2      	beq.n	8008468 <__sflush_r+0x18>
 8008522:	680a      	ldr	r2, [r1, #0]
 8008524:	600f      	str	r7, [r1, #0]
 8008526:	1bd2      	subs	r2, r2, r7
 8008528:	9201      	str	r2, [sp, #4]
 800852a:	2200      	movs	r2, #0
 800852c:	079b      	lsls	r3, r3, #30
 800852e:	d100      	bne.n	8008532 <__sflush_r+0xe2>
 8008530:	694a      	ldr	r2, [r1, #20]
 8008532:	60a2      	str	r2, [r4, #8]
 8008534:	9b01      	ldr	r3, [sp, #4]
 8008536:	2b00      	cmp	r3, #0
 8008538:	dc00      	bgt.n	800853c <__sflush_r+0xec>
 800853a:	e795      	b.n	8008468 <__sflush_r+0x18>
 800853c:	003a      	movs	r2, r7
 800853e:	0028      	movs	r0, r5
 8008540:	9b01      	ldr	r3, [sp, #4]
 8008542:	6a21      	ldr	r1, [r4, #32]
 8008544:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8008546:	47b0      	blx	r6
 8008548:	2800      	cmp	r0, #0
 800854a:	dc06      	bgt.n	800855a <__sflush_r+0x10a>
 800854c:	2340      	movs	r3, #64	; 0x40
 800854e:	2001      	movs	r0, #1
 8008550:	89a2      	ldrh	r2, [r4, #12]
 8008552:	4240      	negs	r0, r0
 8008554:	4313      	orrs	r3, r2
 8008556:	81a3      	strh	r3, [r4, #12]
 8008558:	e787      	b.n	800846a <__sflush_r+0x1a>
 800855a:	9b01      	ldr	r3, [sp, #4]
 800855c:	183f      	adds	r7, r7, r0
 800855e:	1a1b      	subs	r3, r3, r0
 8008560:	9301      	str	r3, [sp, #4]
 8008562:	e7e7      	b.n	8008534 <__sflush_r+0xe4>
 8008564:	20400001 	.word	0x20400001

08008568 <_fflush_r>:
 8008568:	690b      	ldr	r3, [r1, #16]
 800856a:	b570      	push	{r4, r5, r6, lr}
 800856c:	0005      	movs	r5, r0
 800856e:	000c      	movs	r4, r1
 8008570:	2b00      	cmp	r3, #0
 8008572:	d102      	bne.n	800857a <_fflush_r+0x12>
 8008574:	2500      	movs	r5, #0
 8008576:	0028      	movs	r0, r5
 8008578:	bd70      	pop	{r4, r5, r6, pc}
 800857a:	2800      	cmp	r0, #0
 800857c:	d004      	beq.n	8008588 <_fflush_r+0x20>
 800857e:	6983      	ldr	r3, [r0, #24]
 8008580:	2b00      	cmp	r3, #0
 8008582:	d101      	bne.n	8008588 <_fflush_r+0x20>
 8008584:	f000 f892 	bl	80086ac <__sinit>
 8008588:	4b14      	ldr	r3, [pc, #80]	; (80085dc <_fflush_r+0x74>)
 800858a:	429c      	cmp	r4, r3
 800858c:	d11b      	bne.n	80085c6 <_fflush_r+0x5e>
 800858e:	686c      	ldr	r4, [r5, #4]
 8008590:	220c      	movs	r2, #12
 8008592:	5ea3      	ldrsh	r3, [r4, r2]
 8008594:	2b00      	cmp	r3, #0
 8008596:	d0ed      	beq.n	8008574 <_fflush_r+0xc>
 8008598:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800859a:	07d2      	lsls	r2, r2, #31
 800859c:	d404      	bmi.n	80085a8 <_fflush_r+0x40>
 800859e:	059b      	lsls	r3, r3, #22
 80085a0:	d402      	bmi.n	80085a8 <_fflush_r+0x40>
 80085a2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80085a4:	f000 f923 	bl	80087ee <__retarget_lock_acquire_recursive>
 80085a8:	0028      	movs	r0, r5
 80085aa:	0021      	movs	r1, r4
 80085ac:	f7ff ff50 	bl	8008450 <__sflush_r>
 80085b0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80085b2:	0005      	movs	r5, r0
 80085b4:	07db      	lsls	r3, r3, #31
 80085b6:	d4de      	bmi.n	8008576 <_fflush_r+0xe>
 80085b8:	89a3      	ldrh	r3, [r4, #12]
 80085ba:	059b      	lsls	r3, r3, #22
 80085bc:	d4db      	bmi.n	8008576 <_fflush_r+0xe>
 80085be:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80085c0:	f000 f916 	bl	80087f0 <__retarget_lock_release_recursive>
 80085c4:	e7d7      	b.n	8008576 <_fflush_r+0xe>
 80085c6:	4b06      	ldr	r3, [pc, #24]	; (80085e0 <_fflush_r+0x78>)
 80085c8:	429c      	cmp	r4, r3
 80085ca:	d101      	bne.n	80085d0 <_fflush_r+0x68>
 80085cc:	68ac      	ldr	r4, [r5, #8]
 80085ce:	e7df      	b.n	8008590 <_fflush_r+0x28>
 80085d0:	4b04      	ldr	r3, [pc, #16]	; (80085e4 <_fflush_r+0x7c>)
 80085d2:	429c      	cmp	r4, r3
 80085d4:	d1dc      	bne.n	8008590 <_fflush_r+0x28>
 80085d6:	68ec      	ldr	r4, [r5, #12]
 80085d8:	e7da      	b.n	8008590 <_fflush_r+0x28>
 80085da:	46c0      	nop			; (mov r8, r8)
 80085dc:	0800901c 	.word	0x0800901c
 80085e0:	0800903c 	.word	0x0800903c
 80085e4:	08008ffc 	.word	0x08008ffc

080085e8 <std>:
 80085e8:	2300      	movs	r3, #0
 80085ea:	b510      	push	{r4, lr}
 80085ec:	0004      	movs	r4, r0
 80085ee:	6003      	str	r3, [r0, #0]
 80085f0:	6043      	str	r3, [r0, #4]
 80085f2:	6083      	str	r3, [r0, #8]
 80085f4:	8181      	strh	r1, [r0, #12]
 80085f6:	6643      	str	r3, [r0, #100]	; 0x64
 80085f8:	0019      	movs	r1, r3
 80085fa:	81c2      	strh	r2, [r0, #14]
 80085fc:	6103      	str	r3, [r0, #16]
 80085fe:	6143      	str	r3, [r0, #20]
 8008600:	6183      	str	r3, [r0, #24]
 8008602:	2208      	movs	r2, #8
 8008604:	305c      	adds	r0, #92	; 0x5c
 8008606:	f7fd facf 	bl	8005ba8 <memset>
 800860a:	4b05      	ldr	r3, [pc, #20]	; (8008620 <std+0x38>)
 800860c:	6224      	str	r4, [r4, #32]
 800860e:	6263      	str	r3, [r4, #36]	; 0x24
 8008610:	4b04      	ldr	r3, [pc, #16]	; (8008624 <std+0x3c>)
 8008612:	62a3      	str	r3, [r4, #40]	; 0x28
 8008614:	4b04      	ldr	r3, [pc, #16]	; (8008628 <std+0x40>)
 8008616:	62e3      	str	r3, [r4, #44]	; 0x2c
 8008618:	4b04      	ldr	r3, [pc, #16]	; (800862c <std+0x44>)
 800861a:	6323      	str	r3, [r4, #48]	; 0x30
 800861c:	bd10      	pop	{r4, pc}
 800861e:	46c0      	nop			; (mov r8, r8)
 8008620:	08008971 	.word	0x08008971
 8008624:	08008999 	.word	0x08008999
 8008628:	080089d1 	.word	0x080089d1
 800862c:	080089fd 	.word	0x080089fd

08008630 <_cleanup_r>:
 8008630:	b510      	push	{r4, lr}
 8008632:	4902      	ldr	r1, [pc, #8]	; (800863c <_cleanup_r+0xc>)
 8008634:	f000 f8ba 	bl	80087ac <_fwalk_reent>
 8008638:	bd10      	pop	{r4, pc}
 800863a:	46c0      	nop			; (mov r8, r8)
 800863c:	08008569 	.word	0x08008569

08008640 <__sfmoreglue>:
 8008640:	b570      	push	{r4, r5, r6, lr}
 8008642:	2568      	movs	r5, #104	; 0x68
 8008644:	1e4a      	subs	r2, r1, #1
 8008646:	4355      	muls	r5, r2
 8008648:	000e      	movs	r6, r1
 800864a:	0029      	movs	r1, r5
 800864c:	3174      	adds	r1, #116	; 0x74
 800864e:	f7ff fa3d 	bl	8007acc <_malloc_r>
 8008652:	1e04      	subs	r4, r0, #0
 8008654:	d008      	beq.n	8008668 <__sfmoreglue+0x28>
 8008656:	2100      	movs	r1, #0
 8008658:	002a      	movs	r2, r5
 800865a:	6001      	str	r1, [r0, #0]
 800865c:	6046      	str	r6, [r0, #4]
 800865e:	300c      	adds	r0, #12
 8008660:	60a0      	str	r0, [r4, #8]
 8008662:	3268      	adds	r2, #104	; 0x68
 8008664:	f7fd faa0 	bl	8005ba8 <memset>
 8008668:	0020      	movs	r0, r4
 800866a:	bd70      	pop	{r4, r5, r6, pc}

0800866c <__sfp_lock_acquire>:
 800866c:	b510      	push	{r4, lr}
 800866e:	4802      	ldr	r0, [pc, #8]	; (8008678 <__sfp_lock_acquire+0xc>)
 8008670:	f000 f8bd 	bl	80087ee <__retarget_lock_acquire_recursive>
 8008674:	bd10      	pop	{r4, pc}
 8008676:	46c0      	nop			; (mov r8, r8)
 8008678:	20000295 	.word	0x20000295

0800867c <__sfp_lock_release>:
 800867c:	b510      	push	{r4, lr}
 800867e:	4802      	ldr	r0, [pc, #8]	; (8008688 <__sfp_lock_release+0xc>)
 8008680:	f000 f8b6 	bl	80087f0 <__retarget_lock_release_recursive>
 8008684:	bd10      	pop	{r4, pc}
 8008686:	46c0      	nop			; (mov r8, r8)
 8008688:	20000295 	.word	0x20000295

0800868c <__sinit_lock_acquire>:
 800868c:	b510      	push	{r4, lr}
 800868e:	4802      	ldr	r0, [pc, #8]	; (8008698 <__sinit_lock_acquire+0xc>)
 8008690:	f000 f8ad 	bl	80087ee <__retarget_lock_acquire_recursive>
 8008694:	bd10      	pop	{r4, pc}
 8008696:	46c0      	nop			; (mov r8, r8)
 8008698:	20000296 	.word	0x20000296

0800869c <__sinit_lock_release>:
 800869c:	b510      	push	{r4, lr}
 800869e:	4802      	ldr	r0, [pc, #8]	; (80086a8 <__sinit_lock_release+0xc>)
 80086a0:	f000 f8a6 	bl	80087f0 <__retarget_lock_release_recursive>
 80086a4:	bd10      	pop	{r4, pc}
 80086a6:	46c0      	nop			; (mov r8, r8)
 80086a8:	20000296 	.word	0x20000296

080086ac <__sinit>:
 80086ac:	b513      	push	{r0, r1, r4, lr}
 80086ae:	0004      	movs	r4, r0
 80086b0:	f7ff ffec 	bl	800868c <__sinit_lock_acquire>
 80086b4:	69a3      	ldr	r3, [r4, #24]
 80086b6:	2b00      	cmp	r3, #0
 80086b8:	d002      	beq.n	80086c0 <__sinit+0x14>
 80086ba:	f7ff ffef 	bl	800869c <__sinit_lock_release>
 80086be:	bd13      	pop	{r0, r1, r4, pc}
 80086c0:	64a3      	str	r3, [r4, #72]	; 0x48
 80086c2:	64e3      	str	r3, [r4, #76]	; 0x4c
 80086c4:	6523      	str	r3, [r4, #80]	; 0x50
 80086c6:	4b13      	ldr	r3, [pc, #76]	; (8008714 <__sinit+0x68>)
 80086c8:	4a13      	ldr	r2, [pc, #76]	; (8008718 <__sinit+0x6c>)
 80086ca:	681b      	ldr	r3, [r3, #0]
 80086cc:	62a2      	str	r2, [r4, #40]	; 0x28
 80086ce:	9301      	str	r3, [sp, #4]
 80086d0:	42a3      	cmp	r3, r4
 80086d2:	d101      	bne.n	80086d8 <__sinit+0x2c>
 80086d4:	2301      	movs	r3, #1
 80086d6:	61a3      	str	r3, [r4, #24]
 80086d8:	0020      	movs	r0, r4
 80086da:	f000 f81f 	bl	800871c <__sfp>
 80086de:	6060      	str	r0, [r4, #4]
 80086e0:	0020      	movs	r0, r4
 80086e2:	f000 f81b 	bl	800871c <__sfp>
 80086e6:	60a0      	str	r0, [r4, #8]
 80086e8:	0020      	movs	r0, r4
 80086ea:	f000 f817 	bl	800871c <__sfp>
 80086ee:	2200      	movs	r2, #0
 80086f0:	2104      	movs	r1, #4
 80086f2:	60e0      	str	r0, [r4, #12]
 80086f4:	6860      	ldr	r0, [r4, #4]
 80086f6:	f7ff ff77 	bl	80085e8 <std>
 80086fa:	2201      	movs	r2, #1
 80086fc:	2109      	movs	r1, #9
 80086fe:	68a0      	ldr	r0, [r4, #8]
 8008700:	f7ff ff72 	bl	80085e8 <std>
 8008704:	2202      	movs	r2, #2
 8008706:	2112      	movs	r1, #18
 8008708:	68e0      	ldr	r0, [r4, #12]
 800870a:	f7ff ff6d 	bl	80085e8 <std>
 800870e:	2301      	movs	r3, #1
 8008710:	61a3      	str	r3, [r4, #24]
 8008712:	e7d2      	b.n	80086ba <__sinit+0xe>
 8008714:	08008c84 	.word	0x08008c84
 8008718:	08008631 	.word	0x08008631

0800871c <__sfp>:
 800871c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800871e:	0007      	movs	r7, r0
 8008720:	f7ff ffa4 	bl	800866c <__sfp_lock_acquire>
 8008724:	4b1f      	ldr	r3, [pc, #124]	; (80087a4 <__sfp+0x88>)
 8008726:	681e      	ldr	r6, [r3, #0]
 8008728:	69b3      	ldr	r3, [r6, #24]
 800872a:	2b00      	cmp	r3, #0
 800872c:	d102      	bne.n	8008734 <__sfp+0x18>
 800872e:	0030      	movs	r0, r6
 8008730:	f7ff ffbc 	bl	80086ac <__sinit>
 8008734:	3648      	adds	r6, #72	; 0x48
 8008736:	68b4      	ldr	r4, [r6, #8]
 8008738:	6873      	ldr	r3, [r6, #4]
 800873a:	3b01      	subs	r3, #1
 800873c:	d504      	bpl.n	8008748 <__sfp+0x2c>
 800873e:	6833      	ldr	r3, [r6, #0]
 8008740:	2b00      	cmp	r3, #0
 8008742:	d022      	beq.n	800878a <__sfp+0x6e>
 8008744:	6836      	ldr	r6, [r6, #0]
 8008746:	e7f6      	b.n	8008736 <__sfp+0x1a>
 8008748:	220c      	movs	r2, #12
 800874a:	5ea5      	ldrsh	r5, [r4, r2]
 800874c:	2d00      	cmp	r5, #0
 800874e:	d11a      	bne.n	8008786 <__sfp+0x6a>
 8008750:	0020      	movs	r0, r4
 8008752:	4b15      	ldr	r3, [pc, #84]	; (80087a8 <__sfp+0x8c>)
 8008754:	3058      	adds	r0, #88	; 0x58
 8008756:	60e3      	str	r3, [r4, #12]
 8008758:	6665      	str	r5, [r4, #100]	; 0x64
 800875a:	f000 f847 	bl	80087ec <__retarget_lock_init_recursive>
 800875e:	f7ff ff8d 	bl	800867c <__sfp_lock_release>
 8008762:	0020      	movs	r0, r4
 8008764:	2208      	movs	r2, #8
 8008766:	0029      	movs	r1, r5
 8008768:	6025      	str	r5, [r4, #0]
 800876a:	60a5      	str	r5, [r4, #8]
 800876c:	6065      	str	r5, [r4, #4]
 800876e:	6125      	str	r5, [r4, #16]
 8008770:	6165      	str	r5, [r4, #20]
 8008772:	61a5      	str	r5, [r4, #24]
 8008774:	305c      	adds	r0, #92	; 0x5c
 8008776:	f7fd fa17 	bl	8005ba8 <memset>
 800877a:	6365      	str	r5, [r4, #52]	; 0x34
 800877c:	63a5      	str	r5, [r4, #56]	; 0x38
 800877e:	64a5      	str	r5, [r4, #72]	; 0x48
 8008780:	64e5      	str	r5, [r4, #76]	; 0x4c
 8008782:	0020      	movs	r0, r4
 8008784:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008786:	3468      	adds	r4, #104	; 0x68
 8008788:	e7d7      	b.n	800873a <__sfp+0x1e>
 800878a:	2104      	movs	r1, #4
 800878c:	0038      	movs	r0, r7
 800878e:	f7ff ff57 	bl	8008640 <__sfmoreglue>
 8008792:	1e04      	subs	r4, r0, #0
 8008794:	6030      	str	r0, [r6, #0]
 8008796:	d1d5      	bne.n	8008744 <__sfp+0x28>
 8008798:	f7ff ff70 	bl	800867c <__sfp_lock_release>
 800879c:	230c      	movs	r3, #12
 800879e:	603b      	str	r3, [r7, #0]
 80087a0:	e7ef      	b.n	8008782 <__sfp+0x66>
 80087a2:	46c0      	nop			; (mov r8, r8)
 80087a4:	08008c84 	.word	0x08008c84
 80087a8:	ffff0001 	.word	0xffff0001

080087ac <_fwalk_reent>:
 80087ac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80087ae:	0004      	movs	r4, r0
 80087b0:	0006      	movs	r6, r0
 80087b2:	2700      	movs	r7, #0
 80087b4:	9101      	str	r1, [sp, #4]
 80087b6:	3448      	adds	r4, #72	; 0x48
 80087b8:	6863      	ldr	r3, [r4, #4]
 80087ba:	68a5      	ldr	r5, [r4, #8]
 80087bc:	9300      	str	r3, [sp, #0]
 80087be:	9b00      	ldr	r3, [sp, #0]
 80087c0:	3b01      	subs	r3, #1
 80087c2:	9300      	str	r3, [sp, #0]
 80087c4:	d504      	bpl.n	80087d0 <_fwalk_reent+0x24>
 80087c6:	6824      	ldr	r4, [r4, #0]
 80087c8:	2c00      	cmp	r4, #0
 80087ca:	d1f5      	bne.n	80087b8 <_fwalk_reent+0xc>
 80087cc:	0038      	movs	r0, r7
 80087ce:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80087d0:	89ab      	ldrh	r3, [r5, #12]
 80087d2:	2b01      	cmp	r3, #1
 80087d4:	d908      	bls.n	80087e8 <_fwalk_reent+0x3c>
 80087d6:	220e      	movs	r2, #14
 80087d8:	5eab      	ldrsh	r3, [r5, r2]
 80087da:	3301      	adds	r3, #1
 80087dc:	d004      	beq.n	80087e8 <_fwalk_reent+0x3c>
 80087de:	0029      	movs	r1, r5
 80087e0:	0030      	movs	r0, r6
 80087e2:	9b01      	ldr	r3, [sp, #4]
 80087e4:	4798      	blx	r3
 80087e6:	4307      	orrs	r7, r0
 80087e8:	3568      	adds	r5, #104	; 0x68
 80087ea:	e7e8      	b.n	80087be <_fwalk_reent+0x12>

080087ec <__retarget_lock_init_recursive>:
 80087ec:	4770      	bx	lr

080087ee <__retarget_lock_acquire_recursive>:
 80087ee:	4770      	bx	lr

080087f0 <__retarget_lock_release_recursive>:
 80087f0:	4770      	bx	lr
	...

080087f4 <__swhatbuf_r>:
 80087f4:	b570      	push	{r4, r5, r6, lr}
 80087f6:	000e      	movs	r6, r1
 80087f8:	001d      	movs	r5, r3
 80087fa:	230e      	movs	r3, #14
 80087fc:	5ec9      	ldrsh	r1, [r1, r3]
 80087fe:	0014      	movs	r4, r2
 8008800:	b096      	sub	sp, #88	; 0x58
 8008802:	2900      	cmp	r1, #0
 8008804:	da08      	bge.n	8008818 <__swhatbuf_r+0x24>
 8008806:	220c      	movs	r2, #12
 8008808:	5eb3      	ldrsh	r3, [r6, r2]
 800880a:	2200      	movs	r2, #0
 800880c:	602a      	str	r2, [r5, #0]
 800880e:	061b      	lsls	r3, r3, #24
 8008810:	d411      	bmi.n	8008836 <__swhatbuf_r+0x42>
 8008812:	2380      	movs	r3, #128	; 0x80
 8008814:	00db      	lsls	r3, r3, #3
 8008816:	e00f      	b.n	8008838 <__swhatbuf_r+0x44>
 8008818:	466a      	mov	r2, sp
 800881a:	f000 f91b 	bl	8008a54 <_fstat_r>
 800881e:	2800      	cmp	r0, #0
 8008820:	dbf1      	blt.n	8008806 <__swhatbuf_r+0x12>
 8008822:	23f0      	movs	r3, #240	; 0xf0
 8008824:	9901      	ldr	r1, [sp, #4]
 8008826:	021b      	lsls	r3, r3, #8
 8008828:	4019      	ands	r1, r3
 800882a:	4b05      	ldr	r3, [pc, #20]	; (8008840 <__swhatbuf_r+0x4c>)
 800882c:	18c9      	adds	r1, r1, r3
 800882e:	424b      	negs	r3, r1
 8008830:	4159      	adcs	r1, r3
 8008832:	6029      	str	r1, [r5, #0]
 8008834:	e7ed      	b.n	8008812 <__swhatbuf_r+0x1e>
 8008836:	2340      	movs	r3, #64	; 0x40
 8008838:	2000      	movs	r0, #0
 800883a:	6023      	str	r3, [r4, #0]
 800883c:	b016      	add	sp, #88	; 0x58
 800883e:	bd70      	pop	{r4, r5, r6, pc}
 8008840:	ffffe000 	.word	0xffffe000

08008844 <__smakebuf_r>:
 8008844:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008846:	2602      	movs	r6, #2
 8008848:	898b      	ldrh	r3, [r1, #12]
 800884a:	0005      	movs	r5, r0
 800884c:	000c      	movs	r4, r1
 800884e:	4233      	tst	r3, r6
 8008850:	d006      	beq.n	8008860 <__smakebuf_r+0x1c>
 8008852:	0023      	movs	r3, r4
 8008854:	3347      	adds	r3, #71	; 0x47
 8008856:	6023      	str	r3, [r4, #0]
 8008858:	6123      	str	r3, [r4, #16]
 800885a:	2301      	movs	r3, #1
 800885c:	6163      	str	r3, [r4, #20]
 800885e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8008860:	466a      	mov	r2, sp
 8008862:	ab01      	add	r3, sp, #4
 8008864:	f7ff ffc6 	bl	80087f4 <__swhatbuf_r>
 8008868:	9900      	ldr	r1, [sp, #0]
 800886a:	0007      	movs	r7, r0
 800886c:	0028      	movs	r0, r5
 800886e:	f7ff f92d 	bl	8007acc <_malloc_r>
 8008872:	2800      	cmp	r0, #0
 8008874:	d108      	bne.n	8008888 <__smakebuf_r+0x44>
 8008876:	220c      	movs	r2, #12
 8008878:	5ea3      	ldrsh	r3, [r4, r2]
 800887a:	059a      	lsls	r2, r3, #22
 800887c:	d4ef      	bmi.n	800885e <__smakebuf_r+0x1a>
 800887e:	2203      	movs	r2, #3
 8008880:	4393      	bics	r3, r2
 8008882:	431e      	orrs	r6, r3
 8008884:	81a6      	strh	r6, [r4, #12]
 8008886:	e7e4      	b.n	8008852 <__smakebuf_r+0xe>
 8008888:	4b0f      	ldr	r3, [pc, #60]	; (80088c8 <__smakebuf_r+0x84>)
 800888a:	62ab      	str	r3, [r5, #40]	; 0x28
 800888c:	2380      	movs	r3, #128	; 0x80
 800888e:	89a2      	ldrh	r2, [r4, #12]
 8008890:	6020      	str	r0, [r4, #0]
 8008892:	4313      	orrs	r3, r2
 8008894:	81a3      	strh	r3, [r4, #12]
 8008896:	9b00      	ldr	r3, [sp, #0]
 8008898:	6120      	str	r0, [r4, #16]
 800889a:	6163      	str	r3, [r4, #20]
 800889c:	9b01      	ldr	r3, [sp, #4]
 800889e:	2b00      	cmp	r3, #0
 80088a0:	d00d      	beq.n	80088be <__smakebuf_r+0x7a>
 80088a2:	0028      	movs	r0, r5
 80088a4:	230e      	movs	r3, #14
 80088a6:	5ee1      	ldrsh	r1, [r4, r3]
 80088a8:	f000 f8e6 	bl	8008a78 <_isatty_r>
 80088ac:	2800      	cmp	r0, #0
 80088ae:	d006      	beq.n	80088be <__smakebuf_r+0x7a>
 80088b0:	2203      	movs	r2, #3
 80088b2:	89a3      	ldrh	r3, [r4, #12]
 80088b4:	4393      	bics	r3, r2
 80088b6:	001a      	movs	r2, r3
 80088b8:	2301      	movs	r3, #1
 80088ba:	4313      	orrs	r3, r2
 80088bc:	81a3      	strh	r3, [r4, #12]
 80088be:	89a0      	ldrh	r0, [r4, #12]
 80088c0:	4307      	orrs	r7, r0
 80088c2:	81a7      	strh	r7, [r4, #12]
 80088c4:	e7cb      	b.n	800885e <__smakebuf_r+0x1a>
 80088c6:	46c0      	nop			; (mov r8, r8)
 80088c8:	08008631 	.word	0x08008631

080088cc <_malloc_usable_size_r>:
 80088cc:	1f0b      	subs	r3, r1, #4
 80088ce:	681b      	ldr	r3, [r3, #0]
 80088d0:	1f18      	subs	r0, r3, #4
 80088d2:	2b00      	cmp	r3, #0
 80088d4:	da01      	bge.n	80088da <_malloc_usable_size_r+0xe>
 80088d6:	580b      	ldr	r3, [r1, r0]
 80088d8:	18c0      	adds	r0, r0, r3
 80088da:	4770      	bx	lr

080088dc <_raise_r>:
 80088dc:	b570      	push	{r4, r5, r6, lr}
 80088de:	0004      	movs	r4, r0
 80088e0:	000d      	movs	r5, r1
 80088e2:	291f      	cmp	r1, #31
 80088e4:	d904      	bls.n	80088f0 <_raise_r+0x14>
 80088e6:	2316      	movs	r3, #22
 80088e8:	6003      	str	r3, [r0, #0]
 80088ea:	2001      	movs	r0, #1
 80088ec:	4240      	negs	r0, r0
 80088ee:	bd70      	pop	{r4, r5, r6, pc}
 80088f0:	6c43      	ldr	r3, [r0, #68]	; 0x44
 80088f2:	2b00      	cmp	r3, #0
 80088f4:	d004      	beq.n	8008900 <_raise_r+0x24>
 80088f6:	008a      	lsls	r2, r1, #2
 80088f8:	189b      	adds	r3, r3, r2
 80088fa:	681a      	ldr	r2, [r3, #0]
 80088fc:	2a00      	cmp	r2, #0
 80088fe:	d108      	bne.n	8008912 <_raise_r+0x36>
 8008900:	0020      	movs	r0, r4
 8008902:	f000 f831 	bl	8008968 <_getpid_r>
 8008906:	002a      	movs	r2, r5
 8008908:	0001      	movs	r1, r0
 800890a:	0020      	movs	r0, r4
 800890c:	f000 f81a 	bl	8008944 <_kill_r>
 8008910:	e7ed      	b.n	80088ee <_raise_r+0x12>
 8008912:	2000      	movs	r0, #0
 8008914:	2a01      	cmp	r2, #1
 8008916:	d0ea      	beq.n	80088ee <_raise_r+0x12>
 8008918:	1c51      	adds	r1, r2, #1
 800891a:	d103      	bne.n	8008924 <_raise_r+0x48>
 800891c:	2316      	movs	r3, #22
 800891e:	3001      	adds	r0, #1
 8008920:	6023      	str	r3, [r4, #0]
 8008922:	e7e4      	b.n	80088ee <_raise_r+0x12>
 8008924:	2400      	movs	r4, #0
 8008926:	0028      	movs	r0, r5
 8008928:	601c      	str	r4, [r3, #0]
 800892a:	4790      	blx	r2
 800892c:	0020      	movs	r0, r4
 800892e:	e7de      	b.n	80088ee <_raise_r+0x12>

08008930 <raise>:
 8008930:	b510      	push	{r4, lr}
 8008932:	4b03      	ldr	r3, [pc, #12]	; (8008940 <raise+0x10>)
 8008934:	0001      	movs	r1, r0
 8008936:	6818      	ldr	r0, [r3, #0]
 8008938:	f7ff ffd0 	bl	80088dc <_raise_r>
 800893c:	bd10      	pop	{r4, pc}
 800893e:	46c0      	nop			; (mov r8, r8)
 8008940:	2000000c 	.word	0x2000000c

08008944 <_kill_r>:
 8008944:	2300      	movs	r3, #0
 8008946:	b570      	push	{r4, r5, r6, lr}
 8008948:	4d06      	ldr	r5, [pc, #24]	; (8008964 <_kill_r+0x20>)
 800894a:	0004      	movs	r4, r0
 800894c:	0008      	movs	r0, r1
 800894e:	0011      	movs	r1, r2
 8008950:	602b      	str	r3, [r5, #0]
 8008952:	f7fb fd08 	bl	8004366 <_kill>
 8008956:	1c43      	adds	r3, r0, #1
 8008958:	d103      	bne.n	8008962 <_kill_r+0x1e>
 800895a:	682b      	ldr	r3, [r5, #0]
 800895c:	2b00      	cmp	r3, #0
 800895e:	d000      	beq.n	8008962 <_kill_r+0x1e>
 8008960:	6023      	str	r3, [r4, #0]
 8008962:	bd70      	pop	{r4, r5, r6, pc}
 8008964:	20000290 	.word	0x20000290

08008968 <_getpid_r>:
 8008968:	b510      	push	{r4, lr}
 800896a:	f7fb fcf6 	bl	800435a <_getpid>
 800896e:	bd10      	pop	{r4, pc}

08008970 <__sread>:
 8008970:	b570      	push	{r4, r5, r6, lr}
 8008972:	000c      	movs	r4, r1
 8008974:	250e      	movs	r5, #14
 8008976:	5f49      	ldrsh	r1, [r1, r5]
 8008978:	f000 f8a4 	bl	8008ac4 <_read_r>
 800897c:	2800      	cmp	r0, #0
 800897e:	db03      	blt.n	8008988 <__sread+0x18>
 8008980:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008982:	181b      	adds	r3, r3, r0
 8008984:	6563      	str	r3, [r4, #84]	; 0x54
 8008986:	bd70      	pop	{r4, r5, r6, pc}
 8008988:	89a3      	ldrh	r3, [r4, #12]
 800898a:	4a02      	ldr	r2, [pc, #8]	; (8008994 <__sread+0x24>)
 800898c:	4013      	ands	r3, r2
 800898e:	81a3      	strh	r3, [r4, #12]
 8008990:	e7f9      	b.n	8008986 <__sread+0x16>
 8008992:	46c0      	nop			; (mov r8, r8)
 8008994:	ffffefff 	.word	0xffffefff

08008998 <__swrite>:
 8008998:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800899a:	001f      	movs	r7, r3
 800899c:	898b      	ldrh	r3, [r1, #12]
 800899e:	0005      	movs	r5, r0
 80089a0:	000c      	movs	r4, r1
 80089a2:	0016      	movs	r6, r2
 80089a4:	05db      	lsls	r3, r3, #23
 80089a6:	d505      	bpl.n	80089b4 <__swrite+0x1c>
 80089a8:	230e      	movs	r3, #14
 80089aa:	5ec9      	ldrsh	r1, [r1, r3]
 80089ac:	2200      	movs	r2, #0
 80089ae:	2302      	movs	r3, #2
 80089b0:	f000 f874 	bl	8008a9c <_lseek_r>
 80089b4:	89a3      	ldrh	r3, [r4, #12]
 80089b6:	4a05      	ldr	r2, [pc, #20]	; (80089cc <__swrite+0x34>)
 80089b8:	0028      	movs	r0, r5
 80089ba:	4013      	ands	r3, r2
 80089bc:	81a3      	strh	r3, [r4, #12]
 80089be:	0032      	movs	r2, r6
 80089c0:	230e      	movs	r3, #14
 80089c2:	5ee1      	ldrsh	r1, [r4, r3]
 80089c4:	003b      	movs	r3, r7
 80089c6:	f000 f81f 	bl	8008a08 <_write_r>
 80089ca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80089cc:	ffffefff 	.word	0xffffefff

080089d0 <__sseek>:
 80089d0:	b570      	push	{r4, r5, r6, lr}
 80089d2:	000c      	movs	r4, r1
 80089d4:	250e      	movs	r5, #14
 80089d6:	5f49      	ldrsh	r1, [r1, r5]
 80089d8:	f000 f860 	bl	8008a9c <_lseek_r>
 80089dc:	89a3      	ldrh	r3, [r4, #12]
 80089de:	1c42      	adds	r2, r0, #1
 80089e0:	d103      	bne.n	80089ea <__sseek+0x1a>
 80089e2:	4a05      	ldr	r2, [pc, #20]	; (80089f8 <__sseek+0x28>)
 80089e4:	4013      	ands	r3, r2
 80089e6:	81a3      	strh	r3, [r4, #12]
 80089e8:	bd70      	pop	{r4, r5, r6, pc}
 80089ea:	2280      	movs	r2, #128	; 0x80
 80089ec:	0152      	lsls	r2, r2, #5
 80089ee:	4313      	orrs	r3, r2
 80089f0:	81a3      	strh	r3, [r4, #12]
 80089f2:	6560      	str	r0, [r4, #84]	; 0x54
 80089f4:	e7f8      	b.n	80089e8 <__sseek+0x18>
 80089f6:	46c0      	nop			; (mov r8, r8)
 80089f8:	ffffefff 	.word	0xffffefff

080089fc <__sclose>:
 80089fc:	b510      	push	{r4, lr}
 80089fe:	230e      	movs	r3, #14
 8008a00:	5ec9      	ldrsh	r1, [r1, r3]
 8008a02:	f000 f815 	bl	8008a30 <_close_r>
 8008a06:	bd10      	pop	{r4, pc}

08008a08 <_write_r>:
 8008a08:	b570      	push	{r4, r5, r6, lr}
 8008a0a:	0004      	movs	r4, r0
 8008a0c:	0008      	movs	r0, r1
 8008a0e:	0011      	movs	r1, r2
 8008a10:	001a      	movs	r2, r3
 8008a12:	2300      	movs	r3, #0
 8008a14:	4d05      	ldr	r5, [pc, #20]	; (8008a2c <_write_r+0x24>)
 8008a16:	602b      	str	r3, [r5, #0]
 8008a18:	f7fb fcde 	bl	80043d8 <_write>
 8008a1c:	1c43      	adds	r3, r0, #1
 8008a1e:	d103      	bne.n	8008a28 <_write_r+0x20>
 8008a20:	682b      	ldr	r3, [r5, #0]
 8008a22:	2b00      	cmp	r3, #0
 8008a24:	d000      	beq.n	8008a28 <_write_r+0x20>
 8008a26:	6023      	str	r3, [r4, #0]
 8008a28:	bd70      	pop	{r4, r5, r6, pc}
 8008a2a:	46c0      	nop			; (mov r8, r8)
 8008a2c:	20000290 	.word	0x20000290

08008a30 <_close_r>:
 8008a30:	2300      	movs	r3, #0
 8008a32:	b570      	push	{r4, r5, r6, lr}
 8008a34:	4d06      	ldr	r5, [pc, #24]	; (8008a50 <_close_r+0x20>)
 8008a36:	0004      	movs	r4, r0
 8008a38:	0008      	movs	r0, r1
 8008a3a:	602b      	str	r3, [r5, #0]
 8008a3c:	f7fb fce8 	bl	8004410 <_close>
 8008a40:	1c43      	adds	r3, r0, #1
 8008a42:	d103      	bne.n	8008a4c <_close_r+0x1c>
 8008a44:	682b      	ldr	r3, [r5, #0]
 8008a46:	2b00      	cmp	r3, #0
 8008a48:	d000      	beq.n	8008a4c <_close_r+0x1c>
 8008a4a:	6023      	str	r3, [r4, #0]
 8008a4c:	bd70      	pop	{r4, r5, r6, pc}
 8008a4e:	46c0      	nop			; (mov r8, r8)
 8008a50:	20000290 	.word	0x20000290

08008a54 <_fstat_r>:
 8008a54:	2300      	movs	r3, #0
 8008a56:	b570      	push	{r4, r5, r6, lr}
 8008a58:	4d06      	ldr	r5, [pc, #24]	; (8008a74 <_fstat_r+0x20>)
 8008a5a:	0004      	movs	r4, r0
 8008a5c:	0008      	movs	r0, r1
 8008a5e:	0011      	movs	r1, r2
 8008a60:	602b      	str	r3, [r5, #0]
 8008a62:	f7fb fcdf 	bl	8004424 <_fstat>
 8008a66:	1c43      	adds	r3, r0, #1
 8008a68:	d103      	bne.n	8008a72 <_fstat_r+0x1e>
 8008a6a:	682b      	ldr	r3, [r5, #0]
 8008a6c:	2b00      	cmp	r3, #0
 8008a6e:	d000      	beq.n	8008a72 <_fstat_r+0x1e>
 8008a70:	6023      	str	r3, [r4, #0]
 8008a72:	bd70      	pop	{r4, r5, r6, pc}
 8008a74:	20000290 	.word	0x20000290

08008a78 <_isatty_r>:
 8008a78:	2300      	movs	r3, #0
 8008a7a:	b570      	push	{r4, r5, r6, lr}
 8008a7c:	4d06      	ldr	r5, [pc, #24]	; (8008a98 <_isatty_r+0x20>)
 8008a7e:	0004      	movs	r4, r0
 8008a80:	0008      	movs	r0, r1
 8008a82:	602b      	str	r3, [r5, #0]
 8008a84:	f7fb fcdc 	bl	8004440 <_isatty>
 8008a88:	1c43      	adds	r3, r0, #1
 8008a8a:	d103      	bne.n	8008a94 <_isatty_r+0x1c>
 8008a8c:	682b      	ldr	r3, [r5, #0]
 8008a8e:	2b00      	cmp	r3, #0
 8008a90:	d000      	beq.n	8008a94 <_isatty_r+0x1c>
 8008a92:	6023      	str	r3, [r4, #0]
 8008a94:	bd70      	pop	{r4, r5, r6, pc}
 8008a96:	46c0      	nop			; (mov r8, r8)
 8008a98:	20000290 	.word	0x20000290

08008a9c <_lseek_r>:
 8008a9c:	b570      	push	{r4, r5, r6, lr}
 8008a9e:	0004      	movs	r4, r0
 8008aa0:	0008      	movs	r0, r1
 8008aa2:	0011      	movs	r1, r2
 8008aa4:	001a      	movs	r2, r3
 8008aa6:	2300      	movs	r3, #0
 8008aa8:	4d05      	ldr	r5, [pc, #20]	; (8008ac0 <_lseek_r+0x24>)
 8008aaa:	602b      	str	r3, [r5, #0]
 8008aac:	f7fb fcd1 	bl	8004452 <_lseek>
 8008ab0:	1c43      	adds	r3, r0, #1
 8008ab2:	d103      	bne.n	8008abc <_lseek_r+0x20>
 8008ab4:	682b      	ldr	r3, [r5, #0]
 8008ab6:	2b00      	cmp	r3, #0
 8008ab8:	d000      	beq.n	8008abc <_lseek_r+0x20>
 8008aba:	6023      	str	r3, [r4, #0]
 8008abc:	bd70      	pop	{r4, r5, r6, pc}
 8008abe:	46c0      	nop			; (mov r8, r8)
 8008ac0:	20000290 	.word	0x20000290

08008ac4 <_read_r>:
 8008ac4:	b570      	push	{r4, r5, r6, lr}
 8008ac6:	0004      	movs	r4, r0
 8008ac8:	0008      	movs	r0, r1
 8008aca:	0011      	movs	r1, r2
 8008acc:	001a      	movs	r2, r3
 8008ace:	2300      	movs	r3, #0
 8008ad0:	4d05      	ldr	r5, [pc, #20]	; (8008ae8 <_read_r+0x24>)
 8008ad2:	602b      	str	r3, [r5, #0]
 8008ad4:	f7fb fc63 	bl	800439e <_read>
 8008ad8:	1c43      	adds	r3, r0, #1
 8008ada:	d103      	bne.n	8008ae4 <_read_r+0x20>
 8008adc:	682b      	ldr	r3, [r5, #0]
 8008ade:	2b00      	cmp	r3, #0
 8008ae0:	d000      	beq.n	8008ae4 <_read_r+0x20>
 8008ae2:	6023      	str	r3, [r4, #0]
 8008ae4:	bd70      	pop	{r4, r5, r6, pc}
 8008ae6:	46c0      	nop			; (mov r8, r8)
 8008ae8:	20000290 	.word	0x20000290

08008aec <_init>:
 8008aec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008aee:	46c0      	nop			; (mov r8, r8)
 8008af0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008af2:	bc08      	pop	{r3}
 8008af4:	469e      	mov	lr, r3
 8008af6:	4770      	bx	lr

08008af8 <_fini>:
 8008af8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008afa:	46c0      	nop			; (mov r8, r8)
 8008afc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008afe:	bc08      	pop	{r3}
 8008b00:	469e      	mov	lr, r3
 8008b02:	4770      	bx	lr
