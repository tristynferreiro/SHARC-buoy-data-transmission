
SHARC_buoy_transmission_data.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006bf4  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004fc  08006cb8  08006cb8  00016cb8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080071b4  080071b4  000201e4  2**0
                  CONTENTS
  4 .ARM          00000000  080071b4  080071b4  000201e4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080071b4  080071b4  000201e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080071b4  080071b4  000171b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080071b8  080071b8  000171b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e4  20000000  080071bc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000003d8  200001e4  080073a0  000201e4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200005bc  080073a0  000205bc  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000201e4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00007bd2  00000000  00000000  0002020c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000143c  00000000  00000000  00027dde  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000670  00000000  00000000  00029220  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000005e8  00000000  00000000  00029890  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00012328  00000000  00000000  00029e78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00008408  00000000  00000000  0003c1a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00069f64  00000000  00000000  000445a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000ae50c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000271c  00000000  00000000  000ae55c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001e4 	.word	0x200001e4
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08006c9c 	.word	0x08006c9c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001e8 	.word	0x200001e8
 8000104:	08006c9c 	.word	0x08006c9c

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	; 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			; (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	; 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	; 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			; (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			; (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f000 ff0d 	bl	800125c <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f000 fe5d 	bl	800110c <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f000 feff 	bl	800125c <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f000 fef5 	bl	800125c <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 fe85 	bl	8001190 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f000 fe7b 	bl	8001190 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			; (mov r8, r8)

080004a8 <__aeabi_dadd>:
 80004a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80004aa:	464f      	mov	r7, r9
 80004ac:	4646      	mov	r6, r8
 80004ae:	46d6      	mov	lr, sl
 80004b0:	000d      	movs	r5, r1
 80004b2:	0004      	movs	r4, r0
 80004b4:	b5c0      	push	{r6, r7, lr}
 80004b6:	001f      	movs	r7, r3
 80004b8:	0011      	movs	r1, r2
 80004ba:	0328      	lsls	r0, r5, #12
 80004bc:	0f62      	lsrs	r2, r4, #29
 80004be:	0a40      	lsrs	r0, r0, #9
 80004c0:	4310      	orrs	r0, r2
 80004c2:	007a      	lsls	r2, r7, #1
 80004c4:	0d52      	lsrs	r2, r2, #21
 80004c6:	00e3      	lsls	r3, r4, #3
 80004c8:	033c      	lsls	r4, r7, #12
 80004ca:	4691      	mov	r9, r2
 80004cc:	0a64      	lsrs	r4, r4, #9
 80004ce:	0ffa      	lsrs	r2, r7, #31
 80004d0:	0f4f      	lsrs	r7, r1, #29
 80004d2:	006e      	lsls	r6, r5, #1
 80004d4:	4327      	orrs	r7, r4
 80004d6:	4692      	mov	sl, r2
 80004d8:	46b8      	mov	r8, r7
 80004da:	0d76      	lsrs	r6, r6, #21
 80004dc:	0fed      	lsrs	r5, r5, #31
 80004de:	00c9      	lsls	r1, r1, #3
 80004e0:	4295      	cmp	r5, r2
 80004e2:	d100      	bne.n	80004e6 <__aeabi_dadd+0x3e>
 80004e4:	e099      	b.n	800061a <__aeabi_dadd+0x172>
 80004e6:	464c      	mov	r4, r9
 80004e8:	1b34      	subs	r4, r6, r4
 80004ea:	46a4      	mov	ip, r4
 80004ec:	2c00      	cmp	r4, #0
 80004ee:	dc00      	bgt.n	80004f2 <__aeabi_dadd+0x4a>
 80004f0:	e07c      	b.n	80005ec <__aeabi_dadd+0x144>
 80004f2:	464a      	mov	r2, r9
 80004f4:	2a00      	cmp	r2, #0
 80004f6:	d100      	bne.n	80004fa <__aeabi_dadd+0x52>
 80004f8:	e0b8      	b.n	800066c <__aeabi_dadd+0x1c4>
 80004fa:	4ac5      	ldr	r2, [pc, #788]	; (8000810 <__aeabi_dadd+0x368>)
 80004fc:	4296      	cmp	r6, r2
 80004fe:	d100      	bne.n	8000502 <__aeabi_dadd+0x5a>
 8000500:	e11c      	b.n	800073c <__aeabi_dadd+0x294>
 8000502:	2280      	movs	r2, #128	; 0x80
 8000504:	003c      	movs	r4, r7
 8000506:	0412      	lsls	r2, r2, #16
 8000508:	4314      	orrs	r4, r2
 800050a:	46a0      	mov	r8, r4
 800050c:	4662      	mov	r2, ip
 800050e:	2a38      	cmp	r2, #56	; 0x38
 8000510:	dd00      	ble.n	8000514 <__aeabi_dadd+0x6c>
 8000512:	e161      	b.n	80007d8 <__aeabi_dadd+0x330>
 8000514:	2a1f      	cmp	r2, #31
 8000516:	dd00      	ble.n	800051a <__aeabi_dadd+0x72>
 8000518:	e1cc      	b.n	80008b4 <__aeabi_dadd+0x40c>
 800051a:	4664      	mov	r4, ip
 800051c:	2220      	movs	r2, #32
 800051e:	1b12      	subs	r2, r2, r4
 8000520:	4644      	mov	r4, r8
 8000522:	4094      	lsls	r4, r2
 8000524:	000f      	movs	r7, r1
 8000526:	46a1      	mov	r9, r4
 8000528:	4664      	mov	r4, ip
 800052a:	4091      	lsls	r1, r2
 800052c:	40e7      	lsrs	r7, r4
 800052e:	464c      	mov	r4, r9
 8000530:	1e4a      	subs	r2, r1, #1
 8000532:	4191      	sbcs	r1, r2
 8000534:	433c      	orrs	r4, r7
 8000536:	4642      	mov	r2, r8
 8000538:	4321      	orrs	r1, r4
 800053a:	4664      	mov	r4, ip
 800053c:	40e2      	lsrs	r2, r4
 800053e:	1a80      	subs	r0, r0, r2
 8000540:	1a5c      	subs	r4, r3, r1
 8000542:	42a3      	cmp	r3, r4
 8000544:	419b      	sbcs	r3, r3
 8000546:	425f      	negs	r7, r3
 8000548:	1bc7      	subs	r7, r0, r7
 800054a:	023b      	lsls	r3, r7, #8
 800054c:	d400      	bmi.n	8000550 <__aeabi_dadd+0xa8>
 800054e:	e0d0      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000550:	027f      	lsls	r7, r7, #9
 8000552:	0a7f      	lsrs	r7, r7, #9
 8000554:	2f00      	cmp	r7, #0
 8000556:	d100      	bne.n	800055a <__aeabi_dadd+0xb2>
 8000558:	e0ff      	b.n	800075a <__aeabi_dadd+0x2b2>
 800055a:	0038      	movs	r0, r7
 800055c:	f001 fd8a 	bl	8002074 <__clzsi2>
 8000560:	0001      	movs	r1, r0
 8000562:	3908      	subs	r1, #8
 8000564:	2320      	movs	r3, #32
 8000566:	0022      	movs	r2, r4
 8000568:	1a5b      	subs	r3, r3, r1
 800056a:	408f      	lsls	r7, r1
 800056c:	40da      	lsrs	r2, r3
 800056e:	408c      	lsls	r4, r1
 8000570:	4317      	orrs	r7, r2
 8000572:	42b1      	cmp	r1, r6
 8000574:	da00      	bge.n	8000578 <__aeabi_dadd+0xd0>
 8000576:	e0ff      	b.n	8000778 <__aeabi_dadd+0x2d0>
 8000578:	1b89      	subs	r1, r1, r6
 800057a:	1c4b      	adds	r3, r1, #1
 800057c:	2b1f      	cmp	r3, #31
 800057e:	dd00      	ble.n	8000582 <__aeabi_dadd+0xda>
 8000580:	e0a8      	b.n	80006d4 <__aeabi_dadd+0x22c>
 8000582:	2220      	movs	r2, #32
 8000584:	0039      	movs	r1, r7
 8000586:	1ad2      	subs	r2, r2, r3
 8000588:	0020      	movs	r0, r4
 800058a:	4094      	lsls	r4, r2
 800058c:	4091      	lsls	r1, r2
 800058e:	40d8      	lsrs	r0, r3
 8000590:	1e62      	subs	r2, r4, #1
 8000592:	4194      	sbcs	r4, r2
 8000594:	40df      	lsrs	r7, r3
 8000596:	2600      	movs	r6, #0
 8000598:	4301      	orrs	r1, r0
 800059a:	430c      	orrs	r4, r1
 800059c:	0763      	lsls	r3, r4, #29
 800059e:	d009      	beq.n	80005b4 <__aeabi_dadd+0x10c>
 80005a0:	230f      	movs	r3, #15
 80005a2:	4023      	ands	r3, r4
 80005a4:	2b04      	cmp	r3, #4
 80005a6:	d005      	beq.n	80005b4 <__aeabi_dadd+0x10c>
 80005a8:	1d23      	adds	r3, r4, #4
 80005aa:	42a3      	cmp	r3, r4
 80005ac:	41a4      	sbcs	r4, r4
 80005ae:	4264      	negs	r4, r4
 80005b0:	193f      	adds	r7, r7, r4
 80005b2:	001c      	movs	r4, r3
 80005b4:	023b      	lsls	r3, r7, #8
 80005b6:	d400      	bmi.n	80005ba <__aeabi_dadd+0x112>
 80005b8:	e09e      	b.n	80006f8 <__aeabi_dadd+0x250>
 80005ba:	4b95      	ldr	r3, [pc, #596]	; (8000810 <__aeabi_dadd+0x368>)
 80005bc:	3601      	adds	r6, #1
 80005be:	429e      	cmp	r6, r3
 80005c0:	d100      	bne.n	80005c4 <__aeabi_dadd+0x11c>
 80005c2:	e0b7      	b.n	8000734 <__aeabi_dadd+0x28c>
 80005c4:	4a93      	ldr	r2, [pc, #588]	; (8000814 <__aeabi_dadd+0x36c>)
 80005c6:	08e4      	lsrs	r4, r4, #3
 80005c8:	4017      	ands	r7, r2
 80005ca:	077b      	lsls	r3, r7, #29
 80005cc:	0571      	lsls	r1, r6, #21
 80005ce:	027f      	lsls	r7, r7, #9
 80005d0:	4323      	orrs	r3, r4
 80005d2:	0b3f      	lsrs	r7, r7, #12
 80005d4:	0d4a      	lsrs	r2, r1, #21
 80005d6:	0512      	lsls	r2, r2, #20
 80005d8:	433a      	orrs	r2, r7
 80005da:	07ed      	lsls	r5, r5, #31
 80005dc:	432a      	orrs	r2, r5
 80005de:	0018      	movs	r0, r3
 80005e0:	0011      	movs	r1, r2
 80005e2:	bce0      	pop	{r5, r6, r7}
 80005e4:	46ba      	mov	sl, r7
 80005e6:	46b1      	mov	r9, r6
 80005e8:	46a8      	mov	r8, r5
 80005ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005ec:	2c00      	cmp	r4, #0
 80005ee:	d04b      	beq.n	8000688 <__aeabi_dadd+0x1e0>
 80005f0:	464c      	mov	r4, r9
 80005f2:	1ba4      	subs	r4, r4, r6
 80005f4:	46a4      	mov	ip, r4
 80005f6:	2e00      	cmp	r6, #0
 80005f8:	d000      	beq.n	80005fc <__aeabi_dadd+0x154>
 80005fa:	e123      	b.n	8000844 <__aeabi_dadd+0x39c>
 80005fc:	0004      	movs	r4, r0
 80005fe:	431c      	orrs	r4, r3
 8000600:	d100      	bne.n	8000604 <__aeabi_dadd+0x15c>
 8000602:	e1af      	b.n	8000964 <__aeabi_dadd+0x4bc>
 8000604:	4662      	mov	r2, ip
 8000606:	1e54      	subs	r4, r2, #1
 8000608:	2a01      	cmp	r2, #1
 800060a:	d100      	bne.n	800060e <__aeabi_dadd+0x166>
 800060c:	e215      	b.n	8000a3a <__aeabi_dadd+0x592>
 800060e:	4d80      	ldr	r5, [pc, #512]	; (8000810 <__aeabi_dadd+0x368>)
 8000610:	45ac      	cmp	ip, r5
 8000612:	d100      	bne.n	8000616 <__aeabi_dadd+0x16e>
 8000614:	e1c8      	b.n	80009a8 <__aeabi_dadd+0x500>
 8000616:	46a4      	mov	ip, r4
 8000618:	e11b      	b.n	8000852 <__aeabi_dadd+0x3aa>
 800061a:	464a      	mov	r2, r9
 800061c:	1ab2      	subs	r2, r6, r2
 800061e:	4694      	mov	ip, r2
 8000620:	2a00      	cmp	r2, #0
 8000622:	dc00      	bgt.n	8000626 <__aeabi_dadd+0x17e>
 8000624:	e0ac      	b.n	8000780 <__aeabi_dadd+0x2d8>
 8000626:	464a      	mov	r2, r9
 8000628:	2a00      	cmp	r2, #0
 800062a:	d043      	beq.n	80006b4 <__aeabi_dadd+0x20c>
 800062c:	4a78      	ldr	r2, [pc, #480]	; (8000810 <__aeabi_dadd+0x368>)
 800062e:	4296      	cmp	r6, r2
 8000630:	d100      	bne.n	8000634 <__aeabi_dadd+0x18c>
 8000632:	e1af      	b.n	8000994 <__aeabi_dadd+0x4ec>
 8000634:	2280      	movs	r2, #128	; 0x80
 8000636:	003c      	movs	r4, r7
 8000638:	0412      	lsls	r2, r2, #16
 800063a:	4314      	orrs	r4, r2
 800063c:	46a0      	mov	r8, r4
 800063e:	4662      	mov	r2, ip
 8000640:	2a38      	cmp	r2, #56	; 0x38
 8000642:	dc67      	bgt.n	8000714 <__aeabi_dadd+0x26c>
 8000644:	2a1f      	cmp	r2, #31
 8000646:	dc00      	bgt.n	800064a <__aeabi_dadd+0x1a2>
 8000648:	e15f      	b.n	800090a <__aeabi_dadd+0x462>
 800064a:	4647      	mov	r7, r8
 800064c:	3a20      	subs	r2, #32
 800064e:	40d7      	lsrs	r7, r2
 8000650:	4662      	mov	r2, ip
 8000652:	2a20      	cmp	r2, #32
 8000654:	d005      	beq.n	8000662 <__aeabi_dadd+0x1ba>
 8000656:	4664      	mov	r4, ip
 8000658:	2240      	movs	r2, #64	; 0x40
 800065a:	1b12      	subs	r2, r2, r4
 800065c:	4644      	mov	r4, r8
 800065e:	4094      	lsls	r4, r2
 8000660:	4321      	orrs	r1, r4
 8000662:	1e4a      	subs	r2, r1, #1
 8000664:	4191      	sbcs	r1, r2
 8000666:	000c      	movs	r4, r1
 8000668:	433c      	orrs	r4, r7
 800066a:	e057      	b.n	800071c <__aeabi_dadd+0x274>
 800066c:	003a      	movs	r2, r7
 800066e:	430a      	orrs	r2, r1
 8000670:	d100      	bne.n	8000674 <__aeabi_dadd+0x1cc>
 8000672:	e105      	b.n	8000880 <__aeabi_dadd+0x3d8>
 8000674:	0022      	movs	r2, r4
 8000676:	3a01      	subs	r2, #1
 8000678:	2c01      	cmp	r4, #1
 800067a:	d100      	bne.n	800067e <__aeabi_dadd+0x1d6>
 800067c:	e182      	b.n	8000984 <__aeabi_dadd+0x4dc>
 800067e:	4c64      	ldr	r4, [pc, #400]	; (8000810 <__aeabi_dadd+0x368>)
 8000680:	45a4      	cmp	ip, r4
 8000682:	d05b      	beq.n	800073c <__aeabi_dadd+0x294>
 8000684:	4694      	mov	ip, r2
 8000686:	e741      	b.n	800050c <__aeabi_dadd+0x64>
 8000688:	4c63      	ldr	r4, [pc, #396]	; (8000818 <__aeabi_dadd+0x370>)
 800068a:	1c77      	adds	r7, r6, #1
 800068c:	4227      	tst	r7, r4
 800068e:	d000      	beq.n	8000692 <__aeabi_dadd+0x1ea>
 8000690:	e0c4      	b.n	800081c <__aeabi_dadd+0x374>
 8000692:	0004      	movs	r4, r0
 8000694:	431c      	orrs	r4, r3
 8000696:	2e00      	cmp	r6, #0
 8000698:	d000      	beq.n	800069c <__aeabi_dadd+0x1f4>
 800069a:	e169      	b.n	8000970 <__aeabi_dadd+0x4c8>
 800069c:	2c00      	cmp	r4, #0
 800069e:	d100      	bne.n	80006a2 <__aeabi_dadd+0x1fa>
 80006a0:	e1bf      	b.n	8000a22 <__aeabi_dadd+0x57a>
 80006a2:	4644      	mov	r4, r8
 80006a4:	430c      	orrs	r4, r1
 80006a6:	d000      	beq.n	80006aa <__aeabi_dadd+0x202>
 80006a8:	e1d0      	b.n	8000a4c <__aeabi_dadd+0x5a4>
 80006aa:	0742      	lsls	r2, r0, #29
 80006ac:	08db      	lsrs	r3, r3, #3
 80006ae:	4313      	orrs	r3, r2
 80006b0:	08c0      	lsrs	r0, r0, #3
 80006b2:	e029      	b.n	8000708 <__aeabi_dadd+0x260>
 80006b4:	003a      	movs	r2, r7
 80006b6:	430a      	orrs	r2, r1
 80006b8:	d100      	bne.n	80006bc <__aeabi_dadd+0x214>
 80006ba:	e170      	b.n	800099e <__aeabi_dadd+0x4f6>
 80006bc:	4662      	mov	r2, ip
 80006be:	4664      	mov	r4, ip
 80006c0:	3a01      	subs	r2, #1
 80006c2:	2c01      	cmp	r4, #1
 80006c4:	d100      	bne.n	80006c8 <__aeabi_dadd+0x220>
 80006c6:	e0e0      	b.n	800088a <__aeabi_dadd+0x3e2>
 80006c8:	4c51      	ldr	r4, [pc, #324]	; (8000810 <__aeabi_dadd+0x368>)
 80006ca:	45a4      	cmp	ip, r4
 80006cc:	d100      	bne.n	80006d0 <__aeabi_dadd+0x228>
 80006ce:	e161      	b.n	8000994 <__aeabi_dadd+0x4ec>
 80006d0:	4694      	mov	ip, r2
 80006d2:	e7b4      	b.n	800063e <__aeabi_dadd+0x196>
 80006d4:	003a      	movs	r2, r7
 80006d6:	391f      	subs	r1, #31
 80006d8:	40ca      	lsrs	r2, r1
 80006da:	0011      	movs	r1, r2
 80006dc:	2b20      	cmp	r3, #32
 80006de:	d003      	beq.n	80006e8 <__aeabi_dadd+0x240>
 80006e0:	2240      	movs	r2, #64	; 0x40
 80006e2:	1ad3      	subs	r3, r2, r3
 80006e4:	409f      	lsls	r7, r3
 80006e6:	433c      	orrs	r4, r7
 80006e8:	1e63      	subs	r3, r4, #1
 80006ea:	419c      	sbcs	r4, r3
 80006ec:	2700      	movs	r7, #0
 80006ee:	2600      	movs	r6, #0
 80006f0:	430c      	orrs	r4, r1
 80006f2:	0763      	lsls	r3, r4, #29
 80006f4:	d000      	beq.n	80006f8 <__aeabi_dadd+0x250>
 80006f6:	e753      	b.n	80005a0 <__aeabi_dadd+0xf8>
 80006f8:	46b4      	mov	ip, r6
 80006fa:	08e4      	lsrs	r4, r4, #3
 80006fc:	077b      	lsls	r3, r7, #29
 80006fe:	4323      	orrs	r3, r4
 8000700:	08f8      	lsrs	r0, r7, #3
 8000702:	4a43      	ldr	r2, [pc, #268]	; (8000810 <__aeabi_dadd+0x368>)
 8000704:	4594      	cmp	ip, r2
 8000706:	d01d      	beq.n	8000744 <__aeabi_dadd+0x29c>
 8000708:	4662      	mov	r2, ip
 800070a:	0307      	lsls	r7, r0, #12
 800070c:	0552      	lsls	r2, r2, #21
 800070e:	0b3f      	lsrs	r7, r7, #12
 8000710:	0d52      	lsrs	r2, r2, #21
 8000712:	e760      	b.n	80005d6 <__aeabi_dadd+0x12e>
 8000714:	4644      	mov	r4, r8
 8000716:	430c      	orrs	r4, r1
 8000718:	1e62      	subs	r2, r4, #1
 800071a:	4194      	sbcs	r4, r2
 800071c:	18e4      	adds	r4, r4, r3
 800071e:	429c      	cmp	r4, r3
 8000720:	419b      	sbcs	r3, r3
 8000722:	425f      	negs	r7, r3
 8000724:	183f      	adds	r7, r7, r0
 8000726:	023b      	lsls	r3, r7, #8
 8000728:	d5e3      	bpl.n	80006f2 <__aeabi_dadd+0x24a>
 800072a:	4b39      	ldr	r3, [pc, #228]	; (8000810 <__aeabi_dadd+0x368>)
 800072c:	3601      	adds	r6, #1
 800072e:	429e      	cmp	r6, r3
 8000730:	d000      	beq.n	8000734 <__aeabi_dadd+0x28c>
 8000732:	e0b5      	b.n	80008a0 <__aeabi_dadd+0x3f8>
 8000734:	0032      	movs	r2, r6
 8000736:	2700      	movs	r7, #0
 8000738:	2300      	movs	r3, #0
 800073a:	e74c      	b.n	80005d6 <__aeabi_dadd+0x12e>
 800073c:	0742      	lsls	r2, r0, #29
 800073e:	08db      	lsrs	r3, r3, #3
 8000740:	4313      	orrs	r3, r2
 8000742:	08c0      	lsrs	r0, r0, #3
 8000744:	001a      	movs	r2, r3
 8000746:	4302      	orrs	r2, r0
 8000748:	d100      	bne.n	800074c <__aeabi_dadd+0x2a4>
 800074a:	e1e1      	b.n	8000b10 <__aeabi_dadd+0x668>
 800074c:	2780      	movs	r7, #128	; 0x80
 800074e:	033f      	lsls	r7, r7, #12
 8000750:	4307      	orrs	r7, r0
 8000752:	033f      	lsls	r7, r7, #12
 8000754:	4a2e      	ldr	r2, [pc, #184]	; (8000810 <__aeabi_dadd+0x368>)
 8000756:	0b3f      	lsrs	r7, r7, #12
 8000758:	e73d      	b.n	80005d6 <__aeabi_dadd+0x12e>
 800075a:	0020      	movs	r0, r4
 800075c:	f001 fc8a 	bl	8002074 <__clzsi2>
 8000760:	0001      	movs	r1, r0
 8000762:	3118      	adds	r1, #24
 8000764:	291f      	cmp	r1, #31
 8000766:	dc00      	bgt.n	800076a <__aeabi_dadd+0x2c2>
 8000768:	e6fc      	b.n	8000564 <__aeabi_dadd+0xbc>
 800076a:	3808      	subs	r0, #8
 800076c:	4084      	lsls	r4, r0
 800076e:	0027      	movs	r7, r4
 8000770:	2400      	movs	r4, #0
 8000772:	42b1      	cmp	r1, r6
 8000774:	db00      	blt.n	8000778 <__aeabi_dadd+0x2d0>
 8000776:	e6ff      	b.n	8000578 <__aeabi_dadd+0xd0>
 8000778:	4a26      	ldr	r2, [pc, #152]	; (8000814 <__aeabi_dadd+0x36c>)
 800077a:	1a76      	subs	r6, r6, r1
 800077c:	4017      	ands	r7, r2
 800077e:	e70d      	b.n	800059c <__aeabi_dadd+0xf4>
 8000780:	2a00      	cmp	r2, #0
 8000782:	d02f      	beq.n	80007e4 <__aeabi_dadd+0x33c>
 8000784:	464a      	mov	r2, r9
 8000786:	1b92      	subs	r2, r2, r6
 8000788:	4694      	mov	ip, r2
 800078a:	2e00      	cmp	r6, #0
 800078c:	d100      	bne.n	8000790 <__aeabi_dadd+0x2e8>
 800078e:	e0ad      	b.n	80008ec <__aeabi_dadd+0x444>
 8000790:	4a1f      	ldr	r2, [pc, #124]	; (8000810 <__aeabi_dadd+0x368>)
 8000792:	4591      	cmp	r9, r2
 8000794:	d100      	bne.n	8000798 <__aeabi_dadd+0x2f0>
 8000796:	e10f      	b.n	80009b8 <__aeabi_dadd+0x510>
 8000798:	2280      	movs	r2, #128	; 0x80
 800079a:	0412      	lsls	r2, r2, #16
 800079c:	4310      	orrs	r0, r2
 800079e:	4662      	mov	r2, ip
 80007a0:	2a38      	cmp	r2, #56	; 0x38
 80007a2:	dd00      	ble.n	80007a6 <__aeabi_dadd+0x2fe>
 80007a4:	e10f      	b.n	80009c6 <__aeabi_dadd+0x51e>
 80007a6:	2a1f      	cmp	r2, #31
 80007a8:	dd00      	ble.n	80007ac <__aeabi_dadd+0x304>
 80007aa:	e180      	b.n	8000aae <__aeabi_dadd+0x606>
 80007ac:	4664      	mov	r4, ip
 80007ae:	2220      	movs	r2, #32
 80007b0:	001e      	movs	r6, r3
 80007b2:	1b12      	subs	r2, r2, r4
 80007b4:	4667      	mov	r7, ip
 80007b6:	0004      	movs	r4, r0
 80007b8:	4093      	lsls	r3, r2
 80007ba:	4094      	lsls	r4, r2
 80007bc:	40fe      	lsrs	r6, r7
 80007be:	1e5a      	subs	r2, r3, #1
 80007c0:	4193      	sbcs	r3, r2
 80007c2:	40f8      	lsrs	r0, r7
 80007c4:	4334      	orrs	r4, r6
 80007c6:	431c      	orrs	r4, r3
 80007c8:	4480      	add	r8, r0
 80007ca:	1864      	adds	r4, r4, r1
 80007cc:	428c      	cmp	r4, r1
 80007ce:	41bf      	sbcs	r7, r7
 80007d0:	427f      	negs	r7, r7
 80007d2:	464e      	mov	r6, r9
 80007d4:	4447      	add	r7, r8
 80007d6:	e7a6      	b.n	8000726 <__aeabi_dadd+0x27e>
 80007d8:	4642      	mov	r2, r8
 80007da:	430a      	orrs	r2, r1
 80007dc:	0011      	movs	r1, r2
 80007de:	1e4a      	subs	r2, r1, #1
 80007e0:	4191      	sbcs	r1, r2
 80007e2:	e6ad      	b.n	8000540 <__aeabi_dadd+0x98>
 80007e4:	4c0c      	ldr	r4, [pc, #48]	; (8000818 <__aeabi_dadd+0x370>)
 80007e6:	1c72      	adds	r2, r6, #1
 80007e8:	4222      	tst	r2, r4
 80007ea:	d000      	beq.n	80007ee <__aeabi_dadd+0x346>
 80007ec:	e0a1      	b.n	8000932 <__aeabi_dadd+0x48a>
 80007ee:	0002      	movs	r2, r0
 80007f0:	431a      	orrs	r2, r3
 80007f2:	2e00      	cmp	r6, #0
 80007f4:	d000      	beq.n	80007f8 <__aeabi_dadd+0x350>
 80007f6:	e0fa      	b.n	80009ee <__aeabi_dadd+0x546>
 80007f8:	2a00      	cmp	r2, #0
 80007fa:	d100      	bne.n	80007fe <__aeabi_dadd+0x356>
 80007fc:	e145      	b.n	8000a8a <__aeabi_dadd+0x5e2>
 80007fe:	003a      	movs	r2, r7
 8000800:	430a      	orrs	r2, r1
 8000802:	d000      	beq.n	8000806 <__aeabi_dadd+0x35e>
 8000804:	e146      	b.n	8000a94 <__aeabi_dadd+0x5ec>
 8000806:	0742      	lsls	r2, r0, #29
 8000808:	08db      	lsrs	r3, r3, #3
 800080a:	4313      	orrs	r3, r2
 800080c:	08c0      	lsrs	r0, r0, #3
 800080e:	e77b      	b.n	8000708 <__aeabi_dadd+0x260>
 8000810:	000007ff 	.word	0x000007ff
 8000814:	ff7fffff 	.word	0xff7fffff
 8000818:	000007fe 	.word	0x000007fe
 800081c:	4647      	mov	r7, r8
 800081e:	1a5c      	subs	r4, r3, r1
 8000820:	1bc2      	subs	r2, r0, r7
 8000822:	42a3      	cmp	r3, r4
 8000824:	41bf      	sbcs	r7, r7
 8000826:	427f      	negs	r7, r7
 8000828:	46b9      	mov	r9, r7
 800082a:	0017      	movs	r7, r2
 800082c:	464a      	mov	r2, r9
 800082e:	1abf      	subs	r7, r7, r2
 8000830:	023a      	lsls	r2, r7, #8
 8000832:	d500      	bpl.n	8000836 <__aeabi_dadd+0x38e>
 8000834:	e08d      	b.n	8000952 <__aeabi_dadd+0x4aa>
 8000836:	0023      	movs	r3, r4
 8000838:	433b      	orrs	r3, r7
 800083a:	d000      	beq.n	800083e <__aeabi_dadd+0x396>
 800083c:	e68a      	b.n	8000554 <__aeabi_dadd+0xac>
 800083e:	2000      	movs	r0, #0
 8000840:	2500      	movs	r5, #0
 8000842:	e761      	b.n	8000708 <__aeabi_dadd+0x260>
 8000844:	4cb4      	ldr	r4, [pc, #720]	; (8000b18 <__aeabi_dadd+0x670>)
 8000846:	45a1      	cmp	r9, r4
 8000848:	d100      	bne.n	800084c <__aeabi_dadd+0x3a4>
 800084a:	e0ad      	b.n	80009a8 <__aeabi_dadd+0x500>
 800084c:	2480      	movs	r4, #128	; 0x80
 800084e:	0424      	lsls	r4, r4, #16
 8000850:	4320      	orrs	r0, r4
 8000852:	4664      	mov	r4, ip
 8000854:	2c38      	cmp	r4, #56	; 0x38
 8000856:	dc3d      	bgt.n	80008d4 <__aeabi_dadd+0x42c>
 8000858:	4662      	mov	r2, ip
 800085a:	2c1f      	cmp	r4, #31
 800085c:	dd00      	ble.n	8000860 <__aeabi_dadd+0x3b8>
 800085e:	e0b7      	b.n	80009d0 <__aeabi_dadd+0x528>
 8000860:	2520      	movs	r5, #32
 8000862:	001e      	movs	r6, r3
 8000864:	1b2d      	subs	r5, r5, r4
 8000866:	0004      	movs	r4, r0
 8000868:	40ab      	lsls	r3, r5
 800086a:	40ac      	lsls	r4, r5
 800086c:	40d6      	lsrs	r6, r2
 800086e:	40d0      	lsrs	r0, r2
 8000870:	4642      	mov	r2, r8
 8000872:	1e5d      	subs	r5, r3, #1
 8000874:	41ab      	sbcs	r3, r5
 8000876:	4334      	orrs	r4, r6
 8000878:	1a12      	subs	r2, r2, r0
 800087a:	4690      	mov	r8, r2
 800087c:	4323      	orrs	r3, r4
 800087e:	e02c      	b.n	80008da <__aeabi_dadd+0x432>
 8000880:	0742      	lsls	r2, r0, #29
 8000882:	08db      	lsrs	r3, r3, #3
 8000884:	4313      	orrs	r3, r2
 8000886:	08c0      	lsrs	r0, r0, #3
 8000888:	e73b      	b.n	8000702 <__aeabi_dadd+0x25a>
 800088a:	185c      	adds	r4, r3, r1
 800088c:	429c      	cmp	r4, r3
 800088e:	419b      	sbcs	r3, r3
 8000890:	4440      	add	r0, r8
 8000892:	425b      	negs	r3, r3
 8000894:	18c7      	adds	r7, r0, r3
 8000896:	2601      	movs	r6, #1
 8000898:	023b      	lsls	r3, r7, #8
 800089a:	d400      	bmi.n	800089e <__aeabi_dadd+0x3f6>
 800089c:	e729      	b.n	80006f2 <__aeabi_dadd+0x24a>
 800089e:	2602      	movs	r6, #2
 80008a0:	4a9e      	ldr	r2, [pc, #632]	; (8000b1c <__aeabi_dadd+0x674>)
 80008a2:	0863      	lsrs	r3, r4, #1
 80008a4:	4017      	ands	r7, r2
 80008a6:	2201      	movs	r2, #1
 80008a8:	4014      	ands	r4, r2
 80008aa:	431c      	orrs	r4, r3
 80008ac:	07fb      	lsls	r3, r7, #31
 80008ae:	431c      	orrs	r4, r3
 80008b0:	087f      	lsrs	r7, r7, #1
 80008b2:	e673      	b.n	800059c <__aeabi_dadd+0xf4>
 80008b4:	4644      	mov	r4, r8
 80008b6:	3a20      	subs	r2, #32
 80008b8:	40d4      	lsrs	r4, r2
 80008ba:	4662      	mov	r2, ip
 80008bc:	2a20      	cmp	r2, #32
 80008be:	d005      	beq.n	80008cc <__aeabi_dadd+0x424>
 80008c0:	4667      	mov	r7, ip
 80008c2:	2240      	movs	r2, #64	; 0x40
 80008c4:	1bd2      	subs	r2, r2, r7
 80008c6:	4647      	mov	r7, r8
 80008c8:	4097      	lsls	r7, r2
 80008ca:	4339      	orrs	r1, r7
 80008cc:	1e4a      	subs	r2, r1, #1
 80008ce:	4191      	sbcs	r1, r2
 80008d0:	4321      	orrs	r1, r4
 80008d2:	e635      	b.n	8000540 <__aeabi_dadd+0x98>
 80008d4:	4303      	orrs	r3, r0
 80008d6:	1e58      	subs	r0, r3, #1
 80008d8:	4183      	sbcs	r3, r0
 80008da:	1acc      	subs	r4, r1, r3
 80008dc:	42a1      	cmp	r1, r4
 80008de:	41bf      	sbcs	r7, r7
 80008e0:	4643      	mov	r3, r8
 80008e2:	427f      	negs	r7, r7
 80008e4:	4655      	mov	r5, sl
 80008e6:	464e      	mov	r6, r9
 80008e8:	1bdf      	subs	r7, r3, r7
 80008ea:	e62e      	b.n	800054a <__aeabi_dadd+0xa2>
 80008ec:	0002      	movs	r2, r0
 80008ee:	431a      	orrs	r2, r3
 80008f0:	d100      	bne.n	80008f4 <__aeabi_dadd+0x44c>
 80008f2:	e0bd      	b.n	8000a70 <__aeabi_dadd+0x5c8>
 80008f4:	4662      	mov	r2, ip
 80008f6:	4664      	mov	r4, ip
 80008f8:	3a01      	subs	r2, #1
 80008fa:	2c01      	cmp	r4, #1
 80008fc:	d100      	bne.n	8000900 <__aeabi_dadd+0x458>
 80008fe:	e0e5      	b.n	8000acc <__aeabi_dadd+0x624>
 8000900:	4c85      	ldr	r4, [pc, #532]	; (8000b18 <__aeabi_dadd+0x670>)
 8000902:	45a4      	cmp	ip, r4
 8000904:	d058      	beq.n	80009b8 <__aeabi_dadd+0x510>
 8000906:	4694      	mov	ip, r2
 8000908:	e749      	b.n	800079e <__aeabi_dadd+0x2f6>
 800090a:	4664      	mov	r4, ip
 800090c:	2220      	movs	r2, #32
 800090e:	1b12      	subs	r2, r2, r4
 8000910:	4644      	mov	r4, r8
 8000912:	4094      	lsls	r4, r2
 8000914:	000f      	movs	r7, r1
 8000916:	46a1      	mov	r9, r4
 8000918:	4664      	mov	r4, ip
 800091a:	4091      	lsls	r1, r2
 800091c:	40e7      	lsrs	r7, r4
 800091e:	464c      	mov	r4, r9
 8000920:	1e4a      	subs	r2, r1, #1
 8000922:	4191      	sbcs	r1, r2
 8000924:	433c      	orrs	r4, r7
 8000926:	4642      	mov	r2, r8
 8000928:	430c      	orrs	r4, r1
 800092a:	4661      	mov	r1, ip
 800092c:	40ca      	lsrs	r2, r1
 800092e:	1880      	adds	r0, r0, r2
 8000930:	e6f4      	b.n	800071c <__aeabi_dadd+0x274>
 8000932:	4c79      	ldr	r4, [pc, #484]	; (8000b18 <__aeabi_dadd+0x670>)
 8000934:	42a2      	cmp	r2, r4
 8000936:	d100      	bne.n	800093a <__aeabi_dadd+0x492>
 8000938:	e6fd      	b.n	8000736 <__aeabi_dadd+0x28e>
 800093a:	1859      	adds	r1, r3, r1
 800093c:	4299      	cmp	r1, r3
 800093e:	419b      	sbcs	r3, r3
 8000940:	4440      	add	r0, r8
 8000942:	425f      	negs	r7, r3
 8000944:	19c7      	adds	r7, r0, r7
 8000946:	07fc      	lsls	r4, r7, #31
 8000948:	0849      	lsrs	r1, r1, #1
 800094a:	0016      	movs	r6, r2
 800094c:	430c      	orrs	r4, r1
 800094e:	087f      	lsrs	r7, r7, #1
 8000950:	e6cf      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000952:	1acc      	subs	r4, r1, r3
 8000954:	42a1      	cmp	r1, r4
 8000956:	41bf      	sbcs	r7, r7
 8000958:	4643      	mov	r3, r8
 800095a:	427f      	negs	r7, r7
 800095c:	1a18      	subs	r0, r3, r0
 800095e:	4655      	mov	r5, sl
 8000960:	1bc7      	subs	r7, r0, r7
 8000962:	e5f7      	b.n	8000554 <__aeabi_dadd+0xac>
 8000964:	08c9      	lsrs	r1, r1, #3
 8000966:	077b      	lsls	r3, r7, #29
 8000968:	4655      	mov	r5, sl
 800096a:	430b      	orrs	r3, r1
 800096c:	08f8      	lsrs	r0, r7, #3
 800096e:	e6c8      	b.n	8000702 <__aeabi_dadd+0x25a>
 8000970:	2c00      	cmp	r4, #0
 8000972:	d000      	beq.n	8000976 <__aeabi_dadd+0x4ce>
 8000974:	e081      	b.n	8000a7a <__aeabi_dadd+0x5d2>
 8000976:	4643      	mov	r3, r8
 8000978:	430b      	orrs	r3, r1
 800097a:	d115      	bne.n	80009a8 <__aeabi_dadd+0x500>
 800097c:	2080      	movs	r0, #128	; 0x80
 800097e:	2500      	movs	r5, #0
 8000980:	0300      	lsls	r0, r0, #12
 8000982:	e6e3      	b.n	800074c <__aeabi_dadd+0x2a4>
 8000984:	1a5c      	subs	r4, r3, r1
 8000986:	42a3      	cmp	r3, r4
 8000988:	419b      	sbcs	r3, r3
 800098a:	1bc7      	subs	r7, r0, r7
 800098c:	425b      	negs	r3, r3
 800098e:	2601      	movs	r6, #1
 8000990:	1aff      	subs	r7, r7, r3
 8000992:	e5da      	b.n	800054a <__aeabi_dadd+0xa2>
 8000994:	0742      	lsls	r2, r0, #29
 8000996:	08db      	lsrs	r3, r3, #3
 8000998:	4313      	orrs	r3, r2
 800099a:	08c0      	lsrs	r0, r0, #3
 800099c:	e6d2      	b.n	8000744 <__aeabi_dadd+0x29c>
 800099e:	0742      	lsls	r2, r0, #29
 80009a0:	08db      	lsrs	r3, r3, #3
 80009a2:	4313      	orrs	r3, r2
 80009a4:	08c0      	lsrs	r0, r0, #3
 80009a6:	e6ac      	b.n	8000702 <__aeabi_dadd+0x25a>
 80009a8:	4643      	mov	r3, r8
 80009aa:	4642      	mov	r2, r8
 80009ac:	08c9      	lsrs	r1, r1, #3
 80009ae:	075b      	lsls	r3, r3, #29
 80009b0:	4655      	mov	r5, sl
 80009b2:	430b      	orrs	r3, r1
 80009b4:	08d0      	lsrs	r0, r2, #3
 80009b6:	e6c5      	b.n	8000744 <__aeabi_dadd+0x29c>
 80009b8:	4643      	mov	r3, r8
 80009ba:	4642      	mov	r2, r8
 80009bc:	075b      	lsls	r3, r3, #29
 80009be:	08c9      	lsrs	r1, r1, #3
 80009c0:	430b      	orrs	r3, r1
 80009c2:	08d0      	lsrs	r0, r2, #3
 80009c4:	e6be      	b.n	8000744 <__aeabi_dadd+0x29c>
 80009c6:	4303      	orrs	r3, r0
 80009c8:	001c      	movs	r4, r3
 80009ca:	1e63      	subs	r3, r4, #1
 80009cc:	419c      	sbcs	r4, r3
 80009ce:	e6fc      	b.n	80007ca <__aeabi_dadd+0x322>
 80009d0:	0002      	movs	r2, r0
 80009d2:	3c20      	subs	r4, #32
 80009d4:	40e2      	lsrs	r2, r4
 80009d6:	0014      	movs	r4, r2
 80009d8:	4662      	mov	r2, ip
 80009da:	2a20      	cmp	r2, #32
 80009dc:	d003      	beq.n	80009e6 <__aeabi_dadd+0x53e>
 80009de:	2540      	movs	r5, #64	; 0x40
 80009e0:	1aad      	subs	r5, r5, r2
 80009e2:	40a8      	lsls	r0, r5
 80009e4:	4303      	orrs	r3, r0
 80009e6:	1e58      	subs	r0, r3, #1
 80009e8:	4183      	sbcs	r3, r0
 80009ea:	4323      	orrs	r3, r4
 80009ec:	e775      	b.n	80008da <__aeabi_dadd+0x432>
 80009ee:	2a00      	cmp	r2, #0
 80009f0:	d0e2      	beq.n	80009b8 <__aeabi_dadd+0x510>
 80009f2:	003a      	movs	r2, r7
 80009f4:	430a      	orrs	r2, r1
 80009f6:	d0cd      	beq.n	8000994 <__aeabi_dadd+0x4ec>
 80009f8:	0742      	lsls	r2, r0, #29
 80009fa:	08db      	lsrs	r3, r3, #3
 80009fc:	4313      	orrs	r3, r2
 80009fe:	2280      	movs	r2, #128	; 0x80
 8000a00:	08c0      	lsrs	r0, r0, #3
 8000a02:	0312      	lsls	r2, r2, #12
 8000a04:	4210      	tst	r0, r2
 8000a06:	d006      	beq.n	8000a16 <__aeabi_dadd+0x56e>
 8000a08:	08fc      	lsrs	r4, r7, #3
 8000a0a:	4214      	tst	r4, r2
 8000a0c:	d103      	bne.n	8000a16 <__aeabi_dadd+0x56e>
 8000a0e:	0020      	movs	r0, r4
 8000a10:	08cb      	lsrs	r3, r1, #3
 8000a12:	077a      	lsls	r2, r7, #29
 8000a14:	4313      	orrs	r3, r2
 8000a16:	0f5a      	lsrs	r2, r3, #29
 8000a18:	00db      	lsls	r3, r3, #3
 8000a1a:	0752      	lsls	r2, r2, #29
 8000a1c:	08db      	lsrs	r3, r3, #3
 8000a1e:	4313      	orrs	r3, r2
 8000a20:	e690      	b.n	8000744 <__aeabi_dadd+0x29c>
 8000a22:	4643      	mov	r3, r8
 8000a24:	430b      	orrs	r3, r1
 8000a26:	d100      	bne.n	8000a2a <__aeabi_dadd+0x582>
 8000a28:	e709      	b.n	800083e <__aeabi_dadd+0x396>
 8000a2a:	4643      	mov	r3, r8
 8000a2c:	4642      	mov	r2, r8
 8000a2e:	08c9      	lsrs	r1, r1, #3
 8000a30:	075b      	lsls	r3, r3, #29
 8000a32:	4655      	mov	r5, sl
 8000a34:	430b      	orrs	r3, r1
 8000a36:	08d0      	lsrs	r0, r2, #3
 8000a38:	e666      	b.n	8000708 <__aeabi_dadd+0x260>
 8000a3a:	1acc      	subs	r4, r1, r3
 8000a3c:	42a1      	cmp	r1, r4
 8000a3e:	4189      	sbcs	r1, r1
 8000a40:	1a3f      	subs	r7, r7, r0
 8000a42:	4249      	negs	r1, r1
 8000a44:	4655      	mov	r5, sl
 8000a46:	2601      	movs	r6, #1
 8000a48:	1a7f      	subs	r7, r7, r1
 8000a4a:	e57e      	b.n	800054a <__aeabi_dadd+0xa2>
 8000a4c:	4642      	mov	r2, r8
 8000a4e:	1a5c      	subs	r4, r3, r1
 8000a50:	1a87      	subs	r7, r0, r2
 8000a52:	42a3      	cmp	r3, r4
 8000a54:	4192      	sbcs	r2, r2
 8000a56:	4252      	negs	r2, r2
 8000a58:	1abf      	subs	r7, r7, r2
 8000a5a:	023a      	lsls	r2, r7, #8
 8000a5c:	d53d      	bpl.n	8000ada <__aeabi_dadd+0x632>
 8000a5e:	1acc      	subs	r4, r1, r3
 8000a60:	42a1      	cmp	r1, r4
 8000a62:	4189      	sbcs	r1, r1
 8000a64:	4643      	mov	r3, r8
 8000a66:	4249      	negs	r1, r1
 8000a68:	1a1f      	subs	r7, r3, r0
 8000a6a:	4655      	mov	r5, sl
 8000a6c:	1a7f      	subs	r7, r7, r1
 8000a6e:	e595      	b.n	800059c <__aeabi_dadd+0xf4>
 8000a70:	077b      	lsls	r3, r7, #29
 8000a72:	08c9      	lsrs	r1, r1, #3
 8000a74:	430b      	orrs	r3, r1
 8000a76:	08f8      	lsrs	r0, r7, #3
 8000a78:	e643      	b.n	8000702 <__aeabi_dadd+0x25a>
 8000a7a:	4644      	mov	r4, r8
 8000a7c:	08db      	lsrs	r3, r3, #3
 8000a7e:	430c      	orrs	r4, r1
 8000a80:	d130      	bne.n	8000ae4 <__aeabi_dadd+0x63c>
 8000a82:	0742      	lsls	r2, r0, #29
 8000a84:	4313      	orrs	r3, r2
 8000a86:	08c0      	lsrs	r0, r0, #3
 8000a88:	e65c      	b.n	8000744 <__aeabi_dadd+0x29c>
 8000a8a:	077b      	lsls	r3, r7, #29
 8000a8c:	08c9      	lsrs	r1, r1, #3
 8000a8e:	430b      	orrs	r3, r1
 8000a90:	08f8      	lsrs	r0, r7, #3
 8000a92:	e639      	b.n	8000708 <__aeabi_dadd+0x260>
 8000a94:	185c      	adds	r4, r3, r1
 8000a96:	429c      	cmp	r4, r3
 8000a98:	419b      	sbcs	r3, r3
 8000a9a:	4440      	add	r0, r8
 8000a9c:	425b      	negs	r3, r3
 8000a9e:	18c7      	adds	r7, r0, r3
 8000aa0:	023b      	lsls	r3, r7, #8
 8000aa2:	d400      	bmi.n	8000aa6 <__aeabi_dadd+0x5fe>
 8000aa4:	e625      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000aa6:	4b1d      	ldr	r3, [pc, #116]	; (8000b1c <__aeabi_dadd+0x674>)
 8000aa8:	2601      	movs	r6, #1
 8000aaa:	401f      	ands	r7, r3
 8000aac:	e621      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000aae:	0004      	movs	r4, r0
 8000ab0:	3a20      	subs	r2, #32
 8000ab2:	40d4      	lsrs	r4, r2
 8000ab4:	4662      	mov	r2, ip
 8000ab6:	2a20      	cmp	r2, #32
 8000ab8:	d004      	beq.n	8000ac4 <__aeabi_dadd+0x61c>
 8000aba:	2240      	movs	r2, #64	; 0x40
 8000abc:	4666      	mov	r6, ip
 8000abe:	1b92      	subs	r2, r2, r6
 8000ac0:	4090      	lsls	r0, r2
 8000ac2:	4303      	orrs	r3, r0
 8000ac4:	1e5a      	subs	r2, r3, #1
 8000ac6:	4193      	sbcs	r3, r2
 8000ac8:	431c      	orrs	r4, r3
 8000aca:	e67e      	b.n	80007ca <__aeabi_dadd+0x322>
 8000acc:	185c      	adds	r4, r3, r1
 8000ace:	428c      	cmp	r4, r1
 8000ad0:	4189      	sbcs	r1, r1
 8000ad2:	4440      	add	r0, r8
 8000ad4:	4249      	negs	r1, r1
 8000ad6:	1847      	adds	r7, r0, r1
 8000ad8:	e6dd      	b.n	8000896 <__aeabi_dadd+0x3ee>
 8000ada:	0023      	movs	r3, r4
 8000adc:	433b      	orrs	r3, r7
 8000ade:	d100      	bne.n	8000ae2 <__aeabi_dadd+0x63a>
 8000ae0:	e6ad      	b.n	800083e <__aeabi_dadd+0x396>
 8000ae2:	e606      	b.n	80006f2 <__aeabi_dadd+0x24a>
 8000ae4:	0744      	lsls	r4, r0, #29
 8000ae6:	4323      	orrs	r3, r4
 8000ae8:	2480      	movs	r4, #128	; 0x80
 8000aea:	08c0      	lsrs	r0, r0, #3
 8000aec:	0324      	lsls	r4, r4, #12
 8000aee:	4220      	tst	r0, r4
 8000af0:	d008      	beq.n	8000b04 <__aeabi_dadd+0x65c>
 8000af2:	4642      	mov	r2, r8
 8000af4:	08d6      	lsrs	r6, r2, #3
 8000af6:	4226      	tst	r6, r4
 8000af8:	d104      	bne.n	8000b04 <__aeabi_dadd+0x65c>
 8000afa:	4655      	mov	r5, sl
 8000afc:	0030      	movs	r0, r6
 8000afe:	08cb      	lsrs	r3, r1, #3
 8000b00:	0751      	lsls	r1, r2, #29
 8000b02:	430b      	orrs	r3, r1
 8000b04:	0f5a      	lsrs	r2, r3, #29
 8000b06:	00db      	lsls	r3, r3, #3
 8000b08:	08db      	lsrs	r3, r3, #3
 8000b0a:	0752      	lsls	r2, r2, #29
 8000b0c:	4313      	orrs	r3, r2
 8000b0e:	e619      	b.n	8000744 <__aeabi_dadd+0x29c>
 8000b10:	2300      	movs	r3, #0
 8000b12:	4a01      	ldr	r2, [pc, #4]	; (8000b18 <__aeabi_dadd+0x670>)
 8000b14:	001f      	movs	r7, r3
 8000b16:	e55e      	b.n	80005d6 <__aeabi_dadd+0x12e>
 8000b18:	000007ff 	.word	0x000007ff
 8000b1c:	ff7fffff 	.word	0xff7fffff

08000b20 <__aeabi_ddiv>:
 8000b20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000b22:	4657      	mov	r7, sl
 8000b24:	464e      	mov	r6, r9
 8000b26:	4645      	mov	r5, r8
 8000b28:	46de      	mov	lr, fp
 8000b2a:	b5e0      	push	{r5, r6, r7, lr}
 8000b2c:	4681      	mov	r9, r0
 8000b2e:	0005      	movs	r5, r0
 8000b30:	030c      	lsls	r4, r1, #12
 8000b32:	0048      	lsls	r0, r1, #1
 8000b34:	4692      	mov	sl, r2
 8000b36:	001f      	movs	r7, r3
 8000b38:	b085      	sub	sp, #20
 8000b3a:	0b24      	lsrs	r4, r4, #12
 8000b3c:	0d40      	lsrs	r0, r0, #21
 8000b3e:	0fce      	lsrs	r6, r1, #31
 8000b40:	2800      	cmp	r0, #0
 8000b42:	d100      	bne.n	8000b46 <__aeabi_ddiv+0x26>
 8000b44:	e156      	b.n	8000df4 <__aeabi_ddiv+0x2d4>
 8000b46:	4bd4      	ldr	r3, [pc, #848]	; (8000e98 <__aeabi_ddiv+0x378>)
 8000b48:	4298      	cmp	r0, r3
 8000b4a:	d100      	bne.n	8000b4e <__aeabi_ddiv+0x2e>
 8000b4c:	e172      	b.n	8000e34 <__aeabi_ddiv+0x314>
 8000b4e:	0f6b      	lsrs	r3, r5, #29
 8000b50:	00e4      	lsls	r4, r4, #3
 8000b52:	431c      	orrs	r4, r3
 8000b54:	2380      	movs	r3, #128	; 0x80
 8000b56:	041b      	lsls	r3, r3, #16
 8000b58:	4323      	orrs	r3, r4
 8000b5a:	4698      	mov	r8, r3
 8000b5c:	4bcf      	ldr	r3, [pc, #828]	; (8000e9c <__aeabi_ddiv+0x37c>)
 8000b5e:	00ed      	lsls	r5, r5, #3
 8000b60:	469b      	mov	fp, r3
 8000b62:	2300      	movs	r3, #0
 8000b64:	4699      	mov	r9, r3
 8000b66:	4483      	add	fp, r0
 8000b68:	9300      	str	r3, [sp, #0]
 8000b6a:	033c      	lsls	r4, r7, #12
 8000b6c:	007b      	lsls	r3, r7, #1
 8000b6e:	4650      	mov	r0, sl
 8000b70:	0b24      	lsrs	r4, r4, #12
 8000b72:	0d5b      	lsrs	r3, r3, #21
 8000b74:	0fff      	lsrs	r7, r7, #31
 8000b76:	2b00      	cmp	r3, #0
 8000b78:	d100      	bne.n	8000b7c <__aeabi_ddiv+0x5c>
 8000b7a:	e11f      	b.n	8000dbc <__aeabi_ddiv+0x29c>
 8000b7c:	4ac6      	ldr	r2, [pc, #792]	; (8000e98 <__aeabi_ddiv+0x378>)
 8000b7e:	4293      	cmp	r3, r2
 8000b80:	d100      	bne.n	8000b84 <__aeabi_ddiv+0x64>
 8000b82:	e162      	b.n	8000e4a <__aeabi_ddiv+0x32a>
 8000b84:	49c5      	ldr	r1, [pc, #788]	; (8000e9c <__aeabi_ddiv+0x37c>)
 8000b86:	0f42      	lsrs	r2, r0, #29
 8000b88:	468c      	mov	ip, r1
 8000b8a:	00e4      	lsls	r4, r4, #3
 8000b8c:	4659      	mov	r1, fp
 8000b8e:	4314      	orrs	r4, r2
 8000b90:	2280      	movs	r2, #128	; 0x80
 8000b92:	4463      	add	r3, ip
 8000b94:	0412      	lsls	r2, r2, #16
 8000b96:	1acb      	subs	r3, r1, r3
 8000b98:	4314      	orrs	r4, r2
 8000b9a:	469b      	mov	fp, r3
 8000b9c:	00c2      	lsls	r2, r0, #3
 8000b9e:	2000      	movs	r0, #0
 8000ba0:	0033      	movs	r3, r6
 8000ba2:	407b      	eors	r3, r7
 8000ba4:	469a      	mov	sl, r3
 8000ba6:	464b      	mov	r3, r9
 8000ba8:	2b0f      	cmp	r3, #15
 8000baa:	d827      	bhi.n	8000bfc <__aeabi_ddiv+0xdc>
 8000bac:	49bc      	ldr	r1, [pc, #752]	; (8000ea0 <__aeabi_ddiv+0x380>)
 8000bae:	009b      	lsls	r3, r3, #2
 8000bb0:	58cb      	ldr	r3, [r1, r3]
 8000bb2:	469f      	mov	pc, r3
 8000bb4:	46b2      	mov	sl, r6
 8000bb6:	9b00      	ldr	r3, [sp, #0]
 8000bb8:	2b02      	cmp	r3, #2
 8000bba:	d016      	beq.n	8000bea <__aeabi_ddiv+0xca>
 8000bbc:	2b03      	cmp	r3, #3
 8000bbe:	d100      	bne.n	8000bc2 <__aeabi_ddiv+0xa2>
 8000bc0:	e28e      	b.n	80010e0 <__aeabi_ddiv+0x5c0>
 8000bc2:	2b01      	cmp	r3, #1
 8000bc4:	d000      	beq.n	8000bc8 <__aeabi_ddiv+0xa8>
 8000bc6:	e0d9      	b.n	8000d7c <__aeabi_ddiv+0x25c>
 8000bc8:	2300      	movs	r3, #0
 8000bca:	2400      	movs	r4, #0
 8000bcc:	2500      	movs	r5, #0
 8000bce:	4652      	mov	r2, sl
 8000bd0:	051b      	lsls	r3, r3, #20
 8000bd2:	4323      	orrs	r3, r4
 8000bd4:	07d2      	lsls	r2, r2, #31
 8000bd6:	4313      	orrs	r3, r2
 8000bd8:	0028      	movs	r0, r5
 8000bda:	0019      	movs	r1, r3
 8000bdc:	b005      	add	sp, #20
 8000bde:	bcf0      	pop	{r4, r5, r6, r7}
 8000be0:	46bb      	mov	fp, r7
 8000be2:	46b2      	mov	sl, r6
 8000be4:	46a9      	mov	r9, r5
 8000be6:	46a0      	mov	r8, r4
 8000be8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000bea:	2400      	movs	r4, #0
 8000bec:	2500      	movs	r5, #0
 8000bee:	4baa      	ldr	r3, [pc, #680]	; (8000e98 <__aeabi_ddiv+0x378>)
 8000bf0:	e7ed      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000bf2:	46ba      	mov	sl, r7
 8000bf4:	46a0      	mov	r8, r4
 8000bf6:	0015      	movs	r5, r2
 8000bf8:	9000      	str	r0, [sp, #0]
 8000bfa:	e7dc      	b.n	8000bb6 <__aeabi_ddiv+0x96>
 8000bfc:	4544      	cmp	r4, r8
 8000bfe:	d200      	bcs.n	8000c02 <__aeabi_ddiv+0xe2>
 8000c00:	e1c7      	b.n	8000f92 <__aeabi_ddiv+0x472>
 8000c02:	d100      	bne.n	8000c06 <__aeabi_ddiv+0xe6>
 8000c04:	e1c2      	b.n	8000f8c <__aeabi_ddiv+0x46c>
 8000c06:	2301      	movs	r3, #1
 8000c08:	425b      	negs	r3, r3
 8000c0a:	469c      	mov	ip, r3
 8000c0c:	002e      	movs	r6, r5
 8000c0e:	4640      	mov	r0, r8
 8000c10:	2500      	movs	r5, #0
 8000c12:	44e3      	add	fp, ip
 8000c14:	0223      	lsls	r3, r4, #8
 8000c16:	0e14      	lsrs	r4, r2, #24
 8000c18:	431c      	orrs	r4, r3
 8000c1a:	0c1b      	lsrs	r3, r3, #16
 8000c1c:	4699      	mov	r9, r3
 8000c1e:	0423      	lsls	r3, r4, #16
 8000c20:	0c1f      	lsrs	r7, r3, #16
 8000c22:	0212      	lsls	r2, r2, #8
 8000c24:	4649      	mov	r1, r9
 8000c26:	9200      	str	r2, [sp, #0]
 8000c28:	9701      	str	r7, [sp, #4]
 8000c2a:	f7ff fb0f 	bl	800024c <__aeabi_uidivmod>
 8000c2e:	0002      	movs	r2, r0
 8000c30:	437a      	muls	r2, r7
 8000c32:	040b      	lsls	r3, r1, #16
 8000c34:	0c31      	lsrs	r1, r6, #16
 8000c36:	4680      	mov	r8, r0
 8000c38:	4319      	orrs	r1, r3
 8000c3a:	428a      	cmp	r2, r1
 8000c3c:	d907      	bls.n	8000c4e <__aeabi_ddiv+0x12e>
 8000c3e:	2301      	movs	r3, #1
 8000c40:	425b      	negs	r3, r3
 8000c42:	469c      	mov	ip, r3
 8000c44:	1909      	adds	r1, r1, r4
 8000c46:	44e0      	add	r8, ip
 8000c48:	428c      	cmp	r4, r1
 8000c4a:	d800      	bhi.n	8000c4e <__aeabi_ddiv+0x12e>
 8000c4c:	e207      	b.n	800105e <__aeabi_ddiv+0x53e>
 8000c4e:	1a88      	subs	r0, r1, r2
 8000c50:	4649      	mov	r1, r9
 8000c52:	f7ff fafb 	bl	800024c <__aeabi_uidivmod>
 8000c56:	0409      	lsls	r1, r1, #16
 8000c58:	468c      	mov	ip, r1
 8000c5a:	0431      	lsls	r1, r6, #16
 8000c5c:	4666      	mov	r6, ip
 8000c5e:	9a01      	ldr	r2, [sp, #4]
 8000c60:	0c09      	lsrs	r1, r1, #16
 8000c62:	4342      	muls	r2, r0
 8000c64:	0003      	movs	r3, r0
 8000c66:	4331      	orrs	r1, r6
 8000c68:	428a      	cmp	r2, r1
 8000c6a:	d904      	bls.n	8000c76 <__aeabi_ddiv+0x156>
 8000c6c:	1909      	adds	r1, r1, r4
 8000c6e:	3b01      	subs	r3, #1
 8000c70:	428c      	cmp	r4, r1
 8000c72:	d800      	bhi.n	8000c76 <__aeabi_ddiv+0x156>
 8000c74:	e1ed      	b.n	8001052 <__aeabi_ddiv+0x532>
 8000c76:	1a88      	subs	r0, r1, r2
 8000c78:	4642      	mov	r2, r8
 8000c7a:	0412      	lsls	r2, r2, #16
 8000c7c:	431a      	orrs	r2, r3
 8000c7e:	4690      	mov	r8, r2
 8000c80:	4641      	mov	r1, r8
 8000c82:	9b00      	ldr	r3, [sp, #0]
 8000c84:	040e      	lsls	r6, r1, #16
 8000c86:	0c1b      	lsrs	r3, r3, #16
 8000c88:	001f      	movs	r7, r3
 8000c8a:	9302      	str	r3, [sp, #8]
 8000c8c:	9b00      	ldr	r3, [sp, #0]
 8000c8e:	0c36      	lsrs	r6, r6, #16
 8000c90:	041b      	lsls	r3, r3, #16
 8000c92:	0c19      	lsrs	r1, r3, #16
 8000c94:	000b      	movs	r3, r1
 8000c96:	4373      	muls	r3, r6
 8000c98:	0c12      	lsrs	r2, r2, #16
 8000c9a:	437e      	muls	r6, r7
 8000c9c:	9103      	str	r1, [sp, #12]
 8000c9e:	4351      	muls	r1, r2
 8000ca0:	437a      	muls	r2, r7
 8000ca2:	0c1f      	lsrs	r7, r3, #16
 8000ca4:	46bc      	mov	ip, r7
 8000ca6:	1876      	adds	r6, r6, r1
 8000ca8:	4466      	add	r6, ip
 8000caa:	42b1      	cmp	r1, r6
 8000cac:	d903      	bls.n	8000cb6 <__aeabi_ddiv+0x196>
 8000cae:	2180      	movs	r1, #128	; 0x80
 8000cb0:	0249      	lsls	r1, r1, #9
 8000cb2:	468c      	mov	ip, r1
 8000cb4:	4462      	add	r2, ip
 8000cb6:	0c31      	lsrs	r1, r6, #16
 8000cb8:	188a      	adds	r2, r1, r2
 8000cba:	0431      	lsls	r1, r6, #16
 8000cbc:	041e      	lsls	r6, r3, #16
 8000cbe:	0c36      	lsrs	r6, r6, #16
 8000cc0:	198e      	adds	r6, r1, r6
 8000cc2:	4290      	cmp	r0, r2
 8000cc4:	d302      	bcc.n	8000ccc <__aeabi_ddiv+0x1ac>
 8000cc6:	d112      	bne.n	8000cee <__aeabi_ddiv+0x1ce>
 8000cc8:	42b5      	cmp	r5, r6
 8000cca:	d210      	bcs.n	8000cee <__aeabi_ddiv+0x1ce>
 8000ccc:	4643      	mov	r3, r8
 8000cce:	1e59      	subs	r1, r3, #1
 8000cd0:	9b00      	ldr	r3, [sp, #0]
 8000cd2:	469c      	mov	ip, r3
 8000cd4:	4465      	add	r5, ip
 8000cd6:	001f      	movs	r7, r3
 8000cd8:	429d      	cmp	r5, r3
 8000cda:	419b      	sbcs	r3, r3
 8000cdc:	425b      	negs	r3, r3
 8000cde:	191b      	adds	r3, r3, r4
 8000ce0:	18c0      	adds	r0, r0, r3
 8000ce2:	4284      	cmp	r4, r0
 8000ce4:	d200      	bcs.n	8000ce8 <__aeabi_ddiv+0x1c8>
 8000ce6:	e1a0      	b.n	800102a <__aeabi_ddiv+0x50a>
 8000ce8:	d100      	bne.n	8000cec <__aeabi_ddiv+0x1cc>
 8000cea:	e19b      	b.n	8001024 <__aeabi_ddiv+0x504>
 8000cec:	4688      	mov	r8, r1
 8000cee:	1bae      	subs	r6, r5, r6
 8000cf0:	42b5      	cmp	r5, r6
 8000cf2:	41ad      	sbcs	r5, r5
 8000cf4:	1a80      	subs	r0, r0, r2
 8000cf6:	426d      	negs	r5, r5
 8000cf8:	1b40      	subs	r0, r0, r5
 8000cfa:	4284      	cmp	r4, r0
 8000cfc:	d100      	bne.n	8000d00 <__aeabi_ddiv+0x1e0>
 8000cfe:	e1d5      	b.n	80010ac <__aeabi_ddiv+0x58c>
 8000d00:	4649      	mov	r1, r9
 8000d02:	f7ff faa3 	bl	800024c <__aeabi_uidivmod>
 8000d06:	9a01      	ldr	r2, [sp, #4]
 8000d08:	040b      	lsls	r3, r1, #16
 8000d0a:	4342      	muls	r2, r0
 8000d0c:	0c31      	lsrs	r1, r6, #16
 8000d0e:	0005      	movs	r5, r0
 8000d10:	4319      	orrs	r1, r3
 8000d12:	428a      	cmp	r2, r1
 8000d14:	d900      	bls.n	8000d18 <__aeabi_ddiv+0x1f8>
 8000d16:	e16c      	b.n	8000ff2 <__aeabi_ddiv+0x4d2>
 8000d18:	1a88      	subs	r0, r1, r2
 8000d1a:	4649      	mov	r1, r9
 8000d1c:	f7ff fa96 	bl	800024c <__aeabi_uidivmod>
 8000d20:	9a01      	ldr	r2, [sp, #4]
 8000d22:	0436      	lsls	r6, r6, #16
 8000d24:	4342      	muls	r2, r0
 8000d26:	0409      	lsls	r1, r1, #16
 8000d28:	0c36      	lsrs	r6, r6, #16
 8000d2a:	0003      	movs	r3, r0
 8000d2c:	430e      	orrs	r6, r1
 8000d2e:	42b2      	cmp	r2, r6
 8000d30:	d900      	bls.n	8000d34 <__aeabi_ddiv+0x214>
 8000d32:	e153      	b.n	8000fdc <__aeabi_ddiv+0x4bc>
 8000d34:	9803      	ldr	r0, [sp, #12]
 8000d36:	1ab6      	subs	r6, r6, r2
 8000d38:	0002      	movs	r2, r0
 8000d3a:	042d      	lsls	r5, r5, #16
 8000d3c:	431d      	orrs	r5, r3
 8000d3e:	9f02      	ldr	r7, [sp, #8]
 8000d40:	042b      	lsls	r3, r5, #16
 8000d42:	0c1b      	lsrs	r3, r3, #16
 8000d44:	435a      	muls	r2, r3
 8000d46:	437b      	muls	r3, r7
 8000d48:	469c      	mov	ip, r3
 8000d4a:	0c29      	lsrs	r1, r5, #16
 8000d4c:	4348      	muls	r0, r1
 8000d4e:	0c13      	lsrs	r3, r2, #16
 8000d50:	4484      	add	ip, r0
 8000d52:	4463      	add	r3, ip
 8000d54:	4379      	muls	r1, r7
 8000d56:	4298      	cmp	r0, r3
 8000d58:	d903      	bls.n	8000d62 <__aeabi_ddiv+0x242>
 8000d5a:	2080      	movs	r0, #128	; 0x80
 8000d5c:	0240      	lsls	r0, r0, #9
 8000d5e:	4684      	mov	ip, r0
 8000d60:	4461      	add	r1, ip
 8000d62:	0c18      	lsrs	r0, r3, #16
 8000d64:	0412      	lsls	r2, r2, #16
 8000d66:	041b      	lsls	r3, r3, #16
 8000d68:	0c12      	lsrs	r2, r2, #16
 8000d6a:	1841      	adds	r1, r0, r1
 8000d6c:	189b      	adds	r3, r3, r2
 8000d6e:	428e      	cmp	r6, r1
 8000d70:	d200      	bcs.n	8000d74 <__aeabi_ddiv+0x254>
 8000d72:	e0ff      	b.n	8000f74 <__aeabi_ddiv+0x454>
 8000d74:	d100      	bne.n	8000d78 <__aeabi_ddiv+0x258>
 8000d76:	e0fa      	b.n	8000f6e <__aeabi_ddiv+0x44e>
 8000d78:	2301      	movs	r3, #1
 8000d7a:	431d      	orrs	r5, r3
 8000d7c:	4a49      	ldr	r2, [pc, #292]	; (8000ea4 <__aeabi_ddiv+0x384>)
 8000d7e:	445a      	add	r2, fp
 8000d80:	2a00      	cmp	r2, #0
 8000d82:	dc00      	bgt.n	8000d86 <__aeabi_ddiv+0x266>
 8000d84:	e0aa      	b.n	8000edc <__aeabi_ddiv+0x3bc>
 8000d86:	076b      	lsls	r3, r5, #29
 8000d88:	d000      	beq.n	8000d8c <__aeabi_ddiv+0x26c>
 8000d8a:	e13d      	b.n	8001008 <__aeabi_ddiv+0x4e8>
 8000d8c:	08ed      	lsrs	r5, r5, #3
 8000d8e:	4643      	mov	r3, r8
 8000d90:	01db      	lsls	r3, r3, #7
 8000d92:	d506      	bpl.n	8000da2 <__aeabi_ddiv+0x282>
 8000d94:	4642      	mov	r2, r8
 8000d96:	4b44      	ldr	r3, [pc, #272]	; (8000ea8 <__aeabi_ddiv+0x388>)
 8000d98:	401a      	ands	r2, r3
 8000d9a:	4690      	mov	r8, r2
 8000d9c:	2280      	movs	r2, #128	; 0x80
 8000d9e:	00d2      	lsls	r2, r2, #3
 8000da0:	445a      	add	r2, fp
 8000da2:	4b42      	ldr	r3, [pc, #264]	; (8000eac <__aeabi_ddiv+0x38c>)
 8000da4:	429a      	cmp	r2, r3
 8000da6:	dd00      	ble.n	8000daa <__aeabi_ddiv+0x28a>
 8000da8:	e71f      	b.n	8000bea <__aeabi_ddiv+0xca>
 8000daa:	4643      	mov	r3, r8
 8000dac:	075b      	lsls	r3, r3, #29
 8000dae:	431d      	orrs	r5, r3
 8000db0:	4643      	mov	r3, r8
 8000db2:	0552      	lsls	r2, r2, #21
 8000db4:	025c      	lsls	r4, r3, #9
 8000db6:	0b24      	lsrs	r4, r4, #12
 8000db8:	0d53      	lsrs	r3, r2, #21
 8000dba:	e708      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000dbc:	4652      	mov	r2, sl
 8000dbe:	4322      	orrs	r2, r4
 8000dc0:	d100      	bne.n	8000dc4 <__aeabi_ddiv+0x2a4>
 8000dc2:	e07b      	b.n	8000ebc <__aeabi_ddiv+0x39c>
 8000dc4:	2c00      	cmp	r4, #0
 8000dc6:	d100      	bne.n	8000dca <__aeabi_ddiv+0x2aa>
 8000dc8:	e0fa      	b.n	8000fc0 <__aeabi_ddiv+0x4a0>
 8000dca:	0020      	movs	r0, r4
 8000dcc:	f001 f952 	bl	8002074 <__clzsi2>
 8000dd0:	0002      	movs	r2, r0
 8000dd2:	3a0b      	subs	r2, #11
 8000dd4:	231d      	movs	r3, #29
 8000dd6:	0001      	movs	r1, r0
 8000dd8:	1a9b      	subs	r3, r3, r2
 8000dda:	4652      	mov	r2, sl
 8000ddc:	3908      	subs	r1, #8
 8000dde:	40da      	lsrs	r2, r3
 8000de0:	408c      	lsls	r4, r1
 8000de2:	4314      	orrs	r4, r2
 8000de4:	4652      	mov	r2, sl
 8000de6:	408a      	lsls	r2, r1
 8000de8:	4b31      	ldr	r3, [pc, #196]	; (8000eb0 <__aeabi_ddiv+0x390>)
 8000dea:	4458      	add	r0, fp
 8000dec:	469b      	mov	fp, r3
 8000dee:	4483      	add	fp, r0
 8000df0:	2000      	movs	r0, #0
 8000df2:	e6d5      	b.n	8000ba0 <__aeabi_ddiv+0x80>
 8000df4:	464b      	mov	r3, r9
 8000df6:	4323      	orrs	r3, r4
 8000df8:	4698      	mov	r8, r3
 8000dfa:	d044      	beq.n	8000e86 <__aeabi_ddiv+0x366>
 8000dfc:	2c00      	cmp	r4, #0
 8000dfe:	d100      	bne.n	8000e02 <__aeabi_ddiv+0x2e2>
 8000e00:	e0ce      	b.n	8000fa0 <__aeabi_ddiv+0x480>
 8000e02:	0020      	movs	r0, r4
 8000e04:	f001 f936 	bl	8002074 <__clzsi2>
 8000e08:	0001      	movs	r1, r0
 8000e0a:	0002      	movs	r2, r0
 8000e0c:	390b      	subs	r1, #11
 8000e0e:	231d      	movs	r3, #29
 8000e10:	1a5b      	subs	r3, r3, r1
 8000e12:	4649      	mov	r1, r9
 8000e14:	0010      	movs	r0, r2
 8000e16:	40d9      	lsrs	r1, r3
 8000e18:	3808      	subs	r0, #8
 8000e1a:	4084      	lsls	r4, r0
 8000e1c:	000b      	movs	r3, r1
 8000e1e:	464d      	mov	r5, r9
 8000e20:	4323      	orrs	r3, r4
 8000e22:	4698      	mov	r8, r3
 8000e24:	4085      	lsls	r5, r0
 8000e26:	4823      	ldr	r0, [pc, #140]	; (8000eb4 <__aeabi_ddiv+0x394>)
 8000e28:	1a83      	subs	r3, r0, r2
 8000e2a:	469b      	mov	fp, r3
 8000e2c:	2300      	movs	r3, #0
 8000e2e:	4699      	mov	r9, r3
 8000e30:	9300      	str	r3, [sp, #0]
 8000e32:	e69a      	b.n	8000b6a <__aeabi_ddiv+0x4a>
 8000e34:	464b      	mov	r3, r9
 8000e36:	4323      	orrs	r3, r4
 8000e38:	4698      	mov	r8, r3
 8000e3a:	d11d      	bne.n	8000e78 <__aeabi_ddiv+0x358>
 8000e3c:	2308      	movs	r3, #8
 8000e3e:	4699      	mov	r9, r3
 8000e40:	3b06      	subs	r3, #6
 8000e42:	2500      	movs	r5, #0
 8000e44:	4683      	mov	fp, r0
 8000e46:	9300      	str	r3, [sp, #0]
 8000e48:	e68f      	b.n	8000b6a <__aeabi_ddiv+0x4a>
 8000e4a:	4652      	mov	r2, sl
 8000e4c:	4322      	orrs	r2, r4
 8000e4e:	d109      	bne.n	8000e64 <__aeabi_ddiv+0x344>
 8000e50:	2302      	movs	r3, #2
 8000e52:	4649      	mov	r1, r9
 8000e54:	4319      	orrs	r1, r3
 8000e56:	4b18      	ldr	r3, [pc, #96]	; (8000eb8 <__aeabi_ddiv+0x398>)
 8000e58:	4689      	mov	r9, r1
 8000e5a:	469c      	mov	ip, r3
 8000e5c:	2400      	movs	r4, #0
 8000e5e:	2002      	movs	r0, #2
 8000e60:	44e3      	add	fp, ip
 8000e62:	e69d      	b.n	8000ba0 <__aeabi_ddiv+0x80>
 8000e64:	2303      	movs	r3, #3
 8000e66:	464a      	mov	r2, r9
 8000e68:	431a      	orrs	r2, r3
 8000e6a:	4b13      	ldr	r3, [pc, #76]	; (8000eb8 <__aeabi_ddiv+0x398>)
 8000e6c:	4691      	mov	r9, r2
 8000e6e:	469c      	mov	ip, r3
 8000e70:	4652      	mov	r2, sl
 8000e72:	2003      	movs	r0, #3
 8000e74:	44e3      	add	fp, ip
 8000e76:	e693      	b.n	8000ba0 <__aeabi_ddiv+0x80>
 8000e78:	230c      	movs	r3, #12
 8000e7a:	4699      	mov	r9, r3
 8000e7c:	3b09      	subs	r3, #9
 8000e7e:	46a0      	mov	r8, r4
 8000e80:	4683      	mov	fp, r0
 8000e82:	9300      	str	r3, [sp, #0]
 8000e84:	e671      	b.n	8000b6a <__aeabi_ddiv+0x4a>
 8000e86:	2304      	movs	r3, #4
 8000e88:	4699      	mov	r9, r3
 8000e8a:	2300      	movs	r3, #0
 8000e8c:	469b      	mov	fp, r3
 8000e8e:	3301      	adds	r3, #1
 8000e90:	2500      	movs	r5, #0
 8000e92:	9300      	str	r3, [sp, #0]
 8000e94:	e669      	b.n	8000b6a <__aeabi_ddiv+0x4a>
 8000e96:	46c0      	nop			; (mov r8, r8)
 8000e98:	000007ff 	.word	0x000007ff
 8000e9c:	fffffc01 	.word	0xfffffc01
 8000ea0:	08006d44 	.word	0x08006d44
 8000ea4:	000003ff 	.word	0x000003ff
 8000ea8:	feffffff 	.word	0xfeffffff
 8000eac:	000007fe 	.word	0x000007fe
 8000eb0:	000003f3 	.word	0x000003f3
 8000eb4:	fffffc0d 	.word	0xfffffc0d
 8000eb8:	fffff801 	.word	0xfffff801
 8000ebc:	4649      	mov	r1, r9
 8000ebe:	2301      	movs	r3, #1
 8000ec0:	4319      	orrs	r1, r3
 8000ec2:	4689      	mov	r9, r1
 8000ec4:	2400      	movs	r4, #0
 8000ec6:	2001      	movs	r0, #1
 8000ec8:	e66a      	b.n	8000ba0 <__aeabi_ddiv+0x80>
 8000eca:	2300      	movs	r3, #0
 8000ecc:	2480      	movs	r4, #128	; 0x80
 8000ece:	469a      	mov	sl, r3
 8000ed0:	2500      	movs	r5, #0
 8000ed2:	4b8a      	ldr	r3, [pc, #552]	; (80010fc <__aeabi_ddiv+0x5dc>)
 8000ed4:	0324      	lsls	r4, r4, #12
 8000ed6:	e67a      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000ed8:	2501      	movs	r5, #1
 8000eda:	426d      	negs	r5, r5
 8000edc:	2301      	movs	r3, #1
 8000ede:	1a9b      	subs	r3, r3, r2
 8000ee0:	2b38      	cmp	r3, #56	; 0x38
 8000ee2:	dd00      	ble.n	8000ee6 <__aeabi_ddiv+0x3c6>
 8000ee4:	e670      	b.n	8000bc8 <__aeabi_ddiv+0xa8>
 8000ee6:	2b1f      	cmp	r3, #31
 8000ee8:	dc00      	bgt.n	8000eec <__aeabi_ddiv+0x3cc>
 8000eea:	e0bf      	b.n	800106c <__aeabi_ddiv+0x54c>
 8000eec:	211f      	movs	r1, #31
 8000eee:	4249      	negs	r1, r1
 8000ef0:	1a8a      	subs	r2, r1, r2
 8000ef2:	4641      	mov	r1, r8
 8000ef4:	40d1      	lsrs	r1, r2
 8000ef6:	000a      	movs	r2, r1
 8000ef8:	2b20      	cmp	r3, #32
 8000efa:	d004      	beq.n	8000f06 <__aeabi_ddiv+0x3e6>
 8000efc:	4641      	mov	r1, r8
 8000efe:	4b80      	ldr	r3, [pc, #512]	; (8001100 <__aeabi_ddiv+0x5e0>)
 8000f00:	445b      	add	r3, fp
 8000f02:	4099      	lsls	r1, r3
 8000f04:	430d      	orrs	r5, r1
 8000f06:	1e6b      	subs	r3, r5, #1
 8000f08:	419d      	sbcs	r5, r3
 8000f0a:	2307      	movs	r3, #7
 8000f0c:	432a      	orrs	r2, r5
 8000f0e:	001d      	movs	r5, r3
 8000f10:	2400      	movs	r4, #0
 8000f12:	4015      	ands	r5, r2
 8000f14:	4213      	tst	r3, r2
 8000f16:	d100      	bne.n	8000f1a <__aeabi_ddiv+0x3fa>
 8000f18:	e0d4      	b.n	80010c4 <__aeabi_ddiv+0x5a4>
 8000f1a:	210f      	movs	r1, #15
 8000f1c:	2300      	movs	r3, #0
 8000f1e:	4011      	ands	r1, r2
 8000f20:	2904      	cmp	r1, #4
 8000f22:	d100      	bne.n	8000f26 <__aeabi_ddiv+0x406>
 8000f24:	e0cb      	b.n	80010be <__aeabi_ddiv+0x59e>
 8000f26:	1d11      	adds	r1, r2, #4
 8000f28:	4291      	cmp	r1, r2
 8000f2a:	4192      	sbcs	r2, r2
 8000f2c:	4252      	negs	r2, r2
 8000f2e:	189b      	adds	r3, r3, r2
 8000f30:	000a      	movs	r2, r1
 8000f32:	0219      	lsls	r1, r3, #8
 8000f34:	d400      	bmi.n	8000f38 <__aeabi_ddiv+0x418>
 8000f36:	e0c2      	b.n	80010be <__aeabi_ddiv+0x59e>
 8000f38:	2301      	movs	r3, #1
 8000f3a:	2400      	movs	r4, #0
 8000f3c:	2500      	movs	r5, #0
 8000f3e:	e646      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000f40:	2380      	movs	r3, #128	; 0x80
 8000f42:	4641      	mov	r1, r8
 8000f44:	031b      	lsls	r3, r3, #12
 8000f46:	4219      	tst	r1, r3
 8000f48:	d008      	beq.n	8000f5c <__aeabi_ddiv+0x43c>
 8000f4a:	421c      	tst	r4, r3
 8000f4c:	d106      	bne.n	8000f5c <__aeabi_ddiv+0x43c>
 8000f4e:	431c      	orrs	r4, r3
 8000f50:	0324      	lsls	r4, r4, #12
 8000f52:	46ba      	mov	sl, r7
 8000f54:	0015      	movs	r5, r2
 8000f56:	4b69      	ldr	r3, [pc, #420]	; (80010fc <__aeabi_ddiv+0x5dc>)
 8000f58:	0b24      	lsrs	r4, r4, #12
 8000f5a:	e638      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000f5c:	2480      	movs	r4, #128	; 0x80
 8000f5e:	4643      	mov	r3, r8
 8000f60:	0324      	lsls	r4, r4, #12
 8000f62:	431c      	orrs	r4, r3
 8000f64:	0324      	lsls	r4, r4, #12
 8000f66:	46b2      	mov	sl, r6
 8000f68:	4b64      	ldr	r3, [pc, #400]	; (80010fc <__aeabi_ddiv+0x5dc>)
 8000f6a:	0b24      	lsrs	r4, r4, #12
 8000f6c:	e62f      	b.n	8000bce <__aeabi_ddiv+0xae>
 8000f6e:	2b00      	cmp	r3, #0
 8000f70:	d100      	bne.n	8000f74 <__aeabi_ddiv+0x454>
 8000f72:	e703      	b.n	8000d7c <__aeabi_ddiv+0x25c>
 8000f74:	19a6      	adds	r6, r4, r6
 8000f76:	1e68      	subs	r0, r5, #1
 8000f78:	42a6      	cmp	r6, r4
 8000f7a:	d200      	bcs.n	8000f7e <__aeabi_ddiv+0x45e>
 8000f7c:	e08d      	b.n	800109a <__aeabi_ddiv+0x57a>
 8000f7e:	428e      	cmp	r6, r1
 8000f80:	d200      	bcs.n	8000f84 <__aeabi_ddiv+0x464>
 8000f82:	e0a3      	b.n	80010cc <__aeabi_ddiv+0x5ac>
 8000f84:	d100      	bne.n	8000f88 <__aeabi_ddiv+0x468>
 8000f86:	e0b3      	b.n	80010f0 <__aeabi_ddiv+0x5d0>
 8000f88:	0005      	movs	r5, r0
 8000f8a:	e6f5      	b.n	8000d78 <__aeabi_ddiv+0x258>
 8000f8c:	42aa      	cmp	r2, r5
 8000f8e:	d900      	bls.n	8000f92 <__aeabi_ddiv+0x472>
 8000f90:	e639      	b.n	8000c06 <__aeabi_ddiv+0xe6>
 8000f92:	4643      	mov	r3, r8
 8000f94:	07de      	lsls	r6, r3, #31
 8000f96:	0858      	lsrs	r0, r3, #1
 8000f98:	086b      	lsrs	r3, r5, #1
 8000f9a:	431e      	orrs	r6, r3
 8000f9c:	07ed      	lsls	r5, r5, #31
 8000f9e:	e639      	b.n	8000c14 <__aeabi_ddiv+0xf4>
 8000fa0:	4648      	mov	r0, r9
 8000fa2:	f001 f867 	bl	8002074 <__clzsi2>
 8000fa6:	0001      	movs	r1, r0
 8000fa8:	0002      	movs	r2, r0
 8000faa:	3115      	adds	r1, #21
 8000fac:	3220      	adds	r2, #32
 8000fae:	291c      	cmp	r1, #28
 8000fb0:	dc00      	bgt.n	8000fb4 <__aeabi_ddiv+0x494>
 8000fb2:	e72c      	b.n	8000e0e <__aeabi_ddiv+0x2ee>
 8000fb4:	464b      	mov	r3, r9
 8000fb6:	3808      	subs	r0, #8
 8000fb8:	4083      	lsls	r3, r0
 8000fba:	2500      	movs	r5, #0
 8000fbc:	4698      	mov	r8, r3
 8000fbe:	e732      	b.n	8000e26 <__aeabi_ddiv+0x306>
 8000fc0:	f001 f858 	bl	8002074 <__clzsi2>
 8000fc4:	0003      	movs	r3, r0
 8000fc6:	001a      	movs	r2, r3
 8000fc8:	3215      	adds	r2, #21
 8000fca:	3020      	adds	r0, #32
 8000fcc:	2a1c      	cmp	r2, #28
 8000fce:	dc00      	bgt.n	8000fd2 <__aeabi_ddiv+0x4b2>
 8000fd0:	e700      	b.n	8000dd4 <__aeabi_ddiv+0x2b4>
 8000fd2:	4654      	mov	r4, sl
 8000fd4:	3b08      	subs	r3, #8
 8000fd6:	2200      	movs	r2, #0
 8000fd8:	409c      	lsls	r4, r3
 8000fda:	e705      	b.n	8000de8 <__aeabi_ddiv+0x2c8>
 8000fdc:	1936      	adds	r6, r6, r4
 8000fde:	3b01      	subs	r3, #1
 8000fe0:	42b4      	cmp	r4, r6
 8000fe2:	d900      	bls.n	8000fe6 <__aeabi_ddiv+0x4c6>
 8000fe4:	e6a6      	b.n	8000d34 <__aeabi_ddiv+0x214>
 8000fe6:	42b2      	cmp	r2, r6
 8000fe8:	d800      	bhi.n	8000fec <__aeabi_ddiv+0x4cc>
 8000fea:	e6a3      	b.n	8000d34 <__aeabi_ddiv+0x214>
 8000fec:	1e83      	subs	r3, r0, #2
 8000fee:	1936      	adds	r6, r6, r4
 8000ff0:	e6a0      	b.n	8000d34 <__aeabi_ddiv+0x214>
 8000ff2:	1909      	adds	r1, r1, r4
 8000ff4:	3d01      	subs	r5, #1
 8000ff6:	428c      	cmp	r4, r1
 8000ff8:	d900      	bls.n	8000ffc <__aeabi_ddiv+0x4dc>
 8000ffa:	e68d      	b.n	8000d18 <__aeabi_ddiv+0x1f8>
 8000ffc:	428a      	cmp	r2, r1
 8000ffe:	d800      	bhi.n	8001002 <__aeabi_ddiv+0x4e2>
 8001000:	e68a      	b.n	8000d18 <__aeabi_ddiv+0x1f8>
 8001002:	1e85      	subs	r5, r0, #2
 8001004:	1909      	adds	r1, r1, r4
 8001006:	e687      	b.n	8000d18 <__aeabi_ddiv+0x1f8>
 8001008:	230f      	movs	r3, #15
 800100a:	402b      	ands	r3, r5
 800100c:	2b04      	cmp	r3, #4
 800100e:	d100      	bne.n	8001012 <__aeabi_ddiv+0x4f2>
 8001010:	e6bc      	b.n	8000d8c <__aeabi_ddiv+0x26c>
 8001012:	2305      	movs	r3, #5
 8001014:	425b      	negs	r3, r3
 8001016:	42ab      	cmp	r3, r5
 8001018:	419b      	sbcs	r3, r3
 800101a:	3504      	adds	r5, #4
 800101c:	425b      	negs	r3, r3
 800101e:	08ed      	lsrs	r5, r5, #3
 8001020:	4498      	add	r8, r3
 8001022:	e6b4      	b.n	8000d8e <__aeabi_ddiv+0x26e>
 8001024:	42af      	cmp	r7, r5
 8001026:	d900      	bls.n	800102a <__aeabi_ddiv+0x50a>
 8001028:	e660      	b.n	8000cec <__aeabi_ddiv+0x1cc>
 800102a:	4282      	cmp	r2, r0
 800102c:	d804      	bhi.n	8001038 <__aeabi_ddiv+0x518>
 800102e:	d000      	beq.n	8001032 <__aeabi_ddiv+0x512>
 8001030:	e65c      	b.n	8000cec <__aeabi_ddiv+0x1cc>
 8001032:	42ae      	cmp	r6, r5
 8001034:	d800      	bhi.n	8001038 <__aeabi_ddiv+0x518>
 8001036:	e659      	b.n	8000cec <__aeabi_ddiv+0x1cc>
 8001038:	2302      	movs	r3, #2
 800103a:	425b      	negs	r3, r3
 800103c:	469c      	mov	ip, r3
 800103e:	9b00      	ldr	r3, [sp, #0]
 8001040:	44e0      	add	r8, ip
 8001042:	469c      	mov	ip, r3
 8001044:	4465      	add	r5, ip
 8001046:	429d      	cmp	r5, r3
 8001048:	419b      	sbcs	r3, r3
 800104a:	425b      	negs	r3, r3
 800104c:	191b      	adds	r3, r3, r4
 800104e:	18c0      	adds	r0, r0, r3
 8001050:	e64d      	b.n	8000cee <__aeabi_ddiv+0x1ce>
 8001052:	428a      	cmp	r2, r1
 8001054:	d800      	bhi.n	8001058 <__aeabi_ddiv+0x538>
 8001056:	e60e      	b.n	8000c76 <__aeabi_ddiv+0x156>
 8001058:	1e83      	subs	r3, r0, #2
 800105a:	1909      	adds	r1, r1, r4
 800105c:	e60b      	b.n	8000c76 <__aeabi_ddiv+0x156>
 800105e:	428a      	cmp	r2, r1
 8001060:	d800      	bhi.n	8001064 <__aeabi_ddiv+0x544>
 8001062:	e5f4      	b.n	8000c4e <__aeabi_ddiv+0x12e>
 8001064:	1e83      	subs	r3, r0, #2
 8001066:	4698      	mov	r8, r3
 8001068:	1909      	adds	r1, r1, r4
 800106a:	e5f0      	b.n	8000c4e <__aeabi_ddiv+0x12e>
 800106c:	4925      	ldr	r1, [pc, #148]	; (8001104 <__aeabi_ddiv+0x5e4>)
 800106e:	0028      	movs	r0, r5
 8001070:	4459      	add	r1, fp
 8001072:	408d      	lsls	r5, r1
 8001074:	4642      	mov	r2, r8
 8001076:	408a      	lsls	r2, r1
 8001078:	1e69      	subs	r1, r5, #1
 800107a:	418d      	sbcs	r5, r1
 800107c:	4641      	mov	r1, r8
 800107e:	40d8      	lsrs	r0, r3
 8001080:	40d9      	lsrs	r1, r3
 8001082:	4302      	orrs	r2, r0
 8001084:	432a      	orrs	r2, r5
 8001086:	000b      	movs	r3, r1
 8001088:	0751      	lsls	r1, r2, #29
 800108a:	d100      	bne.n	800108e <__aeabi_ddiv+0x56e>
 800108c:	e751      	b.n	8000f32 <__aeabi_ddiv+0x412>
 800108e:	210f      	movs	r1, #15
 8001090:	4011      	ands	r1, r2
 8001092:	2904      	cmp	r1, #4
 8001094:	d000      	beq.n	8001098 <__aeabi_ddiv+0x578>
 8001096:	e746      	b.n	8000f26 <__aeabi_ddiv+0x406>
 8001098:	e74b      	b.n	8000f32 <__aeabi_ddiv+0x412>
 800109a:	0005      	movs	r5, r0
 800109c:	428e      	cmp	r6, r1
 800109e:	d000      	beq.n	80010a2 <__aeabi_ddiv+0x582>
 80010a0:	e66a      	b.n	8000d78 <__aeabi_ddiv+0x258>
 80010a2:	9a00      	ldr	r2, [sp, #0]
 80010a4:	4293      	cmp	r3, r2
 80010a6:	d000      	beq.n	80010aa <__aeabi_ddiv+0x58a>
 80010a8:	e666      	b.n	8000d78 <__aeabi_ddiv+0x258>
 80010aa:	e667      	b.n	8000d7c <__aeabi_ddiv+0x25c>
 80010ac:	4a16      	ldr	r2, [pc, #88]	; (8001108 <__aeabi_ddiv+0x5e8>)
 80010ae:	445a      	add	r2, fp
 80010b0:	2a00      	cmp	r2, #0
 80010b2:	dc00      	bgt.n	80010b6 <__aeabi_ddiv+0x596>
 80010b4:	e710      	b.n	8000ed8 <__aeabi_ddiv+0x3b8>
 80010b6:	2301      	movs	r3, #1
 80010b8:	2500      	movs	r5, #0
 80010ba:	4498      	add	r8, r3
 80010bc:	e667      	b.n	8000d8e <__aeabi_ddiv+0x26e>
 80010be:	075d      	lsls	r5, r3, #29
 80010c0:	025b      	lsls	r3, r3, #9
 80010c2:	0b1c      	lsrs	r4, r3, #12
 80010c4:	08d2      	lsrs	r2, r2, #3
 80010c6:	2300      	movs	r3, #0
 80010c8:	4315      	orrs	r5, r2
 80010ca:	e580      	b.n	8000bce <__aeabi_ddiv+0xae>
 80010cc:	9800      	ldr	r0, [sp, #0]
 80010ce:	3d02      	subs	r5, #2
 80010d0:	0042      	lsls	r2, r0, #1
 80010d2:	4282      	cmp	r2, r0
 80010d4:	41bf      	sbcs	r7, r7
 80010d6:	427f      	negs	r7, r7
 80010d8:	193c      	adds	r4, r7, r4
 80010da:	1936      	adds	r6, r6, r4
 80010dc:	9200      	str	r2, [sp, #0]
 80010de:	e7dd      	b.n	800109c <__aeabi_ddiv+0x57c>
 80010e0:	2480      	movs	r4, #128	; 0x80
 80010e2:	4643      	mov	r3, r8
 80010e4:	0324      	lsls	r4, r4, #12
 80010e6:	431c      	orrs	r4, r3
 80010e8:	0324      	lsls	r4, r4, #12
 80010ea:	4b04      	ldr	r3, [pc, #16]	; (80010fc <__aeabi_ddiv+0x5dc>)
 80010ec:	0b24      	lsrs	r4, r4, #12
 80010ee:	e56e      	b.n	8000bce <__aeabi_ddiv+0xae>
 80010f0:	9a00      	ldr	r2, [sp, #0]
 80010f2:	429a      	cmp	r2, r3
 80010f4:	d3ea      	bcc.n	80010cc <__aeabi_ddiv+0x5ac>
 80010f6:	0005      	movs	r5, r0
 80010f8:	e7d3      	b.n	80010a2 <__aeabi_ddiv+0x582>
 80010fa:	46c0      	nop			; (mov r8, r8)
 80010fc:	000007ff 	.word	0x000007ff
 8001100:	0000043e 	.word	0x0000043e
 8001104:	0000041e 	.word	0x0000041e
 8001108:	000003ff 	.word	0x000003ff

0800110c <__eqdf2>:
 800110c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800110e:	464e      	mov	r6, r9
 8001110:	4645      	mov	r5, r8
 8001112:	46de      	mov	lr, fp
 8001114:	4657      	mov	r7, sl
 8001116:	4690      	mov	r8, r2
 8001118:	b5e0      	push	{r5, r6, r7, lr}
 800111a:	0017      	movs	r7, r2
 800111c:	031a      	lsls	r2, r3, #12
 800111e:	0b12      	lsrs	r2, r2, #12
 8001120:	0005      	movs	r5, r0
 8001122:	4684      	mov	ip, r0
 8001124:	4819      	ldr	r0, [pc, #100]	; (800118c <__eqdf2+0x80>)
 8001126:	030e      	lsls	r6, r1, #12
 8001128:	004c      	lsls	r4, r1, #1
 800112a:	4691      	mov	r9, r2
 800112c:	005a      	lsls	r2, r3, #1
 800112e:	0fdb      	lsrs	r3, r3, #31
 8001130:	469b      	mov	fp, r3
 8001132:	0b36      	lsrs	r6, r6, #12
 8001134:	0d64      	lsrs	r4, r4, #21
 8001136:	0fc9      	lsrs	r1, r1, #31
 8001138:	0d52      	lsrs	r2, r2, #21
 800113a:	4284      	cmp	r4, r0
 800113c:	d019      	beq.n	8001172 <__eqdf2+0x66>
 800113e:	4282      	cmp	r2, r0
 8001140:	d010      	beq.n	8001164 <__eqdf2+0x58>
 8001142:	2001      	movs	r0, #1
 8001144:	4294      	cmp	r4, r2
 8001146:	d10e      	bne.n	8001166 <__eqdf2+0x5a>
 8001148:	454e      	cmp	r6, r9
 800114a:	d10c      	bne.n	8001166 <__eqdf2+0x5a>
 800114c:	2001      	movs	r0, #1
 800114e:	45c4      	cmp	ip, r8
 8001150:	d109      	bne.n	8001166 <__eqdf2+0x5a>
 8001152:	4559      	cmp	r1, fp
 8001154:	d017      	beq.n	8001186 <__eqdf2+0x7a>
 8001156:	2c00      	cmp	r4, #0
 8001158:	d105      	bne.n	8001166 <__eqdf2+0x5a>
 800115a:	0030      	movs	r0, r6
 800115c:	4328      	orrs	r0, r5
 800115e:	1e43      	subs	r3, r0, #1
 8001160:	4198      	sbcs	r0, r3
 8001162:	e000      	b.n	8001166 <__eqdf2+0x5a>
 8001164:	2001      	movs	r0, #1
 8001166:	bcf0      	pop	{r4, r5, r6, r7}
 8001168:	46bb      	mov	fp, r7
 800116a:	46b2      	mov	sl, r6
 800116c:	46a9      	mov	r9, r5
 800116e:	46a0      	mov	r8, r4
 8001170:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001172:	0033      	movs	r3, r6
 8001174:	2001      	movs	r0, #1
 8001176:	432b      	orrs	r3, r5
 8001178:	d1f5      	bne.n	8001166 <__eqdf2+0x5a>
 800117a:	42a2      	cmp	r2, r4
 800117c:	d1f3      	bne.n	8001166 <__eqdf2+0x5a>
 800117e:	464b      	mov	r3, r9
 8001180:	433b      	orrs	r3, r7
 8001182:	d1f0      	bne.n	8001166 <__eqdf2+0x5a>
 8001184:	e7e2      	b.n	800114c <__eqdf2+0x40>
 8001186:	2000      	movs	r0, #0
 8001188:	e7ed      	b.n	8001166 <__eqdf2+0x5a>
 800118a:	46c0      	nop			; (mov r8, r8)
 800118c:	000007ff 	.word	0x000007ff

08001190 <__gedf2>:
 8001190:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001192:	4647      	mov	r7, r8
 8001194:	46ce      	mov	lr, r9
 8001196:	0004      	movs	r4, r0
 8001198:	0018      	movs	r0, r3
 800119a:	0016      	movs	r6, r2
 800119c:	031b      	lsls	r3, r3, #12
 800119e:	0b1b      	lsrs	r3, r3, #12
 80011a0:	4d2d      	ldr	r5, [pc, #180]	; (8001258 <__gedf2+0xc8>)
 80011a2:	004a      	lsls	r2, r1, #1
 80011a4:	4699      	mov	r9, r3
 80011a6:	b580      	push	{r7, lr}
 80011a8:	0043      	lsls	r3, r0, #1
 80011aa:	030f      	lsls	r7, r1, #12
 80011ac:	46a4      	mov	ip, r4
 80011ae:	46b0      	mov	r8, r6
 80011b0:	0b3f      	lsrs	r7, r7, #12
 80011b2:	0d52      	lsrs	r2, r2, #21
 80011b4:	0fc9      	lsrs	r1, r1, #31
 80011b6:	0d5b      	lsrs	r3, r3, #21
 80011b8:	0fc0      	lsrs	r0, r0, #31
 80011ba:	42aa      	cmp	r2, r5
 80011bc:	d021      	beq.n	8001202 <__gedf2+0x72>
 80011be:	42ab      	cmp	r3, r5
 80011c0:	d013      	beq.n	80011ea <__gedf2+0x5a>
 80011c2:	2a00      	cmp	r2, #0
 80011c4:	d122      	bne.n	800120c <__gedf2+0x7c>
 80011c6:	433c      	orrs	r4, r7
 80011c8:	2b00      	cmp	r3, #0
 80011ca:	d102      	bne.n	80011d2 <__gedf2+0x42>
 80011cc:	464d      	mov	r5, r9
 80011ce:	432e      	orrs	r6, r5
 80011d0:	d022      	beq.n	8001218 <__gedf2+0x88>
 80011d2:	2c00      	cmp	r4, #0
 80011d4:	d010      	beq.n	80011f8 <__gedf2+0x68>
 80011d6:	4281      	cmp	r1, r0
 80011d8:	d022      	beq.n	8001220 <__gedf2+0x90>
 80011da:	2002      	movs	r0, #2
 80011dc:	3901      	subs	r1, #1
 80011de:	4008      	ands	r0, r1
 80011e0:	3801      	subs	r0, #1
 80011e2:	bcc0      	pop	{r6, r7}
 80011e4:	46b9      	mov	r9, r7
 80011e6:	46b0      	mov	r8, r6
 80011e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80011ea:	464d      	mov	r5, r9
 80011ec:	432e      	orrs	r6, r5
 80011ee:	d129      	bne.n	8001244 <__gedf2+0xb4>
 80011f0:	2a00      	cmp	r2, #0
 80011f2:	d1f0      	bne.n	80011d6 <__gedf2+0x46>
 80011f4:	433c      	orrs	r4, r7
 80011f6:	d1ee      	bne.n	80011d6 <__gedf2+0x46>
 80011f8:	2800      	cmp	r0, #0
 80011fa:	d1f2      	bne.n	80011e2 <__gedf2+0x52>
 80011fc:	2001      	movs	r0, #1
 80011fe:	4240      	negs	r0, r0
 8001200:	e7ef      	b.n	80011e2 <__gedf2+0x52>
 8001202:	003d      	movs	r5, r7
 8001204:	4325      	orrs	r5, r4
 8001206:	d11d      	bne.n	8001244 <__gedf2+0xb4>
 8001208:	4293      	cmp	r3, r2
 800120a:	d0ee      	beq.n	80011ea <__gedf2+0x5a>
 800120c:	2b00      	cmp	r3, #0
 800120e:	d1e2      	bne.n	80011d6 <__gedf2+0x46>
 8001210:	464c      	mov	r4, r9
 8001212:	4326      	orrs	r6, r4
 8001214:	d1df      	bne.n	80011d6 <__gedf2+0x46>
 8001216:	e7e0      	b.n	80011da <__gedf2+0x4a>
 8001218:	2000      	movs	r0, #0
 800121a:	2c00      	cmp	r4, #0
 800121c:	d0e1      	beq.n	80011e2 <__gedf2+0x52>
 800121e:	e7dc      	b.n	80011da <__gedf2+0x4a>
 8001220:	429a      	cmp	r2, r3
 8001222:	dc0a      	bgt.n	800123a <__gedf2+0xaa>
 8001224:	dbe8      	blt.n	80011f8 <__gedf2+0x68>
 8001226:	454f      	cmp	r7, r9
 8001228:	d8d7      	bhi.n	80011da <__gedf2+0x4a>
 800122a:	d00e      	beq.n	800124a <__gedf2+0xba>
 800122c:	2000      	movs	r0, #0
 800122e:	454f      	cmp	r7, r9
 8001230:	d2d7      	bcs.n	80011e2 <__gedf2+0x52>
 8001232:	2900      	cmp	r1, #0
 8001234:	d0e2      	beq.n	80011fc <__gedf2+0x6c>
 8001236:	0008      	movs	r0, r1
 8001238:	e7d3      	b.n	80011e2 <__gedf2+0x52>
 800123a:	4243      	negs	r3, r0
 800123c:	4158      	adcs	r0, r3
 800123e:	0040      	lsls	r0, r0, #1
 8001240:	3801      	subs	r0, #1
 8001242:	e7ce      	b.n	80011e2 <__gedf2+0x52>
 8001244:	2002      	movs	r0, #2
 8001246:	4240      	negs	r0, r0
 8001248:	e7cb      	b.n	80011e2 <__gedf2+0x52>
 800124a:	45c4      	cmp	ip, r8
 800124c:	d8c5      	bhi.n	80011da <__gedf2+0x4a>
 800124e:	2000      	movs	r0, #0
 8001250:	45c4      	cmp	ip, r8
 8001252:	d2c6      	bcs.n	80011e2 <__gedf2+0x52>
 8001254:	e7ed      	b.n	8001232 <__gedf2+0xa2>
 8001256:	46c0      	nop			; (mov r8, r8)
 8001258:	000007ff 	.word	0x000007ff

0800125c <__ledf2>:
 800125c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800125e:	4647      	mov	r7, r8
 8001260:	46ce      	mov	lr, r9
 8001262:	0004      	movs	r4, r0
 8001264:	0018      	movs	r0, r3
 8001266:	0016      	movs	r6, r2
 8001268:	031b      	lsls	r3, r3, #12
 800126a:	0b1b      	lsrs	r3, r3, #12
 800126c:	4d2c      	ldr	r5, [pc, #176]	; (8001320 <__ledf2+0xc4>)
 800126e:	004a      	lsls	r2, r1, #1
 8001270:	4699      	mov	r9, r3
 8001272:	b580      	push	{r7, lr}
 8001274:	0043      	lsls	r3, r0, #1
 8001276:	030f      	lsls	r7, r1, #12
 8001278:	46a4      	mov	ip, r4
 800127a:	46b0      	mov	r8, r6
 800127c:	0b3f      	lsrs	r7, r7, #12
 800127e:	0d52      	lsrs	r2, r2, #21
 8001280:	0fc9      	lsrs	r1, r1, #31
 8001282:	0d5b      	lsrs	r3, r3, #21
 8001284:	0fc0      	lsrs	r0, r0, #31
 8001286:	42aa      	cmp	r2, r5
 8001288:	d00d      	beq.n	80012a6 <__ledf2+0x4a>
 800128a:	42ab      	cmp	r3, r5
 800128c:	d010      	beq.n	80012b0 <__ledf2+0x54>
 800128e:	2a00      	cmp	r2, #0
 8001290:	d127      	bne.n	80012e2 <__ledf2+0x86>
 8001292:	433c      	orrs	r4, r7
 8001294:	2b00      	cmp	r3, #0
 8001296:	d111      	bne.n	80012bc <__ledf2+0x60>
 8001298:	464d      	mov	r5, r9
 800129a:	432e      	orrs	r6, r5
 800129c:	d10e      	bne.n	80012bc <__ledf2+0x60>
 800129e:	2000      	movs	r0, #0
 80012a0:	2c00      	cmp	r4, #0
 80012a2:	d015      	beq.n	80012d0 <__ledf2+0x74>
 80012a4:	e00e      	b.n	80012c4 <__ledf2+0x68>
 80012a6:	003d      	movs	r5, r7
 80012a8:	4325      	orrs	r5, r4
 80012aa:	d110      	bne.n	80012ce <__ledf2+0x72>
 80012ac:	4293      	cmp	r3, r2
 80012ae:	d118      	bne.n	80012e2 <__ledf2+0x86>
 80012b0:	464d      	mov	r5, r9
 80012b2:	432e      	orrs	r6, r5
 80012b4:	d10b      	bne.n	80012ce <__ledf2+0x72>
 80012b6:	2a00      	cmp	r2, #0
 80012b8:	d102      	bne.n	80012c0 <__ledf2+0x64>
 80012ba:	433c      	orrs	r4, r7
 80012bc:	2c00      	cmp	r4, #0
 80012be:	d00b      	beq.n	80012d8 <__ledf2+0x7c>
 80012c0:	4281      	cmp	r1, r0
 80012c2:	d014      	beq.n	80012ee <__ledf2+0x92>
 80012c4:	2002      	movs	r0, #2
 80012c6:	3901      	subs	r1, #1
 80012c8:	4008      	ands	r0, r1
 80012ca:	3801      	subs	r0, #1
 80012cc:	e000      	b.n	80012d0 <__ledf2+0x74>
 80012ce:	2002      	movs	r0, #2
 80012d0:	bcc0      	pop	{r6, r7}
 80012d2:	46b9      	mov	r9, r7
 80012d4:	46b0      	mov	r8, r6
 80012d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012d8:	2800      	cmp	r0, #0
 80012da:	d1f9      	bne.n	80012d0 <__ledf2+0x74>
 80012dc:	2001      	movs	r0, #1
 80012de:	4240      	negs	r0, r0
 80012e0:	e7f6      	b.n	80012d0 <__ledf2+0x74>
 80012e2:	2b00      	cmp	r3, #0
 80012e4:	d1ec      	bne.n	80012c0 <__ledf2+0x64>
 80012e6:	464c      	mov	r4, r9
 80012e8:	4326      	orrs	r6, r4
 80012ea:	d1e9      	bne.n	80012c0 <__ledf2+0x64>
 80012ec:	e7ea      	b.n	80012c4 <__ledf2+0x68>
 80012ee:	429a      	cmp	r2, r3
 80012f0:	dd04      	ble.n	80012fc <__ledf2+0xa0>
 80012f2:	4243      	negs	r3, r0
 80012f4:	4158      	adcs	r0, r3
 80012f6:	0040      	lsls	r0, r0, #1
 80012f8:	3801      	subs	r0, #1
 80012fa:	e7e9      	b.n	80012d0 <__ledf2+0x74>
 80012fc:	429a      	cmp	r2, r3
 80012fe:	dbeb      	blt.n	80012d8 <__ledf2+0x7c>
 8001300:	454f      	cmp	r7, r9
 8001302:	d8df      	bhi.n	80012c4 <__ledf2+0x68>
 8001304:	d006      	beq.n	8001314 <__ledf2+0xb8>
 8001306:	2000      	movs	r0, #0
 8001308:	454f      	cmp	r7, r9
 800130a:	d2e1      	bcs.n	80012d0 <__ledf2+0x74>
 800130c:	2900      	cmp	r1, #0
 800130e:	d0e5      	beq.n	80012dc <__ledf2+0x80>
 8001310:	0008      	movs	r0, r1
 8001312:	e7dd      	b.n	80012d0 <__ledf2+0x74>
 8001314:	45c4      	cmp	ip, r8
 8001316:	d8d5      	bhi.n	80012c4 <__ledf2+0x68>
 8001318:	2000      	movs	r0, #0
 800131a:	45c4      	cmp	ip, r8
 800131c:	d2d8      	bcs.n	80012d0 <__ledf2+0x74>
 800131e:	e7f5      	b.n	800130c <__ledf2+0xb0>
 8001320:	000007ff 	.word	0x000007ff

08001324 <__aeabi_dmul>:
 8001324:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001326:	4657      	mov	r7, sl
 8001328:	464e      	mov	r6, r9
 800132a:	4645      	mov	r5, r8
 800132c:	46de      	mov	lr, fp
 800132e:	b5e0      	push	{r5, r6, r7, lr}
 8001330:	4698      	mov	r8, r3
 8001332:	030c      	lsls	r4, r1, #12
 8001334:	004b      	lsls	r3, r1, #1
 8001336:	0006      	movs	r6, r0
 8001338:	4692      	mov	sl, r2
 800133a:	b087      	sub	sp, #28
 800133c:	0b24      	lsrs	r4, r4, #12
 800133e:	0d5b      	lsrs	r3, r3, #21
 8001340:	0fcf      	lsrs	r7, r1, #31
 8001342:	2b00      	cmp	r3, #0
 8001344:	d100      	bne.n	8001348 <__aeabi_dmul+0x24>
 8001346:	e15c      	b.n	8001602 <__aeabi_dmul+0x2de>
 8001348:	4ad9      	ldr	r2, [pc, #868]	; (80016b0 <__aeabi_dmul+0x38c>)
 800134a:	4293      	cmp	r3, r2
 800134c:	d100      	bne.n	8001350 <__aeabi_dmul+0x2c>
 800134e:	e175      	b.n	800163c <__aeabi_dmul+0x318>
 8001350:	0f42      	lsrs	r2, r0, #29
 8001352:	00e4      	lsls	r4, r4, #3
 8001354:	4314      	orrs	r4, r2
 8001356:	2280      	movs	r2, #128	; 0x80
 8001358:	0412      	lsls	r2, r2, #16
 800135a:	4314      	orrs	r4, r2
 800135c:	4ad5      	ldr	r2, [pc, #852]	; (80016b4 <__aeabi_dmul+0x390>)
 800135e:	00c5      	lsls	r5, r0, #3
 8001360:	4694      	mov	ip, r2
 8001362:	4463      	add	r3, ip
 8001364:	9300      	str	r3, [sp, #0]
 8001366:	2300      	movs	r3, #0
 8001368:	4699      	mov	r9, r3
 800136a:	469b      	mov	fp, r3
 800136c:	4643      	mov	r3, r8
 800136e:	4642      	mov	r2, r8
 8001370:	031e      	lsls	r6, r3, #12
 8001372:	0fd2      	lsrs	r2, r2, #31
 8001374:	005b      	lsls	r3, r3, #1
 8001376:	4650      	mov	r0, sl
 8001378:	4690      	mov	r8, r2
 800137a:	0b36      	lsrs	r6, r6, #12
 800137c:	0d5b      	lsrs	r3, r3, #21
 800137e:	d100      	bne.n	8001382 <__aeabi_dmul+0x5e>
 8001380:	e120      	b.n	80015c4 <__aeabi_dmul+0x2a0>
 8001382:	4acb      	ldr	r2, [pc, #812]	; (80016b0 <__aeabi_dmul+0x38c>)
 8001384:	4293      	cmp	r3, r2
 8001386:	d100      	bne.n	800138a <__aeabi_dmul+0x66>
 8001388:	e162      	b.n	8001650 <__aeabi_dmul+0x32c>
 800138a:	49ca      	ldr	r1, [pc, #808]	; (80016b4 <__aeabi_dmul+0x390>)
 800138c:	0f42      	lsrs	r2, r0, #29
 800138e:	468c      	mov	ip, r1
 8001390:	9900      	ldr	r1, [sp, #0]
 8001392:	4463      	add	r3, ip
 8001394:	00f6      	lsls	r6, r6, #3
 8001396:	468c      	mov	ip, r1
 8001398:	4316      	orrs	r6, r2
 800139a:	2280      	movs	r2, #128	; 0x80
 800139c:	449c      	add	ip, r3
 800139e:	0412      	lsls	r2, r2, #16
 80013a0:	4663      	mov	r3, ip
 80013a2:	4316      	orrs	r6, r2
 80013a4:	00c2      	lsls	r2, r0, #3
 80013a6:	2000      	movs	r0, #0
 80013a8:	9300      	str	r3, [sp, #0]
 80013aa:	9900      	ldr	r1, [sp, #0]
 80013ac:	4643      	mov	r3, r8
 80013ae:	3101      	adds	r1, #1
 80013b0:	468c      	mov	ip, r1
 80013b2:	4649      	mov	r1, r9
 80013b4:	407b      	eors	r3, r7
 80013b6:	9301      	str	r3, [sp, #4]
 80013b8:	290f      	cmp	r1, #15
 80013ba:	d826      	bhi.n	800140a <__aeabi_dmul+0xe6>
 80013bc:	4bbe      	ldr	r3, [pc, #760]	; (80016b8 <__aeabi_dmul+0x394>)
 80013be:	0089      	lsls	r1, r1, #2
 80013c0:	5859      	ldr	r1, [r3, r1]
 80013c2:	468f      	mov	pc, r1
 80013c4:	4643      	mov	r3, r8
 80013c6:	9301      	str	r3, [sp, #4]
 80013c8:	0034      	movs	r4, r6
 80013ca:	0015      	movs	r5, r2
 80013cc:	4683      	mov	fp, r0
 80013ce:	465b      	mov	r3, fp
 80013d0:	2b02      	cmp	r3, #2
 80013d2:	d016      	beq.n	8001402 <__aeabi_dmul+0xde>
 80013d4:	2b03      	cmp	r3, #3
 80013d6:	d100      	bne.n	80013da <__aeabi_dmul+0xb6>
 80013d8:	e203      	b.n	80017e2 <__aeabi_dmul+0x4be>
 80013da:	2b01      	cmp	r3, #1
 80013dc:	d000      	beq.n	80013e0 <__aeabi_dmul+0xbc>
 80013de:	e0cd      	b.n	800157c <__aeabi_dmul+0x258>
 80013e0:	2200      	movs	r2, #0
 80013e2:	2400      	movs	r4, #0
 80013e4:	2500      	movs	r5, #0
 80013e6:	9b01      	ldr	r3, [sp, #4]
 80013e8:	0512      	lsls	r2, r2, #20
 80013ea:	4322      	orrs	r2, r4
 80013ec:	07db      	lsls	r3, r3, #31
 80013ee:	431a      	orrs	r2, r3
 80013f0:	0028      	movs	r0, r5
 80013f2:	0011      	movs	r1, r2
 80013f4:	b007      	add	sp, #28
 80013f6:	bcf0      	pop	{r4, r5, r6, r7}
 80013f8:	46bb      	mov	fp, r7
 80013fa:	46b2      	mov	sl, r6
 80013fc:	46a9      	mov	r9, r5
 80013fe:	46a0      	mov	r8, r4
 8001400:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001402:	2400      	movs	r4, #0
 8001404:	2500      	movs	r5, #0
 8001406:	4aaa      	ldr	r2, [pc, #680]	; (80016b0 <__aeabi_dmul+0x38c>)
 8001408:	e7ed      	b.n	80013e6 <__aeabi_dmul+0xc2>
 800140a:	0c28      	lsrs	r0, r5, #16
 800140c:	042d      	lsls	r5, r5, #16
 800140e:	0c2d      	lsrs	r5, r5, #16
 8001410:	002b      	movs	r3, r5
 8001412:	0c11      	lsrs	r1, r2, #16
 8001414:	0412      	lsls	r2, r2, #16
 8001416:	0c12      	lsrs	r2, r2, #16
 8001418:	4353      	muls	r3, r2
 800141a:	4698      	mov	r8, r3
 800141c:	0013      	movs	r3, r2
 800141e:	002f      	movs	r7, r5
 8001420:	4343      	muls	r3, r0
 8001422:	4699      	mov	r9, r3
 8001424:	434f      	muls	r7, r1
 8001426:	444f      	add	r7, r9
 8001428:	46bb      	mov	fp, r7
 800142a:	4647      	mov	r7, r8
 800142c:	000b      	movs	r3, r1
 800142e:	0c3f      	lsrs	r7, r7, #16
 8001430:	46ba      	mov	sl, r7
 8001432:	4343      	muls	r3, r0
 8001434:	44da      	add	sl, fp
 8001436:	9302      	str	r3, [sp, #8]
 8001438:	45d1      	cmp	r9, sl
 800143a:	d904      	bls.n	8001446 <__aeabi_dmul+0x122>
 800143c:	2780      	movs	r7, #128	; 0x80
 800143e:	027f      	lsls	r7, r7, #9
 8001440:	46b9      	mov	r9, r7
 8001442:	444b      	add	r3, r9
 8001444:	9302      	str	r3, [sp, #8]
 8001446:	4653      	mov	r3, sl
 8001448:	0c1b      	lsrs	r3, r3, #16
 800144a:	469b      	mov	fp, r3
 800144c:	4653      	mov	r3, sl
 800144e:	041f      	lsls	r7, r3, #16
 8001450:	4643      	mov	r3, r8
 8001452:	041b      	lsls	r3, r3, #16
 8001454:	0c1b      	lsrs	r3, r3, #16
 8001456:	4698      	mov	r8, r3
 8001458:	003b      	movs	r3, r7
 800145a:	4443      	add	r3, r8
 800145c:	9304      	str	r3, [sp, #16]
 800145e:	0c33      	lsrs	r3, r6, #16
 8001460:	0436      	lsls	r6, r6, #16
 8001462:	0c36      	lsrs	r6, r6, #16
 8001464:	4698      	mov	r8, r3
 8001466:	0033      	movs	r3, r6
 8001468:	4343      	muls	r3, r0
 800146a:	4699      	mov	r9, r3
 800146c:	4643      	mov	r3, r8
 800146e:	4343      	muls	r3, r0
 8001470:	002f      	movs	r7, r5
 8001472:	469a      	mov	sl, r3
 8001474:	4643      	mov	r3, r8
 8001476:	4377      	muls	r7, r6
 8001478:	435d      	muls	r5, r3
 800147a:	0c38      	lsrs	r0, r7, #16
 800147c:	444d      	add	r5, r9
 800147e:	1945      	adds	r5, r0, r5
 8001480:	45a9      	cmp	r9, r5
 8001482:	d903      	bls.n	800148c <__aeabi_dmul+0x168>
 8001484:	2380      	movs	r3, #128	; 0x80
 8001486:	025b      	lsls	r3, r3, #9
 8001488:	4699      	mov	r9, r3
 800148a:	44ca      	add	sl, r9
 800148c:	043f      	lsls	r7, r7, #16
 800148e:	0c28      	lsrs	r0, r5, #16
 8001490:	0c3f      	lsrs	r7, r7, #16
 8001492:	042d      	lsls	r5, r5, #16
 8001494:	19ed      	adds	r5, r5, r7
 8001496:	0c27      	lsrs	r7, r4, #16
 8001498:	0424      	lsls	r4, r4, #16
 800149a:	0c24      	lsrs	r4, r4, #16
 800149c:	0003      	movs	r3, r0
 800149e:	0020      	movs	r0, r4
 80014a0:	4350      	muls	r0, r2
 80014a2:	437a      	muls	r2, r7
 80014a4:	4691      	mov	r9, r2
 80014a6:	003a      	movs	r2, r7
 80014a8:	4453      	add	r3, sl
 80014aa:	9305      	str	r3, [sp, #20]
 80014ac:	0c03      	lsrs	r3, r0, #16
 80014ae:	469a      	mov	sl, r3
 80014b0:	434a      	muls	r2, r1
 80014b2:	4361      	muls	r1, r4
 80014b4:	4449      	add	r1, r9
 80014b6:	4451      	add	r1, sl
 80014b8:	44ab      	add	fp, r5
 80014ba:	4589      	cmp	r9, r1
 80014bc:	d903      	bls.n	80014c6 <__aeabi_dmul+0x1a2>
 80014be:	2380      	movs	r3, #128	; 0x80
 80014c0:	025b      	lsls	r3, r3, #9
 80014c2:	4699      	mov	r9, r3
 80014c4:	444a      	add	r2, r9
 80014c6:	0400      	lsls	r0, r0, #16
 80014c8:	0c0b      	lsrs	r3, r1, #16
 80014ca:	0c00      	lsrs	r0, r0, #16
 80014cc:	0409      	lsls	r1, r1, #16
 80014ce:	1809      	adds	r1, r1, r0
 80014d0:	0020      	movs	r0, r4
 80014d2:	4699      	mov	r9, r3
 80014d4:	4643      	mov	r3, r8
 80014d6:	4370      	muls	r0, r6
 80014d8:	435c      	muls	r4, r3
 80014da:	437e      	muls	r6, r7
 80014dc:	435f      	muls	r7, r3
 80014de:	0c03      	lsrs	r3, r0, #16
 80014e0:	4698      	mov	r8, r3
 80014e2:	19a4      	adds	r4, r4, r6
 80014e4:	4444      	add	r4, r8
 80014e6:	444a      	add	r2, r9
 80014e8:	9703      	str	r7, [sp, #12]
 80014ea:	42a6      	cmp	r6, r4
 80014ec:	d904      	bls.n	80014f8 <__aeabi_dmul+0x1d4>
 80014ee:	2380      	movs	r3, #128	; 0x80
 80014f0:	025b      	lsls	r3, r3, #9
 80014f2:	4698      	mov	r8, r3
 80014f4:	4447      	add	r7, r8
 80014f6:	9703      	str	r7, [sp, #12]
 80014f8:	0423      	lsls	r3, r4, #16
 80014fa:	9e02      	ldr	r6, [sp, #8]
 80014fc:	469a      	mov	sl, r3
 80014fe:	9b05      	ldr	r3, [sp, #20]
 8001500:	445e      	add	r6, fp
 8001502:	4698      	mov	r8, r3
 8001504:	42ae      	cmp	r6, r5
 8001506:	41ad      	sbcs	r5, r5
 8001508:	1876      	adds	r6, r6, r1
 800150a:	428e      	cmp	r6, r1
 800150c:	4189      	sbcs	r1, r1
 800150e:	0400      	lsls	r0, r0, #16
 8001510:	0c00      	lsrs	r0, r0, #16
 8001512:	4450      	add	r0, sl
 8001514:	4440      	add	r0, r8
 8001516:	426d      	negs	r5, r5
 8001518:	1947      	adds	r7, r0, r5
 800151a:	46b8      	mov	r8, r7
 800151c:	4693      	mov	fp, r2
 800151e:	4249      	negs	r1, r1
 8001520:	4689      	mov	r9, r1
 8001522:	44c3      	add	fp, r8
 8001524:	44d9      	add	r9, fp
 8001526:	4298      	cmp	r0, r3
 8001528:	4180      	sbcs	r0, r0
 800152a:	45a8      	cmp	r8, r5
 800152c:	41ad      	sbcs	r5, r5
 800152e:	4593      	cmp	fp, r2
 8001530:	4192      	sbcs	r2, r2
 8001532:	4589      	cmp	r9, r1
 8001534:	4189      	sbcs	r1, r1
 8001536:	426d      	negs	r5, r5
 8001538:	4240      	negs	r0, r0
 800153a:	4328      	orrs	r0, r5
 800153c:	0c24      	lsrs	r4, r4, #16
 800153e:	4252      	negs	r2, r2
 8001540:	4249      	negs	r1, r1
 8001542:	430a      	orrs	r2, r1
 8001544:	9b03      	ldr	r3, [sp, #12]
 8001546:	1900      	adds	r0, r0, r4
 8001548:	1880      	adds	r0, r0, r2
 800154a:	18c7      	adds	r7, r0, r3
 800154c:	464b      	mov	r3, r9
 800154e:	0ddc      	lsrs	r4, r3, #23
 8001550:	9b04      	ldr	r3, [sp, #16]
 8001552:	0275      	lsls	r5, r6, #9
 8001554:	431d      	orrs	r5, r3
 8001556:	1e6a      	subs	r2, r5, #1
 8001558:	4195      	sbcs	r5, r2
 800155a:	464b      	mov	r3, r9
 800155c:	0df6      	lsrs	r6, r6, #23
 800155e:	027f      	lsls	r7, r7, #9
 8001560:	4335      	orrs	r5, r6
 8001562:	025a      	lsls	r2, r3, #9
 8001564:	433c      	orrs	r4, r7
 8001566:	4315      	orrs	r5, r2
 8001568:	01fb      	lsls	r3, r7, #7
 800156a:	d400      	bmi.n	800156e <__aeabi_dmul+0x24a>
 800156c:	e11c      	b.n	80017a8 <__aeabi_dmul+0x484>
 800156e:	2101      	movs	r1, #1
 8001570:	086a      	lsrs	r2, r5, #1
 8001572:	400d      	ands	r5, r1
 8001574:	4315      	orrs	r5, r2
 8001576:	07e2      	lsls	r2, r4, #31
 8001578:	4315      	orrs	r5, r2
 800157a:	0864      	lsrs	r4, r4, #1
 800157c:	494f      	ldr	r1, [pc, #316]	; (80016bc <__aeabi_dmul+0x398>)
 800157e:	4461      	add	r1, ip
 8001580:	2900      	cmp	r1, #0
 8001582:	dc00      	bgt.n	8001586 <__aeabi_dmul+0x262>
 8001584:	e0b0      	b.n	80016e8 <__aeabi_dmul+0x3c4>
 8001586:	076b      	lsls	r3, r5, #29
 8001588:	d009      	beq.n	800159e <__aeabi_dmul+0x27a>
 800158a:	220f      	movs	r2, #15
 800158c:	402a      	ands	r2, r5
 800158e:	2a04      	cmp	r2, #4
 8001590:	d005      	beq.n	800159e <__aeabi_dmul+0x27a>
 8001592:	1d2a      	adds	r2, r5, #4
 8001594:	42aa      	cmp	r2, r5
 8001596:	41ad      	sbcs	r5, r5
 8001598:	426d      	negs	r5, r5
 800159a:	1964      	adds	r4, r4, r5
 800159c:	0015      	movs	r5, r2
 800159e:	01e3      	lsls	r3, r4, #7
 80015a0:	d504      	bpl.n	80015ac <__aeabi_dmul+0x288>
 80015a2:	2180      	movs	r1, #128	; 0x80
 80015a4:	4a46      	ldr	r2, [pc, #280]	; (80016c0 <__aeabi_dmul+0x39c>)
 80015a6:	00c9      	lsls	r1, r1, #3
 80015a8:	4014      	ands	r4, r2
 80015aa:	4461      	add	r1, ip
 80015ac:	4a45      	ldr	r2, [pc, #276]	; (80016c4 <__aeabi_dmul+0x3a0>)
 80015ae:	4291      	cmp	r1, r2
 80015b0:	dd00      	ble.n	80015b4 <__aeabi_dmul+0x290>
 80015b2:	e726      	b.n	8001402 <__aeabi_dmul+0xde>
 80015b4:	0762      	lsls	r2, r4, #29
 80015b6:	08ed      	lsrs	r5, r5, #3
 80015b8:	0264      	lsls	r4, r4, #9
 80015ba:	0549      	lsls	r1, r1, #21
 80015bc:	4315      	orrs	r5, r2
 80015be:	0b24      	lsrs	r4, r4, #12
 80015c0:	0d4a      	lsrs	r2, r1, #21
 80015c2:	e710      	b.n	80013e6 <__aeabi_dmul+0xc2>
 80015c4:	4652      	mov	r2, sl
 80015c6:	4332      	orrs	r2, r6
 80015c8:	d100      	bne.n	80015cc <__aeabi_dmul+0x2a8>
 80015ca:	e07f      	b.n	80016cc <__aeabi_dmul+0x3a8>
 80015cc:	2e00      	cmp	r6, #0
 80015ce:	d100      	bne.n	80015d2 <__aeabi_dmul+0x2ae>
 80015d0:	e0dc      	b.n	800178c <__aeabi_dmul+0x468>
 80015d2:	0030      	movs	r0, r6
 80015d4:	f000 fd4e 	bl	8002074 <__clzsi2>
 80015d8:	0002      	movs	r2, r0
 80015da:	3a0b      	subs	r2, #11
 80015dc:	231d      	movs	r3, #29
 80015de:	0001      	movs	r1, r0
 80015e0:	1a9b      	subs	r3, r3, r2
 80015e2:	4652      	mov	r2, sl
 80015e4:	3908      	subs	r1, #8
 80015e6:	40da      	lsrs	r2, r3
 80015e8:	408e      	lsls	r6, r1
 80015ea:	4316      	orrs	r6, r2
 80015ec:	4652      	mov	r2, sl
 80015ee:	408a      	lsls	r2, r1
 80015f0:	9b00      	ldr	r3, [sp, #0]
 80015f2:	4935      	ldr	r1, [pc, #212]	; (80016c8 <__aeabi_dmul+0x3a4>)
 80015f4:	1a18      	subs	r0, r3, r0
 80015f6:	0003      	movs	r3, r0
 80015f8:	468c      	mov	ip, r1
 80015fa:	4463      	add	r3, ip
 80015fc:	2000      	movs	r0, #0
 80015fe:	9300      	str	r3, [sp, #0]
 8001600:	e6d3      	b.n	80013aa <__aeabi_dmul+0x86>
 8001602:	0025      	movs	r5, r4
 8001604:	4305      	orrs	r5, r0
 8001606:	d04a      	beq.n	800169e <__aeabi_dmul+0x37a>
 8001608:	2c00      	cmp	r4, #0
 800160a:	d100      	bne.n	800160e <__aeabi_dmul+0x2ea>
 800160c:	e0b0      	b.n	8001770 <__aeabi_dmul+0x44c>
 800160e:	0020      	movs	r0, r4
 8001610:	f000 fd30 	bl	8002074 <__clzsi2>
 8001614:	0001      	movs	r1, r0
 8001616:	0002      	movs	r2, r0
 8001618:	390b      	subs	r1, #11
 800161a:	231d      	movs	r3, #29
 800161c:	0010      	movs	r0, r2
 800161e:	1a5b      	subs	r3, r3, r1
 8001620:	0031      	movs	r1, r6
 8001622:	0035      	movs	r5, r6
 8001624:	3808      	subs	r0, #8
 8001626:	4084      	lsls	r4, r0
 8001628:	40d9      	lsrs	r1, r3
 800162a:	4085      	lsls	r5, r0
 800162c:	430c      	orrs	r4, r1
 800162e:	4826      	ldr	r0, [pc, #152]	; (80016c8 <__aeabi_dmul+0x3a4>)
 8001630:	1a83      	subs	r3, r0, r2
 8001632:	9300      	str	r3, [sp, #0]
 8001634:	2300      	movs	r3, #0
 8001636:	4699      	mov	r9, r3
 8001638:	469b      	mov	fp, r3
 800163a:	e697      	b.n	800136c <__aeabi_dmul+0x48>
 800163c:	0005      	movs	r5, r0
 800163e:	4325      	orrs	r5, r4
 8001640:	d126      	bne.n	8001690 <__aeabi_dmul+0x36c>
 8001642:	2208      	movs	r2, #8
 8001644:	9300      	str	r3, [sp, #0]
 8001646:	2302      	movs	r3, #2
 8001648:	2400      	movs	r4, #0
 800164a:	4691      	mov	r9, r2
 800164c:	469b      	mov	fp, r3
 800164e:	e68d      	b.n	800136c <__aeabi_dmul+0x48>
 8001650:	4652      	mov	r2, sl
 8001652:	9b00      	ldr	r3, [sp, #0]
 8001654:	4332      	orrs	r2, r6
 8001656:	d110      	bne.n	800167a <__aeabi_dmul+0x356>
 8001658:	4915      	ldr	r1, [pc, #84]	; (80016b0 <__aeabi_dmul+0x38c>)
 800165a:	2600      	movs	r6, #0
 800165c:	468c      	mov	ip, r1
 800165e:	4463      	add	r3, ip
 8001660:	4649      	mov	r1, r9
 8001662:	9300      	str	r3, [sp, #0]
 8001664:	2302      	movs	r3, #2
 8001666:	4319      	orrs	r1, r3
 8001668:	4689      	mov	r9, r1
 800166a:	2002      	movs	r0, #2
 800166c:	e69d      	b.n	80013aa <__aeabi_dmul+0x86>
 800166e:	465b      	mov	r3, fp
 8001670:	9701      	str	r7, [sp, #4]
 8001672:	2b02      	cmp	r3, #2
 8001674:	d000      	beq.n	8001678 <__aeabi_dmul+0x354>
 8001676:	e6ad      	b.n	80013d4 <__aeabi_dmul+0xb0>
 8001678:	e6c3      	b.n	8001402 <__aeabi_dmul+0xde>
 800167a:	4a0d      	ldr	r2, [pc, #52]	; (80016b0 <__aeabi_dmul+0x38c>)
 800167c:	2003      	movs	r0, #3
 800167e:	4694      	mov	ip, r2
 8001680:	4463      	add	r3, ip
 8001682:	464a      	mov	r2, r9
 8001684:	9300      	str	r3, [sp, #0]
 8001686:	2303      	movs	r3, #3
 8001688:	431a      	orrs	r2, r3
 800168a:	4691      	mov	r9, r2
 800168c:	4652      	mov	r2, sl
 800168e:	e68c      	b.n	80013aa <__aeabi_dmul+0x86>
 8001690:	220c      	movs	r2, #12
 8001692:	9300      	str	r3, [sp, #0]
 8001694:	2303      	movs	r3, #3
 8001696:	0005      	movs	r5, r0
 8001698:	4691      	mov	r9, r2
 800169a:	469b      	mov	fp, r3
 800169c:	e666      	b.n	800136c <__aeabi_dmul+0x48>
 800169e:	2304      	movs	r3, #4
 80016a0:	4699      	mov	r9, r3
 80016a2:	2300      	movs	r3, #0
 80016a4:	9300      	str	r3, [sp, #0]
 80016a6:	3301      	adds	r3, #1
 80016a8:	2400      	movs	r4, #0
 80016aa:	469b      	mov	fp, r3
 80016ac:	e65e      	b.n	800136c <__aeabi_dmul+0x48>
 80016ae:	46c0      	nop			; (mov r8, r8)
 80016b0:	000007ff 	.word	0x000007ff
 80016b4:	fffffc01 	.word	0xfffffc01
 80016b8:	08006d84 	.word	0x08006d84
 80016bc:	000003ff 	.word	0x000003ff
 80016c0:	feffffff 	.word	0xfeffffff
 80016c4:	000007fe 	.word	0x000007fe
 80016c8:	fffffc0d 	.word	0xfffffc0d
 80016cc:	4649      	mov	r1, r9
 80016ce:	2301      	movs	r3, #1
 80016d0:	4319      	orrs	r1, r3
 80016d2:	4689      	mov	r9, r1
 80016d4:	2600      	movs	r6, #0
 80016d6:	2001      	movs	r0, #1
 80016d8:	e667      	b.n	80013aa <__aeabi_dmul+0x86>
 80016da:	2300      	movs	r3, #0
 80016dc:	2480      	movs	r4, #128	; 0x80
 80016de:	2500      	movs	r5, #0
 80016e0:	4a43      	ldr	r2, [pc, #268]	; (80017f0 <__aeabi_dmul+0x4cc>)
 80016e2:	9301      	str	r3, [sp, #4]
 80016e4:	0324      	lsls	r4, r4, #12
 80016e6:	e67e      	b.n	80013e6 <__aeabi_dmul+0xc2>
 80016e8:	2001      	movs	r0, #1
 80016ea:	1a40      	subs	r0, r0, r1
 80016ec:	2838      	cmp	r0, #56	; 0x38
 80016ee:	dd00      	ble.n	80016f2 <__aeabi_dmul+0x3ce>
 80016f0:	e676      	b.n	80013e0 <__aeabi_dmul+0xbc>
 80016f2:	281f      	cmp	r0, #31
 80016f4:	dd5b      	ble.n	80017ae <__aeabi_dmul+0x48a>
 80016f6:	221f      	movs	r2, #31
 80016f8:	0023      	movs	r3, r4
 80016fa:	4252      	negs	r2, r2
 80016fc:	1a51      	subs	r1, r2, r1
 80016fe:	40cb      	lsrs	r3, r1
 8001700:	0019      	movs	r1, r3
 8001702:	2820      	cmp	r0, #32
 8001704:	d003      	beq.n	800170e <__aeabi_dmul+0x3ea>
 8001706:	4a3b      	ldr	r2, [pc, #236]	; (80017f4 <__aeabi_dmul+0x4d0>)
 8001708:	4462      	add	r2, ip
 800170a:	4094      	lsls	r4, r2
 800170c:	4325      	orrs	r5, r4
 800170e:	1e6a      	subs	r2, r5, #1
 8001710:	4195      	sbcs	r5, r2
 8001712:	002a      	movs	r2, r5
 8001714:	430a      	orrs	r2, r1
 8001716:	2107      	movs	r1, #7
 8001718:	000d      	movs	r5, r1
 800171a:	2400      	movs	r4, #0
 800171c:	4015      	ands	r5, r2
 800171e:	4211      	tst	r1, r2
 8001720:	d05b      	beq.n	80017da <__aeabi_dmul+0x4b6>
 8001722:	210f      	movs	r1, #15
 8001724:	2400      	movs	r4, #0
 8001726:	4011      	ands	r1, r2
 8001728:	2904      	cmp	r1, #4
 800172a:	d053      	beq.n	80017d4 <__aeabi_dmul+0x4b0>
 800172c:	1d11      	adds	r1, r2, #4
 800172e:	4291      	cmp	r1, r2
 8001730:	4192      	sbcs	r2, r2
 8001732:	4252      	negs	r2, r2
 8001734:	18a4      	adds	r4, r4, r2
 8001736:	000a      	movs	r2, r1
 8001738:	0223      	lsls	r3, r4, #8
 800173a:	d54b      	bpl.n	80017d4 <__aeabi_dmul+0x4b0>
 800173c:	2201      	movs	r2, #1
 800173e:	2400      	movs	r4, #0
 8001740:	2500      	movs	r5, #0
 8001742:	e650      	b.n	80013e6 <__aeabi_dmul+0xc2>
 8001744:	2380      	movs	r3, #128	; 0x80
 8001746:	031b      	lsls	r3, r3, #12
 8001748:	421c      	tst	r4, r3
 800174a:	d009      	beq.n	8001760 <__aeabi_dmul+0x43c>
 800174c:	421e      	tst	r6, r3
 800174e:	d107      	bne.n	8001760 <__aeabi_dmul+0x43c>
 8001750:	4333      	orrs	r3, r6
 8001752:	031c      	lsls	r4, r3, #12
 8001754:	4643      	mov	r3, r8
 8001756:	0015      	movs	r5, r2
 8001758:	0b24      	lsrs	r4, r4, #12
 800175a:	4a25      	ldr	r2, [pc, #148]	; (80017f0 <__aeabi_dmul+0x4cc>)
 800175c:	9301      	str	r3, [sp, #4]
 800175e:	e642      	b.n	80013e6 <__aeabi_dmul+0xc2>
 8001760:	2280      	movs	r2, #128	; 0x80
 8001762:	0312      	lsls	r2, r2, #12
 8001764:	4314      	orrs	r4, r2
 8001766:	0324      	lsls	r4, r4, #12
 8001768:	4a21      	ldr	r2, [pc, #132]	; (80017f0 <__aeabi_dmul+0x4cc>)
 800176a:	0b24      	lsrs	r4, r4, #12
 800176c:	9701      	str	r7, [sp, #4]
 800176e:	e63a      	b.n	80013e6 <__aeabi_dmul+0xc2>
 8001770:	f000 fc80 	bl	8002074 <__clzsi2>
 8001774:	0001      	movs	r1, r0
 8001776:	0002      	movs	r2, r0
 8001778:	3115      	adds	r1, #21
 800177a:	3220      	adds	r2, #32
 800177c:	291c      	cmp	r1, #28
 800177e:	dc00      	bgt.n	8001782 <__aeabi_dmul+0x45e>
 8001780:	e74b      	b.n	800161a <__aeabi_dmul+0x2f6>
 8001782:	0034      	movs	r4, r6
 8001784:	3808      	subs	r0, #8
 8001786:	2500      	movs	r5, #0
 8001788:	4084      	lsls	r4, r0
 800178a:	e750      	b.n	800162e <__aeabi_dmul+0x30a>
 800178c:	f000 fc72 	bl	8002074 <__clzsi2>
 8001790:	0003      	movs	r3, r0
 8001792:	001a      	movs	r2, r3
 8001794:	3215      	adds	r2, #21
 8001796:	3020      	adds	r0, #32
 8001798:	2a1c      	cmp	r2, #28
 800179a:	dc00      	bgt.n	800179e <__aeabi_dmul+0x47a>
 800179c:	e71e      	b.n	80015dc <__aeabi_dmul+0x2b8>
 800179e:	4656      	mov	r6, sl
 80017a0:	3b08      	subs	r3, #8
 80017a2:	2200      	movs	r2, #0
 80017a4:	409e      	lsls	r6, r3
 80017a6:	e723      	b.n	80015f0 <__aeabi_dmul+0x2cc>
 80017a8:	9b00      	ldr	r3, [sp, #0]
 80017aa:	469c      	mov	ip, r3
 80017ac:	e6e6      	b.n	800157c <__aeabi_dmul+0x258>
 80017ae:	4912      	ldr	r1, [pc, #72]	; (80017f8 <__aeabi_dmul+0x4d4>)
 80017b0:	0022      	movs	r2, r4
 80017b2:	4461      	add	r1, ip
 80017b4:	002e      	movs	r6, r5
 80017b6:	408d      	lsls	r5, r1
 80017b8:	408a      	lsls	r2, r1
 80017ba:	40c6      	lsrs	r6, r0
 80017bc:	1e69      	subs	r1, r5, #1
 80017be:	418d      	sbcs	r5, r1
 80017c0:	4332      	orrs	r2, r6
 80017c2:	432a      	orrs	r2, r5
 80017c4:	40c4      	lsrs	r4, r0
 80017c6:	0753      	lsls	r3, r2, #29
 80017c8:	d0b6      	beq.n	8001738 <__aeabi_dmul+0x414>
 80017ca:	210f      	movs	r1, #15
 80017cc:	4011      	ands	r1, r2
 80017ce:	2904      	cmp	r1, #4
 80017d0:	d1ac      	bne.n	800172c <__aeabi_dmul+0x408>
 80017d2:	e7b1      	b.n	8001738 <__aeabi_dmul+0x414>
 80017d4:	0765      	lsls	r5, r4, #29
 80017d6:	0264      	lsls	r4, r4, #9
 80017d8:	0b24      	lsrs	r4, r4, #12
 80017da:	08d2      	lsrs	r2, r2, #3
 80017dc:	4315      	orrs	r5, r2
 80017de:	2200      	movs	r2, #0
 80017e0:	e601      	b.n	80013e6 <__aeabi_dmul+0xc2>
 80017e2:	2280      	movs	r2, #128	; 0x80
 80017e4:	0312      	lsls	r2, r2, #12
 80017e6:	4314      	orrs	r4, r2
 80017e8:	0324      	lsls	r4, r4, #12
 80017ea:	4a01      	ldr	r2, [pc, #4]	; (80017f0 <__aeabi_dmul+0x4cc>)
 80017ec:	0b24      	lsrs	r4, r4, #12
 80017ee:	e5fa      	b.n	80013e6 <__aeabi_dmul+0xc2>
 80017f0:	000007ff 	.word	0x000007ff
 80017f4:	0000043e 	.word	0x0000043e
 80017f8:	0000041e 	.word	0x0000041e

080017fc <__aeabi_dsub>:
 80017fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80017fe:	4657      	mov	r7, sl
 8001800:	464e      	mov	r6, r9
 8001802:	4645      	mov	r5, r8
 8001804:	46de      	mov	lr, fp
 8001806:	b5e0      	push	{r5, r6, r7, lr}
 8001808:	001e      	movs	r6, r3
 800180a:	0017      	movs	r7, r2
 800180c:	004a      	lsls	r2, r1, #1
 800180e:	030b      	lsls	r3, r1, #12
 8001810:	0d52      	lsrs	r2, r2, #21
 8001812:	0a5b      	lsrs	r3, r3, #9
 8001814:	4690      	mov	r8, r2
 8001816:	0f42      	lsrs	r2, r0, #29
 8001818:	431a      	orrs	r2, r3
 800181a:	0fcd      	lsrs	r5, r1, #31
 800181c:	4ccd      	ldr	r4, [pc, #820]	; (8001b54 <__aeabi_dsub+0x358>)
 800181e:	0331      	lsls	r1, r6, #12
 8001820:	00c3      	lsls	r3, r0, #3
 8001822:	4694      	mov	ip, r2
 8001824:	0070      	lsls	r0, r6, #1
 8001826:	0f7a      	lsrs	r2, r7, #29
 8001828:	0a49      	lsrs	r1, r1, #9
 800182a:	00ff      	lsls	r7, r7, #3
 800182c:	469a      	mov	sl, r3
 800182e:	46b9      	mov	r9, r7
 8001830:	0d40      	lsrs	r0, r0, #21
 8001832:	0ff6      	lsrs	r6, r6, #31
 8001834:	4311      	orrs	r1, r2
 8001836:	42a0      	cmp	r0, r4
 8001838:	d100      	bne.n	800183c <__aeabi_dsub+0x40>
 800183a:	e0b1      	b.n	80019a0 <__aeabi_dsub+0x1a4>
 800183c:	2201      	movs	r2, #1
 800183e:	4056      	eors	r6, r2
 8001840:	46b3      	mov	fp, r6
 8001842:	42b5      	cmp	r5, r6
 8001844:	d100      	bne.n	8001848 <__aeabi_dsub+0x4c>
 8001846:	e088      	b.n	800195a <__aeabi_dsub+0x15e>
 8001848:	4642      	mov	r2, r8
 800184a:	1a12      	subs	r2, r2, r0
 800184c:	2a00      	cmp	r2, #0
 800184e:	dc00      	bgt.n	8001852 <__aeabi_dsub+0x56>
 8001850:	e0ae      	b.n	80019b0 <__aeabi_dsub+0x1b4>
 8001852:	2800      	cmp	r0, #0
 8001854:	d100      	bne.n	8001858 <__aeabi_dsub+0x5c>
 8001856:	e0c1      	b.n	80019dc <__aeabi_dsub+0x1e0>
 8001858:	48be      	ldr	r0, [pc, #760]	; (8001b54 <__aeabi_dsub+0x358>)
 800185a:	4580      	cmp	r8, r0
 800185c:	d100      	bne.n	8001860 <__aeabi_dsub+0x64>
 800185e:	e151      	b.n	8001b04 <__aeabi_dsub+0x308>
 8001860:	2080      	movs	r0, #128	; 0x80
 8001862:	0400      	lsls	r0, r0, #16
 8001864:	4301      	orrs	r1, r0
 8001866:	2a38      	cmp	r2, #56	; 0x38
 8001868:	dd00      	ble.n	800186c <__aeabi_dsub+0x70>
 800186a:	e17b      	b.n	8001b64 <__aeabi_dsub+0x368>
 800186c:	2a1f      	cmp	r2, #31
 800186e:	dd00      	ble.n	8001872 <__aeabi_dsub+0x76>
 8001870:	e1ee      	b.n	8001c50 <__aeabi_dsub+0x454>
 8001872:	2020      	movs	r0, #32
 8001874:	003e      	movs	r6, r7
 8001876:	1a80      	subs	r0, r0, r2
 8001878:	000c      	movs	r4, r1
 800187a:	40d6      	lsrs	r6, r2
 800187c:	40d1      	lsrs	r1, r2
 800187e:	4087      	lsls	r7, r0
 8001880:	4662      	mov	r2, ip
 8001882:	4084      	lsls	r4, r0
 8001884:	1a52      	subs	r2, r2, r1
 8001886:	1e78      	subs	r0, r7, #1
 8001888:	4187      	sbcs	r7, r0
 800188a:	4694      	mov	ip, r2
 800188c:	4334      	orrs	r4, r6
 800188e:	4327      	orrs	r7, r4
 8001890:	1bdc      	subs	r4, r3, r7
 8001892:	42a3      	cmp	r3, r4
 8001894:	419b      	sbcs	r3, r3
 8001896:	4662      	mov	r2, ip
 8001898:	425b      	negs	r3, r3
 800189a:	1ad3      	subs	r3, r2, r3
 800189c:	4699      	mov	r9, r3
 800189e:	464b      	mov	r3, r9
 80018a0:	021b      	lsls	r3, r3, #8
 80018a2:	d400      	bmi.n	80018a6 <__aeabi_dsub+0xaa>
 80018a4:	e118      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 80018a6:	464b      	mov	r3, r9
 80018a8:	0258      	lsls	r0, r3, #9
 80018aa:	0a43      	lsrs	r3, r0, #9
 80018ac:	4699      	mov	r9, r3
 80018ae:	464b      	mov	r3, r9
 80018b0:	2b00      	cmp	r3, #0
 80018b2:	d100      	bne.n	80018b6 <__aeabi_dsub+0xba>
 80018b4:	e137      	b.n	8001b26 <__aeabi_dsub+0x32a>
 80018b6:	4648      	mov	r0, r9
 80018b8:	f000 fbdc 	bl	8002074 <__clzsi2>
 80018bc:	0001      	movs	r1, r0
 80018be:	3908      	subs	r1, #8
 80018c0:	2320      	movs	r3, #32
 80018c2:	0022      	movs	r2, r4
 80018c4:	4648      	mov	r0, r9
 80018c6:	1a5b      	subs	r3, r3, r1
 80018c8:	40da      	lsrs	r2, r3
 80018ca:	4088      	lsls	r0, r1
 80018cc:	408c      	lsls	r4, r1
 80018ce:	4643      	mov	r3, r8
 80018d0:	4310      	orrs	r0, r2
 80018d2:	4588      	cmp	r8, r1
 80018d4:	dd00      	ble.n	80018d8 <__aeabi_dsub+0xdc>
 80018d6:	e136      	b.n	8001b46 <__aeabi_dsub+0x34a>
 80018d8:	1ac9      	subs	r1, r1, r3
 80018da:	1c4b      	adds	r3, r1, #1
 80018dc:	2b1f      	cmp	r3, #31
 80018de:	dd00      	ble.n	80018e2 <__aeabi_dsub+0xe6>
 80018e0:	e0ea      	b.n	8001ab8 <__aeabi_dsub+0x2bc>
 80018e2:	2220      	movs	r2, #32
 80018e4:	0026      	movs	r6, r4
 80018e6:	1ad2      	subs	r2, r2, r3
 80018e8:	0001      	movs	r1, r0
 80018ea:	4094      	lsls	r4, r2
 80018ec:	40de      	lsrs	r6, r3
 80018ee:	40d8      	lsrs	r0, r3
 80018f0:	2300      	movs	r3, #0
 80018f2:	4091      	lsls	r1, r2
 80018f4:	1e62      	subs	r2, r4, #1
 80018f6:	4194      	sbcs	r4, r2
 80018f8:	4681      	mov	r9, r0
 80018fa:	4698      	mov	r8, r3
 80018fc:	4331      	orrs	r1, r6
 80018fe:	430c      	orrs	r4, r1
 8001900:	0763      	lsls	r3, r4, #29
 8001902:	d009      	beq.n	8001918 <__aeabi_dsub+0x11c>
 8001904:	230f      	movs	r3, #15
 8001906:	4023      	ands	r3, r4
 8001908:	2b04      	cmp	r3, #4
 800190a:	d005      	beq.n	8001918 <__aeabi_dsub+0x11c>
 800190c:	1d23      	adds	r3, r4, #4
 800190e:	42a3      	cmp	r3, r4
 8001910:	41a4      	sbcs	r4, r4
 8001912:	4264      	negs	r4, r4
 8001914:	44a1      	add	r9, r4
 8001916:	001c      	movs	r4, r3
 8001918:	464b      	mov	r3, r9
 800191a:	021b      	lsls	r3, r3, #8
 800191c:	d400      	bmi.n	8001920 <__aeabi_dsub+0x124>
 800191e:	e0de      	b.n	8001ade <__aeabi_dsub+0x2e2>
 8001920:	4641      	mov	r1, r8
 8001922:	4b8c      	ldr	r3, [pc, #560]	; (8001b54 <__aeabi_dsub+0x358>)
 8001924:	3101      	adds	r1, #1
 8001926:	4299      	cmp	r1, r3
 8001928:	d100      	bne.n	800192c <__aeabi_dsub+0x130>
 800192a:	e0e7      	b.n	8001afc <__aeabi_dsub+0x300>
 800192c:	464b      	mov	r3, r9
 800192e:	488a      	ldr	r0, [pc, #552]	; (8001b58 <__aeabi_dsub+0x35c>)
 8001930:	08e4      	lsrs	r4, r4, #3
 8001932:	4003      	ands	r3, r0
 8001934:	0018      	movs	r0, r3
 8001936:	0549      	lsls	r1, r1, #21
 8001938:	075b      	lsls	r3, r3, #29
 800193a:	0240      	lsls	r0, r0, #9
 800193c:	4323      	orrs	r3, r4
 800193e:	0d4a      	lsrs	r2, r1, #21
 8001940:	0b04      	lsrs	r4, r0, #12
 8001942:	0512      	lsls	r2, r2, #20
 8001944:	07ed      	lsls	r5, r5, #31
 8001946:	4322      	orrs	r2, r4
 8001948:	432a      	orrs	r2, r5
 800194a:	0018      	movs	r0, r3
 800194c:	0011      	movs	r1, r2
 800194e:	bcf0      	pop	{r4, r5, r6, r7}
 8001950:	46bb      	mov	fp, r7
 8001952:	46b2      	mov	sl, r6
 8001954:	46a9      	mov	r9, r5
 8001956:	46a0      	mov	r8, r4
 8001958:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800195a:	4642      	mov	r2, r8
 800195c:	1a12      	subs	r2, r2, r0
 800195e:	2a00      	cmp	r2, #0
 8001960:	dd52      	ble.n	8001a08 <__aeabi_dsub+0x20c>
 8001962:	2800      	cmp	r0, #0
 8001964:	d100      	bne.n	8001968 <__aeabi_dsub+0x16c>
 8001966:	e09c      	b.n	8001aa2 <__aeabi_dsub+0x2a6>
 8001968:	45a0      	cmp	r8, r4
 800196a:	d100      	bne.n	800196e <__aeabi_dsub+0x172>
 800196c:	e0ca      	b.n	8001b04 <__aeabi_dsub+0x308>
 800196e:	2080      	movs	r0, #128	; 0x80
 8001970:	0400      	lsls	r0, r0, #16
 8001972:	4301      	orrs	r1, r0
 8001974:	2a38      	cmp	r2, #56	; 0x38
 8001976:	dd00      	ble.n	800197a <__aeabi_dsub+0x17e>
 8001978:	e149      	b.n	8001c0e <__aeabi_dsub+0x412>
 800197a:	2a1f      	cmp	r2, #31
 800197c:	dc00      	bgt.n	8001980 <__aeabi_dsub+0x184>
 800197e:	e197      	b.n	8001cb0 <__aeabi_dsub+0x4b4>
 8001980:	0010      	movs	r0, r2
 8001982:	000e      	movs	r6, r1
 8001984:	3820      	subs	r0, #32
 8001986:	40c6      	lsrs	r6, r0
 8001988:	2a20      	cmp	r2, #32
 800198a:	d004      	beq.n	8001996 <__aeabi_dsub+0x19a>
 800198c:	2040      	movs	r0, #64	; 0x40
 800198e:	1a82      	subs	r2, r0, r2
 8001990:	4091      	lsls	r1, r2
 8001992:	430f      	orrs	r7, r1
 8001994:	46b9      	mov	r9, r7
 8001996:	464c      	mov	r4, r9
 8001998:	1e62      	subs	r2, r4, #1
 800199a:	4194      	sbcs	r4, r2
 800199c:	4334      	orrs	r4, r6
 800199e:	e13a      	b.n	8001c16 <__aeabi_dsub+0x41a>
 80019a0:	000a      	movs	r2, r1
 80019a2:	433a      	orrs	r2, r7
 80019a4:	d028      	beq.n	80019f8 <__aeabi_dsub+0x1fc>
 80019a6:	46b3      	mov	fp, r6
 80019a8:	42b5      	cmp	r5, r6
 80019aa:	d02b      	beq.n	8001a04 <__aeabi_dsub+0x208>
 80019ac:	4a6b      	ldr	r2, [pc, #428]	; (8001b5c <__aeabi_dsub+0x360>)
 80019ae:	4442      	add	r2, r8
 80019b0:	2a00      	cmp	r2, #0
 80019b2:	d05d      	beq.n	8001a70 <__aeabi_dsub+0x274>
 80019b4:	4642      	mov	r2, r8
 80019b6:	4644      	mov	r4, r8
 80019b8:	1a82      	subs	r2, r0, r2
 80019ba:	2c00      	cmp	r4, #0
 80019bc:	d000      	beq.n	80019c0 <__aeabi_dsub+0x1c4>
 80019be:	e0f5      	b.n	8001bac <__aeabi_dsub+0x3b0>
 80019c0:	4665      	mov	r5, ip
 80019c2:	431d      	orrs	r5, r3
 80019c4:	d100      	bne.n	80019c8 <__aeabi_dsub+0x1cc>
 80019c6:	e19c      	b.n	8001d02 <__aeabi_dsub+0x506>
 80019c8:	1e55      	subs	r5, r2, #1
 80019ca:	2a01      	cmp	r2, #1
 80019cc:	d100      	bne.n	80019d0 <__aeabi_dsub+0x1d4>
 80019ce:	e1fb      	b.n	8001dc8 <__aeabi_dsub+0x5cc>
 80019d0:	4c60      	ldr	r4, [pc, #384]	; (8001b54 <__aeabi_dsub+0x358>)
 80019d2:	42a2      	cmp	r2, r4
 80019d4:	d100      	bne.n	80019d8 <__aeabi_dsub+0x1dc>
 80019d6:	e1bd      	b.n	8001d54 <__aeabi_dsub+0x558>
 80019d8:	002a      	movs	r2, r5
 80019da:	e0f0      	b.n	8001bbe <__aeabi_dsub+0x3c2>
 80019dc:	0008      	movs	r0, r1
 80019de:	4338      	orrs	r0, r7
 80019e0:	d100      	bne.n	80019e4 <__aeabi_dsub+0x1e8>
 80019e2:	e0c3      	b.n	8001b6c <__aeabi_dsub+0x370>
 80019e4:	1e50      	subs	r0, r2, #1
 80019e6:	2a01      	cmp	r2, #1
 80019e8:	d100      	bne.n	80019ec <__aeabi_dsub+0x1f0>
 80019ea:	e1a8      	b.n	8001d3e <__aeabi_dsub+0x542>
 80019ec:	4c59      	ldr	r4, [pc, #356]	; (8001b54 <__aeabi_dsub+0x358>)
 80019ee:	42a2      	cmp	r2, r4
 80019f0:	d100      	bne.n	80019f4 <__aeabi_dsub+0x1f8>
 80019f2:	e087      	b.n	8001b04 <__aeabi_dsub+0x308>
 80019f4:	0002      	movs	r2, r0
 80019f6:	e736      	b.n	8001866 <__aeabi_dsub+0x6a>
 80019f8:	2201      	movs	r2, #1
 80019fa:	4056      	eors	r6, r2
 80019fc:	46b3      	mov	fp, r6
 80019fe:	42b5      	cmp	r5, r6
 8001a00:	d000      	beq.n	8001a04 <__aeabi_dsub+0x208>
 8001a02:	e721      	b.n	8001848 <__aeabi_dsub+0x4c>
 8001a04:	4a55      	ldr	r2, [pc, #340]	; (8001b5c <__aeabi_dsub+0x360>)
 8001a06:	4442      	add	r2, r8
 8001a08:	2a00      	cmp	r2, #0
 8001a0a:	d100      	bne.n	8001a0e <__aeabi_dsub+0x212>
 8001a0c:	e0b5      	b.n	8001b7a <__aeabi_dsub+0x37e>
 8001a0e:	4642      	mov	r2, r8
 8001a10:	4644      	mov	r4, r8
 8001a12:	1a82      	subs	r2, r0, r2
 8001a14:	2c00      	cmp	r4, #0
 8001a16:	d100      	bne.n	8001a1a <__aeabi_dsub+0x21e>
 8001a18:	e138      	b.n	8001c8c <__aeabi_dsub+0x490>
 8001a1a:	4e4e      	ldr	r6, [pc, #312]	; (8001b54 <__aeabi_dsub+0x358>)
 8001a1c:	42b0      	cmp	r0, r6
 8001a1e:	d100      	bne.n	8001a22 <__aeabi_dsub+0x226>
 8001a20:	e1de      	b.n	8001de0 <__aeabi_dsub+0x5e4>
 8001a22:	2680      	movs	r6, #128	; 0x80
 8001a24:	4664      	mov	r4, ip
 8001a26:	0436      	lsls	r6, r6, #16
 8001a28:	4334      	orrs	r4, r6
 8001a2a:	46a4      	mov	ip, r4
 8001a2c:	2a38      	cmp	r2, #56	; 0x38
 8001a2e:	dd00      	ble.n	8001a32 <__aeabi_dsub+0x236>
 8001a30:	e196      	b.n	8001d60 <__aeabi_dsub+0x564>
 8001a32:	2a1f      	cmp	r2, #31
 8001a34:	dd00      	ble.n	8001a38 <__aeabi_dsub+0x23c>
 8001a36:	e224      	b.n	8001e82 <__aeabi_dsub+0x686>
 8001a38:	2620      	movs	r6, #32
 8001a3a:	1ab4      	subs	r4, r6, r2
 8001a3c:	46a2      	mov	sl, r4
 8001a3e:	4664      	mov	r4, ip
 8001a40:	4656      	mov	r6, sl
 8001a42:	40b4      	lsls	r4, r6
 8001a44:	46a1      	mov	r9, r4
 8001a46:	001c      	movs	r4, r3
 8001a48:	464e      	mov	r6, r9
 8001a4a:	40d4      	lsrs	r4, r2
 8001a4c:	4326      	orrs	r6, r4
 8001a4e:	0034      	movs	r4, r6
 8001a50:	4656      	mov	r6, sl
 8001a52:	40b3      	lsls	r3, r6
 8001a54:	1e5e      	subs	r6, r3, #1
 8001a56:	41b3      	sbcs	r3, r6
 8001a58:	431c      	orrs	r4, r3
 8001a5a:	4663      	mov	r3, ip
 8001a5c:	40d3      	lsrs	r3, r2
 8001a5e:	18c9      	adds	r1, r1, r3
 8001a60:	19e4      	adds	r4, r4, r7
 8001a62:	42bc      	cmp	r4, r7
 8001a64:	41bf      	sbcs	r7, r7
 8001a66:	427f      	negs	r7, r7
 8001a68:	46b9      	mov	r9, r7
 8001a6a:	4680      	mov	r8, r0
 8001a6c:	4489      	add	r9, r1
 8001a6e:	e0d8      	b.n	8001c22 <__aeabi_dsub+0x426>
 8001a70:	4640      	mov	r0, r8
 8001a72:	4c3b      	ldr	r4, [pc, #236]	; (8001b60 <__aeabi_dsub+0x364>)
 8001a74:	3001      	adds	r0, #1
 8001a76:	4220      	tst	r0, r4
 8001a78:	d000      	beq.n	8001a7c <__aeabi_dsub+0x280>
 8001a7a:	e0b4      	b.n	8001be6 <__aeabi_dsub+0x3ea>
 8001a7c:	4640      	mov	r0, r8
 8001a7e:	2800      	cmp	r0, #0
 8001a80:	d000      	beq.n	8001a84 <__aeabi_dsub+0x288>
 8001a82:	e144      	b.n	8001d0e <__aeabi_dsub+0x512>
 8001a84:	4660      	mov	r0, ip
 8001a86:	4318      	orrs	r0, r3
 8001a88:	d100      	bne.n	8001a8c <__aeabi_dsub+0x290>
 8001a8a:	e190      	b.n	8001dae <__aeabi_dsub+0x5b2>
 8001a8c:	0008      	movs	r0, r1
 8001a8e:	4338      	orrs	r0, r7
 8001a90:	d000      	beq.n	8001a94 <__aeabi_dsub+0x298>
 8001a92:	e1aa      	b.n	8001dea <__aeabi_dsub+0x5ee>
 8001a94:	4661      	mov	r1, ip
 8001a96:	08db      	lsrs	r3, r3, #3
 8001a98:	0749      	lsls	r1, r1, #29
 8001a9a:	430b      	orrs	r3, r1
 8001a9c:	4661      	mov	r1, ip
 8001a9e:	08cc      	lsrs	r4, r1, #3
 8001aa0:	e027      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001aa2:	0008      	movs	r0, r1
 8001aa4:	4338      	orrs	r0, r7
 8001aa6:	d061      	beq.n	8001b6c <__aeabi_dsub+0x370>
 8001aa8:	1e50      	subs	r0, r2, #1
 8001aaa:	2a01      	cmp	r2, #1
 8001aac:	d100      	bne.n	8001ab0 <__aeabi_dsub+0x2b4>
 8001aae:	e139      	b.n	8001d24 <__aeabi_dsub+0x528>
 8001ab0:	42a2      	cmp	r2, r4
 8001ab2:	d027      	beq.n	8001b04 <__aeabi_dsub+0x308>
 8001ab4:	0002      	movs	r2, r0
 8001ab6:	e75d      	b.n	8001974 <__aeabi_dsub+0x178>
 8001ab8:	0002      	movs	r2, r0
 8001aba:	391f      	subs	r1, #31
 8001abc:	40ca      	lsrs	r2, r1
 8001abe:	0011      	movs	r1, r2
 8001ac0:	2b20      	cmp	r3, #32
 8001ac2:	d003      	beq.n	8001acc <__aeabi_dsub+0x2d0>
 8001ac4:	2240      	movs	r2, #64	; 0x40
 8001ac6:	1ad3      	subs	r3, r2, r3
 8001ac8:	4098      	lsls	r0, r3
 8001aca:	4304      	orrs	r4, r0
 8001acc:	1e63      	subs	r3, r4, #1
 8001ace:	419c      	sbcs	r4, r3
 8001ad0:	2300      	movs	r3, #0
 8001ad2:	4699      	mov	r9, r3
 8001ad4:	4698      	mov	r8, r3
 8001ad6:	430c      	orrs	r4, r1
 8001ad8:	0763      	lsls	r3, r4, #29
 8001ada:	d000      	beq.n	8001ade <__aeabi_dsub+0x2e2>
 8001adc:	e712      	b.n	8001904 <__aeabi_dsub+0x108>
 8001ade:	464b      	mov	r3, r9
 8001ae0:	464a      	mov	r2, r9
 8001ae2:	08e4      	lsrs	r4, r4, #3
 8001ae4:	075b      	lsls	r3, r3, #29
 8001ae6:	4323      	orrs	r3, r4
 8001ae8:	08d4      	lsrs	r4, r2, #3
 8001aea:	4642      	mov	r2, r8
 8001aec:	4919      	ldr	r1, [pc, #100]	; (8001b54 <__aeabi_dsub+0x358>)
 8001aee:	428a      	cmp	r2, r1
 8001af0:	d00e      	beq.n	8001b10 <__aeabi_dsub+0x314>
 8001af2:	0324      	lsls	r4, r4, #12
 8001af4:	0552      	lsls	r2, r2, #21
 8001af6:	0b24      	lsrs	r4, r4, #12
 8001af8:	0d52      	lsrs	r2, r2, #21
 8001afa:	e722      	b.n	8001942 <__aeabi_dsub+0x146>
 8001afc:	000a      	movs	r2, r1
 8001afe:	2400      	movs	r4, #0
 8001b00:	2300      	movs	r3, #0
 8001b02:	e71e      	b.n	8001942 <__aeabi_dsub+0x146>
 8001b04:	08db      	lsrs	r3, r3, #3
 8001b06:	4662      	mov	r2, ip
 8001b08:	0752      	lsls	r2, r2, #29
 8001b0a:	4313      	orrs	r3, r2
 8001b0c:	4662      	mov	r2, ip
 8001b0e:	08d4      	lsrs	r4, r2, #3
 8001b10:	001a      	movs	r2, r3
 8001b12:	4322      	orrs	r2, r4
 8001b14:	d100      	bne.n	8001b18 <__aeabi_dsub+0x31c>
 8001b16:	e1fc      	b.n	8001f12 <__aeabi_dsub+0x716>
 8001b18:	2280      	movs	r2, #128	; 0x80
 8001b1a:	0312      	lsls	r2, r2, #12
 8001b1c:	4314      	orrs	r4, r2
 8001b1e:	0324      	lsls	r4, r4, #12
 8001b20:	4a0c      	ldr	r2, [pc, #48]	; (8001b54 <__aeabi_dsub+0x358>)
 8001b22:	0b24      	lsrs	r4, r4, #12
 8001b24:	e70d      	b.n	8001942 <__aeabi_dsub+0x146>
 8001b26:	0020      	movs	r0, r4
 8001b28:	f000 faa4 	bl	8002074 <__clzsi2>
 8001b2c:	0001      	movs	r1, r0
 8001b2e:	3118      	adds	r1, #24
 8001b30:	291f      	cmp	r1, #31
 8001b32:	dc00      	bgt.n	8001b36 <__aeabi_dsub+0x33a>
 8001b34:	e6c4      	b.n	80018c0 <__aeabi_dsub+0xc4>
 8001b36:	3808      	subs	r0, #8
 8001b38:	4084      	lsls	r4, r0
 8001b3a:	4643      	mov	r3, r8
 8001b3c:	0020      	movs	r0, r4
 8001b3e:	2400      	movs	r4, #0
 8001b40:	4588      	cmp	r8, r1
 8001b42:	dc00      	bgt.n	8001b46 <__aeabi_dsub+0x34a>
 8001b44:	e6c8      	b.n	80018d8 <__aeabi_dsub+0xdc>
 8001b46:	4a04      	ldr	r2, [pc, #16]	; (8001b58 <__aeabi_dsub+0x35c>)
 8001b48:	1a5b      	subs	r3, r3, r1
 8001b4a:	4010      	ands	r0, r2
 8001b4c:	4698      	mov	r8, r3
 8001b4e:	4681      	mov	r9, r0
 8001b50:	e6d6      	b.n	8001900 <__aeabi_dsub+0x104>
 8001b52:	46c0      	nop			; (mov r8, r8)
 8001b54:	000007ff 	.word	0x000007ff
 8001b58:	ff7fffff 	.word	0xff7fffff
 8001b5c:	fffff801 	.word	0xfffff801
 8001b60:	000007fe 	.word	0x000007fe
 8001b64:	430f      	orrs	r7, r1
 8001b66:	1e7a      	subs	r2, r7, #1
 8001b68:	4197      	sbcs	r7, r2
 8001b6a:	e691      	b.n	8001890 <__aeabi_dsub+0x94>
 8001b6c:	4661      	mov	r1, ip
 8001b6e:	08db      	lsrs	r3, r3, #3
 8001b70:	0749      	lsls	r1, r1, #29
 8001b72:	430b      	orrs	r3, r1
 8001b74:	4661      	mov	r1, ip
 8001b76:	08cc      	lsrs	r4, r1, #3
 8001b78:	e7b8      	b.n	8001aec <__aeabi_dsub+0x2f0>
 8001b7a:	4640      	mov	r0, r8
 8001b7c:	4cd3      	ldr	r4, [pc, #844]	; (8001ecc <__aeabi_dsub+0x6d0>)
 8001b7e:	3001      	adds	r0, #1
 8001b80:	4220      	tst	r0, r4
 8001b82:	d000      	beq.n	8001b86 <__aeabi_dsub+0x38a>
 8001b84:	e0a2      	b.n	8001ccc <__aeabi_dsub+0x4d0>
 8001b86:	4640      	mov	r0, r8
 8001b88:	2800      	cmp	r0, #0
 8001b8a:	d000      	beq.n	8001b8e <__aeabi_dsub+0x392>
 8001b8c:	e101      	b.n	8001d92 <__aeabi_dsub+0x596>
 8001b8e:	4660      	mov	r0, ip
 8001b90:	4318      	orrs	r0, r3
 8001b92:	d100      	bne.n	8001b96 <__aeabi_dsub+0x39a>
 8001b94:	e15e      	b.n	8001e54 <__aeabi_dsub+0x658>
 8001b96:	0008      	movs	r0, r1
 8001b98:	4338      	orrs	r0, r7
 8001b9a:	d000      	beq.n	8001b9e <__aeabi_dsub+0x3a2>
 8001b9c:	e15f      	b.n	8001e5e <__aeabi_dsub+0x662>
 8001b9e:	4661      	mov	r1, ip
 8001ba0:	08db      	lsrs	r3, r3, #3
 8001ba2:	0749      	lsls	r1, r1, #29
 8001ba4:	430b      	orrs	r3, r1
 8001ba6:	4661      	mov	r1, ip
 8001ba8:	08cc      	lsrs	r4, r1, #3
 8001baa:	e7a2      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001bac:	4dc8      	ldr	r5, [pc, #800]	; (8001ed0 <__aeabi_dsub+0x6d4>)
 8001bae:	42a8      	cmp	r0, r5
 8001bb0:	d100      	bne.n	8001bb4 <__aeabi_dsub+0x3b8>
 8001bb2:	e0cf      	b.n	8001d54 <__aeabi_dsub+0x558>
 8001bb4:	2580      	movs	r5, #128	; 0x80
 8001bb6:	4664      	mov	r4, ip
 8001bb8:	042d      	lsls	r5, r5, #16
 8001bba:	432c      	orrs	r4, r5
 8001bbc:	46a4      	mov	ip, r4
 8001bbe:	2a38      	cmp	r2, #56	; 0x38
 8001bc0:	dc56      	bgt.n	8001c70 <__aeabi_dsub+0x474>
 8001bc2:	2a1f      	cmp	r2, #31
 8001bc4:	dd00      	ble.n	8001bc8 <__aeabi_dsub+0x3cc>
 8001bc6:	e0d1      	b.n	8001d6c <__aeabi_dsub+0x570>
 8001bc8:	2520      	movs	r5, #32
 8001bca:	001e      	movs	r6, r3
 8001bcc:	1aad      	subs	r5, r5, r2
 8001bce:	4664      	mov	r4, ip
 8001bd0:	40ab      	lsls	r3, r5
 8001bd2:	40ac      	lsls	r4, r5
 8001bd4:	40d6      	lsrs	r6, r2
 8001bd6:	1e5d      	subs	r5, r3, #1
 8001bd8:	41ab      	sbcs	r3, r5
 8001bda:	4334      	orrs	r4, r6
 8001bdc:	4323      	orrs	r3, r4
 8001bde:	4664      	mov	r4, ip
 8001be0:	40d4      	lsrs	r4, r2
 8001be2:	1b09      	subs	r1, r1, r4
 8001be4:	e049      	b.n	8001c7a <__aeabi_dsub+0x47e>
 8001be6:	4660      	mov	r0, ip
 8001be8:	1bdc      	subs	r4, r3, r7
 8001bea:	1a46      	subs	r6, r0, r1
 8001bec:	42a3      	cmp	r3, r4
 8001bee:	4180      	sbcs	r0, r0
 8001bf0:	4240      	negs	r0, r0
 8001bf2:	4681      	mov	r9, r0
 8001bf4:	0030      	movs	r0, r6
 8001bf6:	464e      	mov	r6, r9
 8001bf8:	1b80      	subs	r0, r0, r6
 8001bfa:	4681      	mov	r9, r0
 8001bfc:	0200      	lsls	r0, r0, #8
 8001bfe:	d476      	bmi.n	8001cee <__aeabi_dsub+0x4f2>
 8001c00:	464b      	mov	r3, r9
 8001c02:	4323      	orrs	r3, r4
 8001c04:	d000      	beq.n	8001c08 <__aeabi_dsub+0x40c>
 8001c06:	e652      	b.n	80018ae <__aeabi_dsub+0xb2>
 8001c08:	2400      	movs	r4, #0
 8001c0a:	2500      	movs	r5, #0
 8001c0c:	e771      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001c0e:	4339      	orrs	r1, r7
 8001c10:	000c      	movs	r4, r1
 8001c12:	1e62      	subs	r2, r4, #1
 8001c14:	4194      	sbcs	r4, r2
 8001c16:	18e4      	adds	r4, r4, r3
 8001c18:	429c      	cmp	r4, r3
 8001c1a:	419b      	sbcs	r3, r3
 8001c1c:	425b      	negs	r3, r3
 8001c1e:	4463      	add	r3, ip
 8001c20:	4699      	mov	r9, r3
 8001c22:	464b      	mov	r3, r9
 8001c24:	021b      	lsls	r3, r3, #8
 8001c26:	d400      	bmi.n	8001c2a <__aeabi_dsub+0x42e>
 8001c28:	e756      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001c2a:	2301      	movs	r3, #1
 8001c2c:	469c      	mov	ip, r3
 8001c2e:	4ba8      	ldr	r3, [pc, #672]	; (8001ed0 <__aeabi_dsub+0x6d4>)
 8001c30:	44e0      	add	r8, ip
 8001c32:	4598      	cmp	r8, r3
 8001c34:	d038      	beq.n	8001ca8 <__aeabi_dsub+0x4ac>
 8001c36:	464b      	mov	r3, r9
 8001c38:	48a6      	ldr	r0, [pc, #664]	; (8001ed4 <__aeabi_dsub+0x6d8>)
 8001c3a:	2201      	movs	r2, #1
 8001c3c:	4003      	ands	r3, r0
 8001c3e:	0018      	movs	r0, r3
 8001c40:	0863      	lsrs	r3, r4, #1
 8001c42:	4014      	ands	r4, r2
 8001c44:	431c      	orrs	r4, r3
 8001c46:	07c3      	lsls	r3, r0, #31
 8001c48:	431c      	orrs	r4, r3
 8001c4a:	0843      	lsrs	r3, r0, #1
 8001c4c:	4699      	mov	r9, r3
 8001c4e:	e657      	b.n	8001900 <__aeabi_dsub+0x104>
 8001c50:	0010      	movs	r0, r2
 8001c52:	000e      	movs	r6, r1
 8001c54:	3820      	subs	r0, #32
 8001c56:	40c6      	lsrs	r6, r0
 8001c58:	2a20      	cmp	r2, #32
 8001c5a:	d004      	beq.n	8001c66 <__aeabi_dsub+0x46a>
 8001c5c:	2040      	movs	r0, #64	; 0x40
 8001c5e:	1a82      	subs	r2, r0, r2
 8001c60:	4091      	lsls	r1, r2
 8001c62:	430f      	orrs	r7, r1
 8001c64:	46b9      	mov	r9, r7
 8001c66:	464f      	mov	r7, r9
 8001c68:	1e7a      	subs	r2, r7, #1
 8001c6a:	4197      	sbcs	r7, r2
 8001c6c:	4337      	orrs	r7, r6
 8001c6e:	e60f      	b.n	8001890 <__aeabi_dsub+0x94>
 8001c70:	4662      	mov	r2, ip
 8001c72:	431a      	orrs	r2, r3
 8001c74:	0013      	movs	r3, r2
 8001c76:	1e5a      	subs	r2, r3, #1
 8001c78:	4193      	sbcs	r3, r2
 8001c7a:	1afc      	subs	r4, r7, r3
 8001c7c:	42a7      	cmp	r7, r4
 8001c7e:	41bf      	sbcs	r7, r7
 8001c80:	427f      	negs	r7, r7
 8001c82:	1bcb      	subs	r3, r1, r7
 8001c84:	4699      	mov	r9, r3
 8001c86:	465d      	mov	r5, fp
 8001c88:	4680      	mov	r8, r0
 8001c8a:	e608      	b.n	800189e <__aeabi_dsub+0xa2>
 8001c8c:	4666      	mov	r6, ip
 8001c8e:	431e      	orrs	r6, r3
 8001c90:	d100      	bne.n	8001c94 <__aeabi_dsub+0x498>
 8001c92:	e0be      	b.n	8001e12 <__aeabi_dsub+0x616>
 8001c94:	1e56      	subs	r6, r2, #1
 8001c96:	2a01      	cmp	r2, #1
 8001c98:	d100      	bne.n	8001c9c <__aeabi_dsub+0x4a0>
 8001c9a:	e109      	b.n	8001eb0 <__aeabi_dsub+0x6b4>
 8001c9c:	4c8c      	ldr	r4, [pc, #560]	; (8001ed0 <__aeabi_dsub+0x6d4>)
 8001c9e:	42a2      	cmp	r2, r4
 8001ca0:	d100      	bne.n	8001ca4 <__aeabi_dsub+0x4a8>
 8001ca2:	e119      	b.n	8001ed8 <__aeabi_dsub+0x6dc>
 8001ca4:	0032      	movs	r2, r6
 8001ca6:	e6c1      	b.n	8001a2c <__aeabi_dsub+0x230>
 8001ca8:	4642      	mov	r2, r8
 8001caa:	2400      	movs	r4, #0
 8001cac:	2300      	movs	r3, #0
 8001cae:	e648      	b.n	8001942 <__aeabi_dsub+0x146>
 8001cb0:	2020      	movs	r0, #32
 8001cb2:	000c      	movs	r4, r1
 8001cb4:	1a80      	subs	r0, r0, r2
 8001cb6:	003e      	movs	r6, r7
 8001cb8:	4087      	lsls	r7, r0
 8001cba:	4084      	lsls	r4, r0
 8001cbc:	40d6      	lsrs	r6, r2
 8001cbe:	1e78      	subs	r0, r7, #1
 8001cc0:	4187      	sbcs	r7, r0
 8001cc2:	40d1      	lsrs	r1, r2
 8001cc4:	4334      	orrs	r4, r6
 8001cc6:	433c      	orrs	r4, r7
 8001cc8:	448c      	add	ip, r1
 8001cca:	e7a4      	b.n	8001c16 <__aeabi_dsub+0x41a>
 8001ccc:	4a80      	ldr	r2, [pc, #512]	; (8001ed0 <__aeabi_dsub+0x6d4>)
 8001cce:	4290      	cmp	r0, r2
 8001cd0:	d100      	bne.n	8001cd4 <__aeabi_dsub+0x4d8>
 8001cd2:	e0e9      	b.n	8001ea8 <__aeabi_dsub+0x6ac>
 8001cd4:	19df      	adds	r7, r3, r7
 8001cd6:	429f      	cmp	r7, r3
 8001cd8:	419b      	sbcs	r3, r3
 8001cda:	4461      	add	r1, ip
 8001cdc:	425b      	negs	r3, r3
 8001cde:	18c9      	adds	r1, r1, r3
 8001ce0:	07cc      	lsls	r4, r1, #31
 8001ce2:	087f      	lsrs	r7, r7, #1
 8001ce4:	084b      	lsrs	r3, r1, #1
 8001ce6:	4699      	mov	r9, r3
 8001ce8:	4680      	mov	r8, r0
 8001cea:	433c      	orrs	r4, r7
 8001cec:	e6f4      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001cee:	1afc      	subs	r4, r7, r3
 8001cf0:	42a7      	cmp	r7, r4
 8001cf2:	41bf      	sbcs	r7, r7
 8001cf4:	4663      	mov	r3, ip
 8001cf6:	427f      	negs	r7, r7
 8001cf8:	1ac9      	subs	r1, r1, r3
 8001cfa:	1bcb      	subs	r3, r1, r7
 8001cfc:	4699      	mov	r9, r3
 8001cfe:	465d      	mov	r5, fp
 8001d00:	e5d5      	b.n	80018ae <__aeabi_dsub+0xb2>
 8001d02:	08ff      	lsrs	r7, r7, #3
 8001d04:	074b      	lsls	r3, r1, #29
 8001d06:	465d      	mov	r5, fp
 8001d08:	433b      	orrs	r3, r7
 8001d0a:	08cc      	lsrs	r4, r1, #3
 8001d0c:	e6ee      	b.n	8001aec <__aeabi_dsub+0x2f0>
 8001d0e:	4662      	mov	r2, ip
 8001d10:	431a      	orrs	r2, r3
 8001d12:	d000      	beq.n	8001d16 <__aeabi_dsub+0x51a>
 8001d14:	e082      	b.n	8001e1c <__aeabi_dsub+0x620>
 8001d16:	000b      	movs	r3, r1
 8001d18:	433b      	orrs	r3, r7
 8001d1a:	d11b      	bne.n	8001d54 <__aeabi_dsub+0x558>
 8001d1c:	2480      	movs	r4, #128	; 0x80
 8001d1e:	2500      	movs	r5, #0
 8001d20:	0324      	lsls	r4, r4, #12
 8001d22:	e6f9      	b.n	8001b18 <__aeabi_dsub+0x31c>
 8001d24:	19dc      	adds	r4, r3, r7
 8001d26:	429c      	cmp	r4, r3
 8001d28:	419b      	sbcs	r3, r3
 8001d2a:	4461      	add	r1, ip
 8001d2c:	4689      	mov	r9, r1
 8001d2e:	425b      	negs	r3, r3
 8001d30:	4499      	add	r9, r3
 8001d32:	464b      	mov	r3, r9
 8001d34:	021b      	lsls	r3, r3, #8
 8001d36:	d444      	bmi.n	8001dc2 <__aeabi_dsub+0x5c6>
 8001d38:	2301      	movs	r3, #1
 8001d3a:	4698      	mov	r8, r3
 8001d3c:	e6cc      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001d3e:	1bdc      	subs	r4, r3, r7
 8001d40:	4662      	mov	r2, ip
 8001d42:	42a3      	cmp	r3, r4
 8001d44:	419b      	sbcs	r3, r3
 8001d46:	1a51      	subs	r1, r2, r1
 8001d48:	425b      	negs	r3, r3
 8001d4a:	1acb      	subs	r3, r1, r3
 8001d4c:	4699      	mov	r9, r3
 8001d4e:	2301      	movs	r3, #1
 8001d50:	4698      	mov	r8, r3
 8001d52:	e5a4      	b.n	800189e <__aeabi_dsub+0xa2>
 8001d54:	08ff      	lsrs	r7, r7, #3
 8001d56:	074b      	lsls	r3, r1, #29
 8001d58:	465d      	mov	r5, fp
 8001d5a:	433b      	orrs	r3, r7
 8001d5c:	08cc      	lsrs	r4, r1, #3
 8001d5e:	e6d7      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001d60:	4662      	mov	r2, ip
 8001d62:	431a      	orrs	r2, r3
 8001d64:	0014      	movs	r4, r2
 8001d66:	1e63      	subs	r3, r4, #1
 8001d68:	419c      	sbcs	r4, r3
 8001d6a:	e679      	b.n	8001a60 <__aeabi_dsub+0x264>
 8001d6c:	0015      	movs	r5, r2
 8001d6e:	4664      	mov	r4, ip
 8001d70:	3d20      	subs	r5, #32
 8001d72:	40ec      	lsrs	r4, r5
 8001d74:	46a0      	mov	r8, r4
 8001d76:	2a20      	cmp	r2, #32
 8001d78:	d005      	beq.n	8001d86 <__aeabi_dsub+0x58a>
 8001d7a:	2540      	movs	r5, #64	; 0x40
 8001d7c:	4664      	mov	r4, ip
 8001d7e:	1aaa      	subs	r2, r5, r2
 8001d80:	4094      	lsls	r4, r2
 8001d82:	4323      	orrs	r3, r4
 8001d84:	469a      	mov	sl, r3
 8001d86:	4654      	mov	r4, sl
 8001d88:	1e63      	subs	r3, r4, #1
 8001d8a:	419c      	sbcs	r4, r3
 8001d8c:	4643      	mov	r3, r8
 8001d8e:	4323      	orrs	r3, r4
 8001d90:	e773      	b.n	8001c7a <__aeabi_dsub+0x47e>
 8001d92:	4662      	mov	r2, ip
 8001d94:	431a      	orrs	r2, r3
 8001d96:	d023      	beq.n	8001de0 <__aeabi_dsub+0x5e4>
 8001d98:	000a      	movs	r2, r1
 8001d9a:	433a      	orrs	r2, r7
 8001d9c:	d000      	beq.n	8001da0 <__aeabi_dsub+0x5a4>
 8001d9e:	e0a0      	b.n	8001ee2 <__aeabi_dsub+0x6e6>
 8001da0:	4662      	mov	r2, ip
 8001da2:	08db      	lsrs	r3, r3, #3
 8001da4:	0752      	lsls	r2, r2, #29
 8001da6:	4313      	orrs	r3, r2
 8001da8:	4662      	mov	r2, ip
 8001daa:	08d4      	lsrs	r4, r2, #3
 8001dac:	e6b0      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001dae:	000b      	movs	r3, r1
 8001db0:	433b      	orrs	r3, r7
 8001db2:	d100      	bne.n	8001db6 <__aeabi_dsub+0x5ba>
 8001db4:	e728      	b.n	8001c08 <__aeabi_dsub+0x40c>
 8001db6:	08ff      	lsrs	r7, r7, #3
 8001db8:	074b      	lsls	r3, r1, #29
 8001dba:	465d      	mov	r5, fp
 8001dbc:	433b      	orrs	r3, r7
 8001dbe:	08cc      	lsrs	r4, r1, #3
 8001dc0:	e697      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001dc2:	2302      	movs	r3, #2
 8001dc4:	4698      	mov	r8, r3
 8001dc6:	e736      	b.n	8001c36 <__aeabi_dsub+0x43a>
 8001dc8:	1afc      	subs	r4, r7, r3
 8001dca:	42a7      	cmp	r7, r4
 8001dcc:	41bf      	sbcs	r7, r7
 8001dce:	4663      	mov	r3, ip
 8001dd0:	427f      	negs	r7, r7
 8001dd2:	1ac9      	subs	r1, r1, r3
 8001dd4:	1bcb      	subs	r3, r1, r7
 8001dd6:	4699      	mov	r9, r3
 8001dd8:	2301      	movs	r3, #1
 8001dda:	465d      	mov	r5, fp
 8001ddc:	4698      	mov	r8, r3
 8001dde:	e55e      	b.n	800189e <__aeabi_dsub+0xa2>
 8001de0:	074b      	lsls	r3, r1, #29
 8001de2:	08ff      	lsrs	r7, r7, #3
 8001de4:	433b      	orrs	r3, r7
 8001de6:	08cc      	lsrs	r4, r1, #3
 8001de8:	e692      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001dea:	1bdc      	subs	r4, r3, r7
 8001dec:	4660      	mov	r0, ip
 8001dee:	42a3      	cmp	r3, r4
 8001df0:	41b6      	sbcs	r6, r6
 8001df2:	1a40      	subs	r0, r0, r1
 8001df4:	4276      	negs	r6, r6
 8001df6:	1b80      	subs	r0, r0, r6
 8001df8:	4681      	mov	r9, r0
 8001dfa:	0200      	lsls	r0, r0, #8
 8001dfc:	d560      	bpl.n	8001ec0 <__aeabi_dsub+0x6c4>
 8001dfe:	1afc      	subs	r4, r7, r3
 8001e00:	42a7      	cmp	r7, r4
 8001e02:	41bf      	sbcs	r7, r7
 8001e04:	4663      	mov	r3, ip
 8001e06:	427f      	negs	r7, r7
 8001e08:	1ac9      	subs	r1, r1, r3
 8001e0a:	1bcb      	subs	r3, r1, r7
 8001e0c:	4699      	mov	r9, r3
 8001e0e:	465d      	mov	r5, fp
 8001e10:	e576      	b.n	8001900 <__aeabi_dsub+0x104>
 8001e12:	08ff      	lsrs	r7, r7, #3
 8001e14:	074b      	lsls	r3, r1, #29
 8001e16:	433b      	orrs	r3, r7
 8001e18:	08cc      	lsrs	r4, r1, #3
 8001e1a:	e667      	b.n	8001aec <__aeabi_dsub+0x2f0>
 8001e1c:	000a      	movs	r2, r1
 8001e1e:	08db      	lsrs	r3, r3, #3
 8001e20:	433a      	orrs	r2, r7
 8001e22:	d100      	bne.n	8001e26 <__aeabi_dsub+0x62a>
 8001e24:	e66f      	b.n	8001b06 <__aeabi_dsub+0x30a>
 8001e26:	4662      	mov	r2, ip
 8001e28:	0752      	lsls	r2, r2, #29
 8001e2a:	4313      	orrs	r3, r2
 8001e2c:	4662      	mov	r2, ip
 8001e2e:	08d4      	lsrs	r4, r2, #3
 8001e30:	2280      	movs	r2, #128	; 0x80
 8001e32:	0312      	lsls	r2, r2, #12
 8001e34:	4214      	tst	r4, r2
 8001e36:	d007      	beq.n	8001e48 <__aeabi_dsub+0x64c>
 8001e38:	08c8      	lsrs	r0, r1, #3
 8001e3a:	4210      	tst	r0, r2
 8001e3c:	d104      	bne.n	8001e48 <__aeabi_dsub+0x64c>
 8001e3e:	465d      	mov	r5, fp
 8001e40:	0004      	movs	r4, r0
 8001e42:	08fb      	lsrs	r3, r7, #3
 8001e44:	0749      	lsls	r1, r1, #29
 8001e46:	430b      	orrs	r3, r1
 8001e48:	0f5a      	lsrs	r2, r3, #29
 8001e4a:	00db      	lsls	r3, r3, #3
 8001e4c:	08db      	lsrs	r3, r3, #3
 8001e4e:	0752      	lsls	r2, r2, #29
 8001e50:	4313      	orrs	r3, r2
 8001e52:	e65d      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001e54:	074b      	lsls	r3, r1, #29
 8001e56:	08ff      	lsrs	r7, r7, #3
 8001e58:	433b      	orrs	r3, r7
 8001e5a:	08cc      	lsrs	r4, r1, #3
 8001e5c:	e649      	b.n	8001af2 <__aeabi_dsub+0x2f6>
 8001e5e:	19dc      	adds	r4, r3, r7
 8001e60:	429c      	cmp	r4, r3
 8001e62:	419b      	sbcs	r3, r3
 8001e64:	4461      	add	r1, ip
 8001e66:	4689      	mov	r9, r1
 8001e68:	425b      	negs	r3, r3
 8001e6a:	4499      	add	r9, r3
 8001e6c:	464b      	mov	r3, r9
 8001e6e:	021b      	lsls	r3, r3, #8
 8001e70:	d400      	bmi.n	8001e74 <__aeabi_dsub+0x678>
 8001e72:	e631      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001e74:	464a      	mov	r2, r9
 8001e76:	4b17      	ldr	r3, [pc, #92]	; (8001ed4 <__aeabi_dsub+0x6d8>)
 8001e78:	401a      	ands	r2, r3
 8001e7a:	2301      	movs	r3, #1
 8001e7c:	4691      	mov	r9, r2
 8001e7e:	4698      	mov	r8, r3
 8001e80:	e62a      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001e82:	0016      	movs	r6, r2
 8001e84:	4664      	mov	r4, ip
 8001e86:	3e20      	subs	r6, #32
 8001e88:	40f4      	lsrs	r4, r6
 8001e8a:	46a0      	mov	r8, r4
 8001e8c:	2a20      	cmp	r2, #32
 8001e8e:	d005      	beq.n	8001e9c <__aeabi_dsub+0x6a0>
 8001e90:	2640      	movs	r6, #64	; 0x40
 8001e92:	4664      	mov	r4, ip
 8001e94:	1ab2      	subs	r2, r6, r2
 8001e96:	4094      	lsls	r4, r2
 8001e98:	4323      	orrs	r3, r4
 8001e9a:	469a      	mov	sl, r3
 8001e9c:	4654      	mov	r4, sl
 8001e9e:	1e63      	subs	r3, r4, #1
 8001ea0:	419c      	sbcs	r4, r3
 8001ea2:	4643      	mov	r3, r8
 8001ea4:	431c      	orrs	r4, r3
 8001ea6:	e5db      	b.n	8001a60 <__aeabi_dsub+0x264>
 8001ea8:	0002      	movs	r2, r0
 8001eaa:	2400      	movs	r4, #0
 8001eac:	2300      	movs	r3, #0
 8001eae:	e548      	b.n	8001942 <__aeabi_dsub+0x146>
 8001eb0:	19dc      	adds	r4, r3, r7
 8001eb2:	42bc      	cmp	r4, r7
 8001eb4:	41bf      	sbcs	r7, r7
 8001eb6:	4461      	add	r1, ip
 8001eb8:	4689      	mov	r9, r1
 8001eba:	427f      	negs	r7, r7
 8001ebc:	44b9      	add	r9, r7
 8001ebe:	e738      	b.n	8001d32 <__aeabi_dsub+0x536>
 8001ec0:	464b      	mov	r3, r9
 8001ec2:	4323      	orrs	r3, r4
 8001ec4:	d100      	bne.n	8001ec8 <__aeabi_dsub+0x6cc>
 8001ec6:	e69f      	b.n	8001c08 <__aeabi_dsub+0x40c>
 8001ec8:	e606      	b.n	8001ad8 <__aeabi_dsub+0x2dc>
 8001eca:	46c0      	nop			; (mov r8, r8)
 8001ecc:	000007fe 	.word	0x000007fe
 8001ed0:	000007ff 	.word	0x000007ff
 8001ed4:	ff7fffff 	.word	0xff7fffff
 8001ed8:	08ff      	lsrs	r7, r7, #3
 8001eda:	074b      	lsls	r3, r1, #29
 8001edc:	433b      	orrs	r3, r7
 8001ede:	08cc      	lsrs	r4, r1, #3
 8001ee0:	e616      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001ee2:	4662      	mov	r2, ip
 8001ee4:	08db      	lsrs	r3, r3, #3
 8001ee6:	0752      	lsls	r2, r2, #29
 8001ee8:	4313      	orrs	r3, r2
 8001eea:	4662      	mov	r2, ip
 8001eec:	08d4      	lsrs	r4, r2, #3
 8001eee:	2280      	movs	r2, #128	; 0x80
 8001ef0:	0312      	lsls	r2, r2, #12
 8001ef2:	4214      	tst	r4, r2
 8001ef4:	d007      	beq.n	8001f06 <__aeabi_dsub+0x70a>
 8001ef6:	08c8      	lsrs	r0, r1, #3
 8001ef8:	4210      	tst	r0, r2
 8001efa:	d104      	bne.n	8001f06 <__aeabi_dsub+0x70a>
 8001efc:	465d      	mov	r5, fp
 8001efe:	0004      	movs	r4, r0
 8001f00:	08fb      	lsrs	r3, r7, #3
 8001f02:	0749      	lsls	r1, r1, #29
 8001f04:	430b      	orrs	r3, r1
 8001f06:	0f5a      	lsrs	r2, r3, #29
 8001f08:	00db      	lsls	r3, r3, #3
 8001f0a:	0752      	lsls	r2, r2, #29
 8001f0c:	08db      	lsrs	r3, r3, #3
 8001f0e:	4313      	orrs	r3, r2
 8001f10:	e5fe      	b.n	8001b10 <__aeabi_dsub+0x314>
 8001f12:	2300      	movs	r3, #0
 8001f14:	4a01      	ldr	r2, [pc, #4]	; (8001f1c <__aeabi_dsub+0x720>)
 8001f16:	001c      	movs	r4, r3
 8001f18:	e513      	b.n	8001942 <__aeabi_dsub+0x146>
 8001f1a:	46c0      	nop			; (mov r8, r8)
 8001f1c:	000007ff 	.word	0x000007ff

08001f20 <__aeabi_dcmpun>:
 8001f20:	b570      	push	{r4, r5, r6, lr}
 8001f22:	0005      	movs	r5, r0
 8001f24:	480c      	ldr	r0, [pc, #48]	; (8001f58 <__aeabi_dcmpun+0x38>)
 8001f26:	031c      	lsls	r4, r3, #12
 8001f28:	0016      	movs	r6, r2
 8001f2a:	005b      	lsls	r3, r3, #1
 8001f2c:	030a      	lsls	r2, r1, #12
 8001f2e:	0049      	lsls	r1, r1, #1
 8001f30:	0b12      	lsrs	r2, r2, #12
 8001f32:	0d49      	lsrs	r1, r1, #21
 8001f34:	0b24      	lsrs	r4, r4, #12
 8001f36:	0d5b      	lsrs	r3, r3, #21
 8001f38:	4281      	cmp	r1, r0
 8001f3a:	d008      	beq.n	8001f4e <__aeabi_dcmpun+0x2e>
 8001f3c:	4a06      	ldr	r2, [pc, #24]	; (8001f58 <__aeabi_dcmpun+0x38>)
 8001f3e:	2000      	movs	r0, #0
 8001f40:	4293      	cmp	r3, r2
 8001f42:	d103      	bne.n	8001f4c <__aeabi_dcmpun+0x2c>
 8001f44:	0020      	movs	r0, r4
 8001f46:	4330      	orrs	r0, r6
 8001f48:	1e43      	subs	r3, r0, #1
 8001f4a:	4198      	sbcs	r0, r3
 8001f4c:	bd70      	pop	{r4, r5, r6, pc}
 8001f4e:	2001      	movs	r0, #1
 8001f50:	432a      	orrs	r2, r5
 8001f52:	d1fb      	bne.n	8001f4c <__aeabi_dcmpun+0x2c>
 8001f54:	e7f2      	b.n	8001f3c <__aeabi_dcmpun+0x1c>
 8001f56:	46c0      	nop			; (mov r8, r8)
 8001f58:	000007ff 	.word	0x000007ff

08001f5c <__aeabi_d2iz>:
 8001f5c:	000a      	movs	r2, r1
 8001f5e:	b530      	push	{r4, r5, lr}
 8001f60:	4c13      	ldr	r4, [pc, #76]	; (8001fb0 <__aeabi_d2iz+0x54>)
 8001f62:	0053      	lsls	r3, r2, #1
 8001f64:	0309      	lsls	r1, r1, #12
 8001f66:	0005      	movs	r5, r0
 8001f68:	0b09      	lsrs	r1, r1, #12
 8001f6a:	2000      	movs	r0, #0
 8001f6c:	0d5b      	lsrs	r3, r3, #21
 8001f6e:	0fd2      	lsrs	r2, r2, #31
 8001f70:	42a3      	cmp	r3, r4
 8001f72:	dd04      	ble.n	8001f7e <__aeabi_d2iz+0x22>
 8001f74:	480f      	ldr	r0, [pc, #60]	; (8001fb4 <__aeabi_d2iz+0x58>)
 8001f76:	4283      	cmp	r3, r0
 8001f78:	dd02      	ble.n	8001f80 <__aeabi_d2iz+0x24>
 8001f7a:	4b0f      	ldr	r3, [pc, #60]	; (8001fb8 <__aeabi_d2iz+0x5c>)
 8001f7c:	18d0      	adds	r0, r2, r3
 8001f7e:	bd30      	pop	{r4, r5, pc}
 8001f80:	2080      	movs	r0, #128	; 0x80
 8001f82:	0340      	lsls	r0, r0, #13
 8001f84:	4301      	orrs	r1, r0
 8001f86:	480d      	ldr	r0, [pc, #52]	; (8001fbc <__aeabi_d2iz+0x60>)
 8001f88:	1ac0      	subs	r0, r0, r3
 8001f8a:	281f      	cmp	r0, #31
 8001f8c:	dd08      	ble.n	8001fa0 <__aeabi_d2iz+0x44>
 8001f8e:	480c      	ldr	r0, [pc, #48]	; (8001fc0 <__aeabi_d2iz+0x64>)
 8001f90:	1ac3      	subs	r3, r0, r3
 8001f92:	40d9      	lsrs	r1, r3
 8001f94:	000b      	movs	r3, r1
 8001f96:	4258      	negs	r0, r3
 8001f98:	2a00      	cmp	r2, #0
 8001f9a:	d1f0      	bne.n	8001f7e <__aeabi_d2iz+0x22>
 8001f9c:	0018      	movs	r0, r3
 8001f9e:	e7ee      	b.n	8001f7e <__aeabi_d2iz+0x22>
 8001fa0:	4c08      	ldr	r4, [pc, #32]	; (8001fc4 <__aeabi_d2iz+0x68>)
 8001fa2:	40c5      	lsrs	r5, r0
 8001fa4:	46a4      	mov	ip, r4
 8001fa6:	4463      	add	r3, ip
 8001fa8:	4099      	lsls	r1, r3
 8001faa:	000b      	movs	r3, r1
 8001fac:	432b      	orrs	r3, r5
 8001fae:	e7f2      	b.n	8001f96 <__aeabi_d2iz+0x3a>
 8001fb0:	000003fe 	.word	0x000003fe
 8001fb4:	0000041d 	.word	0x0000041d
 8001fb8:	7fffffff 	.word	0x7fffffff
 8001fbc:	00000433 	.word	0x00000433
 8001fc0:	00000413 	.word	0x00000413
 8001fc4:	fffffbed 	.word	0xfffffbed

08001fc8 <__aeabi_i2d>:
 8001fc8:	b570      	push	{r4, r5, r6, lr}
 8001fca:	2800      	cmp	r0, #0
 8001fcc:	d016      	beq.n	8001ffc <__aeabi_i2d+0x34>
 8001fce:	17c3      	asrs	r3, r0, #31
 8001fd0:	18c5      	adds	r5, r0, r3
 8001fd2:	405d      	eors	r5, r3
 8001fd4:	0fc4      	lsrs	r4, r0, #31
 8001fd6:	0028      	movs	r0, r5
 8001fd8:	f000 f84c 	bl	8002074 <__clzsi2>
 8001fdc:	4a11      	ldr	r2, [pc, #68]	; (8002024 <__aeabi_i2d+0x5c>)
 8001fde:	1a12      	subs	r2, r2, r0
 8001fe0:	280a      	cmp	r0, #10
 8001fe2:	dc16      	bgt.n	8002012 <__aeabi_i2d+0x4a>
 8001fe4:	0003      	movs	r3, r0
 8001fe6:	002e      	movs	r6, r5
 8001fe8:	3315      	adds	r3, #21
 8001fea:	409e      	lsls	r6, r3
 8001fec:	230b      	movs	r3, #11
 8001fee:	1a18      	subs	r0, r3, r0
 8001ff0:	40c5      	lsrs	r5, r0
 8001ff2:	0552      	lsls	r2, r2, #21
 8001ff4:	032d      	lsls	r5, r5, #12
 8001ff6:	0b2d      	lsrs	r5, r5, #12
 8001ff8:	0d53      	lsrs	r3, r2, #21
 8001ffa:	e003      	b.n	8002004 <__aeabi_i2d+0x3c>
 8001ffc:	2400      	movs	r4, #0
 8001ffe:	2300      	movs	r3, #0
 8002000:	2500      	movs	r5, #0
 8002002:	2600      	movs	r6, #0
 8002004:	051b      	lsls	r3, r3, #20
 8002006:	432b      	orrs	r3, r5
 8002008:	07e4      	lsls	r4, r4, #31
 800200a:	4323      	orrs	r3, r4
 800200c:	0030      	movs	r0, r6
 800200e:	0019      	movs	r1, r3
 8002010:	bd70      	pop	{r4, r5, r6, pc}
 8002012:	380b      	subs	r0, #11
 8002014:	4085      	lsls	r5, r0
 8002016:	0552      	lsls	r2, r2, #21
 8002018:	032d      	lsls	r5, r5, #12
 800201a:	2600      	movs	r6, #0
 800201c:	0b2d      	lsrs	r5, r5, #12
 800201e:	0d53      	lsrs	r3, r2, #21
 8002020:	e7f0      	b.n	8002004 <__aeabi_i2d+0x3c>
 8002022:	46c0      	nop			; (mov r8, r8)
 8002024:	0000041e 	.word	0x0000041e

08002028 <__aeabi_ui2d>:
 8002028:	b510      	push	{r4, lr}
 800202a:	1e04      	subs	r4, r0, #0
 800202c:	d010      	beq.n	8002050 <__aeabi_ui2d+0x28>
 800202e:	f000 f821 	bl	8002074 <__clzsi2>
 8002032:	4b0f      	ldr	r3, [pc, #60]	; (8002070 <__aeabi_ui2d+0x48>)
 8002034:	1a1b      	subs	r3, r3, r0
 8002036:	280a      	cmp	r0, #10
 8002038:	dc11      	bgt.n	800205e <__aeabi_ui2d+0x36>
 800203a:	220b      	movs	r2, #11
 800203c:	0021      	movs	r1, r4
 800203e:	1a12      	subs	r2, r2, r0
 8002040:	40d1      	lsrs	r1, r2
 8002042:	3015      	adds	r0, #21
 8002044:	030a      	lsls	r2, r1, #12
 8002046:	055b      	lsls	r3, r3, #21
 8002048:	4084      	lsls	r4, r0
 800204a:	0b12      	lsrs	r2, r2, #12
 800204c:	0d5b      	lsrs	r3, r3, #21
 800204e:	e001      	b.n	8002054 <__aeabi_ui2d+0x2c>
 8002050:	2300      	movs	r3, #0
 8002052:	2200      	movs	r2, #0
 8002054:	051b      	lsls	r3, r3, #20
 8002056:	4313      	orrs	r3, r2
 8002058:	0020      	movs	r0, r4
 800205a:	0019      	movs	r1, r3
 800205c:	bd10      	pop	{r4, pc}
 800205e:	0022      	movs	r2, r4
 8002060:	380b      	subs	r0, #11
 8002062:	4082      	lsls	r2, r0
 8002064:	055b      	lsls	r3, r3, #21
 8002066:	0312      	lsls	r2, r2, #12
 8002068:	2400      	movs	r4, #0
 800206a:	0b12      	lsrs	r2, r2, #12
 800206c:	0d5b      	lsrs	r3, r3, #21
 800206e:	e7f1      	b.n	8002054 <__aeabi_ui2d+0x2c>
 8002070:	0000041e 	.word	0x0000041e

08002074 <__clzsi2>:
 8002074:	211c      	movs	r1, #28
 8002076:	2301      	movs	r3, #1
 8002078:	041b      	lsls	r3, r3, #16
 800207a:	4298      	cmp	r0, r3
 800207c:	d301      	bcc.n	8002082 <__clzsi2+0xe>
 800207e:	0c00      	lsrs	r0, r0, #16
 8002080:	3910      	subs	r1, #16
 8002082:	0a1b      	lsrs	r3, r3, #8
 8002084:	4298      	cmp	r0, r3
 8002086:	d301      	bcc.n	800208c <__clzsi2+0x18>
 8002088:	0a00      	lsrs	r0, r0, #8
 800208a:	3908      	subs	r1, #8
 800208c:	091b      	lsrs	r3, r3, #4
 800208e:	4298      	cmp	r0, r3
 8002090:	d301      	bcc.n	8002096 <__clzsi2+0x22>
 8002092:	0900      	lsrs	r0, r0, #4
 8002094:	3904      	subs	r1, #4
 8002096:	a202      	add	r2, pc, #8	; (adr r2, 80020a0 <__clzsi2+0x2c>)
 8002098:	5c10      	ldrb	r0, [r2, r0]
 800209a:	1840      	adds	r0, r0, r1
 800209c:	4770      	bx	lr
 800209e:	46c0      	nop			; (mov r8, r8)
 80020a0:	02020304 	.word	0x02020304
 80020a4:	01010101 	.word	0x01010101
	...

080020b0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80020b0:	b590      	push	{r4, r7, lr}
 80020b2:	b09b      	sub	sp, #108	; 0x6c
 80020b4:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80020b6:	f000 fb13 	bl	80026e0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80020ba:	f000 f83d 	bl	8002138 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80020be:	f000 f8b5 	bl	800222c <MX_GPIO_Init>
  MX_USART2_UART_Init();
 80020c2:	f000 f883 	bl	80021cc <MX_USART2_UART_Init>
		  "0.326000005,35,0,-0.0006,4.901400089,-0.061000001,-0.061000001,0,34.85350037\n"
		  "0.330000013,36,0,-0.0006,4.901400089,-0.061000001,-0.061000001,0,34.85350037";
	*/

  //char inputArray[] = "0.054000001,6,0.0024,-0.0006,3.856600046,-0.061000001,-0.061000001,0,34.83589935}";
  char inputArray[] = {"13, 14, 15}"};
 80020c6:	2358      	movs	r3, #88	; 0x58
 80020c8:	18fb      	adds	r3, r7, r3
 80020ca:	4a16      	ldr	r2, [pc, #88]	; (8002124 <main+0x74>)
 80020cc:	ca13      	ldmia	r2!, {r0, r1, r4}
 80020ce:	c313      	stmia	r3!, {r0, r1, r4}

  //This displays the header which explains the formating of the data outputed.
  uint8_t header2[81];
  sprintf(header2, "\r\nAccel X (g),Accel Y (g),Accel Z (g),Gyro X (dps),Gyro Y (dps),Gyro Z (dps),Temp");
 80020d0:	4a15      	ldr	r2, [pc, #84]	; (8002128 <main+0x78>)
 80020d2:	1d3b      	adds	r3, r7, #4
 80020d4:	0011      	movs	r1, r2
 80020d6:	0018      	movs	r0, r3
 80020d8:	f002 fabc 	bl	8004654 <siprintf>
  HAL_UART_Transmit(&huart2, header2, sizeof(header2), 1000);
 80020dc:	23fa      	movs	r3, #250	; 0xfa
 80020de:	009b      	lsls	r3, r3, #2
 80020e0:	1d39      	adds	r1, r7, #4
 80020e2:	4812      	ldr	r0, [pc, #72]	; (800212c <main+0x7c>)
 80020e4:	2251      	movs	r2, #81	; 0x51
 80020e6:	f001 fa61 	bl	80035ac <HAL_UART_Transmit>

	  uint8_t msg[compressedBits];
	  sprintf(msg, "%s",compressed);
    */
	  //HAL_UART_Transmit(&huart2, header2, sizeof(header2), 1000);
	  int* encrypted = encrypt(inputArray);
 80020ea:	2358      	movs	r3, #88	; 0x58
 80020ec:	18fb      	adds	r3, r7, r3
 80020ee:	0018      	movs	r0, r3
 80020f0:	f000 f918 	bl	8002324 <encrypt>
 80020f4:	0003      	movs	r3, r0
 80020f6:	667b      	str	r3, [r7, #100]	; 0x64
	  memcpy(encryptedData, encrypted, sizeof(encrypted));
 80020f8:	6e79      	ldr	r1, [r7, #100]	; 0x64
 80020fa:	4b0d      	ldr	r3, [pc, #52]	; (8002130 <main+0x80>)
 80020fc:	2204      	movs	r2, #4
 80020fe:	0018      	movs	r0, r3
 8002100:	f001 fe28 	bl	8003d54 <memcpy>
	  char temp[4];
	  sprintf(temp, "%d, ",encryptedData[0]);
 8002104:	4b0a      	ldr	r3, [pc, #40]	; (8002130 <main+0x80>)
 8002106:	681a      	ldr	r2, [r3, #0]
 8002108:	490a      	ldr	r1, [pc, #40]	; (8002134 <main+0x84>)
 800210a:	003b      	movs	r3, r7
 800210c:	0018      	movs	r0, r3
 800210e:	f002 faa1 	bl	8004654 <siprintf>
	  HAL_UART_Transmit(&huart2, temp, sizeof(temp), 1000);
 8002112:	23fa      	movs	r3, #250	; 0xfa
 8002114:	009b      	lsls	r3, r3, #2
 8002116:	0039      	movs	r1, r7
 8002118:	4804      	ldr	r0, [pc, #16]	; (800212c <main+0x7c>)
 800211a:	2204      	movs	r2, #4
 800211c:	f001 fa46 	bl	80035ac <HAL_UART_Transmit>
  {
 8002120:	e7e3      	b.n	80020ea <main+0x3a>
 8002122:	46c0      	nop			; (mov r8, r8)
 8002124:	08006d14 	.word	0x08006d14
 8002128:	08006cb8 	.word	0x08006cb8
 800212c:	20000200 	.word	0x20000200
 8002130:	20000284 	.word	0x20000284
 8002134:	08006d0c 	.word	0x08006d0c

08002138 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002138:	b590      	push	{r4, r7, lr}
 800213a:	b091      	sub	sp, #68	; 0x44
 800213c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800213e:	2410      	movs	r4, #16
 8002140:	193b      	adds	r3, r7, r4
 8002142:	0018      	movs	r0, r3
 8002144:	2330      	movs	r3, #48	; 0x30
 8002146:	001a      	movs	r2, r3
 8002148:	2100      	movs	r1, #0
 800214a:	f001 fe0c 	bl	8003d66 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800214e:	003b      	movs	r3, r7
 8002150:	0018      	movs	r0, r3
 8002152:	2310      	movs	r3, #16
 8002154:	001a      	movs	r2, r3
 8002156:	2100      	movs	r1, #0
 8002158:	f001 fe05 	bl	8003d66 <memset>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800215c:	0021      	movs	r1, r4
 800215e:	187b      	adds	r3, r7, r1
 8002160:	2202      	movs	r2, #2
 8002162:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002164:	187b      	adds	r3, r7, r1
 8002166:	2201      	movs	r2, #1
 8002168:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800216a:	187b      	adds	r3, r7, r1
 800216c:	2210      	movs	r2, #16
 800216e:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002170:	187b      	adds	r3, r7, r1
 8002172:	2202      	movs	r2, #2
 8002174:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8002176:	187b      	adds	r3, r7, r1
 8002178:	2200      	movs	r2, #0
 800217a:	625a      	str	r2, [r3, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL12;
 800217c:	187b      	adds	r3, r7, r1
 800217e:	22a0      	movs	r2, #160	; 0xa0
 8002180:	0392      	lsls	r2, r2, #14
 8002182:	629a      	str	r2, [r3, #40]	; 0x28
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 8002184:	187b      	adds	r3, r7, r1
 8002186:	2200      	movs	r2, #0
 8002188:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800218a:	187b      	adds	r3, r7, r1
 800218c:	0018      	movs	r0, r3
 800218e:	f000 fd4d 	bl	8002c2c <HAL_RCC_OscConfig>
 8002192:	1e03      	subs	r3, r0, #0
 8002194:	d001      	beq.n	800219a <SystemClock_Config+0x62>
  {
    Error_Handler();
 8002196:	f000 f929 	bl	80023ec <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800219a:	003b      	movs	r3, r7
 800219c:	2207      	movs	r2, #7
 800219e:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80021a0:	003b      	movs	r3, r7
 80021a2:	2202      	movs	r2, #2
 80021a4:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80021a6:	003b      	movs	r3, r7
 80021a8:	2200      	movs	r2, #0
 80021aa:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80021ac:	003b      	movs	r3, r7
 80021ae:	2200      	movs	r2, #0
 80021b0:	60da      	str	r2, [r3, #12]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80021b2:	003b      	movs	r3, r7
 80021b4:	2101      	movs	r1, #1
 80021b6:	0018      	movs	r0, r3
 80021b8:	f001 f852 	bl	8003260 <HAL_RCC_ClockConfig>
 80021bc:	1e03      	subs	r3, r0, #0
 80021be:	d001      	beq.n	80021c4 <SystemClock_Config+0x8c>
  {
    Error_Handler();
 80021c0:	f000 f914 	bl	80023ec <Error_Handler>
  }
}
 80021c4:	46c0      	nop			; (mov r8, r8)
 80021c6:	46bd      	mov	sp, r7
 80021c8:	b011      	add	sp, #68	; 0x44
 80021ca:	bd90      	pop	{r4, r7, pc}

080021cc <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80021cc:	b580      	push	{r7, lr}
 80021ce:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80021d0:	4b14      	ldr	r3, [pc, #80]	; (8002224 <MX_USART2_UART_Init+0x58>)
 80021d2:	4a15      	ldr	r2, [pc, #84]	; (8002228 <MX_USART2_UART_Init+0x5c>)
 80021d4:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 80021d6:	4b13      	ldr	r3, [pc, #76]	; (8002224 <MX_USART2_UART_Init+0x58>)
 80021d8:	2296      	movs	r2, #150	; 0x96
 80021da:	0192      	lsls	r2, r2, #6
 80021dc:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80021de:	4b11      	ldr	r3, [pc, #68]	; (8002224 <MX_USART2_UART_Init+0x58>)
 80021e0:	2200      	movs	r2, #0
 80021e2:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80021e4:	4b0f      	ldr	r3, [pc, #60]	; (8002224 <MX_USART2_UART_Init+0x58>)
 80021e6:	2200      	movs	r2, #0
 80021e8:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80021ea:	4b0e      	ldr	r3, [pc, #56]	; (8002224 <MX_USART2_UART_Init+0x58>)
 80021ec:	2200      	movs	r2, #0
 80021ee:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80021f0:	4b0c      	ldr	r3, [pc, #48]	; (8002224 <MX_USART2_UART_Init+0x58>)
 80021f2:	220c      	movs	r2, #12
 80021f4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80021f6:	4b0b      	ldr	r3, [pc, #44]	; (8002224 <MX_USART2_UART_Init+0x58>)
 80021f8:	2200      	movs	r2, #0
 80021fa:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80021fc:	4b09      	ldr	r3, [pc, #36]	; (8002224 <MX_USART2_UART_Init+0x58>)
 80021fe:	2200      	movs	r2, #0
 8002200:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002202:	4b08      	ldr	r3, [pc, #32]	; (8002224 <MX_USART2_UART_Init+0x58>)
 8002204:	2200      	movs	r2, #0
 8002206:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002208:	4b06      	ldr	r3, [pc, #24]	; (8002224 <MX_USART2_UART_Init+0x58>)
 800220a:	2200      	movs	r2, #0
 800220c:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 800220e:	4b05      	ldr	r3, [pc, #20]	; (8002224 <MX_USART2_UART_Init+0x58>)
 8002210:	0018      	movs	r0, r3
 8002212:	f001 f977 	bl	8003504 <HAL_UART_Init>
 8002216:	1e03      	subs	r3, r0, #0
 8002218:	d001      	beq.n	800221e <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 800221a:	f000 f8e7 	bl	80023ec <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 800221e:	46c0      	nop			; (mov r8, r8)
 8002220:	46bd      	mov	sp, r7
 8002222:	bd80      	pop	{r7, pc}
 8002224:	20000200 	.word	0x20000200
 8002228:	40004400 	.word	0x40004400

0800222c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800222c:	b590      	push	{r4, r7, lr}
 800222e:	b089      	sub	sp, #36	; 0x24
 8002230:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002232:	240c      	movs	r4, #12
 8002234:	193b      	adds	r3, r7, r4
 8002236:	0018      	movs	r0, r3
 8002238:	2314      	movs	r3, #20
 800223a:	001a      	movs	r2, r3
 800223c:	2100      	movs	r1, #0
 800223e:	f001 fd92 	bl	8003d66 <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002242:	4b26      	ldr	r3, [pc, #152]	; (80022dc <MX_GPIO_Init+0xb0>)
 8002244:	695a      	ldr	r2, [r3, #20]
 8002246:	4b25      	ldr	r3, [pc, #148]	; (80022dc <MX_GPIO_Init+0xb0>)
 8002248:	2180      	movs	r1, #128	; 0x80
 800224a:	0289      	lsls	r1, r1, #10
 800224c:	430a      	orrs	r2, r1
 800224e:	615a      	str	r2, [r3, #20]
 8002250:	4b22      	ldr	r3, [pc, #136]	; (80022dc <MX_GPIO_Init+0xb0>)
 8002252:	695a      	ldr	r2, [r3, #20]
 8002254:	2380      	movs	r3, #128	; 0x80
 8002256:	029b      	lsls	r3, r3, #10
 8002258:	4013      	ands	r3, r2
 800225a:	60bb      	str	r3, [r7, #8]
 800225c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800225e:	4b1f      	ldr	r3, [pc, #124]	; (80022dc <MX_GPIO_Init+0xb0>)
 8002260:	695a      	ldr	r2, [r3, #20]
 8002262:	4b1e      	ldr	r3, [pc, #120]	; (80022dc <MX_GPIO_Init+0xb0>)
 8002264:	2180      	movs	r1, #128	; 0x80
 8002266:	0309      	lsls	r1, r1, #12
 8002268:	430a      	orrs	r2, r1
 800226a:	615a      	str	r2, [r3, #20]
 800226c:	4b1b      	ldr	r3, [pc, #108]	; (80022dc <MX_GPIO_Init+0xb0>)
 800226e:	695a      	ldr	r2, [r3, #20]
 8002270:	2380      	movs	r3, #128	; 0x80
 8002272:	031b      	lsls	r3, r3, #12
 8002274:	4013      	ands	r3, r2
 8002276:	607b      	str	r3, [r7, #4]
 8002278:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, LD4_Pin|LD3_Pin, GPIO_PIN_RESET);
 800227a:	23c0      	movs	r3, #192	; 0xc0
 800227c:	009b      	lsls	r3, r3, #2
 800227e:	4818      	ldr	r0, [pc, #96]	; (80022e0 <MX_GPIO_Init+0xb4>)
 8002280:	2200      	movs	r2, #0
 8002282:	0019      	movs	r1, r3
 8002284:	f000 fcb4 	bl	8002bf0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8002288:	193b      	adds	r3, r7, r4
 800228a:	2201      	movs	r2, #1
 800228c:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 800228e:	193b      	adds	r3, r7, r4
 8002290:	2290      	movs	r2, #144	; 0x90
 8002292:	0352      	lsls	r2, r2, #13
 8002294:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002296:	193b      	adds	r3, r7, r4
 8002298:	2200      	movs	r2, #0
 800229a:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 800229c:	193a      	adds	r2, r7, r4
 800229e:	2390      	movs	r3, #144	; 0x90
 80022a0:	05db      	lsls	r3, r3, #23
 80022a2:	0011      	movs	r1, r2
 80022a4:	0018      	movs	r0, r3
 80022a6:	f000 fb33 	bl	8002910 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD4_Pin LD3_Pin */
  GPIO_InitStruct.Pin = LD4_Pin|LD3_Pin;
 80022aa:	0021      	movs	r1, r4
 80022ac:	187b      	adds	r3, r7, r1
 80022ae:	22c0      	movs	r2, #192	; 0xc0
 80022b0:	0092      	lsls	r2, r2, #2
 80022b2:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80022b4:	187b      	adds	r3, r7, r1
 80022b6:	2201      	movs	r2, #1
 80022b8:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022ba:	187b      	adds	r3, r7, r1
 80022bc:	2200      	movs	r2, #0
 80022be:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80022c0:	187b      	adds	r3, r7, r1
 80022c2:	2200      	movs	r2, #0
 80022c4:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80022c6:	187b      	adds	r3, r7, r1
 80022c8:	4a05      	ldr	r2, [pc, #20]	; (80022e0 <MX_GPIO_Init+0xb4>)
 80022ca:	0019      	movs	r1, r3
 80022cc:	0010      	movs	r0, r2
 80022ce:	f000 fb1f 	bl	8002910 <HAL_GPIO_Init>

}
 80022d2:	46c0      	nop			; (mov r8, r8)
 80022d4:	46bd      	mov	sp, r7
 80022d6:	b009      	add	sp, #36	; 0x24
 80022d8:	bd90      	pop	{r4, r7, pc}
 80022da:	46c0      	nop			; (mov r8, r8)
 80022dc:	40021000 	.word	0x40021000
 80022e0:	48000800 	.word	0x48000800

080022e4 <ENCmodpow>:

/********************************
 * THIS IS THE ENCRYPTION CODE
 *******************************/
int ENCmodpow(int base, int power, int mod)
{
 80022e4:	b580      	push	{r7, lr}
 80022e6:	b086      	sub	sp, #24
 80022e8:	af00      	add	r7, sp, #0
 80022ea:	60f8      	str	r0, [r7, #12]
 80022ec:	60b9      	str	r1, [r7, #8]
 80022ee:	607a      	str	r2, [r7, #4]
        int i;
        int result = 1;
 80022f0:	2301      	movs	r3, #1
 80022f2:	613b      	str	r3, [r7, #16]
        for (i = 0; i < power; i++)
 80022f4:	2300      	movs	r3, #0
 80022f6:	617b      	str	r3, [r7, #20]
 80022f8:	e00b      	b.n	8002312 <ENCmodpow+0x2e>
        {
                result = (result * base) % mod;
 80022fa:	693b      	ldr	r3, [r7, #16]
 80022fc:	68fa      	ldr	r2, [r7, #12]
 80022fe:	4353      	muls	r3, r2
 8002300:	6879      	ldr	r1, [r7, #4]
 8002302:	0018      	movs	r0, r3
 8002304:	f7fe f88c 	bl	8000420 <__aeabi_idivmod>
 8002308:	000b      	movs	r3, r1
 800230a:	613b      	str	r3, [r7, #16]
        for (i = 0; i < power; i++)
 800230c:	697b      	ldr	r3, [r7, #20]
 800230e:	3301      	adds	r3, #1
 8002310:	617b      	str	r3, [r7, #20]
 8002312:	697a      	ldr	r2, [r7, #20]
 8002314:	68bb      	ldr	r3, [r7, #8]
 8002316:	429a      	cmp	r2, r3
 8002318:	dbef      	blt.n	80022fa <ENCmodpow+0x16>
        }
        return result;
 800231a:	693b      	ldr	r3, [r7, #16]
}
 800231c:	0018      	movs	r0, r3
 800231e:	46bd      	mov	sp, r7
 8002320:	b006      	add	sp, #24
 8002322:	bd80      	pop	{r7, pc}

08002324 <encrypt>:

int* encrypt(char msg[]) {
 8002324:	b590      	push	{r4, r7, lr}
 8002326:	4c2a      	ldr	r4, [pc, #168]	; (80023d0 <encrypt+0xac>)
 8002328:	44a5      	add	sp, r4
 800232a:	af00      	add	r7, sp, #0
 800232c:	6078      	str	r0, [r7, #4]
    int c;
	int i;
	int enc[200];
        for (i = 0; msg[i]!= '}'; i++)
 800232e:	2300      	movs	r3, #0
 8002330:	22cd      	movs	r2, #205	; 0xcd
 8002332:	0092      	lsls	r2, r2, #2
 8002334:	18ba      	adds	r2, r7, r2
 8002336:	6013      	str	r3, [r2, #0]
 8002338:	e02a      	b.n	8002390 <encrypt+0x6c>
        {
            c = ENCmodpow(msg[i],e,n);
 800233a:	24cd      	movs	r4, #205	; 0xcd
 800233c:	00a4      	lsls	r4, r4, #2
 800233e:	193b      	adds	r3, r7, r4
 8002340:	681b      	ldr	r3, [r3, #0]
 8002342:	687a      	ldr	r2, [r7, #4]
 8002344:	18d3      	adds	r3, r2, r3
 8002346:	781b      	ldrb	r3, [r3, #0]
 8002348:	0018      	movs	r0, r3
 800234a:	4b22      	ldr	r3, [pc, #136]	; (80023d4 <encrypt+0xb0>)
 800234c:	6819      	ldr	r1, [r3, #0]
 800234e:	4b22      	ldr	r3, [pc, #136]	; (80023d8 <encrypt+0xb4>)
 8002350:	681b      	ldr	r3, [r3, #0]
 8002352:	001a      	movs	r2, r3
 8002354:	f7ff ffc6 	bl	80022e4 <ENCmodpow>
 8002358:	0003      	movs	r3, r0
 800235a:	20cc      	movs	r0, #204	; 0xcc
 800235c:	0080      	lsls	r0, r0, #2
 800235e:	183a      	adds	r2, r7, r0
 8002360:	6013      	str	r3, [r2, #0]
            encryptedData[i] = c;
 8002362:	4b1e      	ldr	r3, [pc, #120]	; (80023dc <encrypt+0xb8>)
 8002364:	193a      	adds	r2, r7, r4
 8002366:	6812      	ldr	r2, [r2, #0]
 8002368:	0092      	lsls	r2, r2, #2
 800236a:	1839      	adds	r1, r7, r0
 800236c:	6809      	ldr	r1, [r1, #0]
 800236e:	50d1      	str	r1, [r2, r3]
            enc[i] = c;
 8002370:	4b1b      	ldr	r3, [pc, #108]	; (80023e0 <encrypt+0xbc>)
 8002372:	22ce      	movs	r2, #206	; 0xce
 8002374:	0092      	lsls	r2, r2, #2
 8002376:	189b      	adds	r3, r3, r2
 8002378:	19db      	adds	r3, r3, r7
 800237a:	193a      	adds	r2, r7, r4
 800237c:	6812      	ldr	r2, [r2, #0]
 800237e:	0092      	lsls	r2, r2, #2
 8002380:	1839      	adds	r1, r7, r0
 8002382:	6809      	ldr	r1, [r1, #0]
 8002384:	50d1      	str	r1, [r2, r3]
        for (i = 0; msg[i]!= '}'; i++)
 8002386:	193b      	adds	r3, r7, r4
 8002388:	681b      	ldr	r3, [r3, #0]
 800238a:	3301      	adds	r3, #1
 800238c:	193a      	adds	r2, r7, r4
 800238e:	6013      	str	r3, [r2, #0]
 8002390:	23cd      	movs	r3, #205	; 0xcd
 8002392:	009b      	lsls	r3, r3, #2
 8002394:	18fb      	adds	r3, r7, r3
 8002396:	681b      	ldr	r3, [r3, #0]
 8002398:	687a      	ldr	r2, [r7, #4]
 800239a:	18d3      	adds	r3, r2, r3
 800239c:	781b      	ldrb	r3, [r3, #0]
 800239e:	2b7d      	cmp	r3, #125	; 0x7d
 80023a0:	d1cb      	bne.n	800233a <encrypt+0x16>
           // sprintf(mesg, "%d and i-1 =%dP",encryptedData[i], encryptedData[i-1]);
           //  HAL_UART_Transmit(&huart2, mesg, sizeof(mesg), 1000);
           // }
        }
        char mesg[4];
        sprintf(mesg, "%d,",encryptedData[0]);
 80023a2:	4b0e      	ldr	r3, [pc, #56]	; (80023dc <encrypt+0xb8>)
 80023a4:	681a      	ldr	r2, [r3, #0]
 80023a6:	490f      	ldr	r1, [pc, #60]	; (80023e4 <encrypt+0xc0>)
 80023a8:	240c      	movs	r4, #12
 80023aa:	193b      	adds	r3, r7, r4
 80023ac:	0018      	movs	r0, r3
 80023ae:	f002 f951 	bl	8004654 <siprintf>
        HAL_UART_Transmit(&huart2, mesg, sizeof(mesg), 1000);
 80023b2:	23fa      	movs	r3, #250	; 0xfa
 80023b4:	009b      	lsls	r3, r3, #2
 80023b6:	1939      	adds	r1, r7, r4
 80023b8:	480b      	ldr	r0, [pc, #44]	; (80023e8 <encrypt+0xc4>)
 80023ba:	2204      	movs	r2, #4
 80023bc:	f001 f8f6 	bl	80035ac <HAL_UART_Transmit>
       return enc;
 80023c0:	2300      	movs	r3, #0
}
 80023c2:	0018      	movs	r0, r3
 80023c4:	46bd      	mov	sp, r7
 80023c6:	23cf      	movs	r3, #207	; 0xcf
 80023c8:	009b      	lsls	r3, r3, #2
 80023ca:	449d      	add	sp, r3
 80023cc:	bd90      	pop	{r4, r7, pc}
 80023ce:	46c0      	nop			; (mov r8, r8)
 80023d0:	fffffcc4 	.word	0xfffffcc4
 80023d4:	20000000 	.word	0x20000000
 80023d8:	20000004 	.word	0x20000004
 80023dc:	20000284 	.word	0x20000284
 80023e0:	fffffcd8 	.word	0xfffffcd8
 80023e4:	08006d20 	.word	0x08006d20
 80023e8:	20000200 	.word	0x20000200

080023ec <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80023ec:	b580      	push	{r7, lr}
 80023ee:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80023f0:	b672      	cpsid	i
}
 80023f2:	46c0      	nop			; (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80023f4:	e7fe      	b.n	80023f4 <Error_Handler+0x8>
	...

080023f8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80023f8:	b580      	push	{r7, lr}
 80023fa:	b082      	sub	sp, #8
 80023fc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80023fe:	4b0f      	ldr	r3, [pc, #60]	; (800243c <HAL_MspInit+0x44>)
 8002400:	699a      	ldr	r2, [r3, #24]
 8002402:	4b0e      	ldr	r3, [pc, #56]	; (800243c <HAL_MspInit+0x44>)
 8002404:	2101      	movs	r1, #1
 8002406:	430a      	orrs	r2, r1
 8002408:	619a      	str	r2, [r3, #24]
 800240a:	4b0c      	ldr	r3, [pc, #48]	; (800243c <HAL_MspInit+0x44>)
 800240c:	699b      	ldr	r3, [r3, #24]
 800240e:	2201      	movs	r2, #1
 8002410:	4013      	ands	r3, r2
 8002412:	607b      	str	r3, [r7, #4]
 8002414:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002416:	4b09      	ldr	r3, [pc, #36]	; (800243c <HAL_MspInit+0x44>)
 8002418:	69da      	ldr	r2, [r3, #28]
 800241a:	4b08      	ldr	r3, [pc, #32]	; (800243c <HAL_MspInit+0x44>)
 800241c:	2180      	movs	r1, #128	; 0x80
 800241e:	0549      	lsls	r1, r1, #21
 8002420:	430a      	orrs	r2, r1
 8002422:	61da      	str	r2, [r3, #28]
 8002424:	4b05      	ldr	r3, [pc, #20]	; (800243c <HAL_MspInit+0x44>)
 8002426:	69da      	ldr	r2, [r3, #28]
 8002428:	2380      	movs	r3, #128	; 0x80
 800242a:	055b      	lsls	r3, r3, #21
 800242c:	4013      	ands	r3, r2
 800242e:	603b      	str	r3, [r7, #0]
 8002430:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002432:	46c0      	nop			; (mov r8, r8)
 8002434:	46bd      	mov	sp, r7
 8002436:	b002      	add	sp, #8
 8002438:	bd80      	pop	{r7, pc}
 800243a:	46c0      	nop			; (mov r8, r8)
 800243c:	40021000 	.word	0x40021000

08002440 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002440:	b590      	push	{r4, r7, lr}
 8002442:	b08b      	sub	sp, #44	; 0x2c
 8002444:	af00      	add	r7, sp, #0
 8002446:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002448:	2414      	movs	r4, #20
 800244a:	193b      	adds	r3, r7, r4
 800244c:	0018      	movs	r0, r3
 800244e:	2314      	movs	r3, #20
 8002450:	001a      	movs	r2, r3
 8002452:	2100      	movs	r1, #0
 8002454:	f001 fc87 	bl	8003d66 <memset>
  if(huart->Instance==USART2)
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	681b      	ldr	r3, [r3, #0]
 800245c:	4a1c      	ldr	r2, [pc, #112]	; (80024d0 <HAL_UART_MspInit+0x90>)
 800245e:	4293      	cmp	r3, r2
 8002460:	d132      	bne.n	80024c8 <HAL_UART_MspInit+0x88>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8002462:	4b1c      	ldr	r3, [pc, #112]	; (80024d4 <HAL_UART_MspInit+0x94>)
 8002464:	69da      	ldr	r2, [r3, #28]
 8002466:	4b1b      	ldr	r3, [pc, #108]	; (80024d4 <HAL_UART_MspInit+0x94>)
 8002468:	2180      	movs	r1, #128	; 0x80
 800246a:	0289      	lsls	r1, r1, #10
 800246c:	430a      	orrs	r2, r1
 800246e:	61da      	str	r2, [r3, #28]
 8002470:	4b18      	ldr	r3, [pc, #96]	; (80024d4 <HAL_UART_MspInit+0x94>)
 8002472:	69da      	ldr	r2, [r3, #28]
 8002474:	2380      	movs	r3, #128	; 0x80
 8002476:	029b      	lsls	r3, r3, #10
 8002478:	4013      	ands	r3, r2
 800247a:	613b      	str	r3, [r7, #16]
 800247c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800247e:	4b15      	ldr	r3, [pc, #84]	; (80024d4 <HAL_UART_MspInit+0x94>)
 8002480:	695a      	ldr	r2, [r3, #20]
 8002482:	4b14      	ldr	r3, [pc, #80]	; (80024d4 <HAL_UART_MspInit+0x94>)
 8002484:	2180      	movs	r1, #128	; 0x80
 8002486:	0289      	lsls	r1, r1, #10
 8002488:	430a      	orrs	r2, r1
 800248a:	615a      	str	r2, [r3, #20]
 800248c:	4b11      	ldr	r3, [pc, #68]	; (80024d4 <HAL_UART_MspInit+0x94>)
 800248e:	695a      	ldr	r2, [r3, #20]
 8002490:	2380      	movs	r3, #128	; 0x80
 8002492:	029b      	lsls	r3, r3, #10
 8002494:	4013      	ands	r3, r2
 8002496:	60fb      	str	r3, [r7, #12]
 8002498:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 800249a:	0021      	movs	r1, r4
 800249c:	187b      	adds	r3, r7, r1
 800249e:	220c      	movs	r2, #12
 80024a0:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024a2:	187b      	adds	r3, r7, r1
 80024a4:	2202      	movs	r2, #2
 80024a6:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80024a8:	187b      	adds	r3, r7, r1
 80024aa:	2200      	movs	r2, #0
 80024ac:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80024ae:	187b      	adds	r3, r7, r1
 80024b0:	2203      	movs	r2, #3
 80024b2:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_USART2;
 80024b4:	187b      	adds	r3, r7, r1
 80024b6:	2201      	movs	r2, #1
 80024b8:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80024ba:	187a      	adds	r2, r7, r1
 80024bc:	2390      	movs	r3, #144	; 0x90
 80024be:	05db      	lsls	r3, r3, #23
 80024c0:	0011      	movs	r1, r2
 80024c2:	0018      	movs	r0, r3
 80024c4:	f000 fa24 	bl	8002910 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 80024c8:	46c0      	nop			; (mov r8, r8)
 80024ca:	46bd      	mov	sp, r7
 80024cc:	b00b      	add	sp, #44	; 0x2c
 80024ce:	bd90      	pop	{r4, r7, pc}
 80024d0:	40004400 	.word	0x40004400
 80024d4:	40021000 	.word	0x40021000

080024d8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80024d8:	b580      	push	{r7, lr}
 80024da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80024dc:	e7fe      	b.n	80024dc <NMI_Handler+0x4>

080024de <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80024de:	b580      	push	{r7, lr}
 80024e0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80024e2:	e7fe      	b.n	80024e2 <HardFault_Handler+0x4>

080024e4 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80024e4:	b580      	push	{r7, lr}
 80024e6:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 80024e8:	46c0      	nop			; (mov r8, r8)
 80024ea:	46bd      	mov	sp, r7
 80024ec:	bd80      	pop	{r7, pc}

080024ee <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80024ee:	b580      	push	{r7, lr}
 80024f0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80024f2:	46c0      	nop			; (mov r8, r8)
 80024f4:	46bd      	mov	sp, r7
 80024f6:	bd80      	pop	{r7, pc}

080024f8 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80024f8:	b580      	push	{r7, lr}
 80024fa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80024fc:	f000 f938 	bl	8002770 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002500:	46c0      	nop			; (mov r8, r8)
 8002502:	46bd      	mov	sp, r7
 8002504:	bd80      	pop	{r7, pc}

08002506 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002506:	b580      	push	{r7, lr}
 8002508:	af00      	add	r7, sp, #0
	return 1;
 800250a:	2301      	movs	r3, #1
}
 800250c:	0018      	movs	r0, r3
 800250e:	46bd      	mov	sp, r7
 8002510:	bd80      	pop	{r7, pc}

08002512 <_kill>:

int _kill(int pid, int sig)
{
 8002512:	b580      	push	{r7, lr}
 8002514:	b082      	sub	sp, #8
 8002516:	af00      	add	r7, sp, #0
 8002518:	6078      	str	r0, [r7, #4]
 800251a:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 800251c:	f001 fbf0 	bl	8003d00 <__errno>
 8002520:	0003      	movs	r3, r0
 8002522:	2216      	movs	r2, #22
 8002524:	601a      	str	r2, [r3, #0]
	return -1;
 8002526:	2301      	movs	r3, #1
 8002528:	425b      	negs	r3, r3
}
 800252a:	0018      	movs	r0, r3
 800252c:	46bd      	mov	sp, r7
 800252e:	b002      	add	sp, #8
 8002530:	bd80      	pop	{r7, pc}

08002532 <_exit>:

void _exit (int status)
{
 8002532:	b580      	push	{r7, lr}
 8002534:	b082      	sub	sp, #8
 8002536:	af00      	add	r7, sp, #0
 8002538:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800253a:	2301      	movs	r3, #1
 800253c:	425a      	negs	r2, r3
 800253e:	687b      	ldr	r3, [r7, #4]
 8002540:	0011      	movs	r1, r2
 8002542:	0018      	movs	r0, r3
 8002544:	f7ff ffe5 	bl	8002512 <_kill>
	while (1) {}		/* Make sure we hang here */
 8002548:	e7fe      	b.n	8002548 <_exit+0x16>

0800254a <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800254a:	b580      	push	{r7, lr}
 800254c:	b086      	sub	sp, #24
 800254e:	af00      	add	r7, sp, #0
 8002550:	60f8      	str	r0, [r7, #12]
 8002552:	60b9      	str	r1, [r7, #8]
 8002554:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002556:	2300      	movs	r3, #0
 8002558:	617b      	str	r3, [r7, #20]
 800255a:	e00a      	b.n	8002572 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800255c:	e000      	b.n	8002560 <_read+0x16>
 800255e:	bf00      	nop
 8002560:	0001      	movs	r1, r0
 8002562:	68bb      	ldr	r3, [r7, #8]
 8002564:	1c5a      	adds	r2, r3, #1
 8002566:	60ba      	str	r2, [r7, #8]
 8002568:	b2ca      	uxtb	r2, r1
 800256a:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800256c:	697b      	ldr	r3, [r7, #20]
 800256e:	3301      	adds	r3, #1
 8002570:	617b      	str	r3, [r7, #20]
 8002572:	697a      	ldr	r2, [r7, #20]
 8002574:	687b      	ldr	r3, [r7, #4]
 8002576:	429a      	cmp	r2, r3
 8002578:	dbf0      	blt.n	800255c <_read+0x12>
	}

return len;
 800257a:	687b      	ldr	r3, [r7, #4]
}
 800257c:	0018      	movs	r0, r3
 800257e:	46bd      	mov	sp, r7
 8002580:	b006      	add	sp, #24
 8002582:	bd80      	pop	{r7, pc}

08002584 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002584:	b580      	push	{r7, lr}
 8002586:	b086      	sub	sp, #24
 8002588:	af00      	add	r7, sp, #0
 800258a:	60f8      	str	r0, [r7, #12]
 800258c:	60b9      	str	r1, [r7, #8]
 800258e:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002590:	2300      	movs	r3, #0
 8002592:	617b      	str	r3, [r7, #20]
 8002594:	e009      	b.n	80025aa <_write+0x26>
	{
		__io_putchar(*ptr++);
 8002596:	68bb      	ldr	r3, [r7, #8]
 8002598:	1c5a      	adds	r2, r3, #1
 800259a:	60ba      	str	r2, [r7, #8]
 800259c:	781b      	ldrb	r3, [r3, #0]
 800259e:	0018      	movs	r0, r3
 80025a0:	e000      	b.n	80025a4 <_write+0x20>
 80025a2:	bf00      	nop
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80025a4:	697b      	ldr	r3, [r7, #20]
 80025a6:	3301      	adds	r3, #1
 80025a8:	617b      	str	r3, [r7, #20]
 80025aa:	697a      	ldr	r2, [r7, #20]
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	429a      	cmp	r2, r3
 80025b0:	dbf1      	blt.n	8002596 <_write+0x12>
	}
	return len;
 80025b2:	687b      	ldr	r3, [r7, #4]
}
 80025b4:	0018      	movs	r0, r3
 80025b6:	46bd      	mov	sp, r7
 80025b8:	b006      	add	sp, #24
 80025ba:	bd80      	pop	{r7, pc}

080025bc <_close>:

int _close(int file)
{
 80025bc:	b580      	push	{r7, lr}
 80025be:	b082      	sub	sp, #8
 80025c0:	af00      	add	r7, sp, #0
 80025c2:	6078      	str	r0, [r7, #4]
	return -1;
 80025c4:	2301      	movs	r3, #1
 80025c6:	425b      	negs	r3, r3
}
 80025c8:	0018      	movs	r0, r3
 80025ca:	46bd      	mov	sp, r7
 80025cc:	b002      	add	sp, #8
 80025ce:	bd80      	pop	{r7, pc}

080025d0 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80025d0:	b580      	push	{r7, lr}
 80025d2:	b082      	sub	sp, #8
 80025d4:	af00      	add	r7, sp, #0
 80025d6:	6078      	str	r0, [r7, #4]
 80025d8:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80025da:	683b      	ldr	r3, [r7, #0]
 80025dc:	2280      	movs	r2, #128	; 0x80
 80025de:	0192      	lsls	r2, r2, #6
 80025e0:	605a      	str	r2, [r3, #4]
	return 0;
 80025e2:	2300      	movs	r3, #0
}
 80025e4:	0018      	movs	r0, r3
 80025e6:	46bd      	mov	sp, r7
 80025e8:	b002      	add	sp, #8
 80025ea:	bd80      	pop	{r7, pc}

080025ec <_isatty>:

int _isatty(int file)
{
 80025ec:	b580      	push	{r7, lr}
 80025ee:	b082      	sub	sp, #8
 80025f0:	af00      	add	r7, sp, #0
 80025f2:	6078      	str	r0, [r7, #4]
	return 1;
 80025f4:	2301      	movs	r3, #1
}
 80025f6:	0018      	movs	r0, r3
 80025f8:	46bd      	mov	sp, r7
 80025fa:	b002      	add	sp, #8
 80025fc:	bd80      	pop	{r7, pc}

080025fe <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80025fe:	b580      	push	{r7, lr}
 8002600:	b084      	sub	sp, #16
 8002602:	af00      	add	r7, sp, #0
 8002604:	60f8      	str	r0, [r7, #12]
 8002606:	60b9      	str	r1, [r7, #8]
 8002608:	607a      	str	r2, [r7, #4]
	return 0;
 800260a:	2300      	movs	r3, #0
}
 800260c:	0018      	movs	r0, r3
 800260e:	46bd      	mov	sp, r7
 8002610:	b004      	add	sp, #16
 8002612:	bd80      	pop	{r7, pc}

08002614 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002614:	b580      	push	{r7, lr}
 8002616:	b086      	sub	sp, #24
 8002618:	af00      	add	r7, sp, #0
 800261a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800261c:	4a14      	ldr	r2, [pc, #80]	; (8002670 <_sbrk+0x5c>)
 800261e:	4b15      	ldr	r3, [pc, #84]	; (8002674 <_sbrk+0x60>)
 8002620:	1ad3      	subs	r3, r2, r3
 8002622:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002624:	697b      	ldr	r3, [r7, #20]
 8002626:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002628:	4b13      	ldr	r3, [pc, #76]	; (8002678 <_sbrk+0x64>)
 800262a:	681b      	ldr	r3, [r3, #0]
 800262c:	2b00      	cmp	r3, #0
 800262e:	d102      	bne.n	8002636 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002630:	4b11      	ldr	r3, [pc, #68]	; (8002678 <_sbrk+0x64>)
 8002632:	4a12      	ldr	r2, [pc, #72]	; (800267c <_sbrk+0x68>)
 8002634:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002636:	4b10      	ldr	r3, [pc, #64]	; (8002678 <_sbrk+0x64>)
 8002638:	681a      	ldr	r2, [r3, #0]
 800263a:	687b      	ldr	r3, [r7, #4]
 800263c:	18d3      	adds	r3, r2, r3
 800263e:	693a      	ldr	r2, [r7, #16]
 8002640:	429a      	cmp	r2, r3
 8002642:	d207      	bcs.n	8002654 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002644:	f001 fb5c 	bl	8003d00 <__errno>
 8002648:	0003      	movs	r3, r0
 800264a:	220c      	movs	r2, #12
 800264c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800264e:	2301      	movs	r3, #1
 8002650:	425b      	negs	r3, r3
 8002652:	e009      	b.n	8002668 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002654:	4b08      	ldr	r3, [pc, #32]	; (8002678 <_sbrk+0x64>)
 8002656:	681b      	ldr	r3, [r3, #0]
 8002658:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800265a:	4b07      	ldr	r3, [pc, #28]	; (8002678 <_sbrk+0x64>)
 800265c:	681a      	ldr	r2, [r3, #0]
 800265e:	687b      	ldr	r3, [r7, #4]
 8002660:	18d2      	adds	r2, r2, r3
 8002662:	4b05      	ldr	r3, [pc, #20]	; (8002678 <_sbrk+0x64>)
 8002664:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8002666:	68fb      	ldr	r3, [r7, #12]
}
 8002668:	0018      	movs	r0, r3
 800266a:	46bd      	mov	sp, r7
 800266c:	b006      	add	sp, #24
 800266e:	bd80      	pop	{r7, pc}
 8002670:	20002000 	.word	0x20002000
 8002674:	00000400 	.word	0x00000400
 8002678:	200005a4 	.word	0x200005a4
 800267c:	200005c0 	.word	0x200005c0

08002680 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8002680:	b580      	push	{r7, lr}
 8002682:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 8002684:	46c0      	nop			; (mov r8, r8)
 8002686:	46bd      	mov	sp, r7
 8002688:	bd80      	pop	{r7, pc}
	...

0800268c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800268c:	480d      	ldr	r0, [pc, #52]	; (80026c4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800268e:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002690:	480d      	ldr	r0, [pc, #52]	; (80026c8 <LoopForever+0x6>)
  ldr r1, =_edata
 8002692:	490e      	ldr	r1, [pc, #56]	; (80026cc <LoopForever+0xa>)
  ldr r2, =_sidata
 8002694:	4a0e      	ldr	r2, [pc, #56]	; (80026d0 <LoopForever+0xe>)
  movs r3, #0
 8002696:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8002698:	e002      	b.n	80026a0 <LoopCopyDataInit>

0800269a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800269a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800269c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800269e:	3304      	adds	r3, #4

080026a0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80026a0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80026a2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80026a4:	d3f9      	bcc.n	800269a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80026a6:	4a0b      	ldr	r2, [pc, #44]	; (80026d4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80026a8:	4c0b      	ldr	r4, [pc, #44]	; (80026d8 <LoopForever+0x16>)
  movs r3, #0
 80026aa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80026ac:	e001      	b.n	80026b2 <LoopFillZerobss>

080026ae <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80026ae:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80026b0:	3204      	adds	r2, #4

080026b2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80026b2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80026b4:	d3fb      	bcc.n	80026ae <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80026b6:	f7ff ffe3 	bl	8002680 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 80026ba:	f001 fb27 	bl	8003d0c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80026be:	f7ff fcf7 	bl	80020b0 <main>

080026c2 <LoopForever>:

LoopForever:
    b LoopForever
 80026c2:	e7fe      	b.n	80026c2 <LoopForever>
  ldr   r0, =_estack
 80026c4:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 80026c8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80026cc:	200001e4 	.word	0x200001e4
  ldr r2, =_sidata
 80026d0:	080071bc 	.word	0x080071bc
  ldr r2, =_sbss
 80026d4:	200001e4 	.word	0x200001e4
  ldr r4, =_ebss
 80026d8:	200005bc 	.word	0x200005bc

080026dc <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80026dc:	e7fe      	b.n	80026dc <ADC1_COMP_IRQHandler>
	...

080026e0 <HAL_Init>:
  *       In the default implementation,Systick is used as source of time base.
  *       The tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80026e0:	b580      	push	{r7, lr}
 80026e2:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch */ 
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80026e4:	4b07      	ldr	r3, [pc, #28]	; (8002704 <HAL_Init+0x24>)
 80026e6:	681a      	ldr	r2, [r3, #0]
 80026e8:	4b06      	ldr	r3, [pc, #24]	; (8002704 <HAL_Init+0x24>)
 80026ea:	2110      	movs	r1, #16
 80026ec:	430a      	orrs	r2, r1
 80026ee:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */

  HAL_InitTick(TICK_INT_PRIORITY);
 80026f0:	2000      	movs	r0, #0
 80026f2:	f000 f809 	bl	8002708 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80026f6:	f7ff fe7f 	bl	80023f8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80026fa:	2300      	movs	r3, #0
}
 80026fc:	0018      	movs	r0, r3
 80026fe:	46bd      	mov	sp, r7
 8002700:	bd80      	pop	{r7, pc}
 8002702:	46c0      	nop			; (mov r8, r8)
 8002704:	40022000 	.word	0x40022000

08002708 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002708:	b590      	push	{r4, r7, lr}
 800270a:	b083      	sub	sp, #12
 800270c:	af00      	add	r7, sp, #0
 800270e:	6078      	str	r0, [r7, #4]
  /*Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002710:	4b14      	ldr	r3, [pc, #80]	; (8002764 <HAL_InitTick+0x5c>)
 8002712:	681c      	ldr	r4, [r3, #0]
 8002714:	4b14      	ldr	r3, [pc, #80]	; (8002768 <HAL_InitTick+0x60>)
 8002716:	781b      	ldrb	r3, [r3, #0]
 8002718:	0019      	movs	r1, r3
 800271a:	23fa      	movs	r3, #250	; 0xfa
 800271c:	0098      	lsls	r0, r3, #2
 800271e:	f7fd fd0f 	bl	8000140 <__udivsi3>
 8002722:	0003      	movs	r3, r0
 8002724:	0019      	movs	r1, r3
 8002726:	0020      	movs	r0, r4
 8002728:	f7fd fd0a 	bl	8000140 <__udivsi3>
 800272c:	0003      	movs	r3, r0
 800272e:	0018      	movs	r0, r3
 8002730:	f000 f8e1 	bl	80028f6 <HAL_SYSTICK_Config>
 8002734:	1e03      	subs	r3, r0, #0
 8002736:	d001      	beq.n	800273c <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 8002738:	2301      	movs	r3, #1
 800273a:	e00f      	b.n	800275c <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800273c:	687b      	ldr	r3, [r7, #4]
 800273e:	2b03      	cmp	r3, #3
 8002740:	d80b      	bhi.n	800275a <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002742:	6879      	ldr	r1, [r7, #4]
 8002744:	2301      	movs	r3, #1
 8002746:	425b      	negs	r3, r3
 8002748:	2200      	movs	r2, #0
 800274a:	0018      	movs	r0, r3
 800274c:	f000 f8be 	bl	80028cc <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002750:	4b06      	ldr	r3, [pc, #24]	; (800276c <HAL_InitTick+0x64>)
 8002752:	687a      	ldr	r2, [r7, #4]
 8002754:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

   /* Return function status */
  return HAL_OK;
 8002756:	2300      	movs	r3, #0
 8002758:	e000      	b.n	800275c <HAL_InitTick+0x54>
    return HAL_ERROR;
 800275a:	2301      	movs	r3, #1
}
 800275c:	0018      	movs	r0, r3
 800275e:	46bd      	mov	sp, r7
 8002760:	b003      	add	sp, #12
 8002762:	bd90      	pop	{r4, r7, pc}
 8002764:	20000008 	.word	0x20000008
 8002768:	20000010 	.word	0x20000010
 800276c:	2000000c 	.word	0x2000000c

08002770 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002770:	b580      	push	{r7, lr}
 8002772:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002774:	4b05      	ldr	r3, [pc, #20]	; (800278c <HAL_IncTick+0x1c>)
 8002776:	781b      	ldrb	r3, [r3, #0]
 8002778:	001a      	movs	r2, r3
 800277a:	4b05      	ldr	r3, [pc, #20]	; (8002790 <HAL_IncTick+0x20>)
 800277c:	681b      	ldr	r3, [r3, #0]
 800277e:	18d2      	adds	r2, r2, r3
 8002780:	4b03      	ldr	r3, [pc, #12]	; (8002790 <HAL_IncTick+0x20>)
 8002782:	601a      	str	r2, [r3, #0]
}
 8002784:	46c0      	nop			; (mov r8, r8)
 8002786:	46bd      	mov	sp, r7
 8002788:	bd80      	pop	{r7, pc}
 800278a:	46c0      	nop			; (mov r8, r8)
 800278c:	20000010 	.word	0x20000010
 8002790:	200005a8 	.word	0x200005a8

08002794 <HAL_GetTick>:
  * @note   This function is declared as __weak  to be overwritten  in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002794:	b580      	push	{r7, lr}
 8002796:	af00      	add	r7, sp, #0
  return uwTick;
 8002798:	4b02      	ldr	r3, [pc, #8]	; (80027a4 <HAL_GetTick+0x10>)
 800279a:	681b      	ldr	r3, [r3, #0]
}
 800279c:	0018      	movs	r0, r3
 800279e:	46bd      	mov	sp, r7
 80027a0:	bd80      	pop	{r7, pc}
 80027a2:	46c0      	nop			; (mov r8, r8)
 80027a4:	200005a8 	.word	0x200005a8

080027a8 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80027a8:	b590      	push	{r4, r7, lr}
 80027aa:	b083      	sub	sp, #12
 80027ac:	af00      	add	r7, sp, #0
 80027ae:	0002      	movs	r2, r0
 80027b0:	6039      	str	r1, [r7, #0]
 80027b2:	1dfb      	adds	r3, r7, #7
 80027b4:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 80027b6:	1dfb      	adds	r3, r7, #7
 80027b8:	781b      	ldrb	r3, [r3, #0]
 80027ba:	2b7f      	cmp	r3, #127	; 0x7f
 80027bc:	d828      	bhi.n	8002810 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80027be:	4a2f      	ldr	r2, [pc, #188]	; (800287c <__NVIC_SetPriority+0xd4>)
 80027c0:	1dfb      	adds	r3, r7, #7
 80027c2:	781b      	ldrb	r3, [r3, #0]
 80027c4:	b25b      	sxtb	r3, r3
 80027c6:	089b      	lsrs	r3, r3, #2
 80027c8:	33c0      	adds	r3, #192	; 0xc0
 80027ca:	009b      	lsls	r3, r3, #2
 80027cc:	589b      	ldr	r3, [r3, r2]
 80027ce:	1dfa      	adds	r2, r7, #7
 80027d0:	7812      	ldrb	r2, [r2, #0]
 80027d2:	0011      	movs	r1, r2
 80027d4:	2203      	movs	r2, #3
 80027d6:	400a      	ands	r2, r1
 80027d8:	00d2      	lsls	r2, r2, #3
 80027da:	21ff      	movs	r1, #255	; 0xff
 80027dc:	4091      	lsls	r1, r2
 80027de:	000a      	movs	r2, r1
 80027e0:	43d2      	mvns	r2, r2
 80027e2:	401a      	ands	r2, r3
 80027e4:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80027e6:	683b      	ldr	r3, [r7, #0]
 80027e8:	019b      	lsls	r3, r3, #6
 80027ea:	22ff      	movs	r2, #255	; 0xff
 80027ec:	401a      	ands	r2, r3
 80027ee:	1dfb      	adds	r3, r7, #7
 80027f0:	781b      	ldrb	r3, [r3, #0]
 80027f2:	0018      	movs	r0, r3
 80027f4:	2303      	movs	r3, #3
 80027f6:	4003      	ands	r3, r0
 80027f8:	00db      	lsls	r3, r3, #3
 80027fa:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80027fc:	481f      	ldr	r0, [pc, #124]	; (800287c <__NVIC_SetPriority+0xd4>)
 80027fe:	1dfb      	adds	r3, r7, #7
 8002800:	781b      	ldrb	r3, [r3, #0]
 8002802:	b25b      	sxtb	r3, r3
 8002804:	089b      	lsrs	r3, r3, #2
 8002806:	430a      	orrs	r2, r1
 8002808:	33c0      	adds	r3, #192	; 0xc0
 800280a:	009b      	lsls	r3, r3, #2
 800280c:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 800280e:	e031      	b.n	8002874 <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002810:	4a1b      	ldr	r2, [pc, #108]	; (8002880 <__NVIC_SetPriority+0xd8>)
 8002812:	1dfb      	adds	r3, r7, #7
 8002814:	781b      	ldrb	r3, [r3, #0]
 8002816:	0019      	movs	r1, r3
 8002818:	230f      	movs	r3, #15
 800281a:	400b      	ands	r3, r1
 800281c:	3b08      	subs	r3, #8
 800281e:	089b      	lsrs	r3, r3, #2
 8002820:	3306      	adds	r3, #6
 8002822:	009b      	lsls	r3, r3, #2
 8002824:	18d3      	adds	r3, r2, r3
 8002826:	3304      	adds	r3, #4
 8002828:	681b      	ldr	r3, [r3, #0]
 800282a:	1dfa      	adds	r2, r7, #7
 800282c:	7812      	ldrb	r2, [r2, #0]
 800282e:	0011      	movs	r1, r2
 8002830:	2203      	movs	r2, #3
 8002832:	400a      	ands	r2, r1
 8002834:	00d2      	lsls	r2, r2, #3
 8002836:	21ff      	movs	r1, #255	; 0xff
 8002838:	4091      	lsls	r1, r2
 800283a:	000a      	movs	r2, r1
 800283c:	43d2      	mvns	r2, r2
 800283e:	401a      	ands	r2, r3
 8002840:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002842:	683b      	ldr	r3, [r7, #0]
 8002844:	019b      	lsls	r3, r3, #6
 8002846:	22ff      	movs	r2, #255	; 0xff
 8002848:	401a      	ands	r2, r3
 800284a:	1dfb      	adds	r3, r7, #7
 800284c:	781b      	ldrb	r3, [r3, #0]
 800284e:	0018      	movs	r0, r3
 8002850:	2303      	movs	r3, #3
 8002852:	4003      	ands	r3, r0
 8002854:	00db      	lsls	r3, r3, #3
 8002856:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002858:	4809      	ldr	r0, [pc, #36]	; (8002880 <__NVIC_SetPriority+0xd8>)
 800285a:	1dfb      	adds	r3, r7, #7
 800285c:	781b      	ldrb	r3, [r3, #0]
 800285e:	001c      	movs	r4, r3
 8002860:	230f      	movs	r3, #15
 8002862:	4023      	ands	r3, r4
 8002864:	3b08      	subs	r3, #8
 8002866:	089b      	lsrs	r3, r3, #2
 8002868:	430a      	orrs	r2, r1
 800286a:	3306      	adds	r3, #6
 800286c:	009b      	lsls	r3, r3, #2
 800286e:	18c3      	adds	r3, r0, r3
 8002870:	3304      	adds	r3, #4
 8002872:	601a      	str	r2, [r3, #0]
}
 8002874:	46c0      	nop			; (mov r8, r8)
 8002876:	46bd      	mov	sp, r7
 8002878:	b003      	add	sp, #12
 800287a:	bd90      	pop	{r4, r7, pc}
 800287c:	e000e100 	.word	0xe000e100
 8002880:	e000ed00 	.word	0xe000ed00

08002884 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8002884:	b580      	push	{r7, lr}
 8002886:	b082      	sub	sp, #8
 8002888:	af00      	add	r7, sp, #0
 800288a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800288c:	687b      	ldr	r3, [r7, #4]
 800288e:	1e5a      	subs	r2, r3, #1
 8002890:	2380      	movs	r3, #128	; 0x80
 8002892:	045b      	lsls	r3, r3, #17
 8002894:	429a      	cmp	r2, r3
 8002896:	d301      	bcc.n	800289c <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002898:	2301      	movs	r3, #1
 800289a:	e010      	b.n	80028be <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800289c:	4b0a      	ldr	r3, [pc, #40]	; (80028c8 <SysTick_Config+0x44>)
 800289e:	687a      	ldr	r2, [r7, #4]
 80028a0:	3a01      	subs	r2, #1
 80028a2:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80028a4:	2301      	movs	r3, #1
 80028a6:	425b      	negs	r3, r3
 80028a8:	2103      	movs	r1, #3
 80028aa:	0018      	movs	r0, r3
 80028ac:	f7ff ff7c 	bl	80027a8 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80028b0:	4b05      	ldr	r3, [pc, #20]	; (80028c8 <SysTick_Config+0x44>)
 80028b2:	2200      	movs	r2, #0
 80028b4:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80028b6:	4b04      	ldr	r3, [pc, #16]	; (80028c8 <SysTick_Config+0x44>)
 80028b8:	2207      	movs	r2, #7
 80028ba:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80028bc:	2300      	movs	r3, #0
}
 80028be:	0018      	movs	r0, r3
 80028c0:	46bd      	mov	sp, r7
 80028c2:	b002      	add	sp, #8
 80028c4:	bd80      	pop	{r7, pc}
 80028c6:	46c0      	nop			; (mov r8, r8)
 80028c8:	e000e010 	.word	0xe000e010

080028cc <HAL_NVIC_SetPriority>:
  *         with stm32f0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0 based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80028cc:	b580      	push	{r7, lr}
 80028ce:	b084      	sub	sp, #16
 80028d0:	af00      	add	r7, sp, #0
 80028d2:	60b9      	str	r1, [r7, #8]
 80028d4:	607a      	str	r2, [r7, #4]
 80028d6:	210f      	movs	r1, #15
 80028d8:	187b      	adds	r3, r7, r1
 80028da:	1c02      	adds	r2, r0, #0
 80028dc:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 80028de:	68ba      	ldr	r2, [r7, #8]
 80028e0:	187b      	adds	r3, r7, r1
 80028e2:	781b      	ldrb	r3, [r3, #0]
 80028e4:	b25b      	sxtb	r3, r3
 80028e6:	0011      	movs	r1, r2
 80028e8:	0018      	movs	r0, r3
 80028ea:	f7ff ff5d 	bl	80027a8 <__NVIC_SetPriority>
}
 80028ee:	46c0      	nop			; (mov r8, r8)
 80028f0:	46bd      	mov	sp, r7
 80028f2:	b004      	add	sp, #16
 80028f4:	bd80      	pop	{r7, pc}

080028f6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80028f6:	b580      	push	{r7, lr}
 80028f8:	b082      	sub	sp, #8
 80028fa:	af00      	add	r7, sp, #0
 80028fc:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80028fe:	687b      	ldr	r3, [r7, #4]
 8002900:	0018      	movs	r0, r3
 8002902:	f7ff ffbf 	bl	8002884 <SysTick_Config>
 8002906:	0003      	movs	r3, r0
}
 8002908:	0018      	movs	r0, r3
 800290a:	46bd      	mov	sp, r7
 800290c:	b002      	add	sp, #8
 800290e:	bd80      	pop	{r7, pc}

08002910 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8002910:	b580      	push	{r7, lr}
 8002912:	b086      	sub	sp, #24
 8002914:	af00      	add	r7, sp, #0
 8002916:	6078      	str	r0, [r7, #4]
 8002918:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00u;
 800291a:	2300      	movs	r3, #0
 800291c:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 800291e:	e14f      	b.n	8002bc0 <HAL_GPIO_Init+0x2b0>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 8002920:	683b      	ldr	r3, [r7, #0]
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	2101      	movs	r1, #1
 8002926:	697a      	ldr	r2, [r7, #20]
 8002928:	4091      	lsls	r1, r2
 800292a:	000a      	movs	r2, r1
 800292c:	4013      	ands	r3, r2
 800292e:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00u)
 8002930:	68fb      	ldr	r3, [r7, #12]
 8002932:	2b00      	cmp	r3, #0
 8002934:	d100      	bne.n	8002938 <HAL_GPIO_Init+0x28>
 8002936:	e140      	b.n	8002bba <HAL_GPIO_Init+0x2aa>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 8002938:	683b      	ldr	r3, [r7, #0]
 800293a:	685b      	ldr	r3, [r3, #4]
 800293c:	2203      	movs	r2, #3
 800293e:	4013      	ands	r3, r2
 8002940:	2b01      	cmp	r3, #1
 8002942:	d005      	beq.n	8002950 <HAL_GPIO_Init+0x40>
         ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8002944:	683b      	ldr	r3, [r7, #0]
 8002946:	685b      	ldr	r3, [r3, #4]
 8002948:	2203      	movs	r2, #3
 800294a:	4013      	ands	r3, r2
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 800294c:	2b02      	cmp	r3, #2
 800294e:	d130      	bne.n	80029b2 <HAL_GPIO_Init+0xa2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	689b      	ldr	r3, [r3, #8]
 8002954:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2u));
 8002956:	697b      	ldr	r3, [r7, #20]
 8002958:	005b      	lsls	r3, r3, #1
 800295a:	2203      	movs	r2, #3
 800295c:	409a      	lsls	r2, r3
 800295e:	0013      	movs	r3, r2
 8002960:	43da      	mvns	r2, r3
 8002962:	693b      	ldr	r3, [r7, #16]
 8002964:	4013      	ands	r3, r2
 8002966:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2u));
 8002968:	683b      	ldr	r3, [r7, #0]
 800296a:	68da      	ldr	r2, [r3, #12]
 800296c:	697b      	ldr	r3, [r7, #20]
 800296e:	005b      	lsls	r3, r3, #1
 8002970:	409a      	lsls	r2, r3
 8002972:	0013      	movs	r3, r2
 8002974:	693a      	ldr	r2, [r7, #16]
 8002976:	4313      	orrs	r3, r2
 8002978:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 800297a:	687b      	ldr	r3, [r7, #4]
 800297c:	693a      	ldr	r2, [r7, #16]
 800297e:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8002980:	687b      	ldr	r3, [r7, #4]
 8002982:	685b      	ldr	r3, [r3, #4]
 8002984:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8002986:	2201      	movs	r2, #1
 8002988:	697b      	ldr	r3, [r7, #20]
 800298a:	409a      	lsls	r2, r3
 800298c:	0013      	movs	r3, r2
 800298e:	43da      	mvns	r2, r3
 8002990:	693b      	ldr	r3, [r7, #16]
 8002992:	4013      	ands	r3, r2
 8002994:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8002996:	683b      	ldr	r3, [r7, #0]
 8002998:	685b      	ldr	r3, [r3, #4]
 800299a:	091b      	lsrs	r3, r3, #4
 800299c:	2201      	movs	r2, #1
 800299e:	401a      	ands	r2, r3
 80029a0:	697b      	ldr	r3, [r7, #20]
 80029a2:	409a      	lsls	r2, r3
 80029a4:	0013      	movs	r3, r2
 80029a6:	693a      	ldr	r2, [r7, #16]
 80029a8:	4313      	orrs	r3, r2
 80029aa:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 80029ac:	687b      	ldr	r3, [r7, #4]
 80029ae:	693a      	ldr	r2, [r7, #16]
 80029b0:	605a      	str	r2, [r3, #4]
      }
      
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80029b2:	683b      	ldr	r3, [r7, #0]
 80029b4:	685b      	ldr	r3, [r3, #4]
 80029b6:	2203      	movs	r2, #3
 80029b8:	4013      	ands	r3, r2
 80029ba:	2b03      	cmp	r3, #3
 80029bc:	d017      	beq.n	80029ee <HAL_GPIO_Init+0xde>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 80029be:	687b      	ldr	r3, [r7, #4]
 80029c0:	68db      	ldr	r3, [r3, #12]
 80029c2:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2u));
 80029c4:	697b      	ldr	r3, [r7, #20]
 80029c6:	005b      	lsls	r3, r3, #1
 80029c8:	2203      	movs	r2, #3
 80029ca:	409a      	lsls	r2, r3
 80029cc:	0013      	movs	r3, r2
 80029ce:	43da      	mvns	r2, r3
 80029d0:	693b      	ldr	r3, [r7, #16]
 80029d2:	4013      	ands	r3, r2
 80029d4:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2u));
 80029d6:	683b      	ldr	r3, [r7, #0]
 80029d8:	689a      	ldr	r2, [r3, #8]
 80029da:	697b      	ldr	r3, [r7, #20]
 80029dc:	005b      	lsls	r3, r3, #1
 80029de:	409a      	lsls	r2, r3
 80029e0:	0013      	movs	r3, r2
 80029e2:	693a      	ldr	r2, [r7, #16]
 80029e4:	4313      	orrs	r3, r2
 80029e6:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 80029e8:	687b      	ldr	r3, [r7, #4]
 80029ea:	693a      	ldr	r2, [r7, #16]
 80029ec:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80029ee:	683b      	ldr	r3, [r7, #0]
 80029f0:	685b      	ldr	r3, [r3, #4]
 80029f2:	2203      	movs	r2, #3
 80029f4:	4013      	ands	r3, r2
 80029f6:	2b02      	cmp	r3, #2
 80029f8:	d123      	bne.n	8002a42 <HAL_GPIO_Init+0x132>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3u];
 80029fa:	697b      	ldr	r3, [r7, #20]
 80029fc:	08da      	lsrs	r2, r3, #3
 80029fe:	687b      	ldr	r3, [r7, #4]
 8002a00:	3208      	adds	r2, #8
 8002a02:	0092      	lsls	r2, r2, #2
 8002a04:	58d3      	ldr	r3, [r2, r3]
 8002a06:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8002a08:	697b      	ldr	r3, [r7, #20]
 8002a0a:	2207      	movs	r2, #7
 8002a0c:	4013      	ands	r3, r2
 8002a0e:	009b      	lsls	r3, r3, #2
 8002a10:	220f      	movs	r2, #15
 8002a12:	409a      	lsls	r2, r3
 8002a14:	0013      	movs	r3, r2
 8002a16:	43da      	mvns	r2, r3
 8002a18:	693b      	ldr	r3, [r7, #16]
 8002a1a:	4013      	ands	r3, r2
 8002a1c:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8002a1e:	683b      	ldr	r3, [r7, #0]
 8002a20:	691a      	ldr	r2, [r3, #16]
 8002a22:	697b      	ldr	r3, [r7, #20]
 8002a24:	2107      	movs	r1, #7
 8002a26:	400b      	ands	r3, r1
 8002a28:	009b      	lsls	r3, r3, #2
 8002a2a:	409a      	lsls	r2, r3
 8002a2c:	0013      	movs	r3, r2
 8002a2e:	693a      	ldr	r2, [r7, #16]
 8002a30:	4313      	orrs	r3, r2
 8002a32:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3u] = temp;
 8002a34:	697b      	ldr	r3, [r7, #20]
 8002a36:	08da      	lsrs	r2, r3, #3
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	3208      	adds	r2, #8
 8002a3c:	0092      	lsls	r2, r2, #2
 8002a3e:	6939      	ldr	r1, [r7, #16]
 8002a40:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	681b      	ldr	r3, [r3, #0]
 8002a46:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2u));
 8002a48:	697b      	ldr	r3, [r7, #20]
 8002a4a:	005b      	lsls	r3, r3, #1
 8002a4c:	2203      	movs	r2, #3
 8002a4e:	409a      	lsls	r2, r3
 8002a50:	0013      	movs	r3, r2
 8002a52:	43da      	mvns	r2, r3
 8002a54:	693b      	ldr	r3, [r7, #16]
 8002a56:	4013      	ands	r3, r2
 8002a58:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8002a5a:	683b      	ldr	r3, [r7, #0]
 8002a5c:	685b      	ldr	r3, [r3, #4]
 8002a5e:	2203      	movs	r2, #3
 8002a60:	401a      	ands	r2, r3
 8002a62:	697b      	ldr	r3, [r7, #20]
 8002a64:	005b      	lsls	r3, r3, #1
 8002a66:	409a      	lsls	r2, r3
 8002a68:	0013      	movs	r3, r2
 8002a6a:	693a      	ldr	r2, [r7, #16]
 8002a6c:	4313      	orrs	r3, r2
 8002a6e:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	693a      	ldr	r2, [r7, #16]
 8002a74:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8002a76:	683b      	ldr	r3, [r7, #0]
 8002a78:	685a      	ldr	r2, [r3, #4]
 8002a7a:	23c0      	movs	r3, #192	; 0xc0
 8002a7c:	029b      	lsls	r3, r3, #10
 8002a7e:	4013      	ands	r3, r2
 8002a80:	d100      	bne.n	8002a84 <HAL_GPIO_Init+0x174>
 8002a82:	e09a      	b.n	8002bba <HAL_GPIO_Init+0x2aa>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002a84:	4b54      	ldr	r3, [pc, #336]	; (8002bd8 <HAL_GPIO_Init+0x2c8>)
 8002a86:	699a      	ldr	r2, [r3, #24]
 8002a88:	4b53      	ldr	r3, [pc, #332]	; (8002bd8 <HAL_GPIO_Init+0x2c8>)
 8002a8a:	2101      	movs	r1, #1
 8002a8c:	430a      	orrs	r2, r1
 8002a8e:	619a      	str	r2, [r3, #24]
 8002a90:	4b51      	ldr	r3, [pc, #324]	; (8002bd8 <HAL_GPIO_Init+0x2c8>)
 8002a92:	699b      	ldr	r3, [r3, #24]
 8002a94:	2201      	movs	r2, #1
 8002a96:	4013      	ands	r3, r2
 8002a98:	60bb      	str	r3, [r7, #8]
 8002a9a:	68bb      	ldr	r3, [r7, #8]

        temp = SYSCFG->EXTICR[position >> 2u];
 8002a9c:	4a4f      	ldr	r2, [pc, #316]	; (8002bdc <HAL_GPIO_Init+0x2cc>)
 8002a9e:	697b      	ldr	r3, [r7, #20]
 8002aa0:	089b      	lsrs	r3, r3, #2
 8002aa2:	3302      	adds	r3, #2
 8002aa4:	009b      	lsls	r3, r3, #2
 8002aa6:	589b      	ldr	r3, [r3, r2]
 8002aa8:	613b      	str	r3, [r7, #16]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 8002aaa:	697b      	ldr	r3, [r7, #20]
 8002aac:	2203      	movs	r2, #3
 8002aae:	4013      	ands	r3, r2
 8002ab0:	009b      	lsls	r3, r3, #2
 8002ab2:	220f      	movs	r2, #15
 8002ab4:	409a      	lsls	r2, r3
 8002ab6:	0013      	movs	r3, r2
 8002ab8:	43da      	mvns	r2, r3
 8002aba:	693b      	ldr	r3, [r7, #16]
 8002abc:	4013      	ands	r3, r2
 8002abe:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8002ac0:	687a      	ldr	r2, [r7, #4]
 8002ac2:	2390      	movs	r3, #144	; 0x90
 8002ac4:	05db      	lsls	r3, r3, #23
 8002ac6:	429a      	cmp	r2, r3
 8002ac8:	d013      	beq.n	8002af2 <HAL_GPIO_Init+0x1e2>
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	4a44      	ldr	r2, [pc, #272]	; (8002be0 <HAL_GPIO_Init+0x2d0>)
 8002ace:	4293      	cmp	r3, r2
 8002ad0:	d00d      	beq.n	8002aee <HAL_GPIO_Init+0x1de>
 8002ad2:	687b      	ldr	r3, [r7, #4]
 8002ad4:	4a43      	ldr	r2, [pc, #268]	; (8002be4 <HAL_GPIO_Init+0x2d4>)
 8002ad6:	4293      	cmp	r3, r2
 8002ad8:	d007      	beq.n	8002aea <HAL_GPIO_Init+0x1da>
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	4a42      	ldr	r2, [pc, #264]	; (8002be8 <HAL_GPIO_Init+0x2d8>)
 8002ade:	4293      	cmp	r3, r2
 8002ae0:	d101      	bne.n	8002ae6 <HAL_GPIO_Init+0x1d6>
 8002ae2:	2303      	movs	r3, #3
 8002ae4:	e006      	b.n	8002af4 <HAL_GPIO_Init+0x1e4>
 8002ae6:	2305      	movs	r3, #5
 8002ae8:	e004      	b.n	8002af4 <HAL_GPIO_Init+0x1e4>
 8002aea:	2302      	movs	r3, #2
 8002aec:	e002      	b.n	8002af4 <HAL_GPIO_Init+0x1e4>
 8002aee:	2301      	movs	r3, #1
 8002af0:	e000      	b.n	8002af4 <HAL_GPIO_Init+0x1e4>
 8002af2:	2300      	movs	r3, #0
 8002af4:	697a      	ldr	r2, [r7, #20]
 8002af6:	2103      	movs	r1, #3
 8002af8:	400a      	ands	r2, r1
 8002afa:	0092      	lsls	r2, r2, #2
 8002afc:	4093      	lsls	r3, r2
 8002afe:	693a      	ldr	r2, [r7, #16]
 8002b00:	4313      	orrs	r3, r2
 8002b02:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2u] = temp;
 8002b04:	4935      	ldr	r1, [pc, #212]	; (8002bdc <HAL_GPIO_Init+0x2cc>)
 8002b06:	697b      	ldr	r3, [r7, #20]
 8002b08:	089b      	lsrs	r3, r3, #2
 8002b0a:	3302      	adds	r3, #2
 8002b0c:	009b      	lsls	r3, r3, #2
 8002b0e:	693a      	ldr	r2, [r7, #16]
 8002b10:	505a      	str	r2, [r3, r1]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8002b12:	4b36      	ldr	r3, [pc, #216]	; (8002bec <HAL_GPIO_Init+0x2dc>)
 8002b14:	681b      	ldr	r3, [r3, #0]
 8002b16:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8002b18:	68fb      	ldr	r3, [r7, #12]
 8002b1a:	43da      	mvns	r2, r3
 8002b1c:	693b      	ldr	r3, [r7, #16]
 8002b1e:	4013      	ands	r3, r2
 8002b20:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8002b22:	683b      	ldr	r3, [r7, #0]
 8002b24:	685a      	ldr	r2, [r3, #4]
 8002b26:	2380      	movs	r3, #128	; 0x80
 8002b28:	025b      	lsls	r3, r3, #9
 8002b2a:	4013      	ands	r3, r2
 8002b2c:	d003      	beq.n	8002b36 <HAL_GPIO_Init+0x226>
        {
          temp |= iocurrent;
 8002b2e:	693a      	ldr	r2, [r7, #16]
 8002b30:	68fb      	ldr	r3, [r7, #12]
 8002b32:	4313      	orrs	r3, r2
 8002b34:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8002b36:	4b2d      	ldr	r3, [pc, #180]	; (8002bec <HAL_GPIO_Init+0x2dc>)
 8002b38:	693a      	ldr	r2, [r7, #16]
 8002b3a:	601a      	str	r2, [r3, #0]

        temp = EXTI->EMR;
 8002b3c:	4b2b      	ldr	r3, [pc, #172]	; (8002bec <HAL_GPIO_Init+0x2dc>)
 8002b3e:	685b      	ldr	r3, [r3, #4]
 8002b40:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8002b42:	68fb      	ldr	r3, [r7, #12]
 8002b44:	43da      	mvns	r2, r3
 8002b46:	693b      	ldr	r3, [r7, #16]
 8002b48:	4013      	ands	r3, r2
 8002b4a:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8002b4c:	683b      	ldr	r3, [r7, #0]
 8002b4e:	685a      	ldr	r2, [r3, #4]
 8002b50:	2380      	movs	r3, #128	; 0x80
 8002b52:	029b      	lsls	r3, r3, #10
 8002b54:	4013      	ands	r3, r2
 8002b56:	d003      	beq.n	8002b60 <HAL_GPIO_Init+0x250>
        {
          temp |= iocurrent;
 8002b58:	693a      	ldr	r2, [r7, #16]
 8002b5a:	68fb      	ldr	r3, [r7, #12]
 8002b5c:	4313      	orrs	r3, r2
 8002b5e:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8002b60:	4b22      	ldr	r3, [pc, #136]	; (8002bec <HAL_GPIO_Init+0x2dc>)
 8002b62:	693a      	ldr	r2, [r7, #16]
 8002b64:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8002b66:	4b21      	ldr	r3, [pc, #132]	; (8002bec <HAL_GPIO_Init+0x2dc>)
 8002b68:	689b      	ldr	r3, [r3, #8]
 8002b6a:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8002b6c:	68fb      	ldr	r3, [r7, #12]
 8002b6e:	43da      	mvns	r2, r3
 8002b70:	693b      	ldr	r3, [r7, #16]
 8002b72:	4013      	ands	r3, r2
 8002b74:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8002b76:	683b      	ldr	r3, [r7, #0]
 8002b78:	685a      	ldr	r2, [r3, #4]
 8002b7a:	2380      	movs	r3, #128	; 0x80
 8002b7c:	035b      	lsls	r3, r3, #13
 8002b7e:	4013      	ands	r3, r2
 8002b80:	d003      	beq.n	8002b8a <HAL_GPIO_Init+0x27a>
        {
          temp |= iocurrent;
 8002b82:	693a      	ldr	r2, [r7, #16]
 8002b84:	68fb      	ldr	r3, [r7, #12]
 8002b86:	4313      	orrs	r3, r2
 8002b88:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 8002b8a:	4b18      	ldr	r3, [pc, #96]	; (8002bec <HAL_GPIO_Init+0x2dc>)
 8002b8c:	693a      	ldr	r2, [r7, #16]
 8002b8e:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 8002b90:	4b16      	ldr	r3, [pc, #88]	; (8002bec <HAL_GPIO_Init+0x2dc>)
 8002b92:	68db      	ldr	r3, [r3, #12]
 8002b94:	613b      	str	r3, [r7, #16]
        temp &= ~(iocurrent);
 8002b96:	68fb      	ldr	r3, [r7, #12]
 8002b98:	43da      	mvns	r2, r3
 8002b9a:	693b      	ldr	r3, [r7, #16]
 8002b9c:	4013      	ands	r3, r2
 8002b9e:	613b      	str	r3, [r7, #16]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8002ba0:	683b      	ldr	r3, [r7, #0]
 8002ba2:	685a      	ldr	r2, [r3, #4]
 8002ba4:	2380      	movs	r3, #128	; 0x80
 8002ba6:	039b      	lsls	r3, r3, #14
 8002ba8:	4013      	ands	r3, r2
 8002baa:	d003      	beq.n	8002bb4 <HAL_GPIO_Init+0x2a4>
        {
          temp |= iocurrent;
 8002bac:	693a      	ldr	r2, [r7, #16]
 8002bae:	68fb      	ldr	r3, [r7, #12]
 8002bb0:	4313      	orrs	r3, r2
 8002bb2:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 8002bb4:	4b0d      	ldr	r3, [pc, #52]	; (8002bec <HAL_GPIO_Init+0x2dc>)
 8002bb6:	693a      	ldr	r2, [r7, #16]
 8002bb8:	60da      	str	r2, [r3, #12]
      }
    }

    position++;
 8002bba:	697b      	ldr	r3, [r7, #20]
 8002bbc:	3301      	adds	r3, #1
 8002bbe:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 8002bc0:	683b      	ldr	r3, [r7, #0]
 8002bc2:	681a      	ldr	r2, [r3, #0]
 8002bc4:	697b      	ldr	r3, [r7, #20]
 8002bc6:	40da      	lsrs	r2, r3
 8002bc8:	1e13      	subs	r3, r2, #0
 8002bca:	d000      	beq.n	8002bce <HAL_GPIO_Init+0x2be>
 8002bcc:	e6a8      	b.n	8002920 <HAL_GPIO_Init+0x10>
  } 
}
 8002bce:	46c0      	nop			; (mov r8, r8)
 8002bd0:	46c0      	nop			; (mov r8, r8)
 8002bd2:	46bd      	mov	sp, r7
 8002bd4:	b006      	add	sp, #24
 8002bd6:	bd80      	pop	{r7, pc}
 8002bd8:	40021000 	.word	0x40021000
 8002bdc:	40010000 	.word	0x40010000
 8002be0:	48000400 	.word	0x48000400
 8002be4:	48000800 	.word	0x48000800
 8002be8:	48000c00 	.word	0x48000c00
 8002bec:	40010400 	.word	0x40010400

08002bf0 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8002bf0:	b580      	push	{r7, lr}
 8002bf2:	b082      	sub	sp, #8
 8002bf4:	af00      	add	r7, sp, #0
 8002bf6:	6078      	str	r0, [r7, #4]
 8002bf8:	0008      	movs	r0, r1
 8002bfa:	0011      	movs	r1, r2
 8002bfc:	1cbb      	adds	r3, r7, #2
 8002bfe:	1c02      	adds	r2, r0, #0
 8002c00:	801a      	strh	r2, [r3, #0]
 8002c02:	1c7b      	adds	r3, r7, #1
 8002c04:	1c0a      	adds	r2, r1, #0
 8002c06:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8002c08:	1c7b      	adds	r3, r7, #1
 8002c0a:	781b      	ldrb	r3, [r3, #0]
 8002c0c:	2b00      	cmp	r3, #0
 8002c0e:	d004      	beq.n	8002c1a <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 8002c10:	1cbb      	adds	r3, r7, #2
 8002c12:	881a      	ldrh	r2, [r3, #0]
 8002c14:	687b      	ldr	r3, [r7, #4]
 8002c16:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
  }
}
 8002c18:	e003      	b.n	8002c22 <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 8002c1a:	1cbb      	adds	r3, r7, #2
 8002c1c:	881a      	ldrh	r2, [r3, #0]
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	629a      	str	r2, [r3, #40]	; 0x28
}
 8002c22:	46c0      	nop			; (mov r8, r8)
 8002c24:	46bd      	mov	sp, r7
 8002c26:	b002      	add	sp, #8
 8002c28:	bd80      	pop	{r7, pc}
	...

08002c2c <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002c2c:	b580      	push	{r7, lr}
 8002c2e:	b088      	sub	sp, #32
 8002c30:	af00      	add	r7, sp, #0
 8002c32:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  uint32_t pll_config2;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8002c34:	687b      	ldr	r3, [r7, #4]
 8002c36:	2b00      	cmp	r3, #0
 8002c38:	d101      	bne.n	8002c3e <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8002c3a:	2301      	movs	r3, #1
 8002c3c:	e301      	b.n	8003242 <HAL_RCC_OscConfig+0x616>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	681b      	ldr	r3, [r3, #0]
 8002c42:	2201      	movs	r2, #1
 8002c44:	4013      	ands	r3, r2
 8002c46:	d100      	bne.n	8002c4a <HAL_RCC_OscConfig+0x1e>
 8002c48:	e08d      	b.n	8002d66 <HAL_RCC_OscConfig+0x13a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 8002c4a:	4bc3      	ldr	r3, [pc, #780]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002c4c:	685b      	ldr	r3, [r3, #4]
 8002c4e:	220c      	movs	r2, #12
 8002c50:	4013      	ands	r3, r2
 8002c52:	2b04      	cmp	r3, #4
 8002c54:	d00e      	beq.n	8002c74 <HAL_RCC_OscConfig+0x48>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 8002c56:	4bc0      	ldr	r3, [pc, #768]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002c58:	685b      	ldr	r3, [r3, #4]
 8002c5a:	220c      	movs	r2, #12
 8002c5c:	4013      	ands	r3, r2
 8002c5e:	2b08      	cmp	r3, #8
 8002c60:	d116      	bne.n	8002c90 <HAL_RCC_OscConfig+0x64>
 8002c62:	4bbd      	ldr	r3, [pc, #756]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002c64:	685a      	ldr	r2, [r3, #4]
 8002c66:	2380      	movs	r3, #128	; 0x80
 8002c68:	025b      	lsls	r3, r3, #9
 8002c6a:	401a      	ands	r2, r3
 8002c6c:	2380      	movs	r3, #128	; 0x80
 8002c6e:	025b      	lsls	r3, r3, #9
 8002c70:	429a      	cmp	r2, r3
 8002c72:	d10d      	bne.n	8002c90 <HAL_RCC_OscConfig+0x64>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002c74:	4bb8      	ldr	r3, [pc, #736]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002c76:	681a      	ldr	r2, [r3, #0]
 8002c78:	2380      	movs	r3, #128	; 0x80
 8002c7a:	029b      	lsls	r3, r3, #10
 8002c7c:	4013      	ands	r3, r2
 8002c7e:	d100      	bne.n	8002c82 <HAL_RCC_OscConfig+0x56>
 8002c80:	e070      	b.n	8002d64 <HAL_RCC_OscConfig+0x138>
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	685b      	ldr	r3, [r3, #4]
 8002c86:	2b00      	cmp	r3, #0
 8002c88:	d000      	beq.n	8002c8c <HAL_RCC_OscConfig+0x60>
 8002c8a:	e06b      	b.n	8002d64 <HAL_RCC_OscConfig+0x138>
      {
        return HAL_ERROR;
 8002c8c:	2301      	movs	r3, #1
 8002c8e:	e2d8      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	685b      	ldr	r3, [r3, #4]
 8002c94:	2b01      	cmp	r3, #1
 8002c96:	d107      	bne.n	8002ca8 <HAL_RCC_OscConfig+0x7c>
 8002c98:	4baf      	ldr	r3, [pc, #700]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002c9a:	681a      	ldr	r2, [r3, #0]
 8002c9c:	4bae      	ldr	r3, [pc, #696]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002c9e:	2180      	movs	r1, #128	; 0x80
 8002ca0:	0249      	lsls	r1, r1, #9
 8002ca2:	430a      	orrs	r2, r1
 8002ca4:	601a      	str	r2, [r3, #0]
 8002ca6:	e02f      	b.n	8002d08 <HAL_RCC_OscConfig+0xdc>
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	685b      	ldr	r3, [r3, #4]
 8002cac:	2b00      	cmp	r3, #0
 8002cae:	d10c      	bne.n	8002cca <HAL_RCC_OscConfig+0x9e>
 8002cb0:	4ba9      	ldr	r3, [pc, #676]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002cb2:	681a      	ldr	r2, [r3, #0]
 8002cb4:	4ba8      	ldr	r3, [pc, #672]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002cb6:	49a9      	ldr	r1, [pc, #676]	; (8002f5c <HAL_RCC_OscConfig+0x330>)
 8002cb8:	400a      	ands	r2, r1
 8002cba:	601a      	str	r2, [r3, #0]
 8002cbc:	4ba6      	ldr	r3, [pc, #664]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002cbe:	681a      	ldr	r2, [r3, #0]
 8002cc0:	4ba5      	ldr	r3, [pc, #660]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002cc2:	49a7      	ldr	r1, [pc, #668]	; (8002f60 <HAL_RCC_OscConfig+0x334>)
 8002cc4:	400a      	ands	r2, r1
 8002cc6:	601a      	str	r2, [r3, #0]
 8002cc8:	e01e      	b.n	8002d08 <HAL_RCC_OscConfig+0xdc>
 8002cca:	687b      	ldr	r3, [r7, #4]
 8002ccc:	685b      	ldr	r3, [r3, #4]
 8002cce:	2b05      	cmp	r3, #5
 8002cd0:	d10e      	bne.n	8002cf0 <HAL_RCC_OscConfig+0xc4>
 8002cd2:	4ba1      	ldr	r3, [pc, #644]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002cd4:	681a      	ldr	r2, [r3, #0]
 8002cd6:	4ba0      	ldr	r3, [pc, #640]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002cd8:	2180      	movs	r1, #128	; 0x80
 8002cda:	02c9      	lsls	r1, r1, #11
 8002cdc:	430a      	orrs	r2, r1
 8002cde:	601a      	str	r2, [r3, #0]
 8002ce0:	4b9d      	ldr	r3, [pc, #628]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002ce2:	681a      	ldr	r2, [r3, #0]
 8002ce4:	4b9c      	ldr	r3, [pc, #624]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002ce6:	2180      	movs	r1, #128	; 0x80
 8002ce8:	0249      	lsls	r1, r1, #9
 8002cea:	430a      	orrs	r2, r1
 8002cec:	601a      	str	r2, [r3, #0]
 8002cee:	e00b      	b.n	8002d08 <HAL_RCC_OscConfig+0xdc>
 8002cf0:	4b99      	ldr	r3, [pc, #612]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002cf2:	681a      	ldr	r2, [r3, #0]
 8002cf4:	4b98      	ldr	r3, [pc, #608]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002cf6:	4999      	ldr	r1, [pc, #612]	; (8002f5c <HAL_RCC_OscConfig+0x330>)
 8002cf8:	400a      	ands	r2, r1
 8002cfa:	601a      	str	r2, [r3, #0]
 8002cfc:	4b96      	ldr	r3, [pc, #600]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002cfe:	681a      	ldr	r2, [r3, #0]
 8002d00:	4b95      	ldr	r3, [pc, #596]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002d02:	4997      	ldr	r1, [pc, #604]	; (8002f60 <HAL_RCC_OscConfig+0x334>)
 8002d04:	400a      	ands	r2, r1
 8002d06:	601a      	str	r2, [r3, #0]
      

       /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	685b      	ldr	r3, [r3, #4]
 8002d0c:	2b00      	cmp	r3, #0
 8002d0e:	d014      	beq.n	8002d3a <HAL_RCC_OscConfig+0x10e>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002d10:	f7ff fd40 	bl	8002794 <HAL_GetTick>
 8002d14:	0003      	movs	r3, r0
 8002d16:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002d18:	e008      	b.n	8002d2c <HAL_RCC_OscConfig+0x100>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002d1a:	f7ff fd3b 	bl	8002794 <HAL_GetTick>
 8002d1e:	0002      	movs	r2, r0
 8002d20:	69bb      	ldr	r3, [r7, #24]
 8002d22:	1ad3      	subs	r3, r2, r3
 8002d24:	2b64      	cmp	r3, #100	; 0x64
 8002d26:	d901      	bls.n	8002d2c <HAL_RCC_OscConfig+0x100>
          {
            return HAL_TIMEOUT;
 8002d28:	2303      	movs	r3, #3
 8002d2a:	e28a      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002d2c:	4b8a      	ldr	r3, [pc, #552]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002d2e:	681a      	ldr	r2, [r3, #0]
 8002d30:	2380      	movs	r3, #128	; 0x80
 8002d32:	029b      	lsls	r3, r3, #10
 8002d34:	4013      	ands	r3, r2
 8002d36:	d0f0      	beq.n	8002d1a <HAL_RCC_OscConfig+0xee>
 8002d38:	e015      	b.n	8002d66 <HAL_RCC_OscConfig+0x13a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002d3a:	f7ff fd2b 	bl	8002794 <HAL_GetTick>
 8002d3e:	0003      	movs	r3, r0
 8002d40:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8002d42:	e008      	b.n	8002d56 <HAL_RCC_OscConfig+0x12a>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002d44:	f7ff fd26 	bl	8002794 <HAL_GetTick>
 8002d48:	0002      	movs	r2, r0
 8002d4a:	69bb      	ldr	r3, [r7, #24]
 8002d4c:	1ad3      	subs	r3, r2, r3
 8002d4e:	2b64      	cmp	r3, #100	; 0x64
 8002d50:	d901      	bls.n	8002d56 <HAL_RCC_OscConfig+0x12a>
          {
            return HAL_TIMEOUT;
 8002d52:	2303      	movs	r3, #3
 8002d54:	e275      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8002d56:	4b80      	ldr	r3, [pc, #512]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002d58:	681a      	ldr	r2, [r3, #0]
 8002d5a:	2380      	movs	r3, #128	; 0x80
 8002d5c:	029b      	lsls	r3, r3, #10
 8002d5e:	4013      	ands	r3, r2
 8002d60:	d1f0      	bne.n	8002d44 <HAL_RCC_OscConfig+0x118>
 8002d62:	e000      	b.n	8002d66 <HAL_RCC_OscConfig+0x13a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002d64:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	681b      	ldr	r3, [r3, #0]
 8002d6a:	2202      	movs	r2, #2
 8002d6c:	4013      	ands	r3, r2
 8002d6e:	d100      	bne.n	8002d72 <HAL_RCC_OscConfig+0x146>
 8002d70:	e069      	b.n	8002e46 <HAL_RCC_OscConfig+0x21a>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
    
    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */ 
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 8002d72:	4b79      	ldr	r3, [pc, #484]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002d74:	685b      	ldr	r3, [r3, #4]
 8002d76:	220c      	movs	r2, #12
 8002d78:	4013      	ands	r3, r2
 8002d7a:	d00b      	beq.n	8002d94 <HAL_RCC_OscConfig+0x168>
       || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI)))
 8002d7c:	4b76      	ldr	r3, [pc, #472]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002d7e:	685b      	ldr	r3, [r3, #4]
 8002d80:	220c      	movs	r2, #12
 8002d82:	4013      	ands	r3, r2
 8002d84:	2b08      	cmp	r3, #8
 8002d86:	d11c      	bne.n	8002dc2 <HAL_RCC_OscConfig+0x196>
 8002d88:	4b73      	ldr	r3, [pc, #460]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002d8a:	685a      	ldr	r2, [r3, #4]
 8002d8c:	2380      	movs	r3, #128	; 0x80
 8002d8e:	025b      	lsls	r3, r3, #9
 8002d90:	4013      	ands	r3, r2
 8002d92:	d116      	bne.n	8002dc2 <HAL_RCC_OscConfig+0x196>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8002d94:	4b70      	ldr	r3, [pc, #448]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002d96:	681b      	ldr	r3, [r3, #0]
 8002d98:	2202      	movs	r2, #2
 8002d9a:	4013      	ands	r3, r2
 8002d9c:	d005      	beq.n	8002daa <HAL_RCC_OscConfig+0x17e>
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	68db      	ldr	r3, [r3, #12]
 8002da2:	2b01      	cmp	r3, #1
 8002da4:	d001      	beq.n	8002daa <HAL_RCC_OscConfig+0x17e>
      {
        return HAL_ERROR;
 8002da6:	2301      	movs	r3, #1
 8002da8:	e24b      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002daa:	4b6b      	ldr	r3, [pc, #428]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002dac:	681b      	ldr	r3, [r3, #0]
 8002dae:	22f8      	movs	r2, #248	; 0xf8
 8002db0:	4393      	bics	r3, r2
 8002db2:	0019      	movs	r1, r3
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	691b      	ldr	r3, [r3, #16]
 8002db8:	00da      	lsls	r2, r3, #3
 8002dba:	4b67      	ldr	r3, [pc, #412]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002dbc:	430a      	orrs	r2, r1
 8002dbe:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8002dc0:	e041      	b.n	8002e46 <HAL_RCC_OscConfig+0x21a>
      }
    }
    else
    {
      /* Check the HSI State */
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8002dc2:	687b      	ldr	r3, [r7, #4]
 8002dc4:	68db      	ldr	r3, [r3, #12]
 8002dc6:	2b00      	cmp	r3, #0
 8002dc8:	d024      	beq.n	8002e14 <HAL_RCC_OscConfig+0x1e8>
      {
       /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8002dca:	4b63      	ldr	r3, [pc, #396]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002dcc:	681a      	ldr	r2, [r3, #0]
 8002dce:	4b62      	ldr	r3, [pc, #392]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002dd0:	2101      	movs	r1, #1
 8002dd2:	430a      	orrs	r2, r1
 8002dd4:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002dd6:	f7ff fcdd 	bl	8002794 <HAL_GetTick>
 8002dda:	0003      	movs	r3, r0
 8002ddc:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002dde:	e008      	b.n	8002df2 <HAL_RCC_OscConfig+0x1c6>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002de0:	f7ff fcd8 	bl	8002794 <HAL_GetTick>
 8002de4:	0002      	movs	r2, r0
 8002de6:	69bb      	ldr	r3, [r7, #24]
 8002de8:	1ad3      	subs	r3, r2, r3
 8002dea:	2b02      	cmp	r3, #2
 8002dec:	d901      	bls.n	8002df2 <HAL_RCC_OscConfig+0x1c6>
          {
            return HAL_TIMEOUT;
 8002dee:	2303      	movs	r3, #3
 8002df0:	e227      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002df2:	4b59      	ldr	r3, [pc, #356]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	2202      	movs	r2, #2
 8002df8:	4013      	ands	r3, r2
 8002dfa:	d0f1      	beq.n	8002de0 <HAL_RCC_OscConfig+0x1b4>
          }
        }
                
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002dfc:	4b56      	ldr	r3, [pc, #344]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002dfe:	681b      	ldr	r3, [r3, #0]
 8002e00:	22f8      	movs	r2, #248	; 0xf8
 8002e02:	4393      	bics	r3, r2
 8002e04:	0019      	movs	r1, r3
 8002e06:	687b      	ldr	r3, [r7, #4]
 8002e08:	691b      	ldr	r3, [r3, #16]
 8002e0a:	00da      	lsls	r2, r3, #3
 8002e0c:	4b52      	ldr	r3, [pc, #328]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002e0e:	430a      	orrs	r2, r1
 8002e10:	601a      	str	r2, [r3, #0]
 8002e12:	e018      	b.n	8002e46 <HAL_RCC_OscConfig+0x21a>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8002e14:	4b50      	ldr	r3, [pc, #320]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002e16:	681a      	ldr	r2, [r3, #0]
 8002e18:	4b4f      	ldr	r3, [pc, #316]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002e1a:	2101      	movs	r1, #1
 8002e1c:	438a      	bics	r2, r1
 8002e1e:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002e20:	f7ff fcb8 	bl	8002794 <HAL_GetTick>
 8002e24:	0003      	movs	r3, r0
 8002e26:	61bb      	str	r3, [r7, #24]
        
        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002e28:	e008      	b.n	8002e3c <HAL_RCC_OscConfig+0x210>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002e2a:	f7ff fcb3 	bl	8002794 <HAL_GetTick>
 8002e2e:	0002      	movs	r2, r0
 8002e30:	69bb      	ldr	r3, [r7, #24]
 8002e32:	1ad3      	subs	r3, r2, r3
 8002e34:	2b02      	cmp	r3, #2
 8002e36:	d901      	bls.n	8002e3c <HAL_RCC_OscConfig+0x210>
          {
            return HAL_TIMEOUT;
 8002e38:	2303      	movs	r3, #3
 8002e3a:	e202      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002e3c:	4b46      	ldr	r3, [pc, #280]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002e3e:	681b      	ldr	r3, [r3, #0]
 8002e40:	2202      	movs	r2, #2
 8002e42:	4013      	ands	r3, r2
 8002e44:	d1f1      	bne.n	8002e2a <HAL_RCC_OscConfig+0x1fe>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	681b      	ldr	r3, [r3, #0]
 8002e4a:	2208      	movs	r2, #8
 8002e4c:	4013      	ands	r3, r2
 8002e4e:	d036      	beq.n	8002ebe <HAL_RCC_OscConfig+0x292>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
    
    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8002e50:	687b      	ldr	r3, [r7, #4]
 8002e52:	69db      	ldr	r3, [r3, #28]
 8002e54:	2b00      	cmp	r3, #0
 8002e56:	d019      	beq.n	8002e8c <HAL_RCC_OscConfig+0x260>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8002e58:	4b3f      	ldr	r3, [pc, #252]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002e5a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002e5c:	4b3e      	ldr	r3, [pc, #248]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002e5e:	2101      	movs	r1, #1
 8002e60:	430a      	orrs	r2, r1
 8002e62:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002e64:	f7ff fc96 	bl	8002794 <HAL_GetTick>
 8002e68:	0003      	movs	r3, r0
 8002e6a:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002e6c:	e008      	b.n	8002e80 <HAL_RCC_OscConfig+0x254>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002e6e:	f7ff fc91 	bl	8002794 <HAL_GetTick>
 8002e72:	0002      	movs	r2, r0
 8002e74:	69bb      	ldr	r3, [r7, #24]
 8002e76:	1ad3      	subs	r3, r2, r3
 8002e78:	2b02      	cmp	r3, #2
 8002e7a:	d901      	bls.n	8002e80 <HAL_RCC_OscConfig+0x254>
        {
          return HAL_TIMEOUT;
 8002e7c:	2303      	movs	r3, #3
 8002e7e:	e1e0      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002e80:	4b35      	ldr	r3, [pc, #212]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002e82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002e84:	2202      	movs	r2, #2
 8002e86:	4013      	ands	r3, r2
 8002e88:	d0f1      	beq.n	8002e6e <HAL_RCC_OscConfig+0x242>
 8002e8a:	e018      	b.n	8002ebe <HAL_RCC_OscConfig+0x292>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8002e8c:	4b32      	ldr	r3, [pc, #200]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002e8e:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002e90:	4b31      	ldr	r3, [pc, #196]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002e92:	2101      	movs	r1, #1
 8002e94:	438a      	bics	r2, r1
 8002e96:	625a      	str	r2, [r3, #36]	; 0x24
      
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002e98:	f7ff fc7c 	bl	8002794 <HAL_GetTick>
 8002e9c:	0003      	movs	r3, r0
 8002e9e:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSI is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002ea0:	e008      	b.n	8002eb4 <HAL_RCC_OscConfig+0x288>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002ea2:	f7ff fc77 	bl	8002794 <HAL_GetTick>
 8002ea6:	0002      	movs	r2, r0
 8002ea8:	69bb      	ldr	r3, [r7, #24]
 8002eaa:	1ad3      	subs	r3, r2, r3
 8002eac:	2b02      	cmp	r3, #2
 8002eae:	d901      	bls.n	8002eb4 <HAL_RCC_OscConfig+0x288>
        {
          return HAL_TIMEOUT;
 8002eb0:	2303      	movs	r3, #3
 8002eb2:	e1c6      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002eb4:	4b28      	ldr	r3, [pc, #160]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002eb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002eb8:	2202      	movs	r2, #2
 8002eba:	4013      	ands	r3, r2
 8002ebc:	d1f1      	bne.n	8002ea2 <HAL_RCC_OscConfig+0x276>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/ 
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	681b      	ldr	r3, [r3, #0]
 8002ec2:	2204      	movs	r2, #4
 8002ec4:	4013      	ands	r3, r2
 8002ec6:	d100      	bne.n	8002eca <HAL_RCC_OscConfig+0x29e>
 8002ec8:	e0b4      	b.n	8003034 <HAL_RCC_OscConfig+0x408>
  {
    FlagStatus       pwrclkchanged = RESET;
 8002eca:	201f      	movs	r0, #31
 8002ecc:	183b      	adds	r3, r7, r0
 8002ece:	2200      	movs	r2, #0
 8002ed0:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002ed2:	4b21      	ldr	r3, [pc, #132]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002ed4:	69da      	ldr	r2, [r3, #28]
 8002ed6:	2380      	movs	r3, #128	; 0x80
 8002ed8:	055b      	lsls	r3, r3, #21
 8002eda:	4013      	ands	r3, r2
 8002edc:	d110      	bne.n	8002f00 <HAL_RCC_OscConfig+0x2d4>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8002ede:	4b1e      	ldr	r3, [pc, #120]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002ee0:	69da      	ldr	r2, [r3, #28]
 8002ee2:	4b1d      	ldr	r3, [pc, #116]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002ee4:	2180      	movs	r1, #128	; 0x80
 8002ee6:	0549      	lsls	r1, r1, #21
 8002ee8:	430a      	orrs	r2, r1
 8002eea:	61da      	str	r2, [r3, #28]
 8002eec:	4b1a      	ldr	r3, [pc, #104]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002eee:	69da      	ldr	r2, [r3, #28]
 8002ef0:	2380      	movs	r3, #128	; 0x80
 8002ef2:	055b      	lsls	r3, r3, #21
 8002ef4:	4013      	ands	r3, r2
 8002ef6:	60fb      	str	r3, [r7, #12]
 8002ef8:	68fb      	ldr	r3, [r7, #12]
      pwrclkchanged = SET;
 8002efa:	183b      	adds	r3, r7, r0
 8002efc:	2201      	movs	r2, #1
 8002efe:	701a      	strb	r2, [r3, #0]
    }
    
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002f00:	4b18      	ldr	r3, [pc, #96]	; (8002f64 <HAL_RCC_OscConfig+0x338>)
 8002f02:	681a      	ldr	r2, [r3, #0]
 8002f04:	2380      	movs	r3, #128	; 0x80
 8002f06:	005b      	lsls	r3, r3, #1
 8002f08:	4013      	ands	r3, r2
 8002f0a:	d11a      	bne.n	8002f42 <HAL_RCC_OscConfig+0x316>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8002f0c:	4b15      	ldr	r3, [pc, #84]	; (8002f64 <HAL_RCC_OscConfig+0x338>)
 8002f0e:	681a      	ldr	r2, [r3, #0]
 8002f10:	4b14      	ldr	r3, [pc, #80]	; (8002f64 <HAL_RCC_OscConfig+0x338>)
 8002f12:	2180      	movs	r1, #128	; 0x80
 8002f14:	0049      	lsls	r1, r1, #1
 8002f16:	430a      	orrs	r2, r1
 8002f18:	601a      	str	r2, [r3, #0]
      
      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8002f1a:	f7ff fc3b 	bl	8002794 <HAL_GetTick>
 8002f1e:	0003      	movs	r3, r0
 8002f20:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002f22:	e008      	b.n	8002f36 <HAL_RCC_OscConfig+0x30a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002f24:	f7ff fc36 	bl	8002794 <HAL_GetTick>
 8002f28:	0002      	movs	r2, r0
 8002f2a:	69bb      	ldr	r3, [r7, #24]
 8002f2c:	1ad3      	subs	r3, r2, r3
 8002f2e:	2b64      	cmp	r3, #100	; 0x64
 8002f30:	d901      	bls.n	8002f36 <HAL_RCC_OscConfig+0x30a>
        {
          return HAL_TIMEOUT;
 8002f32:	2303      	movs	r3, #3
 8002f34:	e185      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002f36:	4b0b      	ldr	r3, [pc, #44]	; (8002f64 <HAL_RCC_OscConfig+0x338>)
 8002f38:	681a      	ldr	r2, [r3, #0]
 8002f3a:	2380      	movs	r3, #128	; 0x80
 8002f3c:	005b      	lsls	r3, r3, #1
 8002f3e:	4013      	ands	r3, r2
 8002f40:	d0f0      	beq.n	8002f24 <HAL_RCC_OscConfig+0x2f8>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002f42:	687b      	ldr	r3, [r7, #4]
 8002f44:	689b      	ldr	r3, [r3, #8]
 8002f46:	2b01      	cmp	r3, #1
 8002f48:	d10e      	bne.n	8002f68 <HAL_RCC_OscConfig+0x33c>
 8002f4a:	4b03      	ldr	r3, [pc, #12]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002f4c:	6a1a      	ldr	r2, [r3, #32]
 8002f4e:	4b02      	ldr	r3, [pc, #8]	; (8002f58 <HAL_RCC_OscConfig+0x32c>)
 8002f50:	2101      	movs	r1, #1
 8002f52:	430a      	orrs	r2, r1
 8002f54:	621a      	str	r2, [r3, #32]
 8002f56:	e035      	b.n	8002fc4 <HAL_RCC_OscConfig+0x398>
 8002f58:	40021000 	.word	0x40021000
 8002f5c:	fffeffff 	.word	0xfffeffff
 8002f60:	fffbffff 	.word	0xfffbffff
 8002f64:	40007000 	.word	0x40007000
 8002f68:	687b      	ldr	r3, [r7, #4]
 8002f6a:	689b      	ldr	r3, [r3, #8]
 8002f6c:	2b00      	cmp	r3, #0
 8002f6e:	d10c      	bne.n	8002f8a <HAL_RCC_OscConfig+0x35e>
 8002f70:	4bb6      	ldr	r3, [pc, #728]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8002f72:	6a1a      	ldr	r2, [r3, #32]
 8002f74:	4bb5      	ldr	r3, [pc, #724]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8002f76:	2101      	movs	r1, #1
 8002f78:	438a      	bics	r2, r1
 8002f7a:	621a      	str	r2, [r3, #32]
 8002f7c:	4bb3      	ldr	r3, [pc, #716]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8002f7e:	6a1a      	ldr	r2, [r3, #32]
 8002f80:	4bb2      	ldr	r3, [pc, #712]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8002f82:	2104      	movs	r1, #4
 8002f84:	438a      	bics	r2, r1
 8002f86:	621a      	str	r2, [r3, #32]
 8002f88:	e01c      	b.n	8002fc4 <HAL_RCC_OscConfig+0x398>
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	689b      	ldr	r3, [r3, #8]
 8002f8e:	2b05      	cmp	r3, #5
 8002f90:	d10c      	bne.n	8002fac <HAL_RCC_OscConfig+0x380>
 8002f92:	4bae      	ldr	r3, [pc, #696]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8002f94:	6a1a      	ldr	r2, [r3, #32]
 8002f96:	4bad      	ldr	r3, [pc, #692]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8002f98:	2104      	movs	r1, #4
 8002f9a:	430a      	orrs	r2, r1
 8002f9c:	621a      	str	r2, [r3, #32]
 8002f9e:	4bab      	ldr	r3, [pc, #684]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8002fa0:	6a1a      	ldr	r2, [r3, #32]
 8002fa2:	4baa      	ldr	r3, [pc, #680]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8002fa4:	2101      	movs	r1, #1
 8002fa6:	430a      	orrs	r2, r1
 8002fa8:	621a      	str	r2, [r3, #32]
 8002faa:	e00b      	b.n	8002fc4 <HAL_RCC_OscConfig+0x398>
 8002fac:	4ba7      	ldr	r3, [pc, #668]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8002fae:	6a1a      	ldr	r2, [r3, #32]
 8002fb0:	4ba6      	ldr	r3, [pc, #664]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8002fb2:	2101      	movs	r1, #1
 8002fb4:	438a      	bics	r2, r1
 8002fb6:	621a      	str	r2, [r3, #32]
 8002fb8:	4ba4      	ldr	r3, [pc, #656]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8002fba:	6a1a      	ldr	r2, [r3, #32]
 8002fbc:	4ba3      	ldr	r3, [pc, #652]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8002fbe:	2104      	movs	r1, #4
 8002fc0:	438a      	bics	r2, r1
 8002fc2:	621a      	str	r2, [r3, #32]
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	689b      	ldr	r3, [r3, #8]
 8002fc8:	2b00      	cmp	r3, #0
 8002fca:	d014      	beq.n	8002ff6 <HAL_RCC_OscConfig+0x3ca>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002fcc:	f7ff fbe2 	bl	8002794 <HAL_GetTick>
 8002fd0:	0003      	movs	r3, r0
 8002fd2:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002fd4:	e009      	b.n	8002fea <HAL_RCC_OscConfig+0x3be>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002fd6:	f7ff fbdd 	bl	8002794 <HAL_GetTick>
 8002fda:	0002      	movs	r2, r0
 8002fdc:	69bb      	ldr	r3, [r7, #24]
 8002fde:	1ad3      	subs	r3, r2, r3
 8002fe0:	4a9b      	ldr	r2, [pc, #620]	; (8003250 <HAL_RCC_OscConfig+0x624>)
 8002fe2:	4293      	cmp	r3, r2
 8002fe4:	d901      	bls.n	8002fea <HAL_RCC_OscConfig+0x3be>
        {
          return HAL_TIMEOUT;
 8002fe6:	2303      	movs	r3, #3
 8002fe8:	e12b      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002fea:	4b98      	ldr	r3, [pc, #608]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8002fec:	6a1b      	ldr	r3, [r3, #32]
 8002fee:	2202      	movs	r2, #2
 8002ff0:	4013      	ands	r3, r2
 8002ff2:	d0f0      	beq.n	8002fd6 <HAL_RCC_OscConfig+0x3aa>
 8002ff4:	e013      	b.n	800301e <HAL_RCC_OscConfig+0x3f2>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002ff6:	f7ff fbcd 	bl	8002794 <HAL_GetTick>
 8002ffa:	0003      	movs	r3, r0
 8002ffc:	61bb      	str	r3, [r7, #24]
      
      /* Wait till LSE is disabled */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002ffe:	e009      	b.n	8003014 <HAL_RCC_OscConfig+0x3e8>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003000:	f7ff fbc8 	bl	8002794 <HAL_GetTick>
 8003004:	0002      	movs	r2, r0
 8003006:	69bb      	ldr	r3, [r7, #24]
 8003008:	1ad3      	subs	r3, r2, r3
 800300a:	4a91      	ldr	r2, [pc, #580]	; (8003250 <HAL_RCC_OscConfig+0x624>)
 800300c:	4293      	cmp	r3, r2
 800300e:	d901      	bls.n	8003014 <HAL_RCC_OscConfig+0x3e8>
        {
          return HAL_TIMEOUT;
 8003010:	2303      	movs	r3, #3
 8003012:	e116      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8003014:	4b8d      	ldr	r3, [pc, #564]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8003016:	6a1b      	ldr	r3, [r3, #32]
 8003018:	2202      	movs	r2, #2
 800301a:	4013      	ands	r3, r2
 800301c:	d1f0      	bne.n	8003000 <HAL_RCC_OscConfig+0x3d4>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 800301e:	231f      	movs	r3, #31
 8003020:	18fb      	adds	r3, r7, r3
 8003022:	781b      	ldrb	r3, [r3, #0]
 8003024:	2b01      	cmp	r3, #1
 8003026:	d105      	bne.n	8003034 <HAL_RCC_OscConfig+0x408>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8003028:	4b88      	ldr	r3, [pc, #544]	; (800324c <HAL_RCC_OscConfig+0x620>)
 800302a:	69da      	ldr	r2, [r3, #28]
 800302c:	4b87      	ldr	r3, [pc, #540]	; (800324c <HAL_RCC_OscConfig+0x620>)
 800302e:	4989      	ldr	r1, [pc, #548]	; (8003254 <HAL_RCC_OscConfig+0x628>)
 8003030:	400a      	ands	r2, r1
 8003032:	61da      	str	r2, [r3, #28]
    }
  }

  /*----------------------------- HSI14 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI14) == RCC_OSCILLATORTYPE_HSI14)
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	2210      	movs	r2, #16
 800303a:	4013      	ands	r3, r2
 800303c:	d063      	beq.n	8003106 <HAL_RCC_OscConfig+0x4da>
    /* Check the parameters */
    assert_param(IS_RCC_HSI14(RCC_OscInitStruct->HSI14State));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSI14CalibrationValue));

    /* Check the HSI14 State */
    if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ON)
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	695b      	ldr	r3, [r3, #20]
 8003042:	2b01      	cmp	r3, #1
 8003044:	d12a      	bne.n	800309c <HAL_RCC_OscConfig+0x470>
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 8003046:	4b81      	ldr	r3, [pc, #516]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8003048:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800304a:	4b80      	ldr	r3, [pc, #512]	; (800324c <HAL_RCC_OscConfig+0x620>)
 800304c:	2104      	movs	r1, #4
 800304e:	430a      	orrs	r2, r1
 8003050:	635a      	str	r2, [r3, #52]	; 0x34

      /* Enable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_ENABLE();
 8003052:	4b7e      	ldr	r3, [pc, #504]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8003054:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003056:	4b7d      	ldr	r3, [pc, #500]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8003058:	2101      	movs	r1, #1
 800305a:	430a      	orrs	r2, r1
 800305c:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 800305e:	f7ff fb99 	bl	8002794 <HAL_GetTick>
 8003062:	0003      	movs	r3, r0
 8003064:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 8003066:	e008      	b.n	800307a <HAL_RCC_OscConfig+0x44e>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 8003068:	f7ff fb94 	bl	8002794 <HAL_GetTick>
 800306c:	0002      	movs	r2, r0
 800306e:	69bb      	ldr	r3, [r7, #24]
 8003070:	1ad3      	subs	r3, r2, r3
 8003072:	2b02      	cmp	r3, #2
 8003074:	d901      	bls.n	800307a <HAL_RCC_OscConfig+0x44e>
        {
          return HAL_TIMEOUT;
 8003076:	2303      	movs	r3, #3
 8003078:	e0e3      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) == RESET)
 800307a:	4b74      	ldr	r3, [pc, #464]	; (800324c <HAL_RCC_OscConfig+0x620>)
 800307c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800307e:	2202      	movs	r2, #2
 8003080:	4013      	ands	r3, r2
 8003082:	d0f1      	beq.n	8003068 <HAL_RCC_OscConfig+0x43c>
        }      
      } 

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 8003084:	4b71      	ldr	r3, [pc, #452]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8003086:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003088:	22f8      	movs	r2, #248	; 0xf8
 800308a:	4393      	bics	r3, r2
 800308c:	0019      	movs	r1, r3
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	699b      	ldr	r3, [r3, #24]
 8003092:	00da      	lsls	r2, r3, #3
 8003094:	4b6d      	ldr	r3, [pc, #436]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8003096:	430a      	orrs	r2, r1
 8003098:	635a      	str	r2, [r3, #52]	; 0x34
 800309a:	e034      	b.n	8003106 <HAL_RCC_OscConfig+0x4da>
    }
    else if(RCC_OscInitStruct->HSI14State == RCC_HSI14_ADC_CONTROL)
 800309c:	687b      	ldr	r3, [r7, #4]
 800309e:	695b      	ldr	r3, [r3, #20]
 80030a0:	3305      	adds	r3, #5
 80030a2:	d111      	bne.n	80030c8 <HAL_RCC_OscConfig+0x49c>
    {
      /* Enable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_ENABLE();
 80030a4:	4b69      	ldr	r3, [pc, #420]	; (800324c <HAL_RCC_OscConfig+0x620>)
 80030a6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80030a8:	4b68      	ldr	r3, [pc, #416]	; (800324c <HAL_RCC_OscConfig+0x620>)
 80030aa:	2104      	movs	r1, #4
 80030ac:	438a      	bics	r2, r1
 80030ae:	635a      	str	r2, [r3, #52]	; 0x34

      /* Adjusts the Internal High Speed oscillator 14Mhz (HSI14) calibration value. */
      __HAL_RCC_HSI14_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSI14CalibrationValue);
 80030b0:	4b66      	ldr	r3, [pc, #408]	; (800324c <HAL_RCC_OscConfig+0x620>)
 80030b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80030b4:	22f8      	movs	r2, #248	; 0xf8
 80030b6:	4393      	bics	r3, r2
 80030b8:	0019      	movs	r1, r3
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	699b      	ldr	r3, [r3, #24]
 80030be:	00da      	lsls	r2, r3, #3
 80030c0:	4b62      	ldr	r3, [pc, #392]	; (800324c <HAL_RCC_OscConfig+0x620>)
 80030c2:	430a      	orrs	r2, r1
 80030c4:	635a      	str	r2, [r3, #52]	; 0x34
 80030c6:	e01e      	b.n	8003106 <HAL_RCC_OscConfig+0x4da>
    }
    else
    {
      /* Disable ADC control of the Internal High Speed oscillator HSI14 */
      __HAL_RCC_HSI14ADC_DISABLE();
 80030c8:	4b60      	ldr	r3, [pc, #384]	; (800324c <HAL_RCC_OscConfig+0x620>)
 80030ca:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80030cc:	4b5f      	ldr	r3, [pc, #380]	; (800324c <HAL_RCC_OscConfig+0x620>)
 80030ce:	2104      	movs	r1, #4
 80030d0:	430a      	orrs	r2, r1
 80030d2:	635a      	str	r2, [r3, #52]	; 0x34

      /* Disable the Internal High Speed oscillator (HSI). */
      __HAL_RCC_HSI14_DISABLE();
 80030d4:	4b5d      	ldr	r3, [pc, #372]	; (800324c <HAL_RCC_OscConfig+0x620>)
 80030d6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80030d8:	4b5c      	ldr	r3, [pc, #368]	; (800324c <HAL_RCC_OscConfig+0x620>)
 80030da:	2101      	movs	r1, #1
 80030dc:	438a      	bics	r2, r1
 80030de:	635a      	str	r2, [r3, #52]	; 0x34

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80030e0:	f7ff fb58 	bl	8002794 <HAL_GetTick>
 80030e4:	0003      	movs	r3, r0
 80030e6:	61bb      	str	r3, [r7, #24]
      
      /* Wait till HSI is ready */  
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 80030e8:	e008      	b.n	80030fc <HAL_RCC_OscConfig+0x4d0>
      {
        if((HAL_GetTick() - tickstart) > HSI14_TIMEOUT_VALUE)
 80030ea:	f7ff fb53 	bl	8002794 <HAL_GetTick>
 80030ee:	0002      	movs	r2, r0
 80030f0:	69bb      	ldr	r3, [r7, #24]
 80030f2:	1ad3      	subs	r3, r2, r3
 80030f4:	2b02      	cmp	r3, #2
 80030f6:	d901      	bls.n	80030fc <HAL_RCC_OscConfig+0x4d0>
        {
          return HAL_TIMEOUT;
 80030f8:	2303      	movs	r3, #3
 80030fa:	e0a2      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI14RDY) != RESET)
 80030fc:	4b53      	ldr	r3, [pc, #332]	; (800324c <HAL_RCC_OscConfig+0x620>)
 80030fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003100:	2202      	movs	r2, #2
 8003102:	4013      	ands	r3, r2
 8003104:	d1f1      	bne.n	80030ea <HAL_RCC_OscConfig+0x4be>
#endif /* RCC_HSI48_SUPPORT */
       
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	6a1b      	ldr	r3, [r3, #32]
 800310a:	2b00      	cmp	r3, #0
 800310c:	d100      	bne.n	8003110 <HAL_RCC_OscConfig+0x4e4>
 800310e:	e097      	b.n	8003240 <HAL_RCC_OscConfig+0x614>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003110:	4b4e      	ldr	r3, [pc, #312]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8003112:	685b      	ldr	r3, [r3, #4]
 8003114:	220c      	movs	r2, #12
 8003116:	4013      	ands	r3, r2
 8003118:	2b08      	cmp	r3, #8
 800311a:	d100      	bne.n	800311e <HAL_RCC_OscConfig+0x4f2>
 800311c:	e06b      	b.n	80031f6 <HAL_RCC_OscConfig+0x5ca>
    { 
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	6a1b      	ldr	r3, [r3, #32]
 8003122:	2b02      	cmp	r3, #2
 8003124:	d14c      	bne.n	80031c0 <HAL_RCC_OscConfig+0x594>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
  
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003126:	4b49      	ldr	r3, [pc, #292]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8003128:	681a      	ldr	r2, [r3, #0]
 800312a:	4b48      	ldr	r3, [pc, #288]	; (800324c <HAL_RCC_OscConfig+0x620>)
 800312c:	494a      	ldr	r1, [pc, #296]	; (8003258 <HAL_RCC_OscConfig+0x62c>)
 800312e:	400a      	ands	r2, r1
 8003130:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003132:	f7ff fb2f 	bl	8002794 <HAL_GetTick>
 8003136:	0003      	movs	r3, r0
 8003138:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800313a:	e008      	b.n	800314e <HAL_RCC_OscConfig+0x522>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800313c:	f7ff fb2a 	bl	8002794 <HAL_GetTick>
 8003140:	0002      	movs	r2, r0
 8003142:	69bb      	ldr	r3, [r7, #24]
 8003144:	1ad3      	subs	r3, r2, r3
 8003146:	2b02      	cmp	r3, #2
 8003148:	d901      	bls.n	800314e <HAL_RCC_OscConfig+0x522>
          {
            return HAL_TIMEOUT;
 800314a:	2303      	movs	r3, #3
 800314c:	e079      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800314e:	4b3f      	ldr	r3, [pc, #252]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8003150:	681a      	ldr	r2, [r3, #0]
 8003152:	2380      	movs	r3, #128	; 0x80
 8003154:	049b      	lsls	r3, r3, #18
 8003156:	4013      	ands	r3, r2
 8003158:	d1f0      	bne.n	800313c <HAL_RCC_OscConfig+0x510>
          }
        }

        /* Configure the main PLL clock source, predivider and multiplication factor. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 800315a:	4b3c      	ldr	r3, [pc, #240]	; (800324c <HAL_RCC_OscConfig+0x620>)
 800315c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800315e:	220f      	movs	r2, #15
 8003160:	4393      	bics	r3, r2
 8003162:	0019      	movs	r1, r3
 8003164:	687b      	ldr	r3, [r7, #4]
 8003166:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003168:	4b38      	ldr	r3, [pc, #224]	; (800324c <HAL_RCC_OscConfig+0x620>)
 800316a:	430a      	orrs	r2, r1
 800316c:	62da      	str	r2, [r3, #44]	; 0x2c
 800316e:	4b37      	ldr	r3, [pc, #220]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8003170:	685b      	ldr	r3, [r3, #4]
 8003172:	4a3a      	ldr	r2, [pc, #232]	; (800325c <HAL_RCC_OscConfig+0x630>)
 8003174:	4013      	ands	r3, r2
 8003176:	0019      	movs	r1, r3
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800317c:	687b      	ldr	r3, [r7, #4]
 800317e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003180:	431a      	orrs	r2, r3
 8003182:	4b32      	ldr	r3, [pc, #200]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8003184:	430a      	orrs	r2, r1
 8003186:	605a      	str	r2, [r3, #4]
                             RCC_OscInitStruct->PLL.PREDIV,
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8003188:	4b30      	ldr	r3, [pc, #192]	; (800324c <HAL_RCC_OscConfig+0x620>)
 800318a:	681a      	ldr	r2, [r3, #0]
 800318c:	4b2f      	ldr	r3, [pc, #188]	; (800324c <HAL_RCC_OscConfig+0x620>)
 800318e:	2180      	movs	r1, #128	; 0x80
 8003190:	0449      	lsls	r1, r1, #17
 8003192:	430a      	orrs	r2, r1
 8003194:	601a      	str	r2, [r3, #0]
        
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003196:	f7ff fafd 	bl	8002794 <HAL_GetTick>
 800319a:	0003      	movs	r3, r0
 800319c:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 800319e:	e008      	b.n	80031b2 <HAL_RCC_OscConfig+0x586>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80031a0:	f7ff faf8 	bl	8002794 <HAL_GetTick>
 80031a4:	0002      	movs	r2, r0
 80031a6:	69bb      	ldr	r3, [r7, #24]
 80031a8:	1ad3      	subs	r3, r2, r3
 80031aa:	2b02      	cmp	r3, #2
 80031ac:	d901      	bls.n	80031b2 <HAL_RCC_OscConfig+0x586>
          {
            return HAL_TIMEOUT;
 80031ae:	2303      	movs	r3, #3
 80031b0:	e047      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80031b2:	4b26      	ldr	r3, [pc, #152]	; (800324c <HAL_RCC_OscConfig+0x620>)
 80031b4:	681a      	ldr	r2, [r3, #0]
 80031b6:	2380      	movs	r3, #128	; 0x80
 80031b8:	049b      	lsls	r3, r3, #18
 80031ba:	4013      	ands	r3, r2
 80031bc:	d0f0      	beq.n	80031a0 <HAL_RCC_OscConfig+0x574>
 80031be:	e03f      	b.n	8003240 <HAL_RCC_OscConfig+0x614>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80031c0:	4b22      	ldr	r3, [pc, #136]	; (800324c <HAL_RCC_OscConfig+0x620>)
 80031c2:	681a      	ldr	r2, [r3, #0]
 80031c4:	4b21      	ldr	r3, [pc, #132]	; (800324c <HAL_RCC_OscConfig+0x620>)
 80031c6:	4924      	ldr	r1, [pc, #144]	; (8003258 <HAL_RCC_OscConfig+0x62c>)
 80031c8:	400a      	ands	r2, r1
 80031ca:	601a      	str	r2, [r3, #0]
 
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80031cc:	f7ff fae2 	bl	8002794 <HAL_GetTick>
 80031d0:	0003      	movs	r3, r0
 80031d2:	61bb      	str	r3, [r7, #24]
        
        /* Wait till PLL is disabled */  
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80031d4:	e008      	b.n	80031e8 <HAL_RCC_OscConfig+0x5bc>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80031d6:	f7ff fadd 	bl	8002794 <HAL_GetTick>
 80031da:	0002      	movs	r2, r0
 80031dc:	69bb      	ldr	r3, [r7, #24]
 80031de:	1ad3      	subs	r3, r2, r3
 80031e0:	2b02      	cmp	r3, #2
 80031e2:	d901      	bls.n	80031e8 <HAL_RCC_OscConfig+0x5bc>
          {
            return HAL_TIMEOUT;
 80031e4:	2303      	movs	r3, #3
 80031e6:	e02c      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80031e8:	4b18      	ldr	r3, [pc, #96]	; (800324c <HAL_RCC_OscConfig+0x620>)
 80031ea:	681a      	ldr	r2, [r3, #0]
 80031ec:	2380      	movs	r3, #128	; 0x80
 80031ee:	049b      	lsls	r3, r3, #18
 80031f0:	4013      	ands	r3, r2
 80031f2:	d1f0      	bne.n	80031d6 <HAL_RCC_OscConfig+0x5aa>
 80031f4:	e024      	b.n	8003240 <HAL_RCC_OscConfig+0x614>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	6a1b      	ldr	r3, [r3, #32]
 80031fa:	2b01      	cmp	r3, #1
 80031fc:	d101      	bne.n	8003202 <HAL_RCC_OscConfig+0x5d6>
      {
        return HAL_ERROR;
 80031fe:	2301      	movs	r3, #1
 8003200:	e01f      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config  = RCC->CFGR;
 8003202:	4b12      	ldr	r3, [pc, #72]	; (800324c <HAL_RCC_OscConfig+0x620>)
 8003204:	685b      	ldr	r3, [r3, #4]
 8003206:	617b      	str	r3, [r7, #20]
        pll_config2 = RCC->CFGR2;
 8003208:	4b10      	ldr	r3, [pc, #64]	; (800324c <HAL_RCC_OscConfig+0x620>)
 800320a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800320c:	613b      	str	r3, [r7, #16]
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 800320e:	697a      	ldr	r2, [r7, #20]
 8003210:	2380      	movs	r3, #128	; 0x80
 8003212:	025b      	lsls	r3, r3, #9
 8003214:	401a      	ands	r2, r3
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800321a:	429a      	cmp	r2, r3
 800321c:	d10e      	bne.n	800323c <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 800321e:	693b      	ldr	r3, [r7, #16]
 8003220:	220f      	movs	r2, #15
 8003222:	401a      	ands	r2, r3
 8003224:	687b      	ldr	r3, [r7, #4]
 8003226:	6adb      	ldr	r3, [r3, #44]	; 0x2c
        if((READ_BIT(pll_config,  RCC_CFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8003228:	429a      	cmp	r2, r3
 800322a:	d107      	bne.n	800323c <HAL_RCC_OscConfig+0x610>
           (READ_BIT(pll_config,  RCC_CFGR_PLLMUL)  != RCC_OscInitStruct->PLL.PLLMUL))
 800322c:	697a      	ldr	r2, [r7, #20]
 800322e:	23f0      	movs	r3, #240	; 0xf0
 8003230:	039b      	lsls	r3, r3, #14
 8003232:	401a      	ands	r2, r3
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config2, RCC_CFGR2_PREDIV) != RCC_OscInitStruct->PLL.PREDIV)    ||
 8003238:	429a      	cmp	r2, r3
 800323a:	d001      	beq.n	8003240 <HAL_RCC_OscConfig+0x614>
        {
          return HAL_ERROR;
 800323c:	2301      	movs	r3, #1
 800323e:	e000      	b.n	8003242 <HAL_RCC_OscConfig+0x616>
        }
      }
    }
  }

  return HAL_OK;
 8003240:	2300      	movs	r3, #0
}
 8003242:	0018      	movs	r0, r3
 8003244:	46bd      	mov	sp, r7
 8003246:	b008      	add	sp, #32
 8003248:	bd80      	pop	{r7, pc}
 800324a:	46c0      	nop			; (mov r8, r8)
 800324c:	40021000 	.word	0x40021000
 8003250:	00001388 	.word	0x00001388
 8003254:	efffffff 	.word	0xefffffff
 8003258:	feffffff 	.word	0xfeffffff
 800325c:	ffc2ffff 	.word	0xffc2ffff

08003260 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8003260:	b580      	push	{r7, lr}
 8003262:	b084      	sub	sp, #16
 8003264:	af00      	add	r7, sp, #0
 8003266:	6078      	str	r0, [r7, #4]
 8003268:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 800326a:	687b      	ldr	r3, [r7, #4]
 800326c:	2b00      	cmp	r3, #0
 800326e:	d101      	bne.n	8003274 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8003270:	2301      	movs	r3, #1
 8003272:	e0b3      	b.n	80033dc <HAL_RCC_ClockConfig+0x17c>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
  must be correctly programmed according to the frequency of the CPU clock 
    (HCLK) of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8003274:	4b5b      	ldr	r3, [pc, #364]	; (80033e4 <HAL_RCC_ClockConfig+0x184>)
 8003276:	681b      	ldr	r3, [r3, #0]
 8003278:	2201      	movs	r2, #1
 800327a:	4013      	ands	r3, r2
 800327c:	683a      	ldr	r2, [r7, #0]
 800327e:	429a      	cmp	r2, r3
 8003280:	d911      	bls.n	80032a6 <HAL_RCC_ClockConfig+0x46>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003282:	4b58      	ldr	r3, [pc, #352]	; (80033e4 <HAL_RCC_ClockConfig+0x184>)
 8003284:	681b      	ldr	r3, [r3, #0]
 8003286:	2201      	movs	r2, #1
 8003288:	4393      	bics	r3, r2
 800328a:	0019      	movs	r1, r3
 800328c:	4b55      	ldr	r3, [pc, #340]	; (80033e4 <HAL_RCC_ClockConfig+0x184>)
 800328e:	683a      	ldr	r2, [r7, #0]
 8003290:	430a      	orrs	r2, r1
 8003292:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003294:	4b53      	ldr	r3, [pc, #332]	; (80033e4 <HAL_RCC_ClockConfig+0x184>)
 8003296:	681b      	ldr	r3, [r3, #0]
 8003298:	2201      	movs	r2, #1
 800329a:	4013      	ands	r3, r2
 800329c:	683a      	ldr	r2, [r7, #0]
 800329e:	429a      	cmp	r2, r3
 80032a0:	d001      	beq.n	80032a6 <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 80032a2:	2301      	movs	r3, #1
 80032a4:	e09a      	b.n	80033dc <HAL_RCC_ClockConfig+0x17c>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	2202      	movs	r2, #2
 80032ac:	4013      	ands	r3, r2
 80032ae:	d015      	beq.n	80032dc <HAL_RCC_ClockConfig+0x7c>
  {
    /* Set the highest APB divider in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	681b      	ldr	r3, [r3, #0]
 80032b4:	2204      	movs	r2, #4
 80032b6:	4013      	ands	r3, r2
 80032b8:	d006      	beq.n	80032c8 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_HCLK_DIV16);
 80032ba:	4b4b      	ldr	r3, [pc, #300]	; (80033e8 <HAL_RCC_ClockConfig+0x188>)
 80032bc:	685a      	ldr	r2, [r3, #4]
 80032be:	4b4a      	ldr	r3, [pc, #296]	; (80033e8 <HAL_RCC_ClockConfig+0x188>)
 80032c0:	21e0      	movs	r1, #224	; 0xe0
 80032c2:	00c9      	lsls	r1, r1, #3
 80032c4:	430a      	orrs	r2, r1
 80032c6:	605a      	str	r2, [r3, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80032c8:	4b47      	ldr	r3, [pc, #284]	; (80033e8 <HAL_RCC_ClockConfig+0x188>)
 80032ca:	685b      	ldr	r3, [r3, #4]
 80032cc:	22f0      	movs	r2, #240	; 0xf0
 80032ce:	4393      	bics	r3, r2
 80032d0:	0019      	movs	r1, r3
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	689a      	ldr	r2, [r3, #8]
 80032d6:	4b44      	ldr	r3, [pc, #272]	; (80033e8 <HAL_RCC_ClockConfig+0x188>)
 80032d8:	430a      	orrs	r2, r1
 80032da:	605a      	str	r2, [r3, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	681b      	ldr	r3, [r3, #0]
 80032e0:	2201      	movs	r2, #1
 80032e2:	4013      	ands	r3, r2
 80032e4:	d040      	beq.n	8003368 <HAL_RCC_ClockConfig+0x108>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
    
    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80032e6:	687b      	ldr	r3, [r7, #4]
 80032e8:	685b      	ldr	r3, [r3, #4]
 80032ea:	2b01      	cmp	r3, #1
 80032ec:	d107      	bne.n	80032fe <HAL_RCC_ClockConfig+0x9e>
    {
      /* Check the HSE ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80032ee:	4b3e      	ldr	r3, [pc, #248]	; (80033e8 <HAL_RCC_ClockConfig+0x188>)
 80032f0:	681a      	ldr	r2, [r3, #0]
 80032f2:	2380      	movs	r3, #128	; 0x80
 80032f4:	029b      	lsls	r3, r3, #10
 80032f6:	4013      	ands	r3, r2
 80032f8:	d114      	bne.n	8003324 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 80032fa:	2301      	movs	r3, #1
 80032fc:	e06e      	b.n	80033dc <HAL_RCC_ClockConfig+0x17c>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80032fe:	687b      	ldr	r3, [r7, #4]
 8003300:	685b      	ldr	r3, [r3, #4]
 8003302:	2b02      	cmp	r3, #2
 8003304:	d107      	bne.n	8003316 <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the PLL ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003306:	4b38      	ldr	r3, [pc, #224]	; (80033e8 <HAL_RCC_ClockConfig+0x188>)
 8003308:	681a      	ldr	r2, [r3, #0]
 800330a:	2380      	movs	r3, #128	; 0x80
 800330c:	049b      	lsls	r3, r3, #18
 800330e:	4013      	ands	r3, r2
 8003310:	d108      	bne.n	8003324 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003312:	2301      	movs	r3, #1
 8003314:	e062      	b.n	80033dc <HAL_RCC_ClockConfig+0x17c>
#endif /* RCC_CFGR_SWS_HSI48 */
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */  
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8003316:	4b34      	ldr	r3, [pc, #208]	; (80033e8 <HAL_RCC_ClockConfig+0x188>)
 8003318:	681b      	ldr	r3, [r3, #0]
 800331a:	2202      	movs	r2, #2
 800331c:	4013      	ands	r3, r2
 800331e:	d101      	bne.n	8003324 <HAL_RCC_ClockConfig+0xc4>
      {
        return HAL_ERROR;
 8003320:	2301      	movs	r3, #1
 8003322:	e05b      	b.n	80033dc <HAL_RCC_ClockConfig+0x17c>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8003324:	4b30      	ldr	r3, [pc, #192]	; (80033e8 <HAL_RCC_ClockConfig+0x188>)
 8003326:	685b      	ldr	r3, [r3, #4]
 8003328:	2203      	movs	r2, #3
 800332a:	4393      	bics	r3, r2
 800332c:	0019      	movs	r1, r3
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	685a      	ldr	r2, [r3, #4]
 8003332:	4b2d      	ldr	r3, [pc, #180]	; (80033e8 <HAL_RCC_ClockConfig+0x188>)
 8003334:	430a      	orrs	r2, r1
 8003336:	605a      	str	r2, [r3, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8003338:	f7ff fa2c 	bl	8002794 <HAL_GetTick>
 800333c:	0003      	movs	r3, r0
 800333e:	60fb      	str	r3, [r7, #12]
    
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003340:	e009      	b.n	8003356 <HAL_RCC_ClockConfig+0xf6>
    {
      if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003342:	f7ff fa27 	bl	8002794 <HAL_GetTick>
 8003346:	0002      	movs	r2, r0
 8003348:	68fb      	ldr	r3, [r7, #12]
 800334a:	1ad3      	subs	r3, r2, r3
 800334c:	4a27      	ldr	r2, [pc, #156]	; (80033ec <HAL_RCC_ClockConfig+0x18c>)
 800334e:	4293      	cmp	r3, r2
 8003350:	d901      	bls.n	8003356 <HAL_RCC_ClockConfig+0xf6>
      {
        return HAL_TIMEOUT;
 8003352:	2303      	movs	r3, #3
 8003354:	e042      	b.n	80033dc <HAL_RCC_ClockConfig+0x17c>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003356:	4b24      	ldr	r3, [pc, #144]	; (80033e8 <HAL_RCC_ClockConfig+0x188>)
 8003358:	685b      	ldr	r3, [r3, #4]
 800335a:	220c      	movs	r2, #12
 800335c:	401a      	ands	r2, r3
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	685b      	ldr	r3, [r3, #4]
 8003362:	009b      	lsls	r3, r3, #2
 8003364:	429a      	cmp	r2, r3
 8003366:	d1ec      	bne.n	8003342 <HAL_RCC_ClockConfig+0xe2>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8003368:	4b1e      	ldr	r3, [pc, #120]	; (80033e4 <HAL_RCC_ClockConfig+0x184>)
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	2201      	movs	r2, #1
 800336e:	4013      	ands	r3, r2
 8003370:	683a      	ldr	r2, [r7, #0]
 8003372:	429a      	cmp	r2, r3
 8003374:	d211      	bcs.n	800339a <HAL_RCC_ClockConfig+0x13a>
  {    
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8003376:	4b1b      	ldr	r3, [pc, #108]	; (80033e4 <HAL_RCC_ClockConfig+0x184>)
 8003378:	681b      	ldr	r3, [r3, #0]
 800337a:	2201      	movs	r2, #1
 800337c:	4393      	bics	r3, r2
 800337e:	0019      	movs	r1, r3
 8003380:	4b18      	ldr	r3, [pc, #96]	; (80033e4 <HAL_RCC_ClockConfig+0x184>)
 8003382:	683a      	ldr	r2, [r7, #0]
 8003384:	430a      	orrs	r2, r1
 8003386:	601a      	str	r2, [r3, #0]
    
    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003388:	4b16      	ldr	r3, [pc, #88]	; (80033e4 <HAL_RCC_ClockConfig+0x184>)
 800338a:	681b      	ldr	r3, [r3, #0]
 800338c:	2201      	movs	r2, #1
 800338e:	4013      	ands	r3, r2
 8003390:	683a      	ldr	r2, [r7, #0]
 8003392:	429a      	cmp	r2, r3
 8003394:	d001      	beq.n	800339a <HAL_RCC_ClockConfig+0x13a>
    {
      return HAL_ERROR;
 8003396:	2301      	movs	r3, #1
 8003398:	e020      	b.n	80033dc <HAL_RCC_ClockConfig+0x17c>
    }
  }    

  /*-------------------------- PCLK1 Configuration ---------------------------*/ 
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800339a:	687b      	ldr	r3, [r7, #4]
 800339c:	681b      	ldr	r3, [r3, #0]
 800339e:	2204      	movs	r2, #4
 80033a0:	4013      	ands	r3, r2
 80033a2:	d009      	beq.n	80033b8 <HAL_RCC_ClockConfig+0x158>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE, RCC_ClkInitStruct->APB1CLKDivider);
 80033a4:	4b10      	ldr	r3, [pc, #64]	; (80033e8 <HAL_RCC_ClockConfig+0x188>)
 80033a6:	685b      	ldr	r3, [r3, #4]
 80033a8:	4a11      	ldr	r2, [pc, #68]	; (80033f0 <HAL_RCC_ClockConfig+0x190>)
 80033aa:	4013      	ands	r3, r2
 80033ac:	0019      	movs	r1, r3
 80033ae:	687b      	ldr	r3, [r7, #4]
 80033b0:	68da      	ldr	r2, [r3, #12]
 80033b2:	4b0d      	ldr	r3, [pc, #52]	; (80033e8 <HAL_RCC_ClockConfig+0x188>)
 80033b4:	430a      	orrs	r2, r1
 80033b6:	605a      	str	r2, [r3, #4]
  }
  
  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_BITNUMBER];
 80033b8:	f000 f820 	bl	80033fc <HAL_RCC_GetSysClockFreq>
 80033bc:	0001      	movs	r1, r0
 80033be:	4b0a      	ldr	r3, [pc, #40]	; (80033e8 <HAL_RCC_ClockConfig+0x188>)
 80033c0:	685b      	ldr	r3, [r3, #4]
 80033c2:	091b      	lsrs	r3, r3, #4
 80033c4:	220f      	movs	r2, #15
 80033c6:	4013      	ands	r3, r2
 80033c8:	4a0a      	ldr	r2, [pc, #40]	; (80033f4 <HAL_RCC_ClockConfig+0x194>)
 80033ca:	5cd3      	ldrb	r3, [r2, r3]
 80033cc:	000a      	movs	r2, r1
 80033ce:	40da      	lsrs	r2, r3
 80033d0:	4b09      	ldr	r3, [pc, #36]	; (80033f8 <HAL_RCC_ClockConfig+0x198>)
 80033d2:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick (TICK_INT_PRIORITY);
 80033d4:	2000      	movs	r0, #0
 80033d6:	f7ff f997 	bl	8002708 <HAL_InitTick>
  
  return HAL_OK;
 80033da:	2300      	movs	r3, #0
}
 80033dc:	0018      	movs	r0, r3
 80033de:	46bd      	mov	sp, r7
 80033e0:	b004      	add	sp, #16
 80033e2:	bd80      	pop	{r7, pc}
 80033e4:	40022000 	.word	0x40022000
 80033e8:	40021000 	.word	0x40021000
 80033ec:	00001388 	.word	0x00001388
 80033f0:	fffff8ff 	.word	0xfffff8ff
 80033f4:	08006dc4 	.word	0x08006dc4
 80033f8:	20000008 	.word	0x20000008

080033fc <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *         
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80033fc:	b590      	push	{r4, r7, lr}
 80033fe:	b08f      	sub	sp, #60	; 0x3c
 8003400:	af00      	add	r7, sp, #0
  const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 8003402:	2314      	movs	r3, #20
 8003404:	18fb      	adds	r3, r7, r3
 8003406:	4a2b      	ldr	r2, [pc, #172]	; (80034b4 <HAL_RCC_GetSysClockFreq+0xb8>)
 8003408:	ca13      	ldmia	r2!, {r0, r1, r4}
 800340a:	c313      	stmia	r3!, {r0, r1, r4}
 800340c:	6812      	ldr	r2, [r2, #0]
 800340e:	601a      	str	r2, [r3, #0]
                                         10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
  const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 8003410:	1d3b      	adds	r3, r7, #4
 8003412:	4a29      	ldr	r2, [pc, #164]	; (80034b8 <HAL_RCC_GetSysClockFreq+0xbc>)
 8003414:	ca13      	ldmia	r2!, {r0, r1, r4}
 8003416:	c313      	stmia	r3!, {r0, r1, r4}
 8003418:	6812      	ldr	r2, [r2, #0]
 800341a:	601a      	str	r2, [r3, #0]
                                           9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};

  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 800341c:	2300      	movs	r3, #0
 800341e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003420:	2300      	movs	r3, #0
 8003422:	62bb      	str	r3, [r7, #40]	; 0x28
 8003424:	2300      	movs	r3, #0
 8003426:	637b      	str	r3, [r7, #52]	; 0x34
 8003428:	2300      	movs	r3, #0
 800342a:	627b      	str	r3, [r7, #36]	; 0x24
  uint32_t sysclockfreq = 0U;
 800342c:	2300      	movs	r3, #0
 800342e:	633b      	str	r3, [r7, #48]	; 0x30
  
  tmpreg = RCC->CFGR;
 8003430:	4b22      	ldr	r3, [pc, #136]	; (80034bc <HAL_RCC_GetSysClockFreq+0xc0>)
 8003432:	685b      	ldr	r3, [r3, #4]
 8003434:	62fb      	str	r3, [r7, #44]	; 0x2c
  
  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003436:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003438:	220c      	movs	r2, #12
 800343a:	4013      	ands	r3, r2
 800343c:	2b04      	cmp	r3, #4
 800343e:	d002      	beq.n	8003446 <HAL_RCC_GetSysClockFreq+0x4a>
 8003440:	2b08      	cmp	r3, #8
 8003442:	d003      	beq.n	800344c <HAL_RCC_GetSysClockFreq+0x50>
 8003444:	e02d      	b.n	80034a2 <HAL_RCC_GetSysClockFreq+0xa6>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8003446:	4b1e      	ldr	r3, [pc, #120]	; (80034c0 <HAL_RCC_GetSysClockFreq+0xc4>)
 8003448:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 800344a:	e02d      	b.n	80034a8 <HAL_RCC_GetSysClockFreq+0xac>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_BITNUMBER];
 800344c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800344e:	0c9b      	lsrs	r3, r3, #18
 8003450:	220f      	movs	r2, #15
 8003452:	4013      	ands	r3, r2
 8003454:	2214      	movs	r2, #20
 8003456:	18ba      	adds	r2, r7, r2
 8003458:	5cd3      	ldrb	r3, [r2, r3]
 800345a:	627b      	str	r3, [r7, #36]	; 0x24
      prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> RCC_CFGR2_PREDIV_BITNUMBER];
 800345c:	4b17      	ldr	r3, [pc, #92]	; (80034bc <HAL_RCC_GetSysClockFreq+0xc0>)
 800345e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003460:	220f      	movs	r2, #15
 8003462:	4013      	ands	r3, r2
 8003464:	1d3a      	adds	r2, r7, #4
 8003466:	5cd3      	ldrb	r3, [r2, r3]
 8003468:	62bb      	str	r3, [r7, #40]	; 0x28
      if ((tmpreg & RCC_CFGR_PLLSRC) == RCC_PLLSOURCE_HSE)
 800346a:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800346c:	2380      	movs	r3, #128	; 0x80
 800346e:	025b      	lsls	r3, r3, #9
 8003470:	4013      	ands	r3, r2
 8003472:	d009      	beq.n	8003488 <HAL_RCC_GetSysClockFreq+0x8c>
      {
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 8003474:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8003476:	4812      	ldr	r0, [pc, #72]	; (80034c0 <HAL_RCC_GetSysClockFreq+0xc4>)
 8003478:	f7fc fe62 	bl	8000140 <__udivsi3>
 800347c:	0003      	movs	r3, r0
 800347e:	001a      	movs	r2, r3
 8003480:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003482:	4353      	muls	r3, r2
 8003484:	637b      	str	r3, [r7, #52]	; 0x34
 8003486:	e009      	b.n	800349c <HAL_RCC_GetSysClockFreq+0xa0>
#if  (defined(STM32F042x6) || defined(STM32F048xx) || defined(STM32F070x6) || defined(STM32F071xB) || defined(STM32F072xB) || defined(STM32F078xx) || defined(STM32F070xB) || defined(STM32F091xC) || defined(STM32F098xx) || defined(STM32F030xC))
        /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
        pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
#else
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 8003488:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800348a:	000a      	movs	r2, r1
 800348c:	0152      	lsls	r2, r2, #5
 800348e:	1a52      	subs	r2, r2, r1
 8003490:	0193      	lsls	r3, r2, #6
 8003492:	1a9b      	subs	r3, r3, r2
 8003494:	00db      	lsls	r3, r3, #3
 8003496:	185b      	adds	r3, r3, r1
 8003498:	021b      	lsls	r3, r3, #8
 800349a:	637b      	str	r3, [r7, #52]	; 0x34
#endif
      }
      sysclockfreq = pllclk;
 800349c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800349e:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 80034a0:	e002      	b.n	80034a8 <HAL_RCC_GetSysClockFreq+0xac>
    }
#endif /* RCC_CFGR_SWS_HSI48 */
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 80034a2:	4b07      	ldr	r3, [pc, #28]	; (80034c0 <HAL_RCC_GetSysClockFreq+0xc4>)
 80034a4:	633b      	str	r3, [r7, #48]	; 0x30
      break;
 80034a6:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 80034a8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
}
 80034aa:	0018      	movs	r0, r3
 80034ac:	46bd      	mov	sp, r7
 80034ae:	b00f      	add	sp, #60	; 0x3c
 80034b0:	bd90      	pop	{r4, r7, pc}
 80034b2:	46c0      	nop			; (mov r8, r8)
 80034b4:	08006d24 	.word	0x08006d24
 80034b8:	08006d34 	.word	0x08006d34
 80034bc:	40021000 	.word	0x40021000
 80034c0:	007a1200 	.word	0x007a1200

080034c4 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80034c4:	b580      	push	{r7, lr}
 80034c6:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 80034c8:	4b02      	ldr	r3, [pc, #8]	; (80034d4 <HAL_RCC_GetHCLKFreq+0x10>)
 80034ca:	681b      	ldr	r3, [r3, #0]
}
 80034cc:	0018      	movs	r0, r3
 80034ce:	46bd      	mov	sp, r7
 80034d0:	bd80      	pop	{r7, pc}
 80034d2:	46c0      	nop			; (mov r8, r8)
 80034d4:	20000008 	.word	0x20000008

080034d8 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80034d8:	b580      	push	{r7, lr}
 80034da:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE) >> RCC_CFGR_PPRE_BITNUMBER]);
 80034dc:	f7ff fff2 	bl	80034c4 <HAL_RCC_GetHCLKFreq>
 80034e0:	0001      	movs	r1, r0
 80034e2:	4b06      	ldr	r3, [pc, #24]	; (80034fc <HAL_RCC_GetPCLK1Freq+0x24>)
 80034e4:	685b      	ldr	r3, [r3, #4]
 80034e6:	0a1b      	lsrs	r3, r3, #8
 80034e8:	2207      	movs	r2, #7
 80034ea:	4013      	ands	r3, r2
 80034ec:	4a04      	ldr	r2, [pc, #16]	; (8003500 <HAL_RCC_GetPCLK1Freq+0x28>)
 80034ee:	5cd3      	ldrb	r3, [r2, r3]
 80034f0:	40d9      	lsrs	r1, r3
 80034f2:	000b      	movs	r3, r1
}    
 80034f4:	0018      	movs	r0, r3
 80034f6:	46bd      	mov	sp, r7
 80034f8:	bd80      	pop	{r7, pc}
 80034fa:	46c0      	nop			; (mov r8, r8)
 80034fc:	40021000 	.word	0x40021000
 8003500:	08006dd4 	.word	0x08006dd4

08003504 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8003504:	b580      	push	{r7, lr}
 8003506:	b082      	sub	sp, #8
 8003508:	af00      	add	r7, sp, #0
 800350a:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	2b00      	cmp	r3, #0
 8003510:	d101      	bne.n	8003516 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8003512:	2301      	movs	r3, #1
 8003514:	e044      	b.n	80035a0 <HAL_UART_Init+0x9c>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8003516:	687b      	ldr	r3, [r7, #4]
 8003518:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800351a:	2b00      	cmp	r3, #0
 800351c:	d107      	bne.n	800352e <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 800351e:	687b      	ldr	r3, [r7, #4]
 8003520:	2274      	movs	r2, #116	; 0x74
 8003522:	2100      	movs	r1, #0
 8003524:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8003526:	687b      	ldr	r3, [r7, #4]
 8003528:	0018      	movs	r0, r3
 800352a:	f7fe ff89 	bl	8002440 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 800352e:	687b      	ldr	r3, [r7, #4]
 8003530:	2224      	movs	r2, #36	; 0x24
 8003532:	679a      	str	r2, [r3, #120]	; 0x78

  __HAL_UART_DISABLE(huart);
 8003534:	687b      	ldr	r3, [r7, #4]
 8003536:	681b      	ldr	r3, [r3, #0]
 8003538:	681a      	ldr	r2, [r3, #0]
 800353a:	687b      	ldr	r3, [r7, #4]
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	2101      	movs	r1, #1
 8003540:	438a      	bics	r2, r1
 8003542:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	0018      	movs	r0, r3
 8003548:	f000 f8da 	bl	8003700 <UART_SetConfig>
 800354c:	0003      	movs	r3, r0
 800354e:	2b01      	cmp	r3, #1
 8003550:	d101      	bne.n	8003556 <HAL_UART_Init+0x52>
  {
    return HAL_ERROR;
 8003552:	2301      	movs	r3, #1
 8003554:	e024      	b.n	80035a0 <HAL_UART_Init+0x9c>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800355a:	2b00      	cmp	r3, #0
 800355c:	d003      	beq.n	8003566 <HAL_UART_Init+0x62>
  {
    UART_AdvFeatureConfig(huart);
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	0018      	movs	r0, r3
 8003562:	f000 fa0d 	bl	8003980 <UART_AdvFeatureConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN (if LIN is supported) and CLKEN bits in the USART_CR2 register,
  - SCEN (if Smartcard is supported), HDSEL and IREN (if IrDA is supported)  bits in the USART_CR3 register.*/
#if defined (USART_CR2_LINEN)
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	681b      	ldr	r3, [r3, #0]
 800356a:	685a      	ldr	r2, [r3, #4]
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	681b      	ldr	r3, [r3, #0]
 8003570:	490d      	ldr	r1, [pc, #52]	; (80035a8 <HAL_UART_Init+0xa4>)
 8003572:	400a      	ands	r2, r1
 8003574:	605a      	str	r2, [r3, #4]
#else
  CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
#endif /* USART_CR2_LINEN */
#if defined (USART_CR3_SCEN)
#if defined (USART_CR3_IREN)
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8003576:	687b      	ldr	r3, [r7, #4]
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	689a      	ldr	r2, [r3, #8]
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	212a      	movs	r1, #42	; 0x2a
 8003582:	438a      	bics	r2, r1
 8003584:	609a      	str	r2, [r3, #8]
#else
  CLEAR_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
#endif /* USART_CR3_IREN*/
#endif /* USART_CR3_SCEN */

  __HAL_UART_ENABLE(huart);
 8003586:	687b      	ldr	r3, [r7, #4]
 8003588:	681b      	ldr	r3, [r3, #0]
 800358a:	681a      	ldr	r2, [r3, #0]
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	681b      	ldr	r3, [r3, #0]
 8003590:	2101      	movs	r1, #1
 8003592:	430a      	orrs	r2, r1
 8003594:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8003596:	687b      	ldr	r3, [r7, #4]
 8003598:	0018      	movs	r0, r3
 800359a:	f000 faa5 	bl	8003ae8 <UART_CheckIdleState>
 800359e:	0003      	movs	r3, r0
}
 80035a0:	0018      	movs	r0, r3
 80035a2:	46bd      	mov	sp, r7
 80035a4:	b002      	add	sp, #8
 80035a6:	bd80      	pop	{r7, pc}
 80035a8:	ffffb7ff 	.word	0xffffb7ff

080035ac <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80035ac:	b580      	push	{r7, lr}
 80035ae:	b08a      	sub	sp, #40	; 0x28
 80035b0:	af02      	add	r7, sp, #8
 80035b2:	60f8      	str	r0, [r7, #12]
 80035b4:	60b9      	str	r1, [r7, #8]
 80035b6:	603b      	str	r3, [r7, #0]
 80035b8:	1dbb      	adds	r3, r7, #6
 80035ba:	801a      	strh	r2, [r3, #0]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 80035bc:	68fb      	ldr	r3, [r7, #12]
 80035be:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80035c0:	2b20      	cmp	r3, #32
 80035c2:	d000      	beq.n	80035c6 <HAL_UART_Transmit+0x1a>
 80035c4:	e096      	b.n	80036f4 <HAL_UART_Transmit+0x148>
  {
    if ((pData == NULL) || (Size == 0U))
 80035c6:	68bb      	ldr	r3, [r7, #8]
 80035c8:	2b00      	cmp	r3, #0
 80035ca:	d003      	beq.n	80035d4 <HAL_UART_Transmit+0x28>
 80035cc:	1dbb      	adds	r3, r7, #6
 80035ce:	881b      	ldrh	r3, [r3, #0]
 80035d0:	2b00      	cmp	r3, #0
 80035d2:	d101      	bne.n	80035d8 <HAL_UART_Transmit+0x2c>
    {
      return  HAL_ERROR;
 80035d4:	2301      	movs	r3, #1
 80035d6:	e08e      	b.n	80036f6 <HAL_UART_Transmit+0x14a>
    }

    /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
       should be aligned on a u16 frontier, as data to be filled into TDR will be
       handled through a u16 cast. */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80035d8:	68fb      	ldr	r3, [r7, #12]
 80035da:	689a      	ldr	r2, [r3, #8]
 80035dc:	2380      	movs	r3, #128	; 0x80
 80035de:	015b      	lsls	r3, r3, #5
 80035e0:	429a      	cmp	r2, r3
 80035e2:	d109      	bne.n	80035f8 <HAL_UART_Transmit+0x4c>
 80035e4:	68fb      	ldr	r3, [r7, #12]
 80035e6:	691b      	ldr	r3, [r3, #16]
 80035e8:	2b00      	cmp	r3, #0
 80035ea:	d105      	bne.n	80035f8 <HAL_UART_Transmit+0x4c>
    {
      if ((((uint32_t)pData) & 1U) != 0U)
 80035ec:	68bb      	ldr	r3, [r7, #8]
 80035ee:	2201      	movs	r2, #1
 80035f0:	4013      	ands	r3, r2
 80035f2:	d001      	beq.n	80035f8 <HAL_UART_Transmit+0x4c>
      {
        return  HAL_ERROR;
 80035f4:	2301      	movs	r3, #1
 80035f6:	e07e      	b.n	80036f6 <HAL_UART_Transmit+0x14a>
      }
    }

    __HAL_LOCK(huart);
 80035f8:	68fb      	ldr	r3, [r7, #12]
 80035fa:	2274      	movs	r2, #116	; 0x74
 80035fc:	5c9b      	ldrb	r3, [r3, r2]
 80035fe:	2b01      	cmp	r3, #1
 8003600:	d101      	bne.n	8003606 <HAL_UART_Transmit+0x5a>
 8003602:	2302      	movs	r3, #2
 8003604:	e077      	b.n	80036f6 <HAL_UART_Transmit+0x14a>
 8003606:	68fb      	ldr	r3, [r7, #12]
 8003608:	2274      	movs	r2, #116	; 0x74
 800360a:	2101      	movs	r1, #1
 800360c:	5499      	strb	r1, [r3, r2]

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800360e:	68fb      	ldr	r3, [r7, #12]
 8003610:	2280      	movs	r2, #128	; 0x80
 8003612:	2100      	movs	r1, #0
 8003614:	5099      	str	r1, [r3, r2]
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8003616:	68fb      	ldr	r3, [r7, #12]
 8003618:	2221      	movs	r2, #33	; 0x21
 800361a:	679a      	str	r2, [r3, #120]	; 0x78

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 800361c:	f7ff f8ba 	bl	8002794 <HAL_GetTick>
 8003620:	0003      	movs	r3, r0
 8003622:	617b      	str	r3, [r7, #20]

    huart->TxXferSize  = Size;
 8003624:	68fb      	ldr	r3, [r7, #12]
 8003626:	1dba      	adds	r2, r7, #6
 8003628:	2150      	movs	r1, #80	; 0x50
 800362a:	8812      	ldrh	r2, [r2, #0]
 800362c:	525a      	strh	r2, [r3, r1]
    huart->TxXferCount = Size;
 800362e:	68fb      	ldr	r3, [r7, #12]
 8003630:	1dba      	adds	r2, r7, #6
 8003632:	2152      	movs	r1, #82	; 0x52
 8003634:	8812      	ldrh	r2, [r2, #0]
 8003636:	525a      	strh	r2, [r3, r1]

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8003638:	68fb      	ldr	r3, [r7, #12]
 800363a:	689a      	ldr	r2, [r3, #8]
 800363c:	2380      	movs	r3, #128	; 0x80
 800363e:	015b      	lsls	r3, r3, #5
 8003640:	429a      	cmp	r2, r3
 8003642:	d108      	bne.n	8003656 <HAL_UART_Transmit+0xaa>
 8003644:	68fb      	ldr	r3, [r7, #12]
 8003646:	691b      	ldr	r3, [r3, #16]
 8003648:	2b00      	cmp	r3, #0
 800364a:	d104      	bne.n	8003656 <HAL_UART_Transmit+0xaa>
    {
      pdata8bits  = NULL;
 800364c:	2300      	movs	r3, #0
 800364e:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 8003650:	68bb      	ldr	r3, [r7, #8]
 8003652:	61bb      	str	r3, [r7, #24]
 8003654:	e003      	b.n	800365e <HAL_UART_Transmit+0xb2>
    }
    else
    {
      pdata8bits  = pData;
 8003656:	68bb      	ldr	r3, [r7, #8]
 8003658:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 800365a:	2300      	movs	r3, #0
 800365c:	61bb      	str	r3, [r7, #24]
    }

    __HAL_UNLOCK(huart);
 800365e:	68fb      	ldr	r3, [r7, #12]
 8003660:	2274      	movs	r2, #116	; 0x74
 8003662:	2100      	movs	r1, #0
 8003664:	5499      	strb	r1, [r3, r2]

    while (huart->TxXferCount > 0U)
 8003666:	e02d      	b.n	80036c4 <HAL_UART_Transmit+0x118>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8003668:	697a      	ldr	r2, [r7, #20]
 800366a:	68f8      	ldr	r0, [r7, #12]
 800366c:	683b      	ldr	r3, [r7, #0]
 800366e:	9300      	str	r3, [sp, #0]
 8003670:	0013      	movs	r3, r2
 8003672:	2200      	movs	r2, #0
 8003674:	2180      	movs	r1, #128	; 0x80
 8003676:	f000 fa7f 	bl	8003b78 <UART_WaitOnFlagUntilTimeout>
 800367a:	1e03      	subs	r3, r0, #0
 800367c:	d001      	beq.n	8003682 <HAL_UART_Transmit+0xd6>
      {
        return HAL_TIMEOUT;
 800367e:	2303      	movs	r3, #3
 8003680:	e039      	b.n	80036f6 <HAL_UART_Transmit+0x14a>
      }
      if (pdata8bits == NULL)
 8003682:	69fb      	ldr	r3, [r7, #28]
 8003684:	2b00      	cmp	r3, #0
 8003686:	d10b      	bne.n	80036a0 <HAL_UART_Transmit+0xf4>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8003688:	69bb      	ldr	r3, [r7, #24]
 800368a:	881a      	ldrh	r2, [r3, #0]
 800368c:	68fb      	ldr	r3, [r7, #12]
 800368e:	681b      	ldr	r3, [r3, #0]
 8003690:	05d2      	lsls	r2, r2, #23
 8003692:	0dd2      	lsrs	r2, r2, #23
 8003694:	b292      	uxth	r2, r2
 8003696:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata16bits++;
 8003698:	69bb      	ldr	r3, [r7, #24]
 800369a:	3302      	adds	r3, #2
 800369c:	61bb      	str	r3, [r7, #24]
 800369e:	e008      	b.n	80036b2 <HAL_UART_Transmit+0x106>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 80036a0:	69fb      	ldr	r3, [r7, #28]
 80036a2:	781a      	ldrb	r2, [r3, #0]
 80036a4:	68fb      	ldr	r3, [r7, #12]
 80036a6:	681b      	ldr	r3, [r3, #0]
 80036a8:	b292      	uxth	r2, r2
 80036aa:	851a      	strh	r2, [r3, #40]	; 0x28
        pdata8bits++;
 80036ac:	69fb      	ldr	r3, [r7, #28]
 80036ae:	3301      	adds	r3, #1
 80036b0:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 80036b2:	68fb      	ldr	r3, [r7, #12]
 80036b4:	2252      	movs	r2, #82	; 0x52
 80036b6:	5a9b      	ldrh	r3, [r3, r2]
 80036b8:	b29b      	uxth	r3, r3
 80036ba:	3b01      	subs	r3, #1
 80036bc:	b299      	uxth	r1, r3
 80036be:	68fb      	ldr	r3, [r7, #12]
 80036c0:	2252      	movs	r2, #82	; 0x52
 80036c2:	5299      	strh	r1, [r3, r2]
    while (huart->TxXferCount > 0U)
 80036c4:	68fb      	ldr	r3, [r7, #12]
 80036c6:	2252      	movs	r2, #82	; 0x52
 80036c8:	5a9b      	ldrh	r3, [r3, r2]
 80036ca:	b29b      	uxth	r3, r3
 80036cc:	2b00      	cmp	r3, #0
 80036ce:	d1cb      	bne.n	8003668 <HAL_UART_Transmit+0xbc>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 80036d0:	697a      	ldr	r2, [r7, #20]
 80036d2:	68f8      	ldr	r0, [r7, #12]
 80036d4:	683b      	ldr	r3, [r7, #0]
 80036d6:	9300      	str	r3, [sp, #0]
 80036d8:	0013      	movs	r3, r2
 80036da:	2200      	movs	r2, #0
 80036dc:	2140      	movs	r1, #64	; 0x40
 80036de:	f000 fa4b 	bl	8003b78 <UART_WaitOnFlagUntilTimeout>
 80036e2:	1e03      	subs	r3, r0, #0
 80036e4:	d001      	beq.n	80036ea <HAL_UART_Transmit+0x13e>
    {
      return HAL_TIMEOUT;
 80036e6:	2303      	movs	r3, #3
 80036e8:	e005      	b.n	80036f6 <HAL_UART_Transmit+0x14a>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 80036ea:	68fb      	ldr	r3, [r7, #12]
 80036ec:	2220      	movs	r2, #32
 80036ee:	679a      	str	r2, [r3, #120]	; 0x78

    return HAL_OK;
 80036f0:	2300      	movs	r3, #0
 80036f2:	e000      	b.n	80036f6 <HAL_UART_Transmit+0x14a>
  }
  else
  {
    return HAL_BUSY;
 80036f4:	2302      	movs	r3, #2
  }
}
 80036f6:	0018      	movs	r0, r3
 80036f8:	46bd      	mov	sp, r7
 80036fa:	b008      	add	sp, #32
 80036fc:	bd80      	pop	{r7, pc}
	...

08003700 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8003700:	b580      	push	{r7, lr}
 8003702:	b088      	sub	sp, #32
 8003704:	af00      	add	r7, sp, #0
 8003706:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 8003708:	231e      	movs	r3, #30
 800370a:	18fb      	adds	r3, r7, r3
 800370c:	2200      	movs	r2, #0
 800370e:	701a      	strb	r2, [r3, #0]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	689a      	ldr	r2, [r3, #8]
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	691b      	ldr	r3, [r3, #16]
 8003718:	431a      	orrs	r2, r3
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	695b      	ldr	r3, [r3, #20]
 800371e:	431a      	orrs	r2, r3
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	69db      	ldr	r3, [r3, #28]
 8003724:	4313      	orrs	r3, r2
 8003726:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8003728:	687b      	ldr	r3, [r7, #4]
 800372a:	681b      	ldr	r3, [r3, #0]
 800372c:	681b      	ldr	r3, [r3, #0]
 800372e:	4a8d      	ldr	r2, [pc, #564]	; (8003964 <UART_SetConfig+0x264>)
 8003730:	4013      	ands	r3, r2
 8003732:	0019      	movs	r1, r3
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	697a      	ldr	r2, [r7, #20]
 800373a:	430a      	orrs	r2, r1
 800373c:	601a      	str	r2, [r3, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	681b      	ldr	r3, [r3, #0]
 8003742:	685b      	ldr	r3, [r3, #4]
 8003744:	4a88      	ldr	r2, [pc, #544]	; (8003968 <UART_SetConfig+0x268>)
 8003746:	4013      	ands	r3, r2
 8003748:	0019      	movs	r1, r3
 800374a:	687b      	ldr	r3, [r7, #4]
 800374c:	68da      	ldr	r2, [r3, #12]
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	681b      	ldr	r3, [r3, #0]
 8003752:	430a      	orrs	r2, r1
 8003754:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	699b      	ldr	r3, [r3, #24]
 800375a:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	6a1b      	ldr	r3, [r3, #32]
 8003760:	697a      	ldr	r2, [r7, #20]
 8003762:	4313      	orrs	r3, r2
 8003764:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8003766:	687b      	ldr	r3, [r7, #4]
 8003768:	681b      	ldr	r3, [r3, #0]
 800376a:	689b      	ldr	r3, [r3, #8]
 800376c:	4a7f      	ldr	r2, [pc, #508]	; (800396c <UART_SetConfig+0x26c>)
 800376e:	4013      	ands	r3, r2
 8003770:	0019      	movs	r1, r3
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	681b      	ldr	r3, [r3, #0]
 8003776:	697a      	ldr	r2, [r7, #20]
 8003778:	430a      	orrs	r2, r1
 800377a:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	681b      	ldr	r3, [r3, #0]
 8003780:	4a7b      	ldr	r2, [pc, #492]	; (8003970 <UART_SetConfig+0x270>)
 8003782:	4293      	cmp	r3, r2
 8003784:	d127      	bne.n	80037d6 <UART_SetConfig+0xd6>
 8003786:	4b7b      	ldr	r3, [pc, #492]	; (8003974 <UART_SetConfig+0x274>)
 8003788:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800378a:	2203      	movs	r2, #3
 800378c:	4013      	ands	r3, r2
 800378e:	2b03      	cmp	r3, #3
 8003790:	d00d      	beq.n	80037ae <UART_SetConfig+0xae>
 8003792:	d81b      	bhi.n	80037cc <UART_SetConfig+0xcc>
 8003794:	2b02      	cmp	r3, #2
 8003796:	d014      	beq.n	80037c2 <UART_SetConfig+0xc2>
 8003798:	d818      	bhi.n	80037cc <UART_SetConfig+0xcc>
 800379a:	2b00      	cmp	r3, #0
 800379c:	d002      	beq.n	80037a4 <UART_SetConfig+0xa4>
 800379e:	2b01      	cmp	r3, #1
 80037a0:	d00a      	beq.n	80037b8 <UART_SetConfig+0xb8>
 80037a2:	e013      	b.n	80037cc <UART_SetConfig+0xcc>
 80037a4:	231f      	movs	r3, #31
 80037a6:	18fb      	adds	r3, r7, r3
 80037a8:	2200      	movs	r2, #0
 80037aa:	701a      	strb	r2, [r3, #0]
 80037ac:	e021      	b.n	80037f2 <UART_SetConfig+0xf2>
 80037ae:	231f      	movs	r3, #31
 80037b0:	18fb      	adds	r3, r7, r3
 80037b2:	2202      	movs	r2, #2
 80037b4:	701a      	strb	r2, [r3, #0]
 80037b6:	e01c      	b.n	80037f2 <UART_SetConfig+0xf2>
 80037b8:	231f      	movs	r3, #31
 80037ba:	18fb      	adds	r3, r7, r3
 80037bc:	2204      	movs	r2, #4
 80037be:	701a      	strb	r2, [r3, #0]
 80037c0:	e017      	b.n	80037f2 <UART_SetConfig+0xf2>
 80037c2:	231f      	movs	r3, #31
 80037c4:	18fb      	adds	r3, r7, r3
 80037c6:	2208      	movs	r2, #8
 80037c8:	701a      	strb	r2, [r3, #0]
 80037ca:	e012      	b.n	80037f2 <UART_SetConfig+0xf2>
 80037cc:	231f      	movs	r3, #31
 80037ce:	18fb      	adds	r3, r7, r3
 80037d0:	2210      	movs	r2, #16
 80037d2:	701a      	strb	r2, [r3, #0]
 80037d4:	e00d      	b.n	80037f2 <UART_SetConfig+0xf2>
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	681b      	ldr	r3, [r3, #0]
 80037da:	4a67      	ldr	r2, [pc, #412]	; (8003978 <UART_SetConfig+0x278>)
 80037dc:	4293      	cmp	r3, r2
 80037de:	d104      	bne.n	80037ea <UART_SetConfig+0xea>
 80037e0:	231f      	movs	r3, #31
 80037e2:	18fb      	adds	r3, r7, r3
 80037e4:	2200      	movs	r2, #0
 80037e6:	701a      	strb	r2, [r3, #0]
 80037e8:	e003      	b.n	80037f2 <UART_SetConfig+0xf2>
 80037ea:	231f      	movs	r3, #31
 80037ec:	18fb      	adds	r3, r7, r3
 80037ee:	2210      	movs	r2, #16
 80037f0:	701a      	strb	r2, [r3, #0]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	69da      	ldr	r2, [r3, #28]
 80037f6:	2380      	movs	r3, #128	; 0x80
 80037f8:	021b      	lsls	r3, r3, #8
 80037fa:	429a      	cmp	r2, r3
 80037fc:	d15d      	bne.n	80038ba <UART_SetConfig+0x1ba>
  {
    switch (clocksource)
 80037fe:	231f      	movs	r3, #31
 8003800:	18fb      	adds	r3, r7, r3
 8003802:	781b      	ldrb	r3, [r3, #0]
 8003804:	2b08      	cmp	r3, #8
 8003806:	d015      	beq.n	8003834 <UART_SetConfig+0x134>
 8003808:	dc18      	bgt.n	800383c <UART_SetConfig+0x13c>
 800380a:	2b04      	cmp	r3, #4
 800380c:	d00d      	beq.n	800382a <UART_SetConfig+0x12a>
 800380e:	dc15      	bgt.n	800383c <UART_SetConfig+0x13c>
 8003810:	2b00      	cmp	r3, #0
 8003812:	d002      	beq.n	800381a <UART_SetConfig+0x11a>
 8003814:	2b02      	cmp	r3, #2
 8003816:	d005      	beq.n	8003824 <UART_SetConfig+0x124>
 8003818:	e010      	b.n	800383c <UART_SetConfig+0x13c>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 800381a:	f7ff fe5d 	bl	80034d8 <HAL_RCC_GetPCLK1Freq>
 800381e:	0003      	movs	r3, r0
 8003820:	61bb      	str	r3, [r7, #24]
        break;
 8003822:	e012      	b.n	800384a <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 8003824:	4b55      	ldr	r3, [pc, #340]	; (800397c <UART_SetConfig+0x27c>)
 8003826:	61bb      	str	r3, [r7, #24]
        break;
 8003828:	e00f      	b.n	800384a <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 800382a:	f7ff fde7 	bl	80033fc <HAL_RCC_GetSysClockFreq>
 800382e:	0003      	movs	r3, r0
 8003830:	61bb      	str	r3, [r7, #24]
        break;
 8003832:	e00a      	b.n	800384a <UART_SetConfig+0x14a>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 8003834:	2380      	movs	r3, #128	; 0x80
 8003836:	021b      	lsls	r3, r3, #8
 8003838:	61bb      	str	r3, [r7, #24]
        break;
 800383a:	e006      	b.n	800384a <UART_SetConfig+0x14a>
      default:
        pclk = 0U;
 800383c:	2300      	movs	r3, #0
 800383e:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8003840:	231e      	movs	r3, #30
 8003842:	18fb      	adds	r3, r7, r3
 8003844:	2201      	movs	r2, #1
 8003846:	701a      	strb	r2, [r3, #0]
        break;
 8003848:	46c0      	nop			; (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 800384a:	69bb      	ldr	r3, [r7, #24]
 800384c:	2b00      	cmp	r3, #0
 800384e:	d100      	bne.n	8003852 <UART_SetConfig+0x152>
 8003850:	e07b      	b.n	800394a <UART_SetConfig+0x24a>
    {
      usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8003852:	69bb      	ldr	r3, [r7, #24]
 8003854:	005a      	lsls	r2, r3, #1
 8003856:	687b      	ldr	r3, [r7, #4]
 8003858:	685b      	ldr	r3, [r3, #4]
 800385a:	085b      	lsrs	r3, r3, #1
 800385c:	18d2      	adds	r2, r2, r3
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	685b      	ldr	r3, [r3, #4]
 8003862:	0019      	movs	r1, r3
 8003864:	0010      	movs	r0, r2
 8003866:	f7fc fc6b 	bl	8000140 <__udivsi3>
 800386a:	0003      	movs	r3, r0
 800386c:	b29b      	uxth	r3, r3
 800386e:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003870:	693b      	ldr	r3, [r7, #16]
 8003872:	2b0f      	cmp	r3, #15
 8003874:	d91c      	bls.n	80038b0 <UART_SetConfig+0x1b0>
 8003876:	693a      	ldr	r2, [r7, #16]
 8003878:	2380      	movs	r3, #128	; 0x80
 800387a:	025b      	lsls	r3, r3, #9
 800387c:	429a      	cmp	r2, r3
 800387e:	d217      	bcs.n	80038b0 <UART_SetConfig+0x1b0>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8003880:	693b      	ldr	r3, [r7, #16]
 8003882:	b29a      	uxth	r2, r3
 8003884:	200e      	movs	r0, #14
 8003886:	183b      	adds	r3, r7, r0
 8003888:	210f      	movs	r1, #15
 800388a:	438a      	bics	r2, r1
 800388c:	801a      	strh	r2, [r3, #0]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 800388e:	693b      	ldr	r3, [r7, #16]
 8003890:	085b      	lsrs	r3, r3, #1
 8003892:	b29b      	uxth	r3, r3
 8003894:	2207      	movs	r2, #7
 8003896:	4013      	ands	r3, r2
 8003898:	b299      	uxth	r1, r3
 800389a:	183b      	adds	r3, r7, r0
 800389c:	183a      	adds	r2, r7, r0
 800389e:	8812      	ldrh	r2, [r2, #0]
 80038a0:	430a      	orrs	r2, r1
 80038a2:	801a      	strh	r2, [r3, #0]
        huart->Instance->BRR = brrtemp;
 80038a4:	687b      	ldr	r3, [r7, #4]
 80038a6:	681b      	ldr	r3, [r3, #0]
 80038a8:	183a      	adds	r2, r7, r0
 80038aa:	8812      	ldrh	r2, [r2, #0]
 80038ac:	60da      	str	r2, [r3, #12]
 80038ae:	e04c      	b.n	800394a <UART_SetConfig+0x24a>
      }
      else
      {
        ret = HAL_ERROR;
 80038b0:	231e      	movs	r3, #30
 80038b2:	18fb      	adds	r3, r7, r3
 80038b4:	2201      	movs	r2, #1
 80038b6:	701a      	strb	r2, [r3, #0]
 80038b8:	e047      	b.n	800394a <UART_SetConfig+0x24a>
      }
    }
  }
  else
  {
    switch (clocksource)
 80038ba:	231f      	movs	r3, #31
 80038bc:	18fb      	adds	r3, r7, r3
 80038be:	781b      	ldrb	r3, [r3, #0]
 80038c0:	2b08      	cmp	r3, #8
 80038c2:	d015      	beq.n	80038f0 <UART_SetConfig+0x1f0>
 80038c4:	dc18      	bgt.n	80038f8 <UART_SetConfig+0x1f8>
 80038c6:	2b04      	cmp	r3, #4
 80038c8:	d00d      	beq.n	80038e6 <UART_SetConfig+0x1e6>
 80038ca:	dc15      	bgt.n	80038f8 <UART_SetConfig+0x1f8>
 80038cc:	2b00      	cmp	r3, #0
 80038ce:	d002      	beq.n	80038d6 <UART_SetConfig+0x1d6>
 80038d0:	2b02      	cmp	r3, #2
 80038d2:	d005      	beq.n	80038e0 <UART_SetConfig+0x1e0>
 80038d4:	e010      	b.n	80038f8 <UART_SetConfig+0x1f8>
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 80038d6:	f7ff fdff 	bl	80034d8 <HAL_RCC_GetPCLK1Freq>
 80038da:	0003      	movs	r3, r0
 80038dc:	61bb      	str	r3, [r7, #24]
        break;
 80038de:	e012      	b.n	8003906 <UART_SetConfig+0x206>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 80038e0:	4b26      	ldr	r3, [pc, #152]	; (800397c <UART_SetConfig+0x27c>)
 80038e2:	61bb      	str	r3, [r7, #24]
        break;
 80038e4:	e00f      	b.n	8003906 <UART_SetConfig+0x206>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 80038e6:	f7ff fd89 	bl	80033fc <HAL_RCC_GetSysClockFreq>
 80038ea:	0003      	movs	r3, r0
 80038ec:	61bb      	str	r3, [r7, #24]
        break;
 80038ee:	e00a      	b.n	8003906 <UART_SetConfig+0x206>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80038f0:	2380      	movs	r3, #128	; 0x80
 80038f2:	021b      	lsls	r3, r3, #8
 80038f4:	61bb      	str	r3, [r7, #24]
        break;
 80038f6:	e006      	b.n	8003906 <UART_SetConfig+0x206>
      default:
        pclk = 0U;
 80038f8:	2300      	movs	r3, #0
 80038fa:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 80038fc:	231e      	movs	r3, #30
 80038fe:	18fb      	adds	r3, r7, r3
 8003900:	2201      	movs	r2, #1
 8003902:	701a      	strb	r2, [r3, #0]
        break;
 8003904:	46c0      	nop			; (mov r8, r8)
    }

    if (pclk != 0U)
 8003906:	69bb      	ldr	r3, [r7, #24]
 8003908:	2b00      	cmp	r3, #0
 800390a:	d01e      	beq.n	800394a <UART_SetConfig+0x24a>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	685b      	ldr	r3, [r3, #4]
 8003910:	085a      	lsrs	r2, r3, #1
 8003912:	69bb      	ldr	r3, [r7, #24]
 8003914:	18d2      	adds	r2, r2, r3
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	685b      	ldr	r3, [r3, #4]
 800391a:	0019      	movs	r1, r3
 800391c:	0010      	movs	r0, r2
 800391e:	f7fc fc0f 	bl	8000140 <__udivsi3>
 8003922:	0003      	movs	r3, r0
 8003924:	b29b      	uxth	r3, r3
 8003926:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8003928:	693b      	ldr	r3, [r7, #16]
 800392a:	2b0f      	cmp	r3, #15
 800392c:	d909      	bls.n	8003942 <UART_SetConfig+0x242>
 800392e:	693a      	ldr	r2, [r7, #16]
 8003930:	2380      	movs	r3, #128	; 0x80
 8003932:	025b      	lsls	r3, r3, #9
 8003934:	429a      	cmp	r2, r3
 8003936:	d204      	bcs.n	8003942 <UART_SetConfig+0x242>
      {
        huart->Instance->BRR = usartdiv;
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	681b      	ldr	r3, [r3, #0]
 800393c:	693a      	ldr	r2, [r7, #16]
 800393e:	60da      	str	r2, [r3, #12]
 8003940:	e003      	b.n	800394a <UART_SetConfig+0x24a>
      }
      else
      {
        ret = HAL_ERROR;
 8003942:	231e      	movs	r3, #30
 8003944:	18fb      	adds	r3, r7, r3
 8003946:	2201      	movs	r2, #1
 8003948:	701a      	strb	r2, [r3, #0]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	2200      	movs	r2, #0
 800394e:	665a      	str	r2, [r3, #100]	; 0x64
  huart->TxISR = NULL;
 8003950:	687b      	ldr	r3, [r7, #4]
 8003952:	2200      	movs	r2, #0
 8003954:	669a      	str	r2, [r3, #104]	; 0x68

  return ret;
 8003956:	231e      	movs	r3, #30
 8003958:	18fb      	adds	r3, r7, r3
 800395a:	781b      	ldrb	r3, [r3, #0]
}
 800395c:	0018      	movs	r0, r3
 800395e:	46bd      	mov	sp, r7
 8003960:	b008      	add	sp, #32
 8003962:	bd80      	pop	{r7, pc}
 8003964:	ffff69f3 	.word	0xffff69f3
 8003968:	ffffcfff 	.word	0xffffcfff
 800396c:	fffff4ff 	.word	0xfffff4ff
 8003970:	40013800 	.word	0x40013800
 8003974:	40021000 	.word	0x40021000
 8003978:	40004400 	.word	0x40004400
 800397c:	007a1200 	.word	0x007a1200

08003980 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8003980:	b580      	push	{r7, lr}
 8003982:	b082      	sub	sp, #8
 8003984:	af00      	add	r7, sp, #0
 8003986:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8003988:	687b      	ldr	r3, [r7, #4]
 800398a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800398c:	2201      	movs	r2, #1
 800398e:	4013      	ands	r3, r2
 8003990:	d00b      	beq.n	80039aa <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	681b      	ldr	r3, [r3, #0]
 8003996:	685b      	ldr	r3, [r3, #4]
 8003998:	4a4a      	ldr	r2, [pc, #296]	; (8003ac4 <UART_AdvFeatureConfig+0x144>)
 800399a:	4013      	ands	r3, r2
 800399c:	0019      	movs	r1, r3
 800399e:	687b      	ldr	r3, [r7, #4]
 80039a0:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	681b      	ldr	r3, [r3, #0]
 80039a6:	430a      	orrs	r2, r1
 80039a8:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 80039aa:	687b      	ldr	r3, [r7, #4]
 80039ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039ae:	2202      	movs	r2, #2
 80039b0:	4013      	ands	r3, r2
 80039b2:	d00b      	beq.n	80039cc <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	681b      	ldr	r3, [r3, #0]
 80039b8:	685b      	ldr	r3, [r3, #4]
 80039ba:	4a43      	ldr	r2, [pc, #268]	; (8003ac8 <UART_AdvFeatureConfig+0x148>)
 80039bc:	4013      	ands	r3, r2
 80039be:	0019      	movs	r1, r3
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	681b      	ldr	r3, [r3, #0]
 80039c8:	430a      	orrs	r2, r1
 80039ca:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 80039cc:	687b      	ldr	r3, [r7, #4]
 80039ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039d0:	2204      	movs	r2, #4
 80039d2:	4013      	ands	r3, r2
 80039d4:	d00b      	beq.n	80039ee <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 80039d6:	687b      	ldr	r3, [r7, #4]
 80039d8:	681b      	ldr	r3, [r3, #0]
 80039da:	685b      	ldr	r3, [r3, #4]
 80039dc:	4a3b      	ldr	r2, [pc, #236]	; (8003acc <UART_AdvFeatureConfig+0x14c>)
 80039de:	4013      	ands	r3, r2
 80039e0:	0019      	movs	r1, r3
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80039e6:	687b      	ldr	r3, [r7, #4]
 80039e8:	681b      	ldr	r3, [r3, #0]
 80039ea:	430a      	orrs	r2, r1
 80039ec:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 80039ee:	687b      	ldr	r3, [r7, #4]
 80039f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039f2:	2208      	movs	r2, #8
 80039f4:	4013      	ands	r3, r2
 80039f6:	d00b      	beq.n	8003a10 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	681b      	ldr	r3, [r3, #0]
 80039fc:	685b      	ldr	r3, [r3, #4]
 80039fe:	4a34      	ldr	r2, [pc, #208]	; (8003ad0 <UART_AdvFeatureConfig+0x150>)
 8003a00:	4013      	ands	r3, r2
 8003a02:	0019      	movs	r1, r3
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	681b      	ldr	r3, [r3, #0]
 8003a0c:	430a      	orrs	r2, r1
 8003a0e:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 8003a10:	687b      	ldr	r3, [r7, #4]
 8003a12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a14:	2210      	movs	r2, #16
 8003a16:	4013      	ands	r3, r2
 8003a18:	d00b      	beq.n	8003a32 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 8003a1a:	687b      	ldr	r3, [r7, #4]
 8003a1c:	681b      	ldr	r3, [r3, #0]
 8003a1e:	689b      	ldr	r3, [r3, #8]
 8003a20:	4a2c      	ldr	r2, [pc, #176]	; (8003ad4 <UART_AdvFeatureConfig+0x154>)
 8003a22:	4013      	ands	r3, r2
 8003a24:	0019      	movs	r1, r3
 8003a26:	687b      	ldr	r3, [r7, #4]
 8003a28:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003a2a:	687b      	ldr	r3, [r7, #4]
 8003a2c:	681b      	ldr	r3, [r3, #0]
 8003a2e:	430a      	orrs	r2, r1
 8003a30:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 8003a32:	687b      	ldr	r3, [r7, #4]
 8003a34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a36:	2220      	movs	r2, #32
 8003a38:	4013      	ands	r3, r2
 8003a3a:	d00b      	beq.n	8003a54 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	681b      	ldr	r3, [r3, #0]
 8003a40:	689b      	ldr	r3, [r3, #8]
 8003a42:	4a25      	ldr	r2, [pc, #148]	; (8003ad8 <UART_AdvFeatureConfig+0x158>)
 8003a44:	4013      	ands	r3, r2
 8003a46:	0019      	movs	r1, r3
 8003a48:	687b      	ldr	r3, [r7, #4]
 8003a4a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	681b      	ldr	r3, [r3, #0]
 8003a50:	430a      	orrs	r2, r1
 8003a52:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a58:	2240      	movs	r2, #64	; 0x40
 8003a5a:	4013      	ands	r3, r2
 8003a5c:	d01d      	beq.n	8003a9a <UART_AdvFeatureConfig+0x11a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8003a5e:	687b      	ldr	r3, [r7, #4]
 8003a60:	681b      	ldr	r3, [r3, #0]
 8003a62:	685b      	ldr	r3, [r3, #4]
 8003a64:	4a1d      	ldr	r2, [pc, #116]	; (8003adc <UART_AdvFeatureConfig+0x15c>)
 8003a66:	4013      	ands	r3, r2
 8003a68:	0019      	movs	r1, r3
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	681b      	ldr	r3, [r3, #0]
 8003a72:	430a      	orrs	r2, r1
 8003a74:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003a7a:	2380      	movs	r3, #128	; 0x80
 8003a7c:	035b      	lsls	r3, r3, #13
 8003a7e:	429a      	cmp	r2, r3
 8003a80:	d10b      	bne.n	8003a9a <UART_AdvFeatureConfig+0x11a>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8003a82:	687b      	ldr	r3, [r7, #4]
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	685b      	ldr	r3, [r3, #4]
 8003a88:	4a15      	ldr	r2, [pc, #84]	; (8003ae0 <UART_AdvFeatureConfig+0x160>)
 8003a8a:	4013      	ands	r3, r2
 8003a8c:	0019      	movs	r1, r3
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003a92:	687b      	ldr	r3, [r7, #4]
 8003a94:	681b      	ldr	r3, [r3, #0]
 8003a96:	430a      	orrs	r2, r1
 8003a98:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8003a9a:	687b      	ldr	r3, [r7, #4]
 8003a9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a9e:	2280      	movs	r2, #128	; 0x80
 8003aa0:	4013      	ands	r3, r2
 8003aa2:	d00b      	beq.n	8003abc <UART_AdvFeatureConfig+0x13c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8003aa4:	687b      	ldr	r3, [r7, #4]
 8003aa6:	681b      	ldr	r3, [r3, #0]
 8003aa8:	685b      	ldr	r3, [r3, #4]
 8003aaa:	4a0e      	ldr	r2, [pc, #56]	; (8003ae4 <UART_AdvFeatureConfig+0x164>)
 8003aac:	4013      	ands	r3, r2
 8003aae:	0019      	movs	r1, r3
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8003ab4:	687b      	ldr	r3, [r7, #4]
 8003ab6:	681b      	ldr	r3, [r3, #0]
 8003ab8:	430a      	orrs	r2, r1
 8003aba:	605a      	str	r2, [r3, #4]
  }
}
 8003abc:	46c0      	nop			; (mov r8, r8)
 8003abe:	46bd      	mov	sp, r7
 8003ac0:	b002      	add	sp, #8
 8003ac2:	bd80      	pop	{r7, pc}
 8003ac4:	fffdffff 	.word	0xfffdffff
 8003ac8:	fffeffff 	.word	0xfffeffff
 8003acc:	fffbffff 	.word	0xfffbffff
 8003ad0:	ffff7fff 	.word	0xffff7fff
 8003ad4:	ffffefff 	.word	0xffffefff
 8003ad8:	ffffdfff 	.word	0xffffdfff
 8003adc:	ffefffff 	.word	0xffefffff
 8003ae0:	ff9fffff 	.word	0xff9fffff
 8003ae4:	fff7ffff 	.word	0xfff7ffff

08003ae8 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 8003ae8:	b580      	push	{r7, lr}
 8003aea:	b086      	sub	sp, #24
 8003aec:	af02      	add	r7, sp, #8
 8003aee:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8003af0:	687b      	ldr	r3, [r7, #4]
 8003af2:	2280      	movs	r2, #128	; 0x80
 8003af4:	2100      	movs	r1, #0
 8003af6:	5099      	str	r1, [r3, r2]

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 8003af8:	f7fe fe4c 	bl	8002794 <HAL_GetTick>
 8003afc:	0003      	movs	r3, r0
 8003afe:	60fb      	str	r3, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 8003b00:	687b      	ldr	r3, [r7, #4]
 8003b02:	681b      	ldr	r3, [r3, #0]
 8003b04:	681b      	ldr	r3, [r3, #0]
 8003b06:	2208      	movs	r2, #8
 8003b08:	4013      	ands	r3, r2
 8003b0a:	2b08      	cmp	r3, #8
 8003b0c:	d10c      	bne.n	8003b28 <UART_CheckIdleState+0x40>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8003b0e:	68fb      	ldr	r3, [r7, #12]
 8003b10:	2280      	movs	r2, #128	; 0x80
 8003b12:	0391      	lsls	r1, r2, #14
 8003b14:	6878      	ldr	r0, [r7, #4]
 8003b16:	4a17      	ldr	r2, [pc, #92]	; (8003b74 <UART_CheckIdleState+0x8c>)
 8003b18:	9200      	str	r2, [sp, #0]
 8003b1a:	2200      	movs	r2, #0
 8003b1c:	f000 f82c 	bl	8003b78 <UART_WaitOnFlagUntilTimeout>
 8003b20:	1e03      	subs	r3, r0, #0
 8003b22:	d001      	beq.n	8003b28 <UART_CheckIdleState+0x40>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 8003b24:	2303      	movs	r3, #3
 8003b26:	e021      	b.n	8003b6c <UART_CheckIdleState+0x84>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 8003b28:	687b      	ldr	r3, [r7, #4]
 8003b2a:	681b      	ldr	r3, [r3, #0]
 8003b2c:	681b      	ldr	r3, [r3, #0]
 8003b2e:	2204      	movs	r2, #4
 8003b30:	4013      	ands	r3, r2
 8003b32:	2b04      	cmp	r3, #4
 8003b34:	d10c      	bne.n	8003b50 <UART_CheckIdleState+0x68>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8003b36:	68fb      	ldr	r3, [r7, #12]
 8003b38:	2280      	movs	r2, #128	; 0x80
 8003b3a:	03d1      	lsls	r1, r2, #15
 8003b3c:	6878      	ldr	r0, [r7, #4]
 8003b3e:	4a0d      	ldr	r2, [pc, #52]	; (8003b74 <UART_CheckIdleState+0x8c>)
 8003b40:	9200      	str	r2, [sp, #0]
 8003b42:	2200      	movs	r2, #0
 8003b44:	f000 f818 	bl	8003b78 <UART_WaitOnFlagUntilTimeout>
 8003b48:	1e03      	subs	r3, r0, #0
 8003b4a:	d001      	beq.n	8003b50 <UART_CheckIdleState+0x68>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 8003b4c:	2303      	movs	r3, #3
 8003b4e:	e00d      	b.n	8003b6c <UART_CheckIdleState+0x84>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	2220      	movs	r2, #32
 8003b54:	679a      	str	r2, [r3, #120]	; 0x78
  huart->RxState = HAL_UART_STATE_READY;
 8003b56:	687b      	ldr	r3, [r7, #4]
 8003b58:	2220      	movs	r2, #32
 8003b5a:	67da      	str	r2, [r3, #124]	; 0x7c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8003b5c:	687b      	ldr	r3, [r7, #4]
 8003b5e:	2200      	movs	r2, #0
 8003b60:	661a      	str	r2, [r3, #96]	; 0x60

  __HAL_UNLOCK(huart);
 8003b62:	687b      	ldr	r3, [r7, #4]
 8003b64:	2274      	movs	r2, #116	; 0x74
 8003b66:	2100      	movs	r1, #0
 8003b68:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8003b6a:	2300      	movs	r3, #0
}
 8003b6c:	0018      	movs	r0, r3
 8003b6e:	46bd      	mov	sp, r7
 8003b70:	b004      	add	sp, #16
 8003b72:	bd80      	pop	{r7, pc}
 8003b74:	01ffffff 	.word	0x01ffffff

08003b78 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 8003b78:	b580      	push	{r7, lr}
 8003b7a:	b094      	sub	sp, #80	; 0x50
 8003b7c:	af00      	add	r7, sp, #0
 8003b7e:	60f8      	str	r0, [r7, #12]
 8003b80:	60b9      	str	r1, [r7, #8]
 8003b82:	603b      	str	r3, [r7, #0]
 8003b84:	1dfb      	adds	r3, r7, #7
 8003b86:	701a      	strb	r2, [r3, #0]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8003b88:	e0a3      	b.n	8003cd2 <UART_WaitOnFlagUntilTimeout+0x15a>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8003b8a:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8003b8c:	3301      	adds	r3, #1
 8003b8e:	d100      	bne.n	8003b92 <UART_WaitOnFlagUntilTimeout+0x1a>
 8003b90:	e09f      	b.n	8003cd2 <UART_WaitOnFlagUntilTimeout+0x15a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8003b92:	f7fe fdff 	bl	8002794 <HAL_GetTick>
 8003b96:	0002      	movs	r2, r0
 8003b98:	683b      	ldr	r3, [r7, #0]
 8003b9a:	1ad3      	subs	r3, r2, r3
 8003b9c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8003b9e:	429a      	cmp	r2, r3
 8003ba0:	d302      	bcc.n	8003ba8 <UART_WaitOnFlagUntilTimeout+0x30>
 8003ba2:	6dbb      	ldr	r3, [r7, #88]	; 0x58
 8003ba4:	2b00      	cmp	r3, #0
 8003ba6:	d13d      	bne.n	8003c24 <UART_WaitOnFlagUntilTimeout+0xac>
 */
__STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003ba8:	f3ef 8310 	mrs	r3, PRIMASK
 8003bac:	62bb      	str	r3, [r7, #40]	; 0x28
  return(result);
 8003bae:	6abb      	ldr	r3, [r7, #40]	; 0x28
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
           interrupts for the interrupt process */
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8003bb0:	647b      	str	r3, [r7, #68]	; 0x44
 8003bb2:	2301      	movs	r3, #1
 8003bb4:	62fb      	str	r3, [r7, #44]	; 0x2c
  \details Assigns the given value to the Priority Mask Register.
  \param [in]    priMask  Priority Mask
 */
__STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003bb6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003bb8:	f383 8810 	msr	PRIMASK, r3
}
 8003bbc:	46c0      	nop			; (mov r8, r8)
 8003bbe:	68fb      	ldr	r3, [r7, #12]
 8003bc0:	681b      	ldr	r3, [r3, #0]
 8003bc2:	681a      	ldr	r2, [r3, #0]
 8003bc4:	68fb      	ldr	r3, [r7, #12]
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	494c      	ldr	r1, [pc, #304]	; (8003cfc <UART_WaitOnFlagUntilTimeout+0x184>)
 8003bca:	400a      	ands	r2, r1
 8003bcc:	601a      	str	r2, [r3, #0]
 8003bce:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003bd0:	633b      	str	r3, [r7, #48]	; 0x30
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003bd2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003bd4:	f383 8810 	msr	PRIMASK, r3
}
 8003bd8:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003bda:	f3ef 8310 	mrs	r3, PRIMASK
 8003bde:	637b      	str	r3, [r7, #52]	; 0x34
  return(result);
 8003be0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003be2:	643b      	str	r3, [r7, #64]	; 0x40
 8003be4:	2301      	movs	r3, #1
 8003be6:	63bb      	str	r3, [r7, #56]	; 0x38
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003be8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003bea:	f383 8810 	msr	PRIMASK, r3
}
 8003bee:	46c0      	nop			; (mov r8, r8)
 8003bf0:	68fb      	ldr	r3, [r7, #12]
 8003bf2:	681b      	ldr	r3, [r3, #0]
 8003bf4:	689a      	ldr	r2, [r3, #8]
 8003bf6:	68fb      	ldr	r3, [r7, #12]
 8003bf8:	681b      	ldr	r3, [r3, #0]
 8003bfa:	2101      	movs	r1, #1
 8003bfc:	438a      	bics	r2, r1
 8003bfe:	609a      	str	r2, [r3, #8]
 8003c00:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003c02:	63fb      	str	r3, [r7, #60]	; 0x3c
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003c04:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003c06:	f383 8810 	msr	PRIMASK, r3
}
 8003c0a:	46c0      	nop			; (mov r8, r8)

        huart->gState = HAL_UART_STATE_READY;
 8003c0c:	68fb      	ldr	r3, [r7, #12]
 8003c0e:	2220      	movs	r2, #32
 8003c10:	679a      	str	r2, [r3, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 8003c12:	68fb      	ldr	r3, [r7, #12]
 8003c14:	2220      	movs	r2, #32
 8003c16:	67da      	str	r2, [r3, #124]	; 0x7c

        __HAL_UNLOCK(huart);
 8003c18:	68fb      	ldr	r3, [r7, #12]
 8003c1a:	2274      	movs	r2, #116	; 0x74
 8003c1c:	2100      	movs	r1, #0
 8003c1e:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 8003c20:	2303      	movs	r3, #3
 8003c22:	e067      	b.n	8003cf4 <UART_WaitOnFlagUntilTimeout+0x17c>
      }

      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8003c24:	68fb      	ldr	r3, [r7, #12]
 8003c26:	681b      	ldr	r3, [r3, #0]
 8003c28:	681b      	ldr	r3, [r3, #0]
 8003c2a:	2204      	movs	r2, #4
 8003c2c:	4013      	ands	r3, r2
 8003c2e:	d050      	beq.n	8003cd2 <UART_WaitOnFlagUntilTimeout+0x15a>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8003c30:	68fb      	ldr	r3, [r7, #12]
 8003c32:	681b      	ldr	r3, [r3, #0]
 8003c34:	69da      	ldr	r2, [r3, #28]
 8003c36:	2380      	movs	r3, #128	; 0x80
 8003c38:	011b      	lsls	r3, r3, #4
 8003c3a:	401a      	ands	r2, r3
 8003c3c:	2380      	movs	r3, #128	; 0x80
 8003c3e:	011b      	lsls	r3, r3, #4
 8003c40:	429a      	cmp	r2, r3
 8003c42:	d146      	bne.n	8003cd2 <UART_WaitOnFlagUntilTimeout+0x15a>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8003c44:	68fb      	ldr	r3, [r7, #12]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	2280      	movs	r2, #128	; 0x80
 8003c4a:	0112      	lsls	r2, r2, #4
 8003c4c:	621a      	str	r2, [r3, #32]
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003c4e:	f3ef 8310 	mrs	r3, PRIMASK
 8003c52:	613b      	str	r3, [r7, #16]
  return(result);
 8003c54:	693b      	ldr	r3, [r7, #16]

          /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error)
             interrupts for the interrupt process */
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8003c56:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003c58:	2301      	movs	r3, #1
 8003c5a:	617b      	str	r3, [r7, #20]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003c5c:	697b      	ldr	r3, [r7, #20]
 8003c5e:	f383 8810 	msr	PRIMASK, r3
}
 8003c62:	46c0      	nop			; (mov r8, r8)
 8003c64:	68fb      	ldr	r3, [r7, #12]
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	681a      	ldr	r2, [r3, #0]
 8003c6a:	68fb      	ldr	r3, [r7, #12]
 8003c6c:	681b      	ldr	r3, [r3, #0]
 8003c6e:	4923      	ldr	r1, [pc, #140]	; (8003cfc <UART_WaitOnFlagUntilTimeout+0x184>)
 8003c70:	400a      	ands	r2, r1
 8003c72:	601a      	str	r2, [r3, #0]
 8003c74:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8003c76:	61bb      	str	r3, [r7, #24]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003c78:	69bb      	ldr	r3, [r7, #24]
 8003c7a:	f383 8810 	msr	PRIMASK, r3
}
 8003c7e:	46c0      	nop			; (mov r8, r8)
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8003c80:	f3ef 8310 	mrs	r3, PRIMASK
 8003c84:	61fb      	str	r3, [r7, #28]
  return(result);
 8003c86:	69fb      	ldr	r3, [r7, #28]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8003c88:	64bb      	str	r3, [r7, #72]	; 0x48
 8003c8a:	2301      	movs	r3, #1
 8003c8c:	623b      	str	r3, [r7, #32]
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003c8e:	6a3b      	ldr	r3, [r7, #32]
 8003c90:	f383 8810 	msr	PRIMASK, r3
}
 8003c94:	46c0      	nop			; (mov r8, r8)
 8003c96:	68fb      	ldr	r3, [r7, #12]
 8003c98:	681b      	ldr	r3, [r3, #0]
 8003c9a:	689a      	ldr	r2, [r3, #8]
 8003c9c:	68fb      	ldr	r3, [r7, #12]
 8003c9e:	681b      	ldr	r3, [r3, #0]
 8003ca0:	2101      	movs	r1, #1
 8003ca2:	438a      	bics	r2, r1
 8003ca4:	609a      	str	r2, [r3, #8]
 8003ca6:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003ca8:	627b      	str	r3, [r7, #36]	; 0x24
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 8003caa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003cac:	f383 8810 	msr	PRIMASK, r3
}
 8003cb0:	46c0      	nop			; (mov r8, r8)

          huart->gState = HAL_UART_STATE_READY;
 8003cb2:	68fb      	ldr	r3, [r7, #12]
 8003cb4:	2220      	movs	r2, #32
 8003cb6:	679a      	str	r2, [r3, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 8003cb8:	68fb      	ldr	r3, [r7, #12]
 8003cba:	2220      	movs	r2, #32
 8003cbc:	67da      	str	r2, [r3, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8003cbe:	68fb      	ldr	r3, [r7, #12]
 8003cc0:	2280      	movs	r2, #128	; 0x80
 8003cc2:	2120      	movs	r1, #32
 8003cc4:	5099      	str	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8003cc6:	68fb      	ldr	r3, [r7, #12]
 8003cc8:	2274      	movs	r2, #116	; 0x74
 8003cca:	2100      	movs	r1, #0
 8003ccc:	5499      	strb	r1, [r3, r2]

          return HAL_TIMEOUT;
 8003cce:	2303      	movs	r3, #3
 8003cd0:	e010      	b.n	8003cf4 <UART_WaitOnFlagUntilTimeout+0x17c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8003cd2:	68fb      	ldr	r3, [r7, #12]
 8003cd4:	681b      	ldr	r3, [r3, #0]
 8003cd6:	69db      	ldr	r3, [r3, #28]
 8003cd8:	68ba      	ldr	r2, [r7, #8]
 8003cda:	4013      	ands	r3, r2
 8003cdc:	68ba      	ldr	r2, [r7, #8]
 8003cde:	1ad3      	subs	r3, r2, r3
 8003ce0:	425a      	negs	r2, r3
 8003ce2:	4153      	adcs	r3, r2
 8003ce4:	b2db      	uxtb	r3, r3
 8003ce6:	001a      	movs	r2, r3
 8003ce8:	1dfb      	adds	r3, r7, #7
 8003cea:	781b      	ldrb	r3, [r3, #0]
 8003cec:	429a      	cmp	r2, r3
 8003cee:	d100      	bne.n	8003cf2 <UART_WaitOnFlagUntilTimeout+0x17a>
 8003cf0:	e74b      	b.n	8003b8a <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8003cf2:	2300      	movs	r3, #0
}
 8003cf4:	0018      	movs	r0, r3
 8003cf6:	46bd      	mov	sp, r7
 8003cf8:	b014      	add	sp, #80	; 0x50
 8003cfa:	bd80      	pop	{r7, pc}
 8003cfc:	fffffe5f 	.word	0xfffffe5f

08003d00 <__errno>:
 8003d00:	4b01      	ldr	r3, [pc, #4]	; (8003d08 <__errno+0x8>)
 8003d02:	6818      	ldr	r0, [r3, #0]
 8003d04:	4770      	bx	lr
 8003d06:	46c0      	nop			; (mov r8, r8)
 8003d08:	20000014 	.word	0x20000014

08003d0c <__libc_init_array>:
 8003d0c:	b570      	push	{r4, r5, r6, lr}
 8003d0e:	2600      	movs	r6, #0
 8003d10:	4d0c      	ldr	r5, [pc, #48]	; (8003d44 <__libc_init_array+0x38>)
 8003d12:	4c0d      	ldr	r4, [pc, #52]	; (8003d48 <__libc_init_array+0x3c>)
 8003d14:	1b64      	subs	r4, r4, r5
 8003d16:	10a4      	asrs	r4, r4, #2
 8003d18:	42a6      	cmp	r6, r4
 8003d1a:	d109      	bne.n	8003d30 <__libc_init_array+0x24>
 8003d1c:	2600      	movs	r6, #0
 8003d1e:	f002 ffbd 	bl	8006c9c <_init>
 8003d22:	4d0a      	ldr	r5, [pc, #40]	; (8003d4c <__libc_init_array+0x40>)
 8003d24:	4c0a      	ldr	r4, [pc, #40]	; (8003d50 <__libc_init_array+0x44>)
 8003d26:	1b64      	subs	r4, r4, r5
 8003d28:	10a4      	asrs	r4, r4, #2
 8003d2a:	42a6      	cmp	r6, r4
 8003d2c:	d105      	bne.n	8003d3a <__libc_init_array+0x2e>
 8003d2e:	bd70      	pop	{r4, r5, r6, pc}
 8003d30:	00b3      	lsls	r3, r6, #2
 8003d32:	58eb      	ldr	r3, [r5, r3]
 8003d34:	4798      	blx	r3
 8003d36:	3601      	adds	r6, #1
 8003d38:	e7ee      	b.n	8003d18 <__libc_init_array+0xc>
 8003d3a:	00b3      	lsls	r3, r6, #2
 8003d3c:	58eb      	ldr	r3, [r5, r3]
 8003d3e:	4798      	blx	r3
 8003d40:	3601      	adds	r6, #1
 8003d42:	e7f2      	b.n	8003d2a <__libc_init_array+0x1e>
 8003d44:	080071b4 	.word	0x080071b4
 8003d48:	080071b4 	.word	0x080071b4
 8003d4c:	080071b4 	.word	0x080071b4
 8003d50:	080071b8 	.word	0x080071b8

08003d54 <memcpy>:
 8003d54:	2300      	movs	r3, #0
 8003d56:	b510      	push	{r4, lr}
 8003d58:	429a      	cmp	r2, r3
 8003d5a:	d100      	bne.n	8003d5e <memcpy+0xa>
 8003d5c:	bd10      	pop	{r4, pc}
 8003d5e:	5ccc      	ldrb	r4, [r1, r3]
 8003d60:	54c4      	strb	r4, [r0, r3]
 8003d62:	3301      	adds	r3, #1
 8003d64:	e7f8      	b.n	8003d58 <memcpy+0x4>

08003d66 <memset>:
 8003d66:	0003      	movs	r3, r0
 8003d68:	1882      	adds	r2, r0, r2
 8003d6a:	4293      	cmp	r3, r2
 8003d6c:	d100      	bne.n	8003d70 <memset+0xa>
 8003d6e:	4770      	bx	lr
 8003d70:	7019      	strb	r1, [r3, #0]
 8003d72:	3301      	adds	r3, #1
 8003d74:	e7f9      	b.n	8003d6a <memset+0x4>

08003d76 <__cvt>:
 8003d76:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003d78:	001e      	movs	r6, r3
 8003d7a:	2300      	movs	r3, #0
 8003d7c:	0014      	movs	r4, r2
 8003d7e:	b08b      	sub	sp, #44	; 0x2c
 8003d80:	429e      	cmp	r6, r3
 8003d82:	da04      	bge.n	8003d8e <__cvt+0x18>
 8003d84:	2180      	movs	r1, #128	; 0x80
 8003d86:	0609      	lsls	r1, r1, #24
 8003d88:	1873      	adds	r3, r6, r1
 8003d8a:	001e      	movs	r6, r3
 8003d8c:	232d      	movs	r3, #45	; 0x2d
 8003d8e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003d90:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8003d92:	7013      	strb	r3, [r2, #0]
 8003d94:	2320      	movs	r3, #32
 8003d96:	2203      	movs	r2, #3
 8003d98:	439f      	bics	r7, r3
 8003d9a:	2f46      	cmp	r7, #70	; 0x46
 8003d9c:	d007      	beq.n	8003dae <__cvt+0x38>
 8003d9e:	003b      	movs	r3, r7
 8003da0:	3b45      	subs	r3, #69	; 0x45
 8003da2:	4259      	negs	r1, r3
 8003da4:	414b      	adcs	r3, r1
 8003da6:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003da8:	3a01      	subs	r2, #1
 8003daa:	18cb      	adds	r3, r1, r3
 8003dac:	9310      	str	r3, [sp, #64]	; 0x40
 8003dae:	ab09      	add	r3, sp, #36	; 0x24
 8003db0:	9304      	str	r3, [sp, #16]
 8003db2:	ab08      	add	r3, sp, #32
 8003db4:	9303      	str	r3, [sp, #12]
 8003db6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003db8:	9200      	str	r2, [sp, #0]
 8003dba:	9302      	str	r3, [sp, #8]
 8003dbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003dbe:	0022      	movs	r2, r4
 8003dc0:	9301      	str	r3, [sp, #4]
 8003dc2:	0033      	movs	r3, r6
 8003dc4:	f000 fcf2 	bl	80047ac <_dtoa_r>
 8003dc8:	0005      	movs	r5, r0
 8003dca:	2f47      	cmp	r7, #71	; 0x47
 8003dcc:	d102      	bne.n	8003dd4 <__cvt+0x5e>
 8003dce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8003dd0:	07db      	lsls	r3, r3, #31
 8003dd2:	d528      	bpl.n	8003e26 <__cvt+0xb0>
 8003dd4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8003dd6:	18eb      	adds	r3, r5, r3
 8003dd8:	9307      	str	r3, [sp, #28]
 8003dda:	2f46      	cmp	r7, #70	; 0x46
 8003ddc:	d114      	bne.n	8003e08 <__cvt+0x92>
 8003dde:	782b      	ldrb	r3, [r5, #0]
 8003de0:	2b30      	cmp	r3, #48	; 0x30
 8003de2:	d10c      	bne.n	8003dfe <__cvt+0x88>
 8003de4:	2200      	movs	r2, #0
 8003de6:	2300      	movs	r3, #0
 8003de8:	0020      	movs	r0, r4
 8003dea:	0031      	movs	r1, r6
 8003dec:	f7fc fb2e 	bl	800044c <__aeabi_dcmpeq>
 8003df0:	2800      	cmp	r0, #0
 8003df2:	d104      	bne.n	8003dfe <__cvt+0x88>
 8003df4:	2301      	movs	r3, #1
 8003df6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003df8:	1a9b      	subs	r3, r3, r2
 8003dfa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8003dfc:	6013      	str	r3, [r2, #0]
 8003dfe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003e00:	9a07      	ldr	r2, [sp, #28]
 8003e02:	681b      	ldr	r3, [r3, #0]
 8003e04:	18d3      	adds	r3, r2, r3
 8003e06:	9307      	str	r3, [sp, #28]
 8003e08:	2200      	movs	r2, #0
 8003e0a:	2300      	movs	r3, #0
 8003e0c:	0020      	movs	r0, r4
 8003e0e:	0031      	movs	r1, r6
 8003e10:	f7fc fb1c 	bl	800044c <__aeabi_dcmpeq>
 8003e14:	2800      	cmp	r0, #0
 8003e16:	d001      	beq.n	8003e1c <__cvt+0xa6>
 8003e18:	9b07      	ldr	r3, [sp, #28]
 8003e1a:	9309      	str	r3, [sp, #36]	; 0x24
 8003e1c:	2230      	movs	r2, #48	; 0x30
 8003e1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003e20:	9907      	ldr	r1, [sp, #28]
 8003e22:	428b      	cmp	r3, r1
 8003e24:	d306      	bcc.n	8003e34 <__cvt+0xbe>
 8003e26:	0028      	movs	r0, r5
 8003e28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003e2a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8003e2c:	1b5b      	subs	r3, r3, r5
 8003e2e:	6013      	str	r3, [r2, #0]
 8003e30:	b00b      	add	sp, #44	; 0x2c
 8003e32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003e34:	1c59      	adds	r1, r3, #1
 8003e36:	9109      	str	r1, [sp, #36]	; 0x24
 8003e38:	701a      	strb	r2, [r3, #0]
 8003e3a:	e7f0      	b.n	8003e1e <__cvt+0xa8>

08003e3c <__exponent>:
 8003e3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003e3e:	1c83      	adds	r3, r0, #2
 8003e40:	b087      	sub	sp, #28
 8003e42:	9303      	str	r3, [sp, #12]
 8003e44:	0005      	movs	r5, r0
 8003e46:	000c      	movs	r4, r1
 8003e48:	232b      	movs	r3, #43	; 0x2b
 8003e4a:	7002      	strb	r2, [r0, #0]
 8003e4c:	2900      	cmp	r1, #0
 8003e4e:	da01      	bge.n	8003e54 <__exponent+0x18>
 8003e50:	424c      	negs	r4, r1
 8003e52:	3302      	adds	r3, #2
 8003e54:	706b      	strb	r3, [r5, #1]
 8003e56:	2c09      	cmp	r4, #9
 8003e58:	dd31      	ble.n	8003ebe <__exponent+0x82>
 8003e5a:	270a      	movs	r7, #10
 8003e5c:	ab04      	add	r3, sp, #16
 8003e5e:	1dde      	adds	r6, r3, #7
 8003e60:	0020      	movs	r0, r4
 8003e62:	0039      	movs	r1, r7
 8003e64:	9601      	str	r6, [sp, #4]
 8003e66:	f7fc fadb 	bl	8000420 <__aeabi_idivmod>
 8003e6a:	3e01      	subs	r6, #1
 8003e6c:	3130      	adds	r1, #48	; 0x30
 8003e6e:	0020      	movs	r0, r4
 8003e70:	7031      	strb	r1, [r6, #0]
 8003e72:	0039      	movs	r1, r7
 8003e74:	9402      	str	r4, [sp, #8]
 8003e76:	f7fc f9ed 	bl	8000254 <__divsi3>
 8003e7a:	9b02      	ldr	r3, [sp, #8]
 8003e7c:	0004      	movs	r4, r0
 8003e7e:	2b63      	cmp	r3, #99	; 0x63
 8003e80:	dcee      	bgt.n	8003e60 <__exponent+0x24>
 8003e82:	9b01      	ldr	r3, [sp, #4]
 8003e84:	3430      	adds	r4, #48	; 0x30
 8003e86:	1e9a      	subs	r2, r3, #2
 8003e88:	0013      	movs	r3, r2
 8003e8a:	9903      	ldr	r1, [sp, #12]
 8003e8c:	7014      	strb	r4, [r2, #0]
 8003e8e:	a804      	add	r0, sp, #16
 8003e90:	3007      	adds	r0, #7
 8003e92:	4298      	cmp	r0, r3
 8003e94:	d80e      	bhi.n	8003eb4 <__exponent+0x78>
 8003e96:	ab04      	add	r3, sp, #16
 8003e98:	3307      	adds	r3, #7
 8003e9a:	2000      	movs	r0, #0
 8003e9c:	429a      	cmp	r2, r3
 8003e9e:	d804      	bhi.n	8003eaa <__exponent+0x6e>
 8003ea0:	ab04      	add	r3, sp, #16
 8003ea2:	3009      	adds	r0, #9
 8003ea4:	18c0      	adds	r0, r0, r3
 8003ea6:	9b01      	ldr	r3, [sp, #4]
 8003ea8:	1ac0      	subs	r0, r0, r3
 8003eaa:	9b03      	ldr	r3, [sp, #12]
 8003eac:	1818      	adds	r0, r3, r0
 8003eae:	1b40      	subs	r0, r0, r5
 8003eb0:	b007      	add	sp, #28
 8003eb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003eb4:	7818      	ldrb	r0, [r3, #0]
 8003eb6:	3301      	adds	r3, #1
 8003eb8:	7008      	strb	r0, [r1, #0]
 8003eba:	3101      	adds	r1, #1
 8003ebc:	e7e7      	b.n	8003e8e <__exponent+0x52>
 8003ebe:	2330      	movs	r3, #48	; 0x30
 8003ec0:	18e4      	adds	r4, r4, r3
 8003ec2:	70ab      	strb	r3, [r5, #2]
 8003ec4:	1d28      	adds	r0, r5, #4
 8003ec6:	70ec      	strb	r4, [r5, #3]
 8003ec8:	e7f1      	b.n	8003eae <__exponent+0x72>
	...

08003ecc <_printf_float>:
 8003ecc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003ece:	b095      	sub	sp, #84	; 0x54
 8003ed0:	000c      	movs	r4, r1
 8003ed2:	9209      	str	r2, [sp, #36]	; 0x24
 8003ed4:	001e      	movs	r6, r3
 8003ed6:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8003ed8:	0007      	movs	r7, r0
 8003eda:	f001 fa81 	bl	80053e0 <_localeconv_r>
 8003ede:	6803      	ldr	r3, [r0, #0]
 8003ee0:	0018      	movs	r0, r3
 8003ee2:	930c      	str	r3, [sp, #48]	; 0x30
 8003ee4:	f7fc f910 	bl	8000108 <strlen>
 8003ee8:	2300      	movs	r3, #0
 8003eea:	9312      	str	r3, [sp, #72]	; 0x48
 8003eec:	7e23      	ldrb	r3, [r4, #24]
 8003eee:	2207      	movs	r2, #7
 8003ef0:	930a      	str	r3, [sp, #40]	; 0x28
 8003ef2:	6823      	ldr	r3, [r4, #0]
 8003ef4:	900e      	str	r0, [sp, #56]	; 0x38
 8003ef6:	930d      	str	r3, [sp, #52]	; 0x34
 8003ef8:	990d      	ldr	r1, [sp, #52]	; 0x34
 8003efa:	682b      	ldr	r3, [r5, #0]
 8003efc:	05c9      	lsls	r1, r1, #23
 8003efe:	d547      	bpl.n	8003f90 <_printf_float+0xc4>
 8003f00:	189b      	adds	r3, r3, r2
 8003f02:	4393      	bics	r3, r2
 8003f04:	001a      	movs	r2, r3
 8003f06:	3208      	adds	r2, #8
 8003f08:	602a      	str	r2, [r5, #0]
 8003f0a:	681a      	ldr	r2, [r3, #0]
 8003f0c:	685b      	ldr	r3, [r3, #4]
 8003f0e:	64a2      	str	r2, [r4, #72]	; 0x48
 8003f10:	64e3      	str	r3, [r4, #76]	; 0x4c
 8003f12:	2201      	movs	r2, #1
 8003f14:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8003f16:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8003f18:	930b      	str	r3, [sp, #44]	; 0x2c
 8003f1a:	006b      	lsls	r3, r5, #1
 8003f1c:	085b      	lsrs	r3, r3, #1
 8003f1e:	930f      	str	r3, [sp, #60]	; 0x3c
 8003f20:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003f22:	4ba7      	ldr	r3, [pc, #668]	; (80041c0 <_printf_float+0x2f4>)
 8003f24:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003f26:	4252      	negs	r2, r2
 8003f28:	f7fd fffa 	bl	8001f20 <__aeabi_dcmpun>
 8003f2c:	2800      	cmp	r0, #0
 8003f2e:	d131      	bne.n	8003f94 <_printf_float+0xc8>
 8003f30:	2201      	movs	r2, #1
 8003f32:	4ba3      	ldr	r3, [pc, #652]	; (80041c0 <_printf_float+0x2f4>)
 8003f34:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003f36:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003f38:	4252      	negs	r2, r2
 8003f3a:	f7fc fa97 	bl	800046c <__aeabi_dcmple>
 8003f3e:	2800      	cmp	r0, #0
 8003f40:	d128      	bne.n	8003f94 <_printf_float+0xc8>
 8003f42:	2200      	movs	r2, #0
 8003f44:	2300      	movs	r3, #0
 8003f46:	0029      	movs	r1, r5
 8003f48:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003f4a:	f7fc fa85 	bl	8000458 <__aeabi_dcmplt>
 8003f4e:	2800      	cmp	r0, #0
 8003f50:	d003      	beq.n	8003f5a <_printf_float+0x8e>
 8003f52:	0023      	movs	r3, r4
 8003f54:	222d      	movs	r2, #45	; 0x2d
 8003f56:	3343      	adds	r3, #67	; 0x43
 8003f58:	701a      	strb	r2, [r3, #0]
 8003f5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003f5c:	4d99      	ldr	r5, [pc, #612]	; (80041c4 <_printf_float+0x2f8>)
 8003f5e:	2b47      	cmp	r3, #71	; 0x47
 8003f60:	d900      	bls.n	8003f64 <_printf_float+0x98>
 8003f62:	4d99      	ldr	r5, [pc, #612]	; (80041c8 <_printf_float+0x2fc>)
 8003f64:	2303      	movs	r3, #3
 8003f66:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003f68:	6123      	str	r3, [r4, #16]
 8003f6a:	3301      	adds	r3, #1
 8003f6c:	439a      	bics	r2, r3
 8003f6e:	2300      	movs	r3, #0
 8003f70:	6022      	str	r2, [r4, #0]
 8003f72:	930b      	str	r3, [sp, #44]	; 0x2c
 8003f74:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003f76:	0021      	movs	r1, r4
 8003f78:	0038      	movs	r0, r7
 8003f7a:	9600      	str	r6, [sp, #0]
 8003f7c:	aa13      	add	r2, sp, #76	; 0x4c
 8003f7e:	f000 f9e7 	bl	8004350 <_printf_common>
 8003f82:	1c43      	adds	r3, r0, #1
 8003f84:	d000      	beq.n	8003f88 <_printf_float+0xbc>
 8003f86:	e0a2      	b.n	80040ce <_printf_float+0x202>
 8003f88:	2001      	movs	r0, #1
 8003f8a:	4240      	negs	r0, r0
 8003f8c:	b015      	add	sp, #84	; 0x54
 8003f8e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003f90:	3307      	adds	r3, #7
 8003f92:	e7b6      	b.n	8003f02 <_printf_float+0x36>
 8003f94:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003f96:	002b      	movs	r3, r5
 8003f98:	0010      	movs	r0, r2
 8003f9a:	0029      	movs	r1, r5
 8003f9c:	f7fd ffc0 	bl	8001f20 <__aeabi_dcmpun>
 8003fa0:	2800      	cmp	r0, #0
 8003fa2:	d00b      	beq.n	8003fbc <_printf_float+0xf0>
 8003fa4:	2d00      	cmp	r5, #0
 8003fa6:	da03      	bge.n	8003fb0 <_printf_float+0xe4>
 8003fa8:	0023      	movs	r3, r4
 8003faa:	222d      	movs	r2, #45	; 0x2d
 8003fac:	3343      	adds	r3, #67	; 0x43
 8003fae:	701a      	strb	r2, [r3, #0]
 8003fb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003fb2:	4d86      	ldr	r5, [pc, #536]	; (80041cc <_printf_float+0x300>)
 8003fb4:	2b47      	cmp	r3, #71	; 0x47
 8003fb6:	d9d5      	bls.n	8003f64 <_printf_float+0x98>
 8003fb8:	4d85      	ldr	r5, [pc, #532]	; (80041d0 <_printf_float+0x304>)
 8003fba:	e7d3      	b.n	8003f64 <_printf_float+0x98>
 8003fbc:	2220      	movs	r2, #32
 8003fbe:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003fc0:	6863      	ldr	r3, [r4, #4]
 8003fc2:	4391      	bics	r1, r2
 8003fc4:	910f      	str	r1, [sp, #60]	; 0x3c
 8003fc6:	1c5a      	adds	r2, r3, #1
 8003fc8:	d149      	bne.n	800405e <_printf_float+0x192>
 8003fca:	3307      	adds	r3, #7
 8003fcc:	6063      	str	r3, [r4, #4]
 8003fce:	2380      	movs	r3, #128	; 0x80
 8003fd0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003fd2:	00db      	lsls	r3, r3, #3
 8003fd4:	4313      	orrs	r3, r2
 8003fd6:	2200      	movs	r2, #0
 8003fd8:	9206      	str	r2, [sp, #24]
 8003fda:	aa12      	add	r2, sp, #72	; 0x48
 8003fdc:	9205      	str	r2, [sp, #20]
 8003fde:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003fe0:	a908      	add	r1, sp, #32
 8003fe2:	9204      	str	r2, [sp, #16]
 8003fe4:	aa11      	add	r2, sp, #68	; 0x44
 8003fe6:	9203      	str	r2, [sp, #12]
 8003fe8:	2223      	movs	r2, #35	; 0x23
 8003fea:	6023      	str	r3, [r4, #0]
 8003fec:	9301      	str	r3, [sp, #4]
 8003fee:	6863      	ldr	r3, [r4, #4]
 8003ff0:	1852      	adds	r2, r2, r1
 8003ff2:	9202      	str	r2, [sp, #8]
 8003ff4:	9300      	str	r3, [sp, #0]
 8003ff6:	0038      	movs	r0, r7
 8003ff8:	002b      	movs	r3, r5
 8003ffa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003ffc:	f7ff febb 	bl	8003d76 <__cvt>
 8004000:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004002:	0005      	movs	r5, r0
 8004004:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004006:	2b47      	cmp	r3, #71	; 0x47
 8004008:	d108      	bne.n	800401c <_printf_float+0x150>
 800400a:	1ccb      	adds	r3, r1, #3
 800400c:	db02      	blt.n	8004014 <_printf_float+0x148>
 800400e:	6863      	ldr	r3, [r4, #4]
 8004010:	4299      	cmp	r1, r3
 8004012:	dd48      	ble.n	80040a6 <_printf_float+0x1da>
 8004014:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004016:	3b02      	subs	r3, #2
 8004018:	b2db      	uxtb	r3, r3
 800401a:	930a      	str	r3, [sp, #40]	; 0x28
 800401c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800401e:	2b65      	cmp	r3, #101	; 0x65
 8004020:	d824      	bhi.n	800406c <_printf_float+0x1a0>
 8004022:	0020      	movs	r0, r4
 8004024:	001a      	movs	r2, r3
 8004026:	3901      	subs	r1, #1
 8004028:	3050      	adds	r0, #80	; 0x50
 800402a:	9111      	str	r1, [sp, #68]	; 0x44
 800402c:	f7ff ff06 	bl	8003e3c <__exponent>
 8004030:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004032:	900b      	str	r0, [sp, #44]	; 0x2c
 8004034:	1813      	adds	r3, r2, r0
 8004036:	6123      	str	r3, [r4, #16]
 8004038:	2a01      	cmp	r2, #1
 800403a:	dc02      	bgt.n	8004042 <_printf_float+0x176>
 800403c:	6822      	ldr	r2, [r4, #0]
 800403e:	07d2      	lsls	r2, r2, #31
 8004040:	d501      	bpl.n	8004046 <_printf_float+0x17a>
 8004042:	3301      	adds	r3, #1
 8004044:	6123      	str	r3, [r4, #16]
 8004046:	2323      	movs	r3, #35	; 0x23
 8004048:	aa08      	add	r2, sp, #32
 800404a:	189b      	adds	r3, r3, r2
 800404c:	781b      	ldrb	r3, [r3, #0]
 800404e:	2b00      	cmp	r3, #0
 8004050:	d100      	bne.n	8004054 <_printf_float+0x188>
 8004052:	e78f      	b.n	8003f74 <_printf_float+0xa8>
 8004054:	0023      	movs	r3, r4
 8004056:	222d      	movs	r2, #45	; 0x2d
 8004058:	3343      	adds	r3, #67	; 0x43
 800405a:	701a      	strb	r2, [r3, #0]
 800405c:	e78a      	b.n	8003f74 <_printf_float+0xa8>
 800405e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8004060:	2a47      	cmp	r2, #71	; 0x47
 8004062:	d1b4      	bne.n	8003fce <_printf_float+0x102>
 8004064:	2b00      	cmp	r3, #0
 8004066:	d1b2      	bne.n	8003fce <_printf_float+0x102>
 8004068:	3301      	adds	r3, #1
 800406a:	e7af      	b.n	8003fcc <_printf_float+0x100>
 800406c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800406e:	2b66      	cmp	r3, #102	; 0x66
 8004070:	d11b      	bne.n	80040aa <_printf_float+0x1de>
 8004072:	6863      	ldr	r3, [r4, #4]
 8004074:	2900      	cmp	r1, #0
 8004076:	dd0d      	ble.n	8004094 <_printf_float+0x1c8>
 8004078:	6121      	str	r1, [r4, #16]
 800407a:	2b00      	cmp	r3, #0
 800407c:	d102      	bne.n	8004084 <_printf_float+0x1b8>
 800407e:	6822      	ldr	r2, [r4, #0]
 8004080:	07d2      	lsls	r2, r2, #31
 8004082:	d502      	bpl.n	800408a <_printf_float+0x1be>
 8004084:	3301      	adds	r3, #1
 8004086:	1859      	adds	r1, r3, r1
 8004088:	6121      	str	r1, [r4, #16]
 800408a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800408c:	65a3      	str	r3, [r4, #88]	; 0x58
 800408e:	2300      	movs	r3, #0
 8004090:	930b      	str	r3, [sp, #44]	; 0x2c
 8004092:	e7d8      	b.n	8004046 <_printf_float+0x17a>
 8004094:	2b00      	cmp	r3, #0
 8004096:	d103      	bne.n	80040a0 <_printf_float+0x1d4>
 8004098:	2201      	movs	r2, #1
 800409a:	6821      	ldr	r1, [r4, #0]
 800409c:	4211      	tst	r1, r2
 800409e:	d000      	beq.n	80040a2 <_printf_float+0x1d6>
 80040a0:	1c9a      	adds	r2, r3, #2
 80040a2:	6122      	str	r2, [r4, #16]
 80040a4:	e7f1      	b.n	800408a <_printf_float+0x1be>
 80040a6:	2367      	movs	r3, #103	; 0x67
 80040a8:	930a      	str	r3, [sp, #40]	; 0x28
 80040aa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80040ac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80040ae:	4293      	cmp	r3, r2
 80040b0:	db06      	blt.n	80040c0 <_printf_float+0x1f4>
 80040b2:	6822      	ldr	r2, [r4, #0]
 80040b4:	6123      	str	r3, [r4, #16]
 80040b6:	07d2      	lsls	r2, r2, #31
 80040b8:	d5e7      	bpl.n	800408a <_printf_float+0x1be>
 80040ba:	3301      	adds	r3, #1
 80040bc:	6123      	str	r3, [r4, #16]
 80040be:	e7e4      	b.n	800408a <_printf_float+0x1be>
 80040c0:	2101      	movs	r1, #1
 80040c2:	2b00      	cmp	r3, #0
 80040c4:	dc01      	bgt.n	80040ca <_printf_float+0x1fe>
 80040c6:	1849      	adds	r1, r1, r1
 80040c8:	1ac9      	subs	r1, r1, r3
 80040ca:	1852      	adds	r2, r2, r1
 80040cc:	e7e9      	b.n	80040a2 <_printf_float+0x1d6>
 80040ce:	6822      	ldr	r2, [r4, #0]
 80040d0:	0553      	lsls	r3, r2, #21
 80040d2:	d407      	bmi.n	80040e4 <_printf_float+0x218>
 80040d4:	6923      	ldr	r3, [r4, #16]
 80040d6:	002a      	movs	r2, r5
 80040d8:	0038      	movs	r0, r7
 80040da:	9909      	ldr	r1, [sp, #36]	; 0x24
 80040dc:	47b0      	blx	r6
 80040de:	1c43      	adds	r3, r0, #1
 80040e0:	d128      	bne.n	8004134 <_printf_float+0x268>
 80040e2:	e751      	b.n	8003f88 <_printf_float+0xbc>
 80040e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80040e6:	2b65      	cmp	r3, #101	; 0x65
 80040e8:	d800      	bhi.n	80040ec <_printf_float+0x220>
 80040ea:	e0e1      	b.n	80042b0 <_printf_float+0x3e4>
 80040ec:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80040ee:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80040f0:	2200      	movs	r2, #0
 80040f2:	2300      	movs	r3, #0
 80040f4:	f7fc f9aa 	bl	800044c <__aeabi_dcmpeq>
 80040f8:	2800      	cmp	r0, #0
 80040fa:	d031      	beq.n	8004160 <_printf_float+0x294>
 80040fc:	2301      	movs	r3, #1
 80040fe:	0038      	movs	r0, r7
 8004100:	4a34      	ldr	r2, [pc, #208]	; (80041d4 <_printf_float+0x308>)
 8004102:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004104:	47b0      	blx	r6
 8004106:	1c43      	adds	r3, r0, #1
 8004108:	d100      	bne.n	800410c <_printf_float+0x240>
 800410a:	e73d      	b.n	8003f88 <_printf_float+0xbc>
 800410c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800410e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004110:	4293      	cmp	r3, r2
 8004112:	db02      	blt.n	800411a <_printf_float+0x24e>
 8004114:	6823      	ldr	r3, [r4, #0]
 8004116:	07db      	lsls	r3, r3, #31
 8004118:	d50c      	bpl.n	8004134 <_printf_float+0x268>
 800411a:	0038      	movs	r0, r7
 800411c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800411e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004120:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004122:	47b0      	blx	r6
 8004124:	2500      	movs	r5, #0
 8004126:	1c43      	adds	r3, r0, #1
 8004128:	d100      	bne.n	800412c <_printf_float+0x260>
 800412a:	e72d      	b.n	8003f88 <_printf_float+0xbc>
 800412c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800412e:	3b01      	subs	r3, #1
 8004130:	42ab      	cmp	r3, r5
 8004132:	dc0a      	bgt.n	800414a <_printf_float+0x27e>
 8004134:	6823      	ldr	r3, [r4, #0]
 8004136:	079b      	lsls	r3, r3, #30
 8004138:	d500      	bpl.n	800413c <_printf_float+0x270>
 800413a:	e106      	b.n	800434a <_printf_float+0x47e>
 800413c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800413e:	68e0      	ldr	r0, [r4, #12]
 8004140:	4298      	cmp	r0, r3
 8004142:	db00      	blt.n	8004146 <_printf_float+0x27a>
 8004144:	e722      	b.n	8003f8c <_printf_float+0xc0>
 8004146:	0018      	movs	r0, r3
 8004148:	e720      	b.n	8003f8c <_printf_float+0xc0>
 800414a:	0022      	movs	r2, r4
 800414c:	2301      	movs	r3, #1
 800414e:	0038      	movs	r0, r7
 8004150:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004152:	321a      	adds	r2, #26
 8004154:	47b0      	blx	r6
 8004156:	1c43      	adds	r3, r0, #1
 8004158:	d100      	bne.n	800415c <_printf_float+0x290>
 800415a:	e715      	b.n	8003f88 <_printf_float+0xbc>
 800415c:	3501      	adds	r5, #1
 800415e:	e7e5      	b.n	800412c <_printf_float+0x260>
 8004160:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004162:	2b00      	cmp	r3, #0
 8004164:	dc38      	bgt.n	80041d8 <_printf_float+0x30c>
 8004166:	2301      	movs	r3, #1
 8004168:	0038      	movs	r0, r7
 800416a:	4a1a      	ldr	r2, [pc, #104]	; (80041d4 <_printf_float+0x308>)
 800416c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800416e:	47b0      	blx	r6
 8004170:	1c43      	adds	r3, r0, #1
 8004172:	d100      	bne.n	8004176 <_printf_float+0x2aa>
 8004174:	e708      	b.n	8003f88 <_printf_float+0xbc>
 8004176:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004178:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800417a:	4313      	orrs	r3, r2
 800417c:	d102      	bne.n	8004184 <_printf_float+0x2b8>
 800417e:	6823      	ldr	r3, [r4, #0]
 8004180:	07db      	lsls	r3, r3, #31
 8004182:	d5d7      	bpl.n	8004134 <_printf_float+0x268>
 8004184:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004186:	0038      	movs	r0, r7
 8004188:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800418a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800418c:	47b0      	blx	r6
 800418e:	1c43      	adds	r3, r0, #1
 8004190:	d100      	bne.n	8004194 <_printf_float+0x2c8>
 8004192:	e6f9      	b.n	8003f88 <_printf_float+0xbc>
 8004194:	2300      	movs	r3, #0
 8004196:	930a      	str	r3, [sp, #40]	; 0x28
 8004198:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800419a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800419c:	425b      	negs	r3, r3
 800419e:	4293      	cmp	r3, r2
 80041a0:	dc01      	bgt.n	80041a6 <_printf_float+0x2da>
 80041a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80041a4:	e797      	b.n	80040d6 <_printf_float+0x20a>
 80041a6:	0022      	movs	r2, r4
 80041a8:	2301      	movs	r3, #1
 80041aa:	0038      	movs	r0, r7
 80041ac:	9909      	ldr	r1, [sp, #36]	; 0x24
 80041ae:	321a      	adds	r2, #26
 80041b0:	47b0      	blx	r6
 80041b2:	1c43      	adds	r3, r0, #1
 80041b4:	d100      	bne.n	80041b8 <_printf_float+0x2ec>
 80041b6:	e6e7      	b.n	8003f88 <_printf_float+0xbc>
 80041b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80041ba:	3301      	adds	r3, #1
 80041bc:	e7eb      	b.n	8004196 <_printf_float+0x2ca>
 80041be:	46c0      	nop			; (mov r8, r8)
 80041c0:	7fefffff 	.word	0x7fefffff
 80041c4:	08006de0 	.word	0x08006de0
 80041c8:	08006de4 	.word	0x08006de4
 80041cc:	08006de8 	.word	0x08006de8
 80041d0:	08006dec 	.word	0x08006dec
 80041d4:	08006df0 	.word	0x08006df0
 80041d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80041da:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80041dc:	920a      	str	r2, [sp, #40]	; 0x28
 80041de:	429a      	cmp	r2, r3
 80041e0:	dd00      	ble.n	80041e4 <_printf_float+0x318>
 80041e2:	930a      	str	r3, [sp, #40]	; 0x28
 80041e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80041e6:	2b00      	cmp	r3, #0
 80041e8:	dc3c      	bgt.n	8004264 <_printf_float+0x398>
 80041ea:	2300      	movs	r3, #0
 80041ec:	930d      	str	r3, [sp, #52]	; 0x34
 80041ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80041f0:	43db      	mvns	r3, r3
 80041f2:	17db      	asrs	r3, r3, #31
 80041f4:	930f      	str	r3, [sp, #60]	; 0x3c
 80041f6:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80041f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80041fa:	930b      	str	r3, [sp, #44]	; 0x2c
 80041fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80041fe:	4013      	ands	r3, r2
 8004200:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8004202:	1ad3      	subs	r3, r2, r3
 8004204:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004206:	4293      	cmp	r3, r2
 8004208:	dc34      	bgt.n	8004274 <_printf_float+0x3a8>
 800420a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800420c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800420e:	4293      	cmp	r3, r2
 8004210:	db3d      	blt.n	800428e <_printf_float+0x3c2>
 8004212:	6823      	ldr	r3, [r4, #0]
 8004214:	07db      	lsls	r3, r3, #31
 8004216:	d43a      	bmi.n	800428e <_printf_float+0x3c2>
 8004218:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800421a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800421c:	9911      	ldr	r1, [sp, #68]	; 0x44
 800421e:	1ad3      	subs	r3, r2, r3
 8004220:	1a52      	subs	r2, r2, r1
 8004222:	920a      	str	r2, [sp, #40]	; 0x28
 8004224:	429a      	cmp	r2, r3
 8004226:	dd00      	ble.n	800422a <_printf_float+0x35e>
 8004228:	930a      	str	r3, [sp, #40]	; 0x28
 800422a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800422c:	2b00      	cmp	r3, #0
 800422e:	dc36      	bgt.n	800429e <_printf_float+0x3d2>
 8004230:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004232:	2500      	movs	r5, #0
 8004234:	43db      	mvns	r3, r3
 8004236:	17db      	asrs	r3, r3, #31
 8004238:	930b      	str	r3, [sp, #44]	; 0x2c
 800423a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800423c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800423e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004240:	1a9b      	subs	r3, r3, r2
 8004242:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004244:	400a      	ands	r2, r1
 8004246:	1a9b      	subs	r3, r3, r2
 8004248:	42ab      	cmp	r3, r5
 800424a:	dc00      	bgt.n	800424e <_printf_float+0x382>
 800424c:	e772      	b.n	8004134 <_printf_float+0x268>
 800424e:	0022      	movs	r2, r4
 8004250:	2301      	movs	r3, #1
 8004252:	0038      	movs	r0, r7
 8004254:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004256:	321a      	adds	r2, #26
 8004258:	47b0      	blx	r6
 800425a:	1c43      	adds	r3, r0, #1
 800425c:	d100      	bne.n	8004260 <_printf_float+0x394>
 800425e:	e693      	b.n	8003f88 <_printf_float+0xbc>
 8004260:	3501      	adds	r5, #1
 8004262:	e7ea      	b.n	800423a <_printf_float+0x36e>
 8004264:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004266:	002a      	movs	r2, r5
 8004268:	0038      	movs	r0, r7
 800426a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800426c:	47b0      	blx	r6
 800426e:	1c43      	adds	r3, r0, #1
 8004270:	d1bb      	bne.n	80041ea <_printf_float+0x31e>
 8004272:	e689      	b.n	8003f88 <_printf_float+0xbc>
 8004274:	0022      	movs	r2, r4
 8004276:	2301      	movs	r3, #1
 8004278:	0038      	movs	r0, r7
 800427a:	9909      	ldr	r1, [sp, #36]	; 0x24
 800427c:	321a      	adds	r2, #26
 800427e:	47b0      	blx	r6
 8004280:	1c43      	adds	r3, r0, #1
 8004282:	d100      	bne.n	8004286 <_printf_float+0x3ba>
 8004284:	e680      	b.n	8003f88 <_printf_float+0xbc>
 8004286:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004288:	3301      	adds	r3, #1
 800428a:	930d      	str	r3, [sp, #52]	; 0x34
 800428c:	e7b3      	b.n	80041f6 <_printf_float+0x32a>
 800428e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004290:	0038      	movs	r0, r7
 8004292:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004294:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004296:	47b0      	blx	r6
 8004298:	1c43      	adds	r3, r0, #1
 800429a:	d1bd      	bne.n	8004218 <_printf_float+0x34c>
 800429c:	e674      	b.n	8003f88 <_printf_float+0xbc>
 800429e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80042a0:	0038      	movs	r0, r7
 80042a2:	18ea      	adds	r2, r5, r3
 80042a4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80042a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80042a8:	47b0      	blx	r6
 80042aa:	1c43      	adds	r3, r0, #1
 80042ac:	d1c0      	bne.n	8004230 <_printf_float+0x364>
 80042ae:	e66b      	b.n	8003f88 <_printf_float+0xbc>
 80042b0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80042b2:	2b01      	cmp	r3, #1
 80042b4:	dc02      	bgt.n	80042bc <_printf_float+0x3f0>
 80042b6:	2301      	movs	r3, #1
 80042b8:	421a      	tst	r2, r3
 80042ba:	d034      	beq.n	8004326 <_printf_float+0x45a>
 80042bc:	2301      	movs	r3, #1
 80042be:	002a      	movs	r2, r5
 80042c0:	0038      	movs	r0, r7
 80042c2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80042c4:	47b0      	blx	r6
 80042c6:	1c43      	adds	r3, r0, #1
 80042c8:	d100      	bne.n	80042cc <_printf_float+0x400>
 80042ca:	e65d      	b.n	8003f88 <_printf_float+0xbc>
 80042cc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80042ce:	0038      	movs	r0, r7
 80042d0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80042d2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80042d4:	47b0      	blx	r6
 80042d6:	1c43      	adds	r3, r0, #1
 80042d8:	d100      	bne.n	80042dc <_printf_float+0x410>
 80042da:	e655      	b.n	8003f88 <_printf_float+0xbc>
 80042dc:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80042de:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80042e0:	2200      	movs	r2, #0
 80042e2:	2300      	movs	r3, #0
 80042e4:	f7fc f8b2 	bl	800044c <__aeabi_dcmpeq>
 80042e8:	2800      	cmp	r0, #0
 80042ea:	d11a      	bne.n	8004322 <_printf_float+0x456>
 80042ec:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80042ee:	1c6a      	adds	r2, r5, #1
 80042f0:	3b01      	subs	r3, #1
 80042f2:	0038      	movs	r0, r7
 80042f4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80042f6:	47b0      	blx	r6
 80042f8:	1c43      	adds	r3, r0, #1
 80042fa:	d10e      	bne.n	800431a <_printf_float+0x44e>
 80042fc:	e644      	b.n	8003f88 <_printf_float+0xbc>
 80042fe:	0022      	movs	r2, r4
 8004300:	2301      	movs	r3, #1
 8004302:	0038      	movs	r0, r7
 8004304:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004306:	321a      	adds	r2, #26
 8004308:	47b0      	blx	r6
 800430a:	1c43      	adds	r3, r0, #1
 800430c:	d100      	bne.n	8004310 <_printf_float+0x444>
 800430e:	e63b      	b.n	8003f88 <_printf_float+0xbc>
 8004310:	3501      	adds	r5, #1
 8004312:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004314:	3b01      	subs	r3, #1
 8004316:	42ab      	cmp	r3, r5
 8004318:	dcf1      	bgt.n	80042fe <_printf_float+0x432>
 800431a:	0022      	movs	r2, r4
 800431c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800431e:	3250      	adds	r2, #80	; 0x50
 8004320:	e6da      	b.n	80040d8 <_printf_float+0x20c>
 8004322:	2500      	movs	r5, #0
 8004324:	e7f5      	b.n	8004312 <_printf_float+0x446>
 8004326:	002a      	movs	r2, r5
 8004328:	e7e3      	b.n	80042f2 <_printf_float+0x426>
 800432a:	0022      	movs	r2, r4
 800432c:	2301      	movs	r3, #1
 800432e:	0038      	movs	r0, r7
 8004330:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004332:	3219      	adds	r2, #25
 8004334:	47b0      	blx	r6
 8004336:	1c43      	adds	r3, r0, #1
 8004338:	d100      	bne.n	800433c <_printf_float+0x470>
 800433a:	e625      	b.n	8003f88 <_printf_float+0xbc>
 800433c:	3501      	adds	r5, #1
 800433e:	68e3      	ldr	r3, [r4, #12]
 8004340:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8004342:	1a9b      	subs	r3, r3, r2
 8004344:	42ab      	cmp	r3, r5
 8004346:	dcf0      	bgt.n	800432a <_printf_float+0x45e>
 8004348:	e6f8      	b.n	800413c <_printf_float+0x270>
 800434a:	2500      	movs	r5, #0
 800434c:	e7f7      	b.n	800433e <_printf_float+0x472>
 800434e:	46c0      	nop			; (mov r8, r8)

08004350 <_printf_common>:
 8004350:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004352:	0015      	movs	r5, r2
 8004354:	9301      	str	r3, [sp, #4]
 8004356:	688a      	ldr	r2, [r1, #8]
 8004358:	690b      	ldr	r3, [r1, #16]
 800435a:	000c      	movs	r4, r1
 800435c:	9000      	str	r0, [sp, #0]
 800435e:	4293      	cmp	r3, r2
 8004360:	da00      	bge.n	8004364 <_printf_common+0x14>
 8004362:	0013      	movs	r3, r2
 8004364:	0022      	movs	r2, r4
 8004366:	602b      	str	r3, [r5, #0]
 8004368:	3243      	adds	r2, #67	; 0x43
 800436a:	7812      	ldrb	r2, [r2, #0]
 800436c:	2a00      	cmp	r2, #0
 800436e:	d001      	beq.n	8004374 <_printf_common+0x24>
 8004370:	3301      	adds	r3, #1
 8004372:	602b      	str	r3, [r5, #0]
 8004374:	6823      	ldr	r3, [r4, #0]
 8004376:	069b      	lsls	r3, r3, #26
 8004378:	d502      	bpl.n	8004380 <_printf_common+0x30>
 800437a:	682b      	ldr	r3, [r5, #0]
 800437c:	3302      	adds	r3, #2
 800437e:	602b      	str	r3, [r5, #0]
 8004380:	6822      	ldr	r2, [r4, #0]
 8004382:	2306      	movs	r3, #6
 8004384:	0017      	movs	r7, r2
 8004386:	401f      	ands	r7, r3
 8004388:	421a      	tst	r2, r3
 800438a:	d027      	beq.n	80043dc <_printf_common+0x8c>
 800438c:	0023      	movs	r3, r4
 800438e:	3343      	adds	r3, #67	; 0x43
 8004390:	781b      	ldrb	r3, [r3, #0]
 8004392:	1e5a      	subs	r2, r3, #1
 8004394:	4193      	sbcs	r3, r2
 8004396:	6822      	ldr	r2, [r4, #0]
 8004398:	0692      	lsls	r2, r2, #26
 800439a:	d430      	bmi.n	80043fe <_printf_common+0xae>
 800439c:	0022      	movs	r2, r4
 800439e:	9901      	ldr	r1, [sp, #4]
 80043a0:	9800      	ldr	r0, [sp, #0]
 80043a2:	9e08      	ldr	r6, [sp, #32]
 80043a4:	3243      	adds	r2, #67	; 0x43
 80043a6:	47b0      	blx	r6
 80043a8:	1c43      	adds	r3, r0, #1
 80043aa:	d025      	beq.n	80043f8 <_printf_common+0xa8>
 80043ac:	2306      	movs	r3, #6
 80043ae:	6820      	ldr	r0, [r4, #0]
 80043b0:	682a      	ldr	r2, [r5, #0]
 80043b2:	68e1      	ldr	r1, [r4, #12]
 80043b4:	2500      	movs	r5, #0
 80043b6:	4003      	ands	r3, r0
 80043b8:	2b04      	cmp	r3, #4
 80043ba:	d103      	bne.n	80043c4 <_printf_common+0x74>
 80043bc:	1a8d      	subs	r5, r1, r2
 80043be:	43eb      	mvns	r3, r5
 80043c0:	17db      	asrs	r3, r3, #31
 80043c2:	401d      	ands	r5, r3
 80043c4:	68a3      	ldr	r3, [r4, #8]
 80043c6:	6922      	ldr	r2, [r4, #16]
 80043c8:	4293      	cmp	r3, r2
 80043ca:	dd01      	ble.n	80043d0 <_printf_common+0x80>
 80043cc:	1a9b      	subs	r3, r3, r2
 80043ce:	18ed      	adds	r5, r5, r3
 80043d0:	2700      	movs	r7, #0
 80043d2:	42bd      	cmp	r5, r7
 80043d4:	d120      	bne.n	8004418 <_printf_common+0xc8>
 80043d6:	2000      	movs	r0, #0
 80043d8:	e010      	b.n	80043fc <_printf_common+0xac>
 80043da:	3701      	adds	r7, #1
 80043dc:	68e3      	ldr	r3, [r4, #12]
 80043de:	682a      	ldr	r2, [r5, #0]
 80043e0:	1a9b      	subs	r3, r3, r2
 80043e2:	42bb      	cmp	r3, r7
 80043e4:	ddd2      	ble.n	800438c <_printf_common+0x3c>
 80043e6:	0022      	movs	r2, r4
 80043e8:	2301      	movs	r3, #1
 80043ea:	9901      	ldr	r1, [sp, #4]
 80043ec:	9800      	ldr	r0, [sp, #0]
 80043ee:	9e08      	ldr	r6, [sp, #32]
 80043f0:	3219      	adds	r2, #25
 80043f2:	47b0      	blx	r6
 80043f4:	1c43      	adds	r3, r0, #1
 80043f6:	d1f0      	bne.n	80043da <_printf_common+0x8a>
 80043f8:	2001      	movs	r0, #1
 80043fa:	4240      	negs	r0, r0
 80043fc:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80043fe:	2030      	movs	r0, #48	; 0x30
 8004400:	18e1      	adds	r1, r4, r3
 8004402:	3143      	adds	r1, #67	; 0x43
 8004404:	7008      	strb	r0, [r1, #0]
 8004406:	0021      	movs	r1, r4
 8004408:	1c5a      	adds	r2, r3, #1
 800440a:	3145      	adds	r1, #69	; 0x45
 800440c:	7809      	ldrb	r1, [r1, #0]
 800440e:	18a2      	adds	r2, r4, r2
 8004410:	3243      	adds	r2, #67	; 0x43
 8004412:	3302      	adds	r3, #2
 8004414:	7011      	strb	r1, [r2, #0]
 8004416:	e7c1      	b.n	800439c <_printf_common+0x4c>
 8004418:	0022      	movs	r2, r4
 800441a:	2301      	movs	r3, #1
 800441c:	9901      	ldr	r1, [sp, #4]
 800441e:	9800      	ldr	r0, [sp, #0]
 8004420:	9e08      	ldr	r6, [sp, #32]
 8004422:	321a      	adds	r2, #26
 8004424:	47b0      	blx	r6
 8004426:	1c43      	adds	r3, r0, #1
 8004428:	d0e6      	beq.n	80043f8 <_printf_common+0xa8>
 800442a:	3701      	adds	r7, #1
 800442c:	e7d1      	b.n	80043d2 <_printf_common+0x82>
	...

08004430 <_printf_i>:
 8004430:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004432:	b08b      	sub	sp, #44	; 0x2c
 8004434:	9206      	str	r2, [sp, #24]
 8004436:	000a      	movs	r2, r1
 8004438:	3243      	adds	r2, #67	; 0x43
 800443a:	9307      	str	r3, [sp, #28]
 800443c:	9005      	str	r0, [sp, #20]
 800443e:	9204      	str	r2, [sp, #16]
 8004440:	7e0a      	ldrb	r2, [r1, #24]
 8004442:	000c      	movs	r4, r1
 8004444:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004446:	2a78      	cmp	r2, #120	; 0x78
 8004448:	d807      	bhi.n	800445a <_printf_i+0x2a>
 800444a:	2a62      	cmp	r2, #98	; 0x62
 800444c:	d809      	bhi.n	8004462 <_printf_i+0x32>
 800444e:	2a00      	cmp	r2, #0
 8004450:	d100      	bne.n	8004454 <_printf_i+0x24>
 8004452:	e0c1      	b.n	80045d8 <_printf_i+0x1a8>
 8004454:	2a58      	cmp	r2, #88	; 0x58
 8004456:	d100      	bne.n	800445a <_printf_i+0x2a>
 8004458:	e08c      	b.n	8004574 <_printf_i+0x144>
 800445a:	0026      	movs	r6, r4
 800445c:	3642      	adds	r6, #66	; 0x42
 800445e:	7032      	strb	r2, [r6, #0]
 8004460:	e022      	b.n	80044a8 <_printf_i+0x78>
 8004462:	0010      	movs	r0, r2
 8004464:	3863      	subs	r0, #99	; 0x63
 8004466:	2815      	cmp	r0, #21
 8004468:	d8f7      	bhi.n	800445a <_printf_i+0x2a>
 800446a:	f7fb fe5f 	bl	800012c <__gnu_thumb1_case_shi>
 800446e:	0016      	.short	0x0016
 8004470:	fff6001f 	.word	0xfff6001f
 8004474:	fff6fff6 	.word	0xfff6fff6
 8004478:	001ffff6 	.word	0x001ffff6
 800447c:	fff6fff6 	.word	0xfff6fff6
 8004480:	fff6fff6 	.word	0xfff6fff6
 8004484:	003600a8 	.word	0x003600a8
 8004488:	fff6009a 	.word	0xfff6009a
 800448c:	00b9fff6 	.word	0x00b9fff6
 8004490:	0036fff6 	.word	0x0036fff6
 8004494:	fff6fff6 	.word	0xfff6fff6
 8004498:	009e      	.short	0x009e
 800449a:	0026      	movs	r6, r4
 800449c:	681a      	ldr	r2, [r3, #0]
 800449e:	3642      	adds	r6, #66	; 0x42
 80044a0:	1d11      	adds	r1, r2, #4
 80044a2:	6019      	str	r1, [r3, #0]
 80044a4:	6813      	ldr	r3, [r2, #0]
 80044a6:	7033      	strb	r3, [r6, #0]
 80044a8:	2301      	movs	r3, #1
 80044aa:	e0a7      	b.n	80045fc <_printf_i+0x1cc>
 80044ac:	6808      	ldr	r0, [r1, #0]
 80044ae:	6819      	ldr	r1, [r3, #0]
 80044b0:	1d0a      	adds	r2, r1, #4
 80044b2:	0605      	lsls	r5, r0, #24
 80044b4:	d50b      	bpl.n	80044ce <_printf_i+0x9e>
 80044b6:	680d      	ldr	r5, [r1, #0]
 80044b8:	601a      	str	r2, [r3, #0]
 80044ba:	2d00      	cmp	r5, #0
 80044bc:	da03      	bge.n	80044c6 <_printf_i+0x96>
 80044be:	232d      	movs	r3, #45	; 0x2d
 80044c0:	9a04      	ldr	r2, [sp, #16]
 80044c2:	426d      	negs	r5, r5
 80044c4:	7013      	strb	r3, [r2, #0]
 80044c6:	4b61      	ldr	r3, [pc, #388]	; (800464c <_printf_i+0x21c>)
 80044c8:	270a      	movs	r7, #10
 80044ca:	9303      	str	r3, [sp, #12]
 80044cc:	e01b      	b.n	8004506 <_printf_i+0xd6>
 80044ce:	680d      	ldr	r5, [r1, #0]
 80044d0:	601a      	str	r2, [r3, #0]
 80044d2:	0641      	lsls	r1, r0, #25
 80044d4:	d5f1      	bpl.n	80044ba <_printf_i+0x8a>
 80044d6:	b22d      	sxth	r5, r5
 80044d8:	e7ef      	b.n	80044ba <_printf_i+0x8a>
 80044da:	680d      	ldr	r5, [r1, #0]
 80044dc:	6819      	ldr	r1, [r3, #0]
 80044de:	1d08      	adds	r0, r1, #4
 80044e0:	6018      	str	r0, [r3, #0]
 80044e2:	062e      	lsls	r6, r5, #24
 80044e4:	d501      	bpl.n	80044ea <_printf_i+0xba>
 80044e6:	680d      	ldr	r5, [r1, #0]
 80044e8:	e003      	b.n	80044f2 <_printf_i+0xc2>
 80044ea:	066d      	lsls	r5, r5, #25
 80044ec:	d5fb      	bpl.n	80044e6 <_printf_i+0xb6>
 80044ee:	680d      	ldr	r5, [r1, #0]
 80044f0:	b2ad      	uxth	r5, r5
 80044f2:	4b56      	ldr	r3, [pc, #344]	; (800464c <_printf_i+0x21c>)
 80044f4:	2708      	movs	r7, #8
 80044f6:	9303      	str	r3, [sp, #12]
 80044f8:	2a6f      	cmp	r2, #111	; 0x6f
 80044fa:	d000      	beq.n	80044fe <_printf_i+0xce>
 80044fc:	3702      	adds	r7, #2
 80044fe:	0023      	movs	r3, r4
 8004500:	2200      	movs	r2, #0
 8004502:	3343      	adds	r3, #67	; 0x43
 8004504:	701a      	strb	r2, [r3, #0]
 8004506:	6863      	ldr	r3, [r4, #4]
 8004508:	60a3      	str	r3, [r4, #8]
 800450a:	2b00      	cmp	r3, #0
 800450c:	db03      	blt.n	8004516 <_printf_i+0xe6>
 800450e:	2204      	movs	r2, #4
 8004510:	6821      	ldr	r1, [r4, #0]
 8004512:	4391      	bics	r1, r2
 8004514:	6021      	str	r1, [r4, #0]
 8004516:	2d00      	cmp	r5, #0
 8004518:	d102      	bne.n	8004520 <_printf_i+0xf0>
 800451a:	9e04      	ldr	r6, [sp, #16]
 800451c:	2b00      	cmp	r3, #0
 800451e:	d00c      	beq.n	800453a <_printf_i+0x10a>
 8004520:	9e04      	ldr	r6, [sp, #16]
 8004522:	0028      	movs	r0, r5
 8004524:	0039      	movs	r1, r7
 8004526:	f7fb fe91 	bl	800024c <__aeabi_uidivmod>
 800452a:	9b03      	ldr	r3, [sp, #12]
 800452c:	3e01      	subs	r6, #1
 800452e:	5c5b      	ldrb	r3, [r3, r1]
 8004530:	7033      	strb	r3, [r6, #0]
 8004532:	002b      	movs	r3, r5
 8004534:	0005      	movs	r5, r0
 8004536:	429f      	cmp	r7, r3
 8004538:	d9f3      	bls.n	8004522 <_printf_i+0xf2>
 800453a:	2f08      	cmp	r7, #8
 800453c:	d109      	bne.n	8004552 <_printf_i+0x122>
 800453e:	6823      	ldr	r3, [r4, #0]
 8004540:	07db      	lsls	r3, r3, #31
 8004542:	d506      	bpl.n	8004552 <_printf_i+0x122>
 8004544:	6863      	ldr	r3, [r4, #4]
 8004546:	6922      	ldr	r2, [r4, #16]
 8004548:	4293      	cmp	r3, r2
 800454a:	dc02      	bgt.n	8004552 <_printf_i+0x122>
 800454c:	2330      	movs	r3, #48	; 0x30
 800454e:	3e01      	subs	r6, #1
 8004550:	7033      	strb	r3, [r6, #0]
 8004552:	9b04      	ldr	r3, [sp, #16]
 8004554:	1b9b      	subs	r3, r3, r6
 8004556:	6123      	str	r3, [r4, #16]
 8004558:	9b07      	ldr	r3, [sp, #28]
 800455a:	0021      	movs	r1, r4
 800455c:	9300      	str	r3, [sp, #0]
 800455e:	9805      	ldr	r0, [sp, #20]
 8004560:	9b06      	ldr	r3, [sp, #24]
 8004562:	aa09      	add	r2, sp, #36	; 0x24
 8004564:	f7ff fef4 	bl	8004350 <_printf_common>
 8004568:	1c43      	adds	r3, r0, #1
 800456a:	d14c      	bne.n	8004606 <_printf_i+0x1d6>
 800456c:	2001      	movs	r0, #1
 800456e:	4240      	negs	r0, r0
 8004570:	b00b      	add	sp, #44	; 0x2c
 8004572:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004574:	3145      	adds	r1, #69	; 0x45
 8004576:	700a      	strb	r2, [r1, #0]
 8004578:	4a34      	ldr	r2, [pc, #208]	; (800464c <_printf_i+0x21c>)
 800457a:	9203      	str	r2, [sp, #12]
 800457c:	681a      	ldr	r2, [r3, #0]
 800457e:	6821      	ldr	r1, [r4, #0]
 8004580:	ca20      	ldmia	r2!, {r5}
 8004582:	601a      	str	r2, [r3, #0]
 8004584:	0608      	lsls	r0, r1, #24
 8004586:	d516      	bpl.n	80045b6 <_printf_i+0x186>
 8004588:	07cb      	lsls	r3, r1, #31
 800458a:	d502      	bpl.n	8004592 <_printf_i+0x162>
 800458c:	2320      	movs	r3, #32
 800458e:	4319      	orrs	r1, r3
 8004590:	6021      	str	r1, [r4, #0]
 8004592:	2710      	movs	r7, #16
 8004594:	2d00      	cmp	r5, #0
 8004596:	d1b2      	bne.n	80044fe <_printf_i+0xce>
 8004598:	2320      	movs	r3, #32
 800459a:	6822      	ldr	r2, [r4, #0]
 800459c:	439a      	bics	r2, r3
 800459e:	6022      	str	r2, [r4, #0]
 80045a0:	e7ad      	b.n	80044fe <_printf_i+0xce>
 80045a2:	2220      	movs	r2, #32
 80045a4:	6809      	ldr	r1, [r1, #0]
 80045a6:	430a      	orrs	r2, r1
 80045a8:	6022      	str	r2, [r4, #0]
 80045aa:	0022      	movs	r2, r4
 80045ac:	2178      	movs	r1, #120	; 0x78
 80045ae:	3245      	adds	r2, #69	; 0x45
 80045b0:	7011      	strb	r1, [r2, #0]
 80045b2:	4a27      	ldr	r2, [pc, #156]	; (8004650 <_printf_i+0x220>)
 80045b4:	e7e1      	b.n	800457a <_printf_i+0x14a>
 80045b6:	0648      	lsls	r0, r1, #25
 80045b8:	d5e6      	bpl.n	8004588 <_printf_i+0x158>
 80045ba:	b2ad      	uxth	r5, r5
 80045bc:	e7e4      	b.n	8004588 <_printf_i+0x158>
 80045be:	681a      	ldr	r2, [r3, #0]
 80045c0:	680d      	ldr	r5, [r1, #0]
 80045c2:	1d10      	adds	r0, r2, #4
 80045c4:	6949      	ldr	r1, [r1, #20]
 80045c6:	6018      	str	r0, [r3, #0]
 80045c8:	6813      	ldr	r3, [r2, #0]
 80045ca:	062e      	lsls	r6, r5, #24
 80045cc:	d501      	bpl.n	80045d2 <_printf_i+0x1a2>
 80045ce:	6019      	str	r1, [r3, #0]
 80045d0:	e002      	b.n	80045d8 <_printf_i+0x1a8>
 80045d2:	066d      	lsls	r5, r5, #25
 80045d4:	d5fb      	bpl.n	80045ce <_printf_i+0x19e>
 80045d6:	8019      	strh	r1, [r3, #0]
 80045d8:	2300      	movs	r3, #0
 80045da:	9e04      	ldr	r6, [sp, #16]
 80045dc:	6123      	str	r3, [r4, #16]
 80045de:	e7bb      	b.n	8004558 <_printf_i+0x128>
 80045e0:	681a      	ldr	r2, [r3, #0]
 80045e2:	1d11      	adds	r1, r2, #4
 80045e4:	6019      	str	r1, [r3, #0]
 80045e6:	6816      	ldr	r6, [r2, #0]
 80045e8:	2100      	movs	r1, #0
 80045ea:	0030      	movs	r0, r6
 80045ec:	6862      	ldr	r2, [r4, #4]
 80045ee:	f000 ff05 	bl	80053fc <memchr>
 80045f2:	2800      	cmp	r0, #0
 80045f4:	d001      	beq.n	80045fa <_printf_i+0x1ca>
 80045f6:	1b80      	subs	r0, r0, r6
 80045f8:	6060      	str	r0, [r4, #4]
 80045fa:	6863      	ldr	r3, [r4, #4]
 80045fc:	6123      	str	r3, [r4, #16]
 80045fe:	2300      	movs	r3, #0
 8004600:	9a04      	ldr	r2, [sp, #16]
 8004602:	7013      	strb	r3, [r2, #0]
 8004604:	e7a8      	b.n	8004558 <_printf_i+0x128>
 8004606:	6923      	ldr	r3, [r4, #16]
 8004608:	0032      	movs	r2, r6
 800460a:	9906      	ldr	r1, [sp, #24]
 800460c:	9805      	ldr	r0, [sp, #20]
 800460e:	9d07      	ldr	r5, [sp, #28]
 8004610:	47a8      	blx	r5
 8004612:	1c43      	adds	r3, r0, #1
 8004614:	d0aa      	beq.n	800456c <_printf_i+0x13c>
 8004616:	6823      	ldr	r3, [r4, #0]
 8004618:	079b      	lsls	r3, r3, #30
 800461a:	d415      	bmi.n	8004648 <_printf_i+0x218>
 800461c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800461e:	68e0      	ldr	r0, [r4, #12]
 8004620:	4298      	cmp	r0, r3
 8004622:	daa5      	bge.n	8004570 <_printf_i+0x140>
 8004624:	0018      	movs	r0, r3
 8004626:	e7a3      	b.n	8004570 <_printf_i+0x140>
 8004628:	0022      	movs	r2, r4
 800462a:	2301      	movs	r3, #1
 800462c:	9906      	ldr	r1, [sp, #24]
 800462e:	9805      	ldr	r0, [sp, #20]
 8004630:	9e07      	ldr	r6, [sp, #28]
 8004632:	3219      	adds	r2, #25
 8004634:	47b0      	blx	r6
 8004636:	1c43      	adds	r3, r0, #1
 8004638:	d098      	beq.n	800456c <_printf_i+0x13c>
 800463a:	3501      	adds	r5, #1
 800463c:	68e3      	ldr	r3, [r4, #12]
 800463e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004640:	1a9b      	subs	r3, r3, r2
 8004642:	42ab      	cmp	r3, r5
 8004644:	dcf0      	bgt.n	8004628 <_printf_i+0x1f8>
 8004646:	e7e9      	b.n	800461c <_printf_i+0x1ec>
 8004648:	2500      	movs	r5, #0
 800464a:	e7f7      	b.n	800463c <_printf_i+0x20c>
 800464c:	08006df2 	.word	0x08006df2
 8004650:	08006e03 	.word	0x08006e03

08004654 <siprintf>:
 8004654:	b40e      	push	{r1, r2, r3}
 8004656:	b500      	push	{lr}
 8004658:	490b      	ldr	r1, [pc, #44]	; (8004688 <siprintf+0x34>)
 800465a:	b09c      	sub	sp, #112	; 0x70
 800465c:	ab1d      	add	r3, sp, #116	; 0x74
 800465e:	9002      	str	r0, [sp, #8]
 8004660:	9006      	str	r0, [sp, #24]
 8004662:	9107      	str	r1, [sp, #28]
 8004664:	9104      	str	r1, [sp, #16]
 8004666:	4809      	ldr	r0, [pc, #36]	; (800468c <siprintf+0x38>)
 8004668:	4909      	ldr	r1, [pc, #36]	; (8004690 <siprintf+0x3c>)
 800466a:	cb04      	ldmia	r3!, {r2}
 800466c:	9105      	str	r1, [sp, #20]
 800466e:	6800      	ldr	r0, [r0, #0]
 8004670:	a902      	add	r1, sp, #8
 8004672:	9301      	str	r3, [sp, #4]
 8004674:	f001 fbda 	bl	8005e2c <_svfiprintf_r>
 8004678:	2300      	movs	r3, #0
 800467a:	9a02      	ldr	r2, [sp, #8]
 800467c:	7013      	strb	r3, [r2, #0]
 800467e:	b01c      	add	sp, #112	; 0x70
 8004680:	bc08      	pop	{r3}
 8004682:	b003      	add	sp, #12
 8004684:	4718      	bx	r3
 8004686:	46c0      	nop			; (mov r8, r8)
 8004688:	7fffffff 	.word	0x7fffffff
 800468c:	20000014 	.word	0x20000014
 8004690:	ffff0208 	.word	0xffff0208

08004694 <quorem>:
 8004694:	b5f0      	push	{r4, r5, r6, r7, lr}
 8004696:	0006      	movs	r6, r0
 8004698:	690b      	ldr	r3, [r1, #16]
 800469a:	6932      	ldr	r2, [r6, #16]
 800469c:	b087      	sub	sp, #28
 800469e:	2000      	movs	r0, #0
 80046a0:	9103      	str	r1, [sp, #12]
 80046a2:	429a      	cmp	r2, r3
 80046a4:	db65      	blt.n	8004772 <quorem+0xde>
 80046a6:	3b01      	subs	r3, #1
 80046a8:	009c      	lsls	r4, r3, #2
 80046aa:	9300      	str	r3, [sp, #0]
 80046ac:	000b      	movs	r3, r1
 80046ae:	3314      	adds	r3, #20
 80046b0:	9305      	str	r3, [sp, #20]
 80046b2:	191b      	adds	r3, r3, r4
 80046b4:	9304      	str	r3, [sp, #16]
 80046b6:	0033      	movs	r3, r6
 80046b8:	3314      	adds	r3, #20
 80046ba:	9302      	str	r3, [sp, #8]
 80046bc:	191c      	adds	r4, r3, r4
 80046be:	9b04      	ldr	r3, [sp, #16]
 80046c0:	6827      	ldr	r7, [r4, #0]
 80046c2:	681b      	ldr	r3, [r3, #0]
 80046c4:	0038      	movs	r0, r7
 80046c6:	1c5d      	adds	r5, r3, #1
 80046c8:	0029      	movs	r1, r5
 80046ca:	9301      	str	r3, [sp, #4]
 80046cc:	f7fb fd38 	bl	8000140 <__udivsi3>
 80046d0:	9001      	str	r0, [sp, #4]
 80046d2:	42af      	cmp	r7, r5
 80046d4:	d324      	bcc.n	8004720 <quorem+0x8c>
 80046d6:	2500      	movs	r5, #0
 80046d8:	46ac      	mov	ip, r5
 80046da:	9802      	ldr	r0, [sp, #8]
 80046dc:	9f05      	ldr	r7, [sp, #20]
 80046de:	cf08      	ldmia	r7!, {r3}
 80046e0:	9a01      	ldr	r2, [sp, #4]
 80046e2:	b299      	uxth	r1, r3
 80046e4:	4351      	muls	r1, r2
 80046e6:	0c1b      	lsrs	r3, r3, #16
 80046e8:	4353      	muls	r3, r2
 80046ea:	1949      	adds	r1, r1, r5
 80046ec:	0c0a      	lsrs	r2, r1, #16
 80046ee:	189b      	adds	r3, r3, r2
 80046f0:	6802      	ldr	r2, [r0, #0]
 80046f2:	b289      	uxth	r1, r1
 80046f4:	b292      	uxth	r2, r2
 80046f6:	4462      	add	r2, ip
 80046f8:	1a52      	subs	r2, r2, r1
 80046fa:	6801      	ldr	r1, [r0, #0]
 80046fc:	0c1d      	lsrs	r5, r3, #16
 80046fe:	0c09      	lsrs	r1, r1, #16
 8004700:	b29b      	uxth	r3, r3
 8004702:	1acb      	subs	r3, r1, r3
 8004704:	1411      	asrs	r1, r2, #16
 8004706:	185b      	adds	r3, r3, r1
 8004708:	1419      	asrs	r1, r3, #16
 800470a:	b292      	uxth	r2, r2
 800470c:	041b      	lsls	r3, r3, #16
 800470e:	431a      	orrs	r2, r3
 8004710:	9b04      	ldr	r3, [sp, #16]
 8004712:	468c      	mov	ip, r1
 8004714:	c004      	stmia	r0!, {r2}
 8004716:	42bb      	cmp	r3, r7
 8004718:	d2e1      	bcs.n	80046de <quorem+0x4a>
 800471a:	6823      	ldr	r3, [r4, #0]
 800471c:	2b00      	cmp	r3, #0
 800471e:	d030      	beq.n	8004782 <quorem+0xee>
 8004720:	0030      	movs	r0, r6
 8004722:	9903      	ldr	r1, [sp, #12]
 8004724:	f001 f8fa 	bl	800591c <__mcmp>
 8004728:	2800      	cmp	r0, #0
 800472a:	db21      	blt.n	8004770 <quorem+0xdc>
 800472c:	0030      	movs	r0, r6
 800472e:	2400      	movs	r4, #0
 8004730:	9b01      	ldr	r3, [sp, #4]
 8004732:	9903      	ldr	r1, [sp, #12]
 8004734:	3301      	adds	r3, #1
 8004736:	9301      	str	r3, [sp, #4]
 8004738:	3014      	adds	r0, #20
 800473a:	3114      	adds	r1, #20
 800473c:	6803      	ldr	r3, [r0, #0]
 800473e:	c920      	ldmia	r1!, {r5}
 8004740:	b29a      	uxth	r2, r3
 8004742:	1914      	adds	r4, r2, r4
 8004744:	b2aa      	uxth	r2, r5
 8004746:	1aa2      	subs	r2, r4, r2
 8004748:	0c1b      	lsrs	r3, r3, #16
 800474a:	0c2d      	lsrs	r5, r5, #16
 800474c:	1414      	asrs	r4, r2, #16
 800474e:	1b5b      	subs	r3, r3, r5
 8004750:	191b      	adds	r3, r3, r4
 8004752:	141c      	asrs	r4, r3, #16
 8004754:	b292      	uxth	r2, r2
 8004756:	041b      	lsls	r3, r3, #16
 8004758:	4313      	orrs	r3, r2
 800475a:	c008      	stmia	r0!, {r3}
 800475c:	9b04      	ldr	r3, [sp, #16]
 800475e:	428b      	cmp	r3, r1
 8004760:	d2ec      	bcs.n	800473c <quorem+0xa8>
 8004762:	9b00      	ldr	r3, [sp, #0]
 8004764:	9a02      	ldr	r2, [sp, #8]
 8004766:	009b      	lsls	r3, r3, #2
 8004768:	18d3      	adds	r3, r2, r3
 800476a:	681a      	ldr	r2, [r3, #0]
 800476c:	2a00      	cmp	r2, #0
 800476e:	d015      	beq.n	800479c <quorem+0x108>
 8004770:	9801      	ldr	r0, [sp, #4]
 8004772:	b007      	add	sp, #28
 8004774:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004776:	6823      	ldr	r3, [r4, #0]
 8004778:	2b00      	cmp	r3, #0
 800477a:	d106      	bne.n	800478a <quorem+0xf6>
 800477c:	9b00      	ldr	r3, [sp, #0]
 800477e:	3b01      	subs	r3, #1
 8004780:	9300      	str	r3, [sp, #0]
 8004782:	9b02      	ldr	r3, [sp, #8]
 8004784:	3c04      	subs	r4, #4
 8004786:	42a3      	cmp	r3, r4
 8004788:	d3f5      	bcc.n	8004776 <quorem+0xe2>
 800478a:	9b00      	ldr	r3, [sp, #0]
 800478c:	6133      	str	r3, [r6, #16]
 800478e:	e7c7      	b.n	8004720 <quorem+0x8c>
 8004790:	681a      	ldr	r2, [r3, #0]
 8004792:	2a00      	cmp	r2, #0
 8004794:	d106      	bne.n	80047a4 <quorem+0x110>
 8004796:	9a00      	ldr	r2, [sp, #0]
 8004798:	3a01      	subs	r2, #1
 800479a:	9200      	str	r2, [sp, #0]
 800479c:	9a02      	ldr	r2, [sp, #8]
 800479e:	3b04      	subs	r3, #4
 80047a0:	429a      	cmp	r2, r3
 80047a2:	d3f5      	bcc.n	8004790 <quorem+0xfc>
 80047a4:	9b00      	ldr	r3, [sp, #0]
 80047a6:	6133      	str	r3, [r6, #16]
 80047a8:	e7e2      	b.n	8004770 <quorem+0xdc>
	...

080047ac <_dtoa_r>:
 80047ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80047ae:	b09d      	sub	sp, #116	; 0x74
 80047b0:	9202      	str	r2, [sp, #8]
 80047b2:	9303      	str	r3, [sp, #12]
 80047b4:	9b02      	ldr	r3, [sp, #8]
 80047b6:	9c03      	ldr	r4, [sp, #12]
 80047b8:	9308      	str	r3, [sp, #32]
 80047ba:	9409      	str	r4, [sp, #36]	; 0x24
 80047bc:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80047be:	0007      	movs	r7, r0
 80047c0:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80047c2:	2c00      	cmp	r4, #0
 80047c4:	d10e      	bne.n	80047e4 <_dtoa_r+0x38>
 80047c6:	2010      	movs	r0, #16
 80047c8:	f000 fe0e 	bl	80053e8 <malloc>
 80047cc:	1e02      	subs	r2, r0, #0
 80047ce:	6278      	str	r0, [r7, #36]	; 0x24
 80047d0:	d104      	bne.n	80047dc <_dtoa_r+0x30>
 80047d2:	21ea      	movs	r1, #234	; 0xea
 80047d4:	4bc7      	ldr	r3, [pc, #796]	; (8004af4 <_dtoa_r+0x348>)
 80047d6:	48c8      	ldr	r0, [pc, #800]	; (8004af8 <_dtoa_r+0x34c>)
 80047d8:	f001 fc3a 	bl	8006050 <__assert_func>
 80047dc:	6044      	str	r4, [r0, #4]
 80047de:	6084      	str	r4, [r0, #8]
 80047e0:	6004      	str	r4, [r0, #0]
 80047e2:	60c4      	str	r4, [r0, #12]
 80047e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80047e6:	6819      	ldr	r1, [r3, #0]
 80047e8:	2900      	cmp	r1, #0
 80047ea:	d00a      	beq.n	8004802 <_dtoa_r+0x56>
 80047ec:	685a      	ldr	r2, [r3, #4]
 80047ee:	2301      	movs	r3, #1
 80047f0:	4093      	lsls	r3, r2
 80047f2:	604a      	str	r2, [r1, #4]
 80047f4:	608b      	str	r3, [r1, #8]
 80047f6:	0038      	movs	r0, r7
 80047f8:	f000 fe50 	bl	800549c <_Bfree>
 80047fc:	2200      	movs	r2, #0
 80047fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004800:	601a      	str	r2, [r3, #0]
 8004802:	9b03      	ldr	r3, [sp, #12]
 8004804:	2b00      	cmp	r3, #0
 8004806:	da20      	bge.n	800484a <_dtoa_r+0x9e>
 8004808:	2301      	movs	r3, #1
 800480a:	602b      	str	r3, [r5, #0]
 800480c:	9b03      	ldr	r3, [sp, #12]
 800480e:	005b      	lsls	r3, r3, #1
 8004810:	085b      	lsrs	r3, r3, #1
 8004812:	9309      	str	r3, [sp, #36]	; 0x24
 8004814:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004816:	4bb9      	ldr	r3, [pc, #740]	; (8004afc <_dtoa_r+0x350>)
 8004818:	4ab8      	ldr	r2, [pc, #736]	; (8004afc <_dtoa_r+0x350>)
 800481a:	402b      	ands	r3, r5
 800481c:	4293      	cmp	r3, r2
 800481e:	d117      	bne.n	8004850 <_dtoa_r+0xa4>
 8004820:	4bb7      	ldr	r3, [pc, #732]	; (8004b00 <_dtoa_r+0x354>)
 8004822:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8004824:	0328      	lsls	r0, r5, #12
 8004826:	6013      	str	r3, [r2, #0]
 8004828:	9b02      	ldr	r3, [sp, #8]
 800482a:	0b00      	lsrs	r0, r0, #12
 800482c:	4318      	orrs	r0, r3
 800482e:	d101      	bne.n	8004834 <_dtoa_r+0x88>
 8004830:	f000 fdbf 	bl	80053b2 <_dtoa_r+0xc06>
 8004834:	48b3      	ldr	r0, [pc, #716]	; (8004b04 <_dtoa_r+0x358>)
 8004836:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004838:	9006      	str	r0, [sp, #24]
 800483a:	2b00      	cmp	r3, #0
 800483c:	d002      	beq.n	8004844 <_dtoa_r+0x98>
 800483e:	4bb2      	ldr	r3, [pc, #712]	; (8004b08 <_dtoa_r+0x35c>)
 8004840:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8004842:	6013      	str	r3, [r2, #0]
 8004844:	9806      	ldr	r0, [sp, #24]
 8004846:	b01d      	add	sp, #116	; 0x74
 8004848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800484a:	2300      	movs	r3, #0
 800484c:	602b      	str	r3, [r5, #0]
 800484e:	e7e1      	b.n	8004814 <_dtoa_r+0x68>
 8004850:	9b08      	ldr	r3, [sp, #32]
 8004852:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8004854:	9312      	str	r3, [sp, #72]	; 0x48
 8004856:	9413      	str	r4, [sp, #76]	; 0x4c
 8004858:	9812      	ldr	r0, [sp, #72]	; 0x48
 800485a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800485c:	2200      	movs	r2, #0
 800485e:	2300      	movs	r3, #0
 8004860:	f7fb fdf4 	bl	800044c <__aeabi_dcmpeq>
 8004864:	1e04      	subs	r4, r0, #0
 8004866:	d009      	beq.n	800487c <_dtoa_r+0xd0>
 8004868:	2301      	movs	r3, #1
 800486a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800486c:	6013      	str	r3, [r2, #0]
 800486e:	4ba7      	ldr	r3, [pc, #668]	; (8004b0c <_dtoa_r+0x360>)
 8004870:	9306      	str	r3, [sp, #24]
 8004872:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004874:	2b00      	cmp	r3, #0
 8004876:	d0e5      	beq.n	8004844 <_dtoa_r+0x98>
 8004878:	4ba5      	ldr	r3, [pc, #660]	; (8004b10 <_dtoa_r+0x364>)
 800487a:	e7e1      	b.n	8004840 <_dtoa_r+0x94>
 800487c:	ab1a      	add	r3, sp, #104	; 0x68
 800487e:	9301      	str	r3, [sp, #4]
 8004880:	ab1b      	add	r3, sp, #108	; 0x6c
 8004882:	9300      	str	r3, [sp, #0]
 8004884:	0038      	movs	r0, r7
 8004886:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8004888:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800488a:	f001 f8fb 	bl	8005a84 <__d2b>
 800488e:	006e      	lsls	r6, r5, #1
 8004890:	9005      	str	r0, [sp, #20]
 8004892:	0d76      	lsrs	r6, r6, #21
 8004894:	d100      	bne.n	8004898 <_dtoa_r+0xec>
 8004896:	e07c      	b.n	8004992 <_dtoa_r+0x1e6>
 8004898:	9812      	ldr	r0, [sp, #72]	; 0x48
 800489a:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800489c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800489e:	4a9d      	ldr	r2, [pc, #628]	; (8004b14 <_dtoa_r+0x368>)
 80048a0:	031b      	lsls	r3, r3, #12
 80048a2:	0b1b      	lsrs	r3, r3, #12
 80048a4:	431a      	orrs	r2, r3
 80048a6:	0011      	movs	r1, r2
 80048a8:	4b9b      	ldr	r3, [pc, #620]	; (8004b18 <_dtoa_r+0x36c>)
 80048aa:	9418      	str	r4, [sp, #96]	; 0x60
 80048ac:	18f6      	adds	r6, r6, r3
 80048ae:	2200      	movs	r2, #0
 80048b0:	4b9a      	ldr	r3, [pc, #616]	; (8004b1c <_dtoa_r+0x370>)
 80048b2:	f7fc ffa3 	bl	80017fc <__aeabi_dsub>
 80048b6:	4a9a      	ldr	r2, [pc, #616]	; (8004b20 <_dtoa_r+0x374>)
 80048b8:	4b9a      	ldr	r3, [pc, #616]	; (8004b24 <_dtoa_r+0x378>)
 80048ba:	f7fc fd33 	bl	8001324 <__aeabi_dmul>
 80048be:	4a9a      	ldr	r2, [pc, #616]	; (8004b28 <_dtoa_r+0x37c>)
 80048c0:	4b9a      	ldr	r3, [pc, #616]	; (8004b2c <_dtoa_r+0x380>)
 80048c2:	f7fb fdf1 	bl	80004a8 <__aeabi_dadd>
 80048c6:	0004      	movs	r4, r0
 80048c8:	0030      	movs	r0, r6
 80048ca:	000d      	movs	r5, r1
 80048cc:	f7fd fb7c 	bl	8001fc8 <__aeabi_i2d>
 80048d0:	4a97      	ldr	r2, [pc, #604]	; (8004b30 <_dtoa_r+0x384>)
 80048d2:	4b98      	ldr	r3, [pc, #608]	; (8004b34 <_dtoa_r+0x388>)
 80048d4:	f7fc fd26 	bl	8001324 <__aeabi_dmul>
 80048d8:	0002      	movs	r2, r0
 80048da:	000b      	movs	r3, r1
 80048dc:	0020      	movs	r0, r4
 80048de:	0029      	movs	r1, r5
 80048e0:	f7fb fde2 	bl	80004a8 <__aeabi_dadd>
 80048e4:	0004      	movs	r4, r0
 80048e6:	000d      	movs	r5, r1
 80048e8:	f7fd fb38 	bl	8001f5c <__aeabi_d2iz>
 80048ec:	2200      	movs	r2, #0
 80048ee:	9002      	str	r0, [sp, #8]
 80048f0:	2300      	movs	r3, #0
 80048f2:	0020      	movs	r0, r4
 80048f4:	0029      	movs	r1, r5
 80048f6:	f7fb fdaf 	bl	8000458 <__aeabi_dcmplt>
 80048fa:	2800      	cmp	r0, #0
 80048fc:	d00b      	beq.n	8004916 <_dtoa_r+0x16a>
 80048fe:	9802      	ldr	r0, [sp, #8]
 8004900:	f7fd fb62 	bl	8001fc8 <__aeabi_i2d>
 8004904:	002b      	movs	r3, r5
 8004906:	0022      	movs	r2, r4
 8004908:	f7fb fda0 	bl	800044c <__aeabi_dcmpeq>
 800490c:	4243      	negs	r3, r0
 800490e:	4158      	adcs	r0, r3
 8004910:	9b02      	ldr	r3, [sp, #8]
 8004912:	1a1b      	subs	r3, r3, r0
 8004914:	9302      	str	r3, [sp, #8]
 8004916:	2301      	movs	r3, #1
 8004918:	9316      	str	r3, [sp, #88]	; 0x58
 800491a:	9b02      	ldr	r3, [sp, #8]
 800491c:	2b16      	cmp	r3, #22
 800491e:	d80f      	bhi.n	8004940 <_dtoa_r+0x194>
 8004920:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004922:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004924:	00da      	lsls	r2, r3, #3
 8004926:	4b84      	ldr	r3, [pc, #528]	; (8004b38 <_dtoa_r+0x38c>)
 8004928:	189b      	adds	r3, r3, r2
 800492a:	681a      	ldr	r2, [r3, #0]
 800492c:	685b      	ldr	r3, [r3, #4]
 800492e:	f7fb fd93 	bl	8000458 <__aeabi_dcmplt>
 8004932:	2800      	cmp	r0, #0
 8004934:	d049      	beq.n	80049ca <_dtoa_r+0x21e>
 8004936:	9b02      	ldr	r3, [sp, #8]
 8004938:	3b01      	subs	r3, #1
 800493a:	9302      	str	r3, [sp, #8]
 800493c:	2300      	movs	r3, #0
 800493e:	9316      	str	r3, [sp, #88]	; 0x58
 8004940:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004942:	1b9e      	subs	r6, r3, r6
 8004944:	2300      	movs	r3, #0
 8004946:	930a      	str	r3, [sp, #40]	; 0x28
 8004948:	0033      	movs	r3, r6
 800494a:	3b01      	subs	r3, #1
 800494c:	930d      	str	r3, [sp, #52]	; 0x34
 800494e:	d504      	bpl.n	800495a <_dtoa_r+0x1ae>
 8004950:	2301      	movs	r3, #1
 8004952:	1b9b      	subs	r3, r3, r6
 8004954:	930a      	str	r3, [sp, #40]	; 0x28
 8004956:	2300      	movs	r3, #0
 8004958:	930d      	str	r3, [sp, #52]	; 0x34
 800495a:	9b02      	ldr	r3, [sp, #8]
 800495c:	2b00      	cmp	r3, #0
 800495e:	db36      	blt.n	80049ce <_dtoa_r+0x222>
 8004960:	9a02      	ldr	r2, [sp, #8]
 8004962:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004964:	4694      	mov	ip, r2
 8004966:	4463      	add	r3, ip
 8004968:	930d      	str	r3, [sp, #52]	; 0x34
 800496a:	2300      	movs	r3, #0
 800496c:	9215      	str	r2, [sp, #84]	; 0x54
 800496e:	930e      	str	r3, [sp, #56]	; 0x38
 8004970:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004972:	2401      	movs	r4, #1
 8004974:	2b09      	cmp	r3, #9
 8004976:	d864      	bhi.n	8004a42 <_dtoa_r+0x296>
 8004978:	2b05      	cmp	r3, #5
 800497a:	dd02      	ble.n	8004982 <_dtoa_r+0x1d6>
 800497c:	2400      	movs	r4, #0
 800497e:	3b04      	subs	r3, #4
 8004980:	9322      	str	r3, [sp, #136]	; 0x88
 8004982:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004984:	1e98      	subs	r0, r3, #2
 8004986:	2803      	cmp	r0, #3
 8004988:	d864      	bhi.n	8004a54 <_dtoa_r+0x2a8>
 800498a:	f7fb fbc5 	bl	8000118 <__gnu_thumb1_case_uqi>
 800498e:	3829      	.short	0x3829
 8004990:	5836      	.short	0x5836
 8004992:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004994:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8004996:	189e      	adds	r6, r3, r2
 8004998:	4b68      	ldr	r3, [pc, #416]	; (8004b3c <_dtoa_r+0x390>)
 800499a:	18f2      	adds	r2, r6, r3
 800499c:	2a20      	cmp	r2, #32
 800499e:	dd0f      	ble.n	80049c0 <_dtoa_r+0x214>
 80049a0:	2340      	movs	r3, #64	; 0x40
 80049a2:	1a9b      	subs	r3, r3, r2
 80049a4:	409d      	lsls	r5, r3
 80049a6:	4b66      	ldr	r3, [pc, #408]	; (8004b40 <_dtoa_r+0x394>)
 80049a8:	9802      	ldr	r0, [sp, #8]
 80049aa:	18f3      	adds	r3, r6, r3
 80049ac:	40d8      	lsrs	r0, r3
 80049ae:	4328      	orrs	r0, r5
 80049b0:	f7fd fb3a 	bl	8002028 <__aeabi_ui2d>
 80049b4:	2301      	movs	r3, #1
 80049b6:	4c63      	ldr	r4, [pc, #396]	; (8004b44 <_dtoa_r+0x398>)
 80049b8:	3e01      	subs	r6, #1
 80049ba:	1909      	adds	r1, r1, r4
 80049bc:	9318      	str	r3, [sp, #96]	; 0x60
 80049be:	e776      	b.n	80048ae <_dtoa_r+0x102>
 80049c0:	2320      	movs	r3, #32
 80049c2:	9802      	ldr	r0, [sp, #8]
 80049c4:	1a9b      	subs	r3, r3, r2
 80049c6:	4098      	lsls	r0, r3
 80049c8:	e7f2      	b.n	80049b0 <_dtoa_r+0x204>
 80049ca:	9016      	str	r0, [sp, #88]	; 0x58
 80049cc:	e7b8      	b.n	8004940 <_dtoa_r+0x194>
 80049ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80049d0:	9a02      	ldr	r2, [sp, #8]
 80049d2:	1a9b      	subs	r3, r3, r2
 80049d4:	930a      	str	r3, [sp, #40]	; 0x28
 80049d6:	4253      	negs	r3, r2
 80049d8:	930e      	str	r3, [sp, #56]	; 0x38
 80049da:	2300      	movs	r3, #0
 80049dc:	9315      	str	r3, [sp, #84]	; 0x54
 80049de:	e7c7      	b.n	8004970 <_dtoa_r+0x1c4>
 80049e0:	2300      	movs	r3, #0
 80049e2:	930f      	str	r3, [sp, #60]	; 0x3c
 80049e4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80049e6:	930c      	str	r3, [sp, #48]	; 0x30
 80049e8:	9307      	str	r3, [sp, #28]
 80049ea:	2b00      	cmp	r3, #0
 80049ec:	dc13      	bgt.n	8004a16 <_dtoa_r+0x26a>
 80049ee:	2301      	movs	r3, #1
 80049f0:	001a      	movs	r2, r3
 80049f2:	930c      	str	r3, [sp, #48]	; 0x30
 80049f4:	9307      	str	r3, [sp, #28]
 80049f6:	9223      	str	r2, [sp, #140]	; 0x8c
 80049f8:	e00d      	b.n	8004a16 <_dtoa_r+0x26a>
 80049fa:	2301      	movs	r3, #1
 80049fc:	e7f1      	b.n	80049e2 <_dtoa_r+0x236>
 80049fe:	2300      	movs	r3, #0
 8004a00:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8004a02:	930f      	str	r3, [sp, #60]	; 0x3c
 8004a04:	4694      	mov	ip, r2
 8004a06:	9b02      	ldr	r3, [sp, #8]
 8004a08:	4463      	add	r3, ip
 8004a0a:	930c      	str	r3, [sp, #48]	; 0x30
 8004a0c:	3301      	adds	r3, #1
 8004a0e:	9307      	str	r3, [sp, #28]
 8004a10:	2b00      	cmp	r3, #0
 8004a12:	dc00      	bgt.n	8004a16 <_dtoa_r+0x26a>
 8004a14:	2301      	movs	r3, #1
 8004a16:	2200      	movs	r2, #0
 8004a18:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8004a1a:	6042      	str	r2, [r0, #4]
 8004a1c:	3204      	adds	r2, #4
 8004a1e:	0015      	movs	r5, r2
 8004a20:	3514      	adds	r5, #20
 8004a22:	6841      	ldr	r1, [r0, #4]
 8004a24:	429d      	cmp	r5, r3
 8004a26:	d919      	bls.n	8004a5c <_dtoa_r+0x2b0>
 8004a28:	0038      	movs	r0, r7
 8004a2a:	f000 fcf3 	bl	8005414 <_Balloc>
 8004a2e:	9006      	str	r0, [sp, #24]
 8004a30:	2800      	cmp	r0, #0
 8004a32:	d117      	bne.n	8004a64 <_dtoa_r+0x2b8>
 8004a34:	21d5      	movs	r1, #213	; 0xd5
 8004a36:	0002      	movs	r2, r0
 8004a38:	4b43      	ldr	r3, [pc, #268]	; (8004b48 <_dtoa_r+0x39c>)
 8004a3a:	0049      	lsls	r1, r1, #1
 8004a3c:	e6cb      	b.n	80047d6 <_dtoa_r+0x2a>
 8004a3e:	2301      	movs	r3, #1
 8004a40:	e7de      	b.n	8004a00 <_dtoa_r+0x254>
 8004a42:	2300      	movs	r3, #0
 8004a44:	940f      	str	r4, [sp, #60]	; 0x3c
 8004a46:	9322      	str	r3, [sp, #136]	; 0x88
 8004a48:	3b01      	subs	r3, #1
 8004a4a:	930c      	str	r3, [sp, #48]	; 0x30
 8004a4c:	9307      	str	r3, [sp, #28]
 8004a4e:	2200      	movs	r2, #0
 8004a50:	3313      	adds	r3, #19
 8004a52:	e7d0      	b.n	80049f6 <_dtoa_r+0x24a>
 8004a54:	2301      	movs	r3, #1
 8004a56:	930f      	str	r3, [sp, #60]	; 0x3c
 8004a58:	3b02      	subs	r3, #2
 8004a5a:	e7f6      	b.n	8004a4a <_dtoa_r+0x29e>
 8004a5c:	3101      	adds	r1, #1
 8004a5e:	6041      	str	r1, [r0, #4]
 8004a60:	0052      	lsls	r2, r2, #1
 8004a62:	e7dc      	b.n	8004a1e <_dtoa_r+0x272>
 8004a64:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004a66:	9a06      	ldr	r2, [sp, #24]
 8004a68:	601a      	str	r2, [r3, #0]
 8004a6a:	9b07      	ldr	r3, [sp, #28]
 8004a6c:	2b0e      	cmp	r3, #14
 8004a6e:	d900      	bls.n	8004a72 <_dtoa_r+0x2c6>
 8004a70:	e0eb      	b.n	8004c4a <_dtoa_r+0x49e>
 8004a72:	2c00      	cmp	r4, #0
 8004a74:	d100      	bne.n	8004a78 <_dtoa_r+0x2cc>
 8004a76:	e0e8      	b.n	8004c4a <_dtoa_r+0x49e>
 8004a78:	9b02      	ldr	r3, [sp, #8]
 8004a7a:	2b00      	cmp	r3, #0
 8004a7c:	dd68      	ble.n	8004b50 <_dtoa_r+0x3a4>
 8004a7e:	001a      	movs	r2, r3
 8004a80:	210f      	movs	r1, #15
 8004a82:	4b2d      	ldr	r3, [pc, #180]	; (8004b38 <_dtoa_r+0x38c>)
 8004a84:	400a      	ands	r2, r1
 8004a86:	00d2      	lsls	r2, r2, #3
 8004a88:	189b      	adds	r3, r3, r2
 8004a8a:	681d      	ldr	r5, [r3, #0]
 8004a8c:	685e      	ldr	r6, [r3, #4]
 8004a8e:	9b02      	ldr	r3, [sp, #8]
 8004a90:	111c      	asrs	r4, r3, #4
 8004a92:	2302      	movs	r3, #2
 8004a94:	9310      	str	r3, [sp, #64]	; 0x40
 8004a96:	9b02      	ldr	r3, [sp, #8]
 8004a98:	05db      	lsls	r3, r3, #23
 8004a9a:	d50b      	bpl.n	8004ab4 <_dtoa_r+0x308>
 8004a9c:	4b2b      	ldr	r3, [pc, #172]	; (8004b4c <_dtoa_r+0x3a0>)
 8004a9e:	400c      	ands	r4, r1
 8004aa0:	6a1a      	ldr	r2, [r3, #32]
 8004aa2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004aa4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004aa6:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004aa8:	f7fc f83a 	bl	8000b20 <__aeabi_ddiv>
 8004aac:	2303      	movs	r3, #3
 8004aae:	9008      	str	r0, [sp, #32]
 8004ab0:	9109      	str	r1, [sp, #36]	; 0x24
 8004ab2:	9310      	str	r3, [sp, #64]	; 0x40
 8004ab4:	4b25      	ldr	r3, [pc, #148]	; (8004b4c <_dtoa_r+0x3a0>)
 8004ab6:	9314      	str	r3, [sp, #80]	; 0x50
 8004ab8:	2c00      	cmp	r4, #0
 8004aba:	d108      	bne.n	8004ace <_dtoa_r+0x322>
 8004abc:	9808      	ldr	r0, [sp, #32]
 8004abe:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004ac0:	002a      	movs	r2, r5
 8004ac2:	0033      	movs	r3, r6
 8004ac4:	f7fc f82c 	bl	8000b20 <__aeabi_ddiv>
 8004ac8:	9008      	str	r0, [sp, #32]
 8004aca:	9109      	str	r1, [sp, #36]	; 0x24
 8004acc:	e05c      	b.n	8004b88 <_dtoa_r+0x3dc>
 8004ace:	2301      	movs	r3, #1
 8004ad0:	421c      	tst	r4, r3
 8004ad2:	d00b      	beq.n	8004aec <_dtoa_r+0x340>
 8004ad4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004ad6:	0028      	movs	r0, r5
 8004ad8:	3301      	adds	r3, #1
 8004ada:	9310      	str	r3, [sp, #64]	; 0x40
 8004adc:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004ade:	0031      	movs	r1, r6
 8004ae0:	681a      	ldr	r2, [r3, #0]
 8004ae2:	685b      	ldr	r3, [r3, #4]
 8004ae4:	f7fc fc1e 	bl	8001324 <__aeabi_dmul>
 8004ae8:	0005      	movs	r5, r0
 8004aea:	000e      	movs	r6, r1
 8004aec:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004aee:	1064      	asrs	r4, r4, #1
 8004af0:	3308      	adds	r3, #8
 8004af2:	e7e0      	b.n	8004ab6 <_dtoa_r+0x30a>
 8004af4:	08006e21 	.word	0x08006e21
 8004af8:	08006e38 	.word	0x08006e38
 8004afc:	7ff00000 	.word	0x7ff00000
 8004b00:	0000270f 	.word	0x0000270f
 8004b04:	08006e1d 	.word	0x08006e1d
 8004b08:	08006e20 	.word	0x08006e20
 8004b0c:	08006df0 	.word	0x08006df0
 8004b10:	08006df1 	.word	0x08006df1
 8004b14:	3ff00000 	.word	0x3ff00000
 8004b18:	fffffc01 	.word	0xfffffc01
 8004b1c:	3ff80000 	.word	0x3ff80000
 8004b20:	636f4361 	.word	0x636f4361
 8004b24:	3fd287a7 	.word	0x3fd287a7
 8004b28:	8b60c8b3 	.word	0x8b60c8b3
 8004b2c:	3fc68a28 	.word	0x3fc68a28
 8004b30:	509f79fb 	.word	0x509f79fb
 8004b34:	3fd34413 	.word	0x3fd34413
 8004b38:	08006f28 	.word	0x08006f28
 8004b3c:	00000432 	.word	0x00000432
 8004b40:	00000412 	.word	0x00000412
 8004b44:	fe100000 	.word	0xfe100000
 8004b48:	08006e93 	.word	0x08006e93
 8004b4c:	08006f00 	.word	0x08006f00
 8004b50:	2302      	movs	r3, #2
 8004b52:	9310      	str	r3, [sp, #64]	; 0x40
 8004b54:	9b02      	ldr	r3, [sp, #8]
 8004b56:	2b00      	cmp	r3, #0
 8004b58:	d016      	beq.n	8004b88 <_dtoa_r+0x3dc>
 8004b5a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8004b5c:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8004b5e:	425c      	negs	r4, r3
 8004b60:	230f      	movs	r3, #15
 8004b62:	4ab6      	ldr	r2, [pc, #728]	; (8004e3c <_dtoa_r+0x690>)
 8004b64:	4023      	ands	r3, r4
 8004b66:	00db      	lsls	r3, r3, #3
 8004b68:	18d3      	adds	r3, r2, r3
 8004b6a:	681a      	ldr	r2, [r3, #0]
 8004b6c:	685b      	ldr	r3, [r3, #4]
 8004b6e:	f7fc fbd9 	bl	8001324 <__aeabi_dmul>
 8004b72:	2601      	movs	r6, #1
 8004b74:	2300      	movs	r3, #0
 8004b76:	9008      	str	r0, [sp, #32]
 8004b78:	9109      	str	r1, [sp, #36]	; 0x24
 8004b7a:	4db1      	ldr	r5, [pc, #708]	; (8004e40 <_dtoa_r+0x694>)
 8004b7c:	1124      	asrs	r4, r4, #4
 8004b7e:	2c00      	cmp	r4, #0
 8004b80:	d000      	beq.n	8004b84 <_dtoa_r+0x3d8>
 8004b82:	e094      	b.n	8004cae <_dtoa_r+0x502>
 8004b84:	2b00      	cmp	r3, #0
 8004b86:	d19f      	bne.n	8004ac8 <_dtoa_r+0x31c>
 8004b88:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8004b8a:	2b00      	cmp	r3, #0
 8004b8c:	d100      	bne.n	8004b90 <_dtoa_r+0x3e4>
 8004b8e:	e09b      	b.n	8004cc8 <_dtoa_r+0x51c>
 8004b90:	9c08      	ldr	r4, [sp, #32]
 8004b92:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004b94:	2200      	movs	r2, #0
 8004b96:	0020      	movs	r0, r4
 8004b98:	0029      	movs	r1, r5
 8004b9a:	4baa      	ldr	r3, [pc, #680]	; (8004e44 <_dtoa_r+0x698>)
 8004b9c:	f7fb fc5c 	bl	8000458 <__aeabi_dcmplt>
 8004ba0:	2800      	cmp	r0, #0
 8004ba2:	d100      	bne.n	8004ba6 <_dtoa_r+0x3fa>
 8004ba4:	e090      	b.n	8004cc8 <_dtoa_r+0x51c>
 8004ba6:	9b07      	ldr	r3, [sp, #28]
 8004ba8:	2b00      	cmp	r3, #0
 8004baa:	d100      	bne.n	8004bae <_dtoa_r+0x402>
 8004bac:	e08c      	b.n	8004cc8 <_dtoa_r+0x51c>
 8004bae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004bb0:	2b00      	cmp	r3, #0
 8004bb2:	dd46      	ble.n	8004c42 <_dtoa_r+0x496>
 8004bb4:	9b02      	ldr	r3, [sp, #8]
 8004bb6:	2200      	movs	r2, #0
 8004bb8:	0020      	movs	r0, r4
 8004bba:	0029      	movs	r1, r5
 8004bbc:	1e5e      	subs	r6, r3, #1
 8004bbe:	4ba2      	ldr	r3, [pc, #648]	; (8004e48 <_dtoa_r+0x69c>)
 8004bc0:	f7fc fbb0 	bl	8001324 <__aeabi_dmul>
 8004bc4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004bc6:	9008      	str	r0, [sp, #32]
 8004bc8:	9109      	str	r1, [sp, #36]	; 0x24
 8004bca:	3301      	adds	r3, #1
 8004bcc:	9310      	str	r3, [sp, #64]	; 0x40
 8004bce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004bd0:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004bd2:	9c08      	ldr	r4, [sp, #32]
 8004bd4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004bd6:	9314      	str	r3, [sp, #80]	; 0x50
 8004bd8:	f7fd f9f6 	bl	8001fc8 <__aeabi_i2d>
 8004bdc:	0022      	movs	r2, r4
 8004bde:	002b      	movs	r3, r5
 8004be0:	f7fc fba0 	bl	8001324 <__aeabi_dmul>
 8004be4:	2200      	movs	r2, #0
 8004be6:	4b99      	ldr	r3, [pc, #612]	; (8004e4c <_dtoa_r+0x6a0>)
 8004be8:	f7fb fc5e 	bl	80004a8 <__aeabi_dadd>
 8004bec:	9010      	str	r0, [sp, #64]	; 0x40
 8004bee:	9111      	str	r1, [sp, #68]	; 0x44
 8004bf0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004bf2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004bf4:	9208      	str	r2, [sp, #32]
 8004bf6:	9309      	str	r3, [sp, #36]	; 0x24
 8004bf8:	4a95      	ldr	r2, [pc, #596]	; (8004e50 <_dtoa_r+0x6a4>)
 8004bfa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004bfc:	4694      	mov	ip, r2
 8004bfe:	4463      	add	r3, ip
 8004c00:	9317      	str	r3, [sp, #92]	; 0x5c
 8004c02:	9309      	str	r3, [sp, #36]	; 0x24
 8004c04:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004c06:	2b00      	cmp	r3, #0
 8004c08:	d161      	bne.n	8004cce <_dtoa_r+0x522>
 8004c0a:	2200      	movs	r2, #0
 8004c0c:	0020      	movs	r0, r4
 8004c0e:	0029      	movs	r1, r5
 8004c10:	4b90      	ldr	r3, [pc, #576]	; (8004e54 <_dtoa_r+0x6a8>)
 8004c12:	f7fc fdf3 	bl	80017fc <__aeabi_dsub>
 8004c16:	9a08      	ldr	r2, [sp, #32]
 8004c18:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004c1a:	0004      	movs	r4, r0
 8004c1c:	000d      	movs	r5, r1
 8004c1e:	f7fb fc2f 	bl	8000480 <__aeabi_dcmpgt>
 8004c22:	2800      	cmp	r0, #0
 8004c24:	d000      	beq.n	8004c28 <_dtoa_r+0x47c>
 8004c26:	e2af      	b.n	8005188 <_dtoa_r+0x9dc>
 8004c28:	488b      	ldr	r0, [pc, #556]	; (8004e58 <_dtoa_r+0x6ac>)
 8004c2a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004c2c:	4684      	mov	ip, r0
 8004c2e:	4461      	add	r1, ip
 8004c30:	000b      	movs	r3, r1
 8004c32:	0020      	movs	r0, r4
 8004c34:	0029      	movs	r1, r5
 8004c36:	9a08      	ldr	r2, [sp, #32]
 8004c38:	f7fb fc0e 	bl	8000458 <__aeabi_dcmplt>
 8004c3c:	2800      	cmp	r0, #0
 8004c3e:	d000      	beq.n	8004c42 <_dtoa_r+0x496>
 8004c40:	e29f      	b.n	8005182 <_dtoa_r+0x9d6>
 8004c42:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004c44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8004c46:	9308      	str	r3, [sp, #32]
 8004c48:	9409      	str	r4, [sp, #36]	; 0x24
 8004c4a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8004c4c:	2b00      	cmp	r3, #0
 8004c4e:	da00      	bge.n	8004c52 <_dtoa_r+0x4a6>
 8004c50:	e172      	b.n	8004f38 <_dtoa_r+0x78c>
 8004c52:	9a02      	ldr	r2, [sp, #8]
 8004c54:	2a0e      	cmp	r2, #14
 8004c56:	dd00      	ble.n	8004c5a <_dtoa_r+0x4ae>
 8004c58:	e16e      	b.n	8004f38 <_dtoa_r+0x78c>
 8004c5a:	4b78      	ldr	r3, [pc, #480]	; (8004e3c <_dtoa_r+0x690>)
 8004c5c:	00d2      	lsls	r2, r2, #3
 8004c5e:	189b      	adds	r3, r3, r2
 8004c60:	685c      	ldr	r4, [r3, #4]
 8004c62:	681b      	ldr	r3, [r3, #0]
 8004c64:	930a      	str	r3, [sp, #40]	; 0x28
 8004c66:	940b      	str	r4, [sp, #44]	; 0x2c
 8004c68:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8004c6a:	2b00      	cmp	r3, #0
 8004c6c:	db00      	blt.n	8004c70 <_dtoa_r+0x4c4>
 8004c6e:	e0f7      	b.n	8004e60 <_dtoa_r+0x6b4>
 8004c70:	9b07      	ldr	r3, [sp, #28]
 8004c72:	2b00      	cmp	r3, #0
 8004c74:	dd00      	ble.n	8004c78 <_dtoa_r+0x4cc>
 8004c76:	e0f3      	b.n	8004e60 <_dtoa_r+0x6b4>
 8004c78:	d000      	beq.n	8004c7c <_dtoa_r+0x4d0>
 8004c7a:	e282      	b.n	8005182 <_dtoa_r+0x9d6>
 8004c7c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004c7e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004c80:	2200      	movs	r2, #0
 8004c82:	4b74      	ldr	r3, [pc, #464]	; (8004e54 <_dtoa_r+0x6a8>)
 8004c84:	f7fc fb4e 	bl	8001324 <__aeabi_dmul>
 8004c88:	9a08      	ldr	r2, [sp, #32]
 8004c8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c8c:	f7fb fc02 	bl	8000494 <__aeabi_dcmpge>
 8004c90:	9e07      	ldr	r6, [sp, #28]
 8004c92:	0035      	movs	r5, r6
 8004c94:	2800      	cmp	r0, #0
 8004c96:	d000      	beq.n	8004c9a <_dtoa_r+0x4ee>
 8004c98:	e259      	b.n	800514e <_dtoa_r+0x9a2>
 8004c9a:	9b06      	ldr	r3, [sp, #24]
 8004c9c:	9a06      	ldr	r2, [sp, #24]
 8004c9e:	3301      	adds	r3, #1
 8004ca0:	9308      	str	r3, [sp, #32]
 8004ca2:	2331      	movs	r3, #49	; 0x31
 8004ca4:	7013      	strb	r3, [r2, #0]
 8004ca6:	9b02      	ldr	r3, [sp, #8]
 8004ca8:	3301      	adds	r3, #1
 8004caa:	9302      	str	r3, [sp, #8]
 8004cac:	e254      	b.n	8005158 <_dtoa_r+0x9ac>
 8004cae:	4234      	tst	r4, r6
 8004cb0:	d007      	beq.n	8004cc2 <_dtoa_r+0x516>
 8004cb2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8004cb4:	3301      	adds	r3, #1
 8004cb6:	9310      	str	r3, [sp, #64]	; 0x40
 8004cb8:	682a      	ldr	r2, [r5, #0]
 8004cba:	686b      	ldr	r3, [r5, #4]
 8004cbc:	f7fc fb32 	bl	8001324 <__aeabi_dmul>
 8004cc0:	0033      	movs	r3, r6
 8004cc2:	1064      	asrs	r4, r4, #1
 8004cc4:	3508      	adds	r5, #8
 8004cc6:	e75a      	b.n	8004b7e <_dtoa_r+0x3d2>
 8004cc8:	9e02      	ldr	r6, [sp, #8]
 8004cca:	9b07      	ldr	r3, [sp, #28]
 8004ccc:	e780      	b.n	8004bd0 <_dtoa_r+0x424>
 8004cce:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004cd0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8004cd2:	1e5a      	subs	r2, r3, #1
 8004cd4:	4b59      	ldr	r3, [pc, #356]	; (8004e3c <_dtoa_r+0x690>)
 8004cd6:	00d2      	lsls	r2, r2, #3
 8004cd8:	189b      	adds	r3, r3, r2
 8004cda:	681a      	ldr	r2, [r3, #0]
 8004cdc:	685b      	ldr	r3, [r3, #4]
 8004cde:	2900      	cmp	r1, #0
 8004ce0:	d051      	beq.n	8004d86 <_dtoa_r+0x5da>
 8004ce2:	2000      	movs	r0, #0
 8004ce4:	495d      	ldr	r1, [pc, #372]	; (8004e5c <_dtoa_r+0x6b0>)
 8004ce6:	f7fb ff1b 	bl	8000b20 <__aeabi_ddiv>
 8004cea:	9a08      	ldr	r2, [sp, #32]
 8004cec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004cee:	f7fc fd85 	bl	80017fc <__aeabi_dsub>
 8004cf2:	9a06      	ldr	r2, [sp, #24]
 8004cf4:	9b06      	ldr	r3, [sp, #24]
 8004cf6:	4694      	mov	ip, r2
 8004cf8:	9317      	str	r3, [sp, #92]	; 0x5c
 8004cfa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004cfc:	9010      	str	r0, [sp, #64]	; 0x40
 8004cfe:	9111      	str	r1, [sp, #68]	; 0x44
 8004d00:	4463      	add	r3, ip
 8004d02:	9319      	str	r3, [sp, #100]	; 0x64
 8004d04:	0029      	movs	r1, r5
 8004d06:	0020      	movs	r0, r4
 8004d08:	f7fd f928 	bl	8001f5c <__aeabi_d2iz>
 8004d0c:	9014      	str	r0, [sp, #80]	; 0x50
 8004d0e:	f7fd f95b 	bl	8001fc8 <__aeabi_i2d>
 8004d12:	0002      	movs	r2, r0
 8004d14:	000b      	movs	r3, r1
 8004d16:	0020      	movs	r0, r4
 8004d18:	0029      	movs	r1, r5
 8004d1a:	f7fc fd6f 	bl	80017fc <__aeabi_dsub>
 8004d1e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004d20:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8004d22:	3301      	adds	r3, #1
 8004d24:	9308      	str	r3, [sp, #32]
 8004d26:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004d28:	0004      	movs	r4, r0
 8004d2a:	3330      	adds	r3, #48	; 0x30
 8004d2c:	7013      	strb	r3, [r2, #0]
 8004d2e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004d30:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004d32:	000d      	movs	r5, r1
 8004d34:	f7fb fb90 	bl	8000458 <__aeabi_dcmplt>
 8004d38:	2800      	cmp	r0, #0
 8004d3a:	d175      	bne.n	8004e28 <_dtoa_r+0x67c>
 8004d3c:	0022      	movs	r2, r4
 8004d3e:	002b      	movs	r3, r5
 8004d40:	2000      	movs	r0, #0
 8004d42:	4940      	ldr	r1, [pc, #256]	; (8004e44 <_dtoa_r+0x698>)
 8004d44:	f7fc fd5a 	bl	80017fc <__aeabi_dsub>
 8004d48:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004d4a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004d4c:	f7fb fb84 	bl	8000458 <__aeabi_dcmplt>
 8004d50:	2800      	cmp	r0, #0
 8004d52:	d000      	beq.n	8004d56 <_dtoa_r+0x5aa>
 8004d54:	e0d2      	b.n	8004efc <_dtoa_r+0x750>
 8004d56:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8004d58:	9a08      	ldr	r2, [sp, #32]
 8004d5a:	4293      	cmp	r3, r2
 8004d5c:	d100      	bne.n	8004d60 <_dtoa_r+0x5b4>
 8004d5e:	e770      	b.n	8004c42 <_dtoa_r+0x496>
 8004d60:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004d62:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004d64:	2200      	movs	r2, #0
 8004d66:	4b38      	ldr	r3, [pc, #224]	; (8004e48 <_dtoa_r+0x69c>)
 8004d68:	f7fc fadc 	bl	8001324 <__aeabi_dmul>
 8004d6c:	4b36      	ldr	r3, [pc, #216]	; (8004e48 <_dtoa_r+0x69c>)
 8004d6e:	9010      	str	r0, [sp, #64]	; 0x40
 8004d70:	9111      	str	r1, [sp, #68]	; 0x44
 8004d72:	2200      	movs	r2, #0
 8004d74:	0020      	movs	r0, r4
 8004d76:	0029      	movs	r1, r5
 8004d78:	f7fc fad4 	bl	8001324 <__aeabi_dmul>
 8004d7c:	9b08      	ldr	r3, [sp, #32]
 8004d7e:	0004      	movs	r4, r0
 8004d80:	000d      	movs	r5, r1
 8004d82:	9317      	str	r3, [sp, #92]	; 0x5c
 8004d84:	e7be      	b.n	8004d04 <_dtoa_r+0x558>
 8004d86:	9808      	ldr	r0, [sp, #32]
 8004d88:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004d8a:	f7fc facb 	bl	8001324 <__aeabi_dmul>
 8004d8e:	9a06      	ldr	r2, [sp, #24]
 8004d90:	9b06      	ldr	r3, [sp, #24]
 8004d92:	4694      	mov	ip, r2
 8004d94:	9308      	str	r3, [sp, #32]
 8004d96:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004d98:	9010      	str	r0, [sp, #64]	; 0x40
 8004d9a:	9111      	str	r1, [sp, #68]	; 0x44
 8004d9c:	4463      	add	r3, ip
 8004d9e:	9319      	str	r3, [sp, #100]	; 0x64
 8004da0:	0029      	movs	r1, r5
 8004da2:	0020      	movs	r0, r4
 8004da4:	f7fd f8da 	bl	8001f5c <__aeabi_d2iz>
 8004da8:	9017      	str	r0, [sp, #92]	; 0x5c
 8004daa:	f7fd f90d 	bl	8001fc8 <__aeabi_i2d>
 8004dae:	0002      	movs	r2, r0
 8004db0:	000b      	movs	r3, r1
 8004db2:	0020      	movs	r0, r4
 8004db4:	0029      	movs	r1, r5
 8004db6:	f7fc fd21 	bl	80017fc <__aeabi_dsub>
 8004dba:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8004dbc:	9a08      	ldr	r2, [sp, #32]
 8004dbe:	3330      	adds	r3, #48	; 0x30
 8004dc0:	7013      	strb	r3, [r2, #0]
 8004dc2:	0013      	movs	r3, r2
 8004dc4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8004dc6:	3301      	adds	r3, #1
 8004dc8:	0004      	movs	r4, r0
 8004dca:	000d      	movs	r5, r1
 8004dcc:	9308      	str	r3, [sp, #32]
 8004dce:	4293      	cmp	r3, r2
 8004dd0:	d12c      	bne.n	8004e2c <_dtoa_r+0x680>
 8004dd2:	9810      	ldr	r0, [sp, #64]	; 0x40
 8004dd4:	9911      	ldr	r1, [sp, #68]	; 0x44
 8004dd6:	9a06      	ldr	r2, [sp, #24]
 8004dd8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004dda:	4694      	mov	ip, r2
 8004ddc:	4463      	add	r3, ip
 8004dde:	2200      	movs	r2, #0
 8004de0:	9308      	str	r3, [sp, #32]
 8004de2:	4b1e      	ldr	r3, [pc, #120]	; (8004e5c <_dtoa_r+0x6b0>)
 8004de4:	f7fb fb60 	bl	80004a8 <__aeabi_dadd>
 8004de8:	0002      	movs	r2, r0
 8004dea:	000b      	movs	r3, r1
 8004dec:	0020      	movs	r0, r4
 8004dee:	0029      	movs	r1, r5
 8004df0:	f7fb fb46 	bl	8000480 <__aeabi_dcmpgt>
 8004df4:	2800      	cmp	r0, #0
 8004df6:	d000      	beq.n	8004dfa <_dtoa_r+0x64e>
 8004df8:	e080      	b.n	8004efc <_dtoa_r+0x750>
 8004dfa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004dfc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004dfe:	2000      	movs	r0, #0
 8004e00:	4916      	ldr	r1, [pc, #88]	; (8004e5c <_dtoa_r+0x6b0>)
 8004e02:	f7fc fcfb 	bl	80017fc <__aeabi_dsub>
 8004e06:	0002      	movs	r2, r0
 8004e08:	000b      	movs	r3, r1
 8004e0a:	0020      	movs	r0, r4
 8004e0c:	0029      	movs	r1, r5
 8004e0e:	f7fb fb23 	bl	8000458 <__aeabi_dcmplt>
 8004e12:	2800      	cmp	r0, #0
 8004e14:	d100      	bne.n	8004e18 <_dtoa_r+0x66c>
 8004e16:	e714      	b.n	8004c42 <_dtoa_r+0x496>
 8004e18:	9b08      	ldr	r3, [sp, #32]
 8004e1a:	001a      	movs	r2, r3
 8004e1c:	3a01      	subs	r2, #1
 8004e1e:	9208      	str	r2, [sp, #32]
 8004e20:	7812      	ldrb	r2, [r2, #0]
 8004e22:	2a30      	cmp	r2, #48	; 0x30
 8004e24:	d0f8      	beq.n	8004e18 <_dtoa_r+0x66c>
 8004e26:	9308      	str	r3, [sp, #32]
 8004e28:	9602      	str	r6, [sp, #8]
 8004e2a:	e055      	b.n	8004ed8 <_dtoa_r+0x72c>
 8004e2c:	2200      	movs	r2, #0
 8004e2e:	4b06      	ldr	r3, [pc, #24]	; (8004e48 <_dtoa_r+0x69c>)
 8004e30:	f7fc fa78 	bl	8001324 <__aeabi_dmul>
 8004e34:	0004      	movs	r4, r0
 8004e36:	000d      	movs	r5, r1
 8004e38:	e7b2      	b.n	8004da0 <_dtoa_r+0x5f4>
 8004e3a:	46c0      	nop			; (mov r8, r8)
 8004e3c:	08006f28 	.word	0x08006f28
 8004e40:	08006f00 	.word	0x08006f00
 8004e44:	3ff00000 	.word	0x3ff00000
 8004e48:	40240000 	.word	0x40240000
 8004e4c:	401c0000 	.word	0x401c0000
 8004e50:	fcc00000 	.word	0xfcc00000
 8004e54:	40140000 	.word	0x40140000
 8004e58:	7cc00000 	.word	0x7cc00000
 8004e5c:	3fe00000 	.word	0x3fe00000
 8004e60:	9b07      	ldr	r3, [sp, #28]
 8004e62:	9e06      	ldr	r6, [sp, #24]
 8004e64:	3b01      	subs	r3, #1
 8004e66:	199b      	adds	r3, r3, r6
 8004e68:	930c      	str	r3, [sp, #48]	; 0x30
 8004e6a:	9c08      	ldr	r4, [sp, #32]
 8004e6c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004e6e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004e70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004e72:	0020      	movs	r0, r4
 8004e74:	0029      	movs	r1, r5
 8004e76:	f7fb fe53 	bl	8000b20 <__aeabi_ddiv>
 8004e7a:	f7fd f86f 	bl	8001f5c <__aeabi_d2iz>
 8004e7e:	9007      	str	r0, [sp, #28]
 8004e80:	f7fd f8a2 	bl	8001fc8 <__aeabi_i2d>
 8004e84:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004e86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004e88:	f7fc fa4c 	bl	8001324 <__aeabi_dmul>
 8004e8c:	0002      	movs	r2, r0
 8004e8e:	000b      	movs	r3, r1
 8004e90:	0020      	movs	r0, r4
 8004e92:	0029      	movs	r1, r5
 8004e94:	f7fc fcb2 	bl	80017fc <__aeabi_dsub>
 8004e98:	0033      	movs	r3, r6
 8004e9a:	9a07      	ldr	r2, [sp, #28]
 8004e9c:	3601      	adds	r6, #1
 8004e9e:	3230      	adds	r2, #48	; 0x30
 8004ea0:	701a      	strb	r2, [r3, #0]
 8004ea2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004ea4:	9608      	str	r6, [sp, #32]
 8004ea6:	429a      	cmp	r2, r3
 8004ea8:	d139      	bne.n	8004f1e <_dtoa_r+0x772>
 8004eaa:	0002      	movs	r2, r0
 8004eac:	000b      	movs	r3, r1
 8004eae:	f7fb fafb 	bl	80004a8 <__aeabi_dadd>
 8004eb2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004eb4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004eb6:	0004      	movs	r4, r0
 8004eb8:	000d      	movs	r5, r1
 8004eba:	f7fb fae1 	bl	8000480 <__aeabi_dcmpgt>
 8004ebe:	2800      	cmp	r0, #0
 8004ec0:	d11b      	bne.n	8004efa <_dtoa_r+0x74e>
 8004ec2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004ec4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004ec6:	0020      	movs	r0, r4
 8004ec8:	0029      	movs	r1, r5
 8004eca:	f7fb fabf 	bl	800044c <__aeabi_dcmpeq>
 8004ece:	2800      	cmp	r0, #0
 8004ed0:	d002      	beq.n	8004ed8 <_dtoa_r+0x72c>
 8004ed2:	9b07      	ldr	r3, [sp, #28]
 8004ed4:	07db      	lsls	r3, r3, #31
 8004ed6:	d410      	bmi.n	8004efa <_dtoa_r+0x74e>
 8004ed8:	0038      	movs	r0, r7
 8004eda:	9905      	ldr	r1, [sp, #20]
 8004edc:	f000 fade 	bl	800549c <_Bfree>
 8004ee0:	2300      	movs	r3, #0
 8004ee2:	9a08      	ldr	r2, [sp, #32]
 8004ee4:	9802      	ldr	r0, [sp, #8]
 8004ee6:	7013      	strb	r3, [r2, #0]
 8004ee8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8004eea:	3001      	adds	r0, #1
 8004eec:	6018      	str	r0, [r3, #0]
 8004eee:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8004ef0:	2b00      	cmp	r3, #0
 8004ef2:	d100      	bne.n	8004ef6 <_dtoa_r+0x74a>
 8004ef4:	e4a6      	b.n	8004844 <_dtoa_r+0x98>
 8004ef6:	601a      	str	r2, [r3, #0]
 8004ef8:	e4a4      	b.n	8004844 <_dtoa_r+0x98>
 8004efa:	9e02      	ldr	r6, [sp, #8]
 8004efc:	9b08      	ldr	r3, [sp, #32]
 8004efe:	9308      	str	r3, [sp, #32]
 8004f00:	3b01      	subs	r3, #1
 8004f02:	781a      	ldrb	r2, [r3, #0]
 8004f04:	2a39      	cmp	r2, #57	; 0x39
 8004f06:	d106      	bne.n	8004f16 <_dtoa_r+0x76a>
 8004f08:	9a06      	ldr	r2, [sp, #24]
 8004f0a:	429a      	cmp	r2, r3
 8004f0c:	d1f7      	bne.n	8004efe <_dtoa_r+0x752>
 8004f0e:	2230      	movs	r2, #48	; 0x30
 8004f10:	9906      	ldr	r1, [sp, #24]
 8004f12:	3601      	adds	r6, #1
 8004f14:	700a      	strb	r2, [r1, #0]
 8004f16:	781a      	ldrb	r2, [r3, #0]
 8004f18:	3201      	adds	r2, #1
 8004f1a:	701a      	strb	r2, [r3, #0]
 8004f1c:	e784      	b.n	8004e28 <_dtoa_r+0x67c>
 8004f1e:	2200      	movs	r2, #0
 8004f20:	4baa      	ldr	r3, [pc, #680]	; (80051cc <_dtoa_r+0xa20>)
 8004f22:	f7fc f9ff 	bl	8001324 <__aeabi_dmul>
 8004f26:	2200      	movs	r2, #0
 8004f28:	2300      	movs	r3, #0
 8004f2a:	0004      	movs	r4, r0
 8004f2c:	000d      	movs	r5, r1
 8004f2e:	f7fb fa8d 	bl	800044c <__aeabi_dcmpeq>
 8004f32:	2800      	cmp	r0, #0
 8004f34:	d09b      	beq.n	8004e6e <_dtoa_r+0x6c2>
 8004f36:	e7cf      	b.n	8004ed8 <_dtoa_r+0x72c>
 8004f38:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8004f3a:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8004f3c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004f3e:	2d00      	cmp	r5, #0
 8004f40:	d012      	beq.n	8004f68 <_dtoa_r+0x7bc>
 8004f42:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8004f44:	2a01      	cmp	r2, #1
 8004f46:	dc66      	bgt.n	8005016 <_dtoa_r+0x86a>
 8004f48:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8004f4a:	2a00      	cmp	r2, #0
 8004f4c:	d05d      	beq.n	800500a <_dtoa_r+0x85e>
 8004f4e:	4aa0      	ldr	r2, [pc, #640]	; (80051d0 <_dtoa_r+0xa24>)
 8004f50:	189b      	adds	r3, r3, r2
 8004f52:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004f54:	2101      	movs	r1, #1
 8004f56:	18d2      	adds	r2, r2, r3
 8004f58:	920a      	str	r2, [sp, #40]	; 0x28
 8004f5a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004f5c:	0038      	movs	r0, r7
 8004f5e:	18d3      	adds	r3, r2, r3
 8004f60:	930d      	str	r3, [sp, #52]	; 0x34
 8004f62:	f000 fb4b 	bl	80055fc <__i2b>
 8004f66:	0005      	movs	r5, r0
 8004f68:	2c00      	cmp	r4, #0
 8004f6a:	dd0e      	ble.n	8004f8a <_dtoa_r+0x7de>
 8004f6c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004f6e:	2b00      	cmp	r3, #0
 8004f70:	dd0b      	ble.n	8004f8a <_dtoa_r+0x7de>
 8004f72:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004f74:	0023      	movs	r3, r4
 8004f76:	4294      	cmp	r4, r2
 8004f78:	dd00      	ble.n	8004f7c <_dtoa_r+0x7d0>
 8004f7a:	0013      	movs	r3, r2
 8004f7c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004f7e:	1ae4      	subs	r4, r4, r3
 8004f80:	1ad2      	subs	r2, r2, r3
 8004f82:	920a      	str	r2, [sp, #40]	; 0x28
 8004f84:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8004f86:	1ad3      	subs	r3, r2, r3
 8004f88:	930d      	str	r3, [sp, #52]	; 0x34
 8004f8a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004f8c:	2b00      	cmp	r3, #0
 8004f8e:	d01f      	beq.n	8004fd0 <_dtoa_r+0x824>
 8004f90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004f92:	2b00      	cmp	r3, #0
 8004f94:	d054      	beq.n	8005040 <_dtoa_r+0x894>
 8004f96:	2e00      	cmp	r6, #0
 8004f98:	dd11      	ble.n	8004fbe <_dtoa_r+0x812>
 8004f9a:	0029      	movs	r1, r5
 8004f9c:	0032      	movs	r2, r6
 8004f9e:	0038      	movs	r0, r7
 8004fa0:	f000 fbf2 	bl	8005788 <__pow5mult>
 8004fa4:	9a05      	ldr	r2, [sp, #20]
 8004fa6:	0001      	movs	r1, r0
 8004fa8:	0005      	movs	r5, r0
 8004faa:	0038      	movs	r0, r7
 8004fac:	f000 fb3c 	bl	8005628 <__multiply>
 8004fb0:	9905      	ldr	r1, [sp, #20]
 8004fb2:	9014      	str	r0, [sp, #80]	; 0x50
 8004fb4:	0038      	movs	r0, r7
 8004fb6:	f000 fa71 	bl	800549c <_Bfree>
 8004fba:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8004fbc:	9305      	str	r3, [sp, #20]
 8004fbe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004fc0:	1b9a      	subs	r2, r3, r6
 8004fc2:	42b3      	cmp	r3, r6
 8004fc4:	d004      	beq.n	8004fd0 <_dtoa_r+0x824>
 8004fc6:	0038      	movs	r0, r7
 8004fc8:	9905      	ldr	r1, [sp, #20]
 8004fca:	f000 fbdd 	bl	8005788 <__pow5mult>
 8004fce:	9005      	str	r0, [sp, #20]
 8004fd0:	2101      	movs	r1, #1
 8004fd2:	0038      	movs	r0, r7
 8004fd4:	f000 fb12 	bl	80055fc <__i2b>
 8004fd8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004fda:	0006      	movs	r6, r0
 8004fdc:	2b00      	cmp	r3, #0
 8004fde:	dd31      	ble.n	8005044 <_dtoa_r+0x898>
 8004fe0:	001a      	movs	r2, r3
 8004fe2:	0001      	movs	r1, r0
 8004fe4:	0038      	movs	r0, r7
 8004fe6:	f000 fbcf 	bl	8005788 <__pow5mult>
 8004fea:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004fec:	0006      	movs	r6, r0
 8004fee:	2b01      	cmp	r3, #1
 8004ff0:	dd2d      	ble.n	800504e <_dtoa_r+0x8a2>
 8004ff2:	2300      	movs	r3, #0
 8004ff4:	930e      	str	r3, [sp, #56]	; 0x38
 8004ff6:	6933      	ldr	r3, [r6, #16]
 8004ff8:	3303      	adds	r3, #3
 8004ffa:	009b      	lsls	r3, r3, #2
 8004ffc:	18f3      	adds	r3, r6, r3
 8004ffe:	6858      	ldr	r0, [r3, #4]
 8005000:	f000 fab4 	bl	800556c <__hi0bits>
 8005004:	2320      	movs	r3, #32
 8005006:	1a18      	subs	r0, r3, r0
 8005008:	e039      	b.n	800507e <_dtoa_r+0x8d2>
 800500a:	2336      	movs	r3, #54	; 0x36
 800500c:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 800500e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8005010:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005012:	1a9b      	subs	r3, r3, r2
 8005014:	e79d      	b.n	8004f52 <_dtoa_r+0x7a6>
 8005016:	9b07      	ldr	r3, [sp, #28]
 8005018:	1e5e      	subs	r6, r3, #1
 800501a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800501c:	42b3      	cmp	r3, r6
 800501e:	db07      	blt.n	8005030 <_dtoa_r+0x884>
 8005020:	1b9e      	subs	r6, r3, r6
 8005022:	9b07      	ldr	r3, [sp, #28]
 8005024:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005026:	2b00      	cmp	r3, #0
 8005028:	da93      	bge.n	8004f52 <_dtoa_r+0x7a6>
 800502a:	1ae4      	subs	r4, r4, r3
 800502c:	2300      	movs	r3, #0
 800502e:	e790      	b.n	8004f52 <_dtoa_r+0x7a6>
 8005030:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005032:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8005034:	1af3      	subs	r3, r6, r3
 8005036:	18d3      	adds	r3, r2, r3
 8005038:	960e      	str	r6, [sp, #56]	; 0x38
 800503a:	9315      	str	r3, [sp, #84]	; 0x54
 800503c:	2600      	movs	r6, #0
 800503e:	e7f0      	b.n	8005022 <_dtoa_r+0x876>
 8005040:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005042:	e7c0      	b.n	8004fc6 <_dtoa_r+0x81a>
 8005044:	2300      	movs	r3, #0
 8005046:	930e      	str	r3, [sp, #56]	; 0x38
 8005048:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800504a:	2b01      	cmp	r3, #1
 800504c:	dc13      	bgt.n	8005076 <_dtoa_r+0x8ca>
 800504e:	2300      	movs	r3, #0
 8005050:	930e      	str	r3, [sp, #56]	; 0x38
 8005052:	9b08      	ldr	r3, [sp, #32]
 8005054:	2b00      	cmp	r3, #0
 8005056:	d10e      	bne.n	8005076 <_dtoa_r+0x8ca>
 8005058:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800505a:	031b      	lsls	r3, r3, #12
 800505c:	d10b      	bne.n	8005076 <_dtoa_r+0x8ca>
 800505e:	4b5d      	ldr	r3, [pc, #372]	; (80051d4 <_dtoa_r+0xa28>)
 8005060:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005062:	4213      	tst	r3, r2
 8005064:	d007      	beq.n	8005076 <_dtoa_r+0x8ca>
 8005066:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005068:	3301      	adds	r3, #1
 800506a:	930a      	str	r3, [sp, #40]	; 0x28
 800506c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800506e:	3301      	adds	r3, #1
 8005070:	930d      	str	r3, [sp, #52]	; 0x34
 8005072:	2301      	movs	r3, #1
 8005074:	930e      	str	r3, [sp, #56]	; 0x38
 8005076:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005078:	2001      	movs	r0, #1
 800507a:	2b00      	cmp	r3, #0
 800507c:	d1bb      	bne.n	8004ff6 <_dtoa_r+0x84a>
 800507e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005080:	221f      	movs	r2, #31
 8005082:	1818      	adds	r0, r3, r0
 8005084:	0003      	movs	r3, r0
 8005086:	4013      	ands	r3, r2
 8005088:	4210      	tst	r0, r2
 800508a:	d046      	beq.n	800511a <_dtoa_r+0x96e>
 800508c:	3201      	adds	r2, #1
 800508e:	1ad2      	subs	r2, r2, r3
 8005090:	2a04      	cmp	r2, #4
 8005092:	dd3f      	ble.n	8005114 <_dtoa_r+0x968>
 8005094:	221c      	movs	r2, #28
 8005096:	1ad3      	subs	r3, r2, r3
 8005098:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800509a:	18e4      	adds	r4, r4, r3
 800509c:	18d2      	adds	r2, r2, r3
 800509e:	920a      	str	r2, [sp, #40]	; 0x28
 80050a0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80050a2:	18d3      	adds	r3, r2, r3
 80050a4:	930d      	str	r3, [sp, #52]	; 0x34
 80050a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80050a8:	2b00      	cmp	r3, #0
 80050aa:	dd05      	ble.n	80050b8 <_dtoa_r+0x90c>
 80050ac:	001a      	movs	r2, r3
 80050ae:	0038      	movs	r0, r7
 80050b0:	9905      	ldr	r1, [sp, #20]
 80050b2:	f000 fbc5 	bl	8005840 <__lshift>
 80050b6:	9005      	str	r0, [sp, #20]
 80050b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80050ba:	2b00      	cmp	r3, #0
 80050bc:	dd05      	ble.n	80050ca <_dtoa_r+0x91e>
 80050be:	0031      	movs	r1, r6
 80050c0:	001a      	movs	r2, r3
 80050c2:	0038      	movs	r0, r7
 80050c4:	f000 fbbc 	bl	8005840 <__lshift>
 80050c8:	0006      	movs	r6, r0
 80050ca:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80050cc:	2b00      	cmp	r3, #0
 80050ce:	d026      	beq.n	800511e <_dtoa_r+0x972>
 80050d0:	0031      	movs	r1, r6
 80050d2:	9805      	ldr	r0, [sp, #20]
 80050d4:	f000 fc22 	bl	800591c <__mcmp>
 80050d8:	2800      	cmp	r0, #0
 80050da:	da20      	bge.n	800511e <_dtoa_r+0x972>
 80050dc:	9b02      	ldr	r3, [sp, #8]
 80050de:	220a      	movs	r2, #10
 80050e0:	3b01      	subs	r3, #1
 80050e2:	9302      	str	r3, [sp, #8]
 80050e4:	0038      	movs	r0, r7
 80050e6:	2300      	movs	r3, #0
 80050e8:	9905      	ldr	r1, [sp, #20]
 80050ea:	f000 f9fb 	bl	80054e4 <__multadd>
 80050ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80050f0:	9005      	str	r0, [sp, #20]
 80050f2:	2b00      	cmp	r3, #0
 80050f4:	d100      	bne.n	80050f8 <_dtoa_r+0x94c>
 80050f6:	e166      	b.n	80053c6 <_dtoa_r+0xc1a>
 80050f8:	2300      	movs	r3, #0
 80050fa:	0029      	movs	r1, r5
 80050fc:	220a      	movs	r2, #10
 80050fe:	0038      	movs	r0, r7
 8005100:	f000 f9f0 	bl	80054e4 <__multadd>
 8005104:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005106:	0005      	movs	r5, r0
 8005108:	2b00      	cmp	r3, #0
 800510a:	dc47      	bgt.n	800519c <_dtoa_r+0x9f0>
 800510c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800510e:	2b02      	cmp	r3, #2
 8005110:	dc0d      	bgt.n	800512e <_dtoa_r+0x982>
 8005112:	e043      	b.n	800519c <_dtoa_r+0x9f0>
 8005114:	2a04      	cmp	r2, #4
 8005116:	d0c6      	beq.n	80050a6 <_dtoa_r+0x8fa>
 8005118:	0013      	movs	r3, r2
 800511a:	331c      	adds	r3, #28
 800511c:	e7bc      	b.n	8005098 <_dtoa_r+0x8ec>
 800511e:	9b07      	ldr	r3, [sp, #28]
 8005120:	2b00      	cmp	r3, #0
 8005122:	dc35      	bgt.n	8005190 <_dtoa_r+0x9e4>
 8005124:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005126:	2b02      	cmp	r3, #2
 8005128:	dd32      	ble.n	8005190 <_dtoa_r+0x9e4>
 800512a:	9b07      	ldr	r3, [sp, #28]
 800512c:	930c      	str	r3, [sp, #48]	; 0x30
 800512e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005130:	2b00      	cmp	r3, #0
 8005132:	d10c      	bne.n	800514e <_dtoa_r+0x9a2>
 8005134:	0031      	movs	r1, r6
 8005136:	2205      	movs	r2, #5
 8005138:	0038      	movs	r0, r7
 800513a:	f000 f9d3 	bl	80054e4 <__multadd>
 800513e:	0006      	movs	r6, r0
 8005140:	0001      	movs	r1, r0
 8005142:	9805      	ldr	r0, [sp, #20]
 8005144:	f000 fbea 	bl	800591c <__mcmp>
 8005148:	2800      	cmp	r0, #0
 800514a:	dd00      	ble.n	800514e <_dtoa_r+0x9a2>
 800514c:	e5a5      	b.n	8004c9a <_dtoa_r+0x4ee>
 800514e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8005150:	43db      	mvns	r3, r3
 8005152:	9302      	str	r3, [sp, #8]
 8005154:	9b06      	ldr	r3, [sp, #24]
 8005156:	9308      	str	r3, [sp, #32]
 8005158:	2400      	movs	r4, #0
 800515a:	0031      	movs	r1, r6
 800515c:	0038      	movs	r0, r7
 800515e:	f000 f99d 	bl	800549c <_Bfree>
 8005162:	2d00      	cmp	r5, #0
 8005164:	d100      	bne.n	8005168 <_dtoa_r+0x9bc>
 8005166:	e6b7      	b.n	8004ed8 <_dtoa_r+0x72c>
 8005168:	2c00      	cmp	r4, #0
 800516a:	d005      	beq.n	8005178 <_dtoa_r+0x9cc>
 800516c:	42ac      	cmp	r4, r5
 800516e:	d003      	beq.n	8005178 <_dtoa_r+0x9cc>
 8005170:	0021      	movs	r1, r4
 8005172:	0038      	movs	r0, r7
 8005174:	f000 f992 	bl	800549c <_Bfree>
 8005178:	0029      	movs	r1, r5
 800517a:	0038      	movs	r0, r7
 800517c:	f000 f98e 	bl	800549c <_Bfree>
 8005180:	e6aa      	b.n	8004ed8 <_dtoa_r+0x72c>
 8005182:	2600      	movs	r6, #0
 8005184:	0035      	movs	r5, r6
 8005186:	e7e2      	b.n	800514e <_dtoa_r+0x9a2>
 8005188:	9602      	str	r6, [sp, #8]
 800518a:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800518c:	0035      	movs	r5, r6
 800518e:	e584      	b.n	8004c9a <_dtoa_r+0x4ee>
 8005190:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005192:	2b00      	cmp	r3, #0
 8005194:	d100      	bne.n	8005198 <_dtoa_r+0x9ec>
 8005196:	e0ce      	b.n	8005336 <_dtoa_r+0xb8a>
 8005198:	9b07      	ldr	r3, [sp, #28]
 800519a:	930c      	str	r3, [sp, #48]	; 0x30
 800519c:	2c00      	cmp	r4, #0
 800519e:	dd05      	ble.n	80051ac <_dtoa_r+0xa00>
 80051a0:	0029      	movs	r1, r5
 80051a2:	0022      	movs	r2, r4
 80051a4:	0038      	movs	r0, r7
 80051a6:	f000 fb4b 	bl	8005840 <__lshift>
 80051aa:	0005      	movs	r5, r0
 80051ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80051ae:	0028      	movs	r0, r5
 80051b0:	2b00      	cmp	r3, #0
 80051b2:	d022      	beq.n	80051fa <_dtoa_r+0xa4e>
 80051b4:	0038      	movs	r0, r7
 80051b6:	6869      	ldr	r1, [r5, #4]
 80051b8:	f000 f92c 	bl	8005414 <_Balloc>
 80051bc:	1e04      	subs	r4, r0, #0
 80051be:	d10f      	bne.n	80051e0 <_dtoa_r+0xa34>
 80051c0:	0002      	movs	r2, r0
 80051c2:	4b05      	ldr	r3, [pc, #20]	; (80051d8 <_dtoa_r+0xa2c>)
 80051c4:	4905      	ldr	r1, [pc, #20]	; (80051dc <_dtoa_r+0xa30>)
 80051c6:	f7ff fb06 	bl	80047d6 <_dtoa_r+0x2a>
 80051ca:	46c0      	nop			; (mov r8, r8)
 80051cc:	40240000 	.word	0x40240000
 80051d0:	00000433 	.word	0x00000433
 80051d4:	7ff00000 	.word	0x7ff00000
 80051d8:	08006e93 	.word	0x08006e93
 80051dc:	000002ea 	.word	0x000002ea
 80051e0:	0029      	movs	r1, r5
 80051e2:	692b      	ldr	r3, [r5, #16]
 80051e4:	310c      	adds	r1, #12
 80051e6:	1c9a      	adds	r2, r3, #2
 80051e8:	0092      	lsls	r2, r2, #2
 80051ea:	300c      	adds	r0, #12
 80051ec:	f7fe fdb2 	bl	8003d54 <memcpy>
 80051f0:	2201      	movs	r2, #1
 80051f2:	0021      	movs	r1, r4
 80051f4:	0038      	movs	r0, r7
 80051f6:	f000 fb23 	bl	8005840 <__lshift>
 80051fa:	9b06      	ldr	r3, [sp, #24]
 80051fc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80051fe:	930a      	str	r3, [sp, #40]	; 0x28
 8005200:	3b01      	subs	r3, #1
 8005202:	189b      	adds	r3, r3, r2
 8005204:	2201      	movs	r2, #1
 8005206:	002c      	movs	r4, r5
 8005208:	0005      	movs	r5, r0
 800520a:	9314      	str	r3, [sp, #80]	; 0x50
 800520c:	9b08      	ldr	r3, [sp, #32]
 800520e:	4013      	ands	r3, r2
 8005210:	930f      	str	r3, [sp, #60]	; 0x3c
 8005212:	0031      	movs	r1, r6
 8005214:	9805      	ldr	r0, [sp, #20]
 8005216:	f7ff fa3d 	bl	8004694 <quorem>
 800521a:	0003      	movs	r3, r0
 800521c:	0021      	movs	r1, r4
 800521e:	3330      	adds	r3, #48	; 0x30
 8005220:	900d      	str	r0, [sp, #52]	; 0x34
 8005222:	9805      	ldr	r0, [sp, #20]
 8005224:	9307      	str	r3, [sp, #28]
 8005226:	f000 fb79 	bl	800591c <__mcmp>
 800522a:	002a      	movs	r2, r5
 800522c:	900e      	str	r0, [sp, #56]	; 0x38
 800522e:	0031      	movs	r1, r6
 8005230:	0038      	movs	r0, r7
 8005232:	f000 fb8f 	bl	8005954 <__mdiff>
 8005236:	68c3      	ldr	r3, [r0, #12]
 8005238:	9008      	str	r0, [sp, #32]
 800523a:	9310      	str	r3, [sp, #64]	; 0x40
 800523c:	2301      	movs	r3, #1
 800523e:	930c      	str	r3, [sp, #48]	; 0x30
 8005240:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005242:	2b00      	cmp	r3, #0
 8005244:	d104      	bne.n	8005250 <_dtoa_r+0xaa4>
 8005246:	0001      	movs	r1, r0
 8005248:	9805      	ldr	r0, [sp, #20]
 800524a:	f000 fb67 	bl	800591c <__mcmp>
 800524e:	900c      	str	r0, [sp, #48]	; 0x30
 8005250:	0038      	movs	r0, r7
 8005252:	9908      	ldr	r1, [sp, #32]
 8005254:	f000 f922 	bl	800549c <_Bfree>
 8005258:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800525a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800525c:	3301      	adds	r3, #1
 800525e:	9308      	str	r3, [sp, #32]
 8005260:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8005262:	4313      	orrs	r3, r2
 8005264:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005266:	4313      	orrs	r3, r2
 8005268:	d10c      	bne.n	8005284 <_dtoa_r+0xad8>
 800526a:	9b07      	ldr	r3, [sp, #28]
 800526c:	2b39      	cmp	r3, #57	; 0x39
 800526e:	d026      	beq.n	80052be <_dtoa_r+0xb12>
 8005270:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005272:	2b00      	cmp	r3, #0
 8005274:	dd02      	ble.n	800527c <_dtoa_r+0xad0>
 8005276:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005278:	3331      	adds	r3, #49	; 0x31
 800527a:	9307      	str	r3, [sp, #28]
 800527c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800527e:	9a07      	ldr	r2, [sp, #28]
 8005280:	701a      	strb	r2, [r3, #0]
 8005282:	e76a      	b.n	800515a <_dtoa_r+0x9ae>
 8005284:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005286:	2b00      	cmp	r3, #0
 8005288:	db04      	blt.n	8005294 <_dtoa_r+0xae8>
 800528a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800528c:	4313      	orrs	r3, r2
 800528e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8005290:	4313      	orrs	r3, r2
 8005292:	d11f      	bne.n	80052d4 <_dtoa_r+0xb28>
 8005294:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005296:	2b00      	cmp	r3, #0
 8005298:	ddf0      	ble.n	800527c <_dtoa_r+0xad0>
 800529a:	9905      	ldr	r1, [sp, #20]
 800529c:	2201      	movs	r2, #1
 800529e:	0038      	movs	r0, r7
 80052a0:	f000 face 	bl	8005840 <__lshift>
 80052a4:	0031      	movs	r1, r6
 80052a6:	9005      	str	r0, [sp, #20]
 80052a8:	f000 fb38 	bl	800591c <__mcmp>
 80052ac:	2800      	cmp	r0, #0
 80052ae:	dc03      	bgt.n	80052b8 <_dtoa_r+0xb0c>
 80052b0:	d1e4      	bne.n	800527c <_dtoa_r+0xad0>
 80052b2:	9b07      	ldr	r3, [sp, #28]
 80052b4:	07db      	lsls	r3, r3, #31
 80052b6:	d5e1      	bpl.n	800527c <_dtoa_r+0xad0>
 80052b8:	9b07      	ldr	r3, [sp, #28]
 80052ba:	2b39      	cmp	r3, #57	; 0x39
 80052bc:	d1db      	bne.n	8005276 <_dtoa_r+0xaca>
 80052be:	2339      	movs	r3, #57	; 0x39
 80052c0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80052c2:	7013      	strb	r3, [r2, #0]
 80052c4:	9b08      	ldr	r3, [sp, #32]
 80052c6:	9308      	str	r3, [sp, #32]
 80052c8:	3b01      	subs	r3, #1
 80052ca:	781a      	ldrb	r2, [r3, #0]
 80052cc:	2a39      	cmp	r2, #57	; 0x39
 80052ce:	d068      	beq.n	80053a2 <_dtoa_r+0xbf6>
 80052d0:	3201      	adds	r2, #1
 80052d2:	e7d5      	b.n	8005280 <_dtoa_r+0xad4>
 80052d4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80052d6:	2b00      	cmp	r3, #0
 80052d8:	dd07      	ble.n	80052ea <_dtoa_r+0xb3e>
 80052da:	9b07      	ldr	r3, [sp, #28]
 80052dc:	2b39      	cmp	r3, #57	; 0x39
 80052de:	d0ee      	beq.n	80052be <_dtoa_r+0xb12>
 80052e0:	9b07      	ldr	r3, [sp, #28]
 80052e2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80052e4:	3301      	adds	r3, #1
 80052e6:	7013      	strb	r3, [r2, #0]
 80052e8:	e737      	b.n	800515a <_dtoa_r+0x9ae>
 80052ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80052ec:	9a07      	ldr	r2, [sp, #28]
 80052ee:	701a      	strb	r2, [r3, #0]
 80052f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80052f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80052f4:	4293      	cmp	r3, r2
 80052f6:	d03e      	beq.n	8005376 <_dtoa_r+0xbca>
 80052f8:	2300      	movs	r3, #0
 80052fa:	220a      	movs	r2, #10
 80052fc:	9905      	ldr	r1, [sp, #20]
 80052fe:	0038      	movs	r0, r7
 8005300:	f000 f8f0 	bl	80054e4 <__multadd>
 8005304:	2300      	movs	r3, #0
 8005306:	9005      	str	r0, [sp, #20]
 8005308:	220a      	movs	r2, #10
 800530a:	0021      	movs	r1, r4
 800530c:	0038      	movs	r0, r7
 800530e:	42ac      	cmp	r4, r5
 8005310:	d106      	bne.n	8005320 <_dtoa_r+0xb74>
 8005312:	f000 f8e7 	bl	80054e4 <__multadd>
 8005316:	0004      	movs	r4, r0
 8005318:	0005      	movs	r5, r0
 800531a:	9b08      	ldr	r3, [sp, #32]
 800531c:	930a      	str	r3, [sp, #40]	; 0x28
 800531e:	e778      	b.n	8005212 <_dtoa_r+0xa66>
 8005320:	f000 f8e0 	bl	80054e4 <__multadd>
 8005324:	0029      	movs	r1, r5
 8005326:	0004      	movs	r4, r0
 8005328:	2300      	movs	r3, #0
 800532a:	220a      	movs	r2, #10
 800532c:	0038      	movs	r0, r7
 800532e:	f000 f8d9 	bl	80054e4 <__multadd>
 8005332:	0005      	movs	r5, r0
 8005334:	e7f1      	b.n	800531a <_dtoa_r+0xb6e>
 8005336:	9b07      	ldr	r3, [sp, #28]
 8005338:	930c      	str	r3, [sp, #48]	; 0x30
 800533a:	2400      	movs	r4, #0
 800533c:	0031      	movs	r1, r6
 800533e:	9805      	ldr	r0, [sp, #20]
 8005340:	f7ff f9a8 	bl	8004694 <quorem>
 8005344:	9b06      	ldr	r3, [sp, #24]
 8005346:	3030      	adds	r0, #48	; 0x30
 8005348:	5518      	strb	r0, [r3, r4]
 800534a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800534c:	3401      	adds	r4, #1
 800534e:	9007      	str	r0, [sp, #28]
 8005350:	42a3      	cmp	r3, r4
 8005352:	dd07      	ble.n	8005364 <_dtoa_r+0xbb8>
 8005354:	2300      	movs	r3, #0
 8005356:	220a      	movs	r2, #10
 8005358:	0038      	movs	r0, r7
 800535a:	9905      	ldr	r1, [sp, #20]
 800535c:	f000 f8c2 	bl	80054e4 <__multadd>
 8005360:	9005      	str	r0, [sp, #20]
 8005362:	e7eb      	b.n	800533c <_dtoa_r+0xb90>
 8005364:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005366:	2001      	movs	r0, #1
 8005368:	2b00      	cmp	r3, #0
 800536a:	dd00      	ble.n	800536e <_dtoa_r+0xbc2>
 800536c:	0018      	movs	r0, r3
 800536e:	2400      	movs	r4, #0
 8005370:	9b06      	ldr	r3, [sp, #24]
 8005372:	181b      	adds	r3, r3, r0
 8005374:	9308      	str	r3, [sp, #32]
 8005376:	9905      	ldr	r1, [sp, #20]
 8005378:	2201      	movs	r2, #1
 800537a:	0038      	movs	r0, r7
 800537c:	f000 fa60 	bl	8005840 <__lshift>
 8005380:	0031      	movs	r1, r6
 8005382:	9005      	str	r0, [sp, #20]
 8005384:	f000 faca 	bl	800591c <__mcmp>
 8005388:	2800      	cmp	r0, #0
 800538a:	dc9b      	bgt.n	80052c4 <_dtoa_r+0xb18>
 800538c:	d102      	bne.n	8005394 <_dtoa_r+0xbe8>
 800538e:	9b07      	ldr	r3, [sp, #28]
 8005390:	07db      	lsls	r3, r3, #31
 8005392:	d497      	bmi.n	80052c4 <_dtoa_r+0xb18>
 8005394:	9b08      	ldr	r3, [sp, #32]
 8005396:	9308      	str	r3, [sp, #32]
 8005398:	3b01      	subs	r3, #1
 800539a:	781a      	ldrb	r2, [r3, #0]
 800539c:	2a30      	cmp	r2, #48	; 0x30
 800539e:	d0fa      	beq.n	8005396 <_dtoa_r+0xbea>
 80053a0:	e6db      	b.n	800515a <_dtoa_r+0x9ae>
 80053a2:	9a06      	ldr	r2, [sp, #24]
 80053a4:	429a      	cmp	r2, r3
 80053a6:	d18e      	bne.n	80052c6 <_dtoa_r+0xb1a>
 80053a8:	9b02      	ldr	r3, [sp, #8]
 80053aa:	3301      	adds	r3, #1
 80053ac:	9302      	str	r3, [sp, #8]
 80053ae:	2331      	movs	r3, #49	; 0x31
 80053b0:	e799      	b.n	80052e6 <_dtoa_r+0xb3a>
 80053b2:	4b09      	ldr	r3, [pc, #36]	; (80053d8 <_dtoa_r+0xc2c>)
 80053b4:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80053b6:	9306      	str	r3, [sp, #24]
 80053b8:	4b08      	ldr	r3, [pc, #32]	; (80053dc <_dtoa_r+0xc30>)
 80053ba:	2a00      	cmp	r2, #0
 80053bc:	d001      	beq.n	80053c2 <_dtoa_r+0xc16>
 80053be:	f7ff fa3f 	bl	8004840 <_dtoa_r+0x94>
 80053c2:	f7ff fa3f 	bl	8004844 <_dtoa_r+0x98>
 80053c6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80053c8:	2b00      	cmp	r3, #0
 80053ca:	dcb6      	bgt.n	800533a <_dtoa_r+0xb8e>
 80053cc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80053ce:	2b02      	cmp	r3, #2
 80053d0:	dd00      	ble.n	80053d4 <_dtoa_r+0xc28>
 80053d2:	e6ac      	b.n	800512e <_dtoa_r+0x982>
 80053d4:	e7b1      	b.n	800533a <_dtoa_r+0xb8e>
 80053d6:	46c0      	nop			; (mov r8, r8)
 80053d8:	08006e14 	.word	0x08006e14
 80053dc:	08006e1c 	.word	0x08006e1c

080053e0 <_localeconv_r>:
 80053e0:	4800      	ldr	r0, [pc, #0]	; (80053e4 <_localeconv_r+0x4>)
 80053e2:	4770      	bx	lr
 80053e4:	20000168 	.word	0x20000168

080053e8 <malloc>:
 80053e8:	b510      	push	{r4, lr}
 80053ea:	4b03      	ldr	r3, [pc, #12]	; (80053f8 <malloc+0x10>)
 80053ec:	0001      	movs	r1, r0
 80053ee:	6818      	ldr	r0, [r3, #0]
 80053f0:	f000 fc44 	bl	8005c7c <_malloc_r>
 80053f4:	bd10      	pop	{r4, pc}
 80053f6:	46c0      	nop			; (mov r8, r8)
 80053f8:	20000014 	.word	0x20000014

080053fc <memchr>:
 80053fc:	b2c9      	uxtb	r1, r1
 80053fe:	1882      	adds	r2, r0, r2
 8005400:	4290      	cmp	r0, r2
 8005402:	d101      	bne.n	8005408 <memchr+0xc>
 8005404:	2000      	movs	r0, #0
 8005406:	4770      	bx	lr
 8005408:	7803      	ldrb	r3, [r0, #0]
 800540a:	428b      	cmp	r3, r1
 800540c:	d0fb      	beq.n	8005406 <memchr+0xa>
 800540e:	3001      	adds	r0, #1
 8005410:	e7f6      	b.n	8005400 <memchr+0x4>
	...

08005414 <_Balloc>:
 8005414:	b570      	push	{r4, r5, r6, lr}
 8005416:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8005418:	0006      	movs	r6, r0
 800541a:	000c      	movs	r4, r1
 800541c:	2d00      	cmp	r5, #0
 800541e:	d10e      	bne.n	800543e <_Balloc+0x2a>
 8005420:	2010      	movs	r0, #16
 8005422:	f7ff ffe1 	bl	80053e8 <malloc>
 8005426:	1e02      	subs	r2, r0, #0
 8005428:	6270      	str	r0, [r6, #36]	; 0x24
 800542a:	d104      	bne.n	8005436 <_Balloc+0x22>
 800542c:	2166      	movs	r1, #102	; 0x66
 800542e:	4b19      	ldr	r3, [pc, #100]	; (8005494 <_Balloc+0x80>)
 8005430:	4819      	ldr	r0, [pc, #100]	; (8005498 <_Balloc+0x84>)
 8005432:	f000 fe0d 	bl	8006050 <__assert_func>
 8005436:	6045      	str	r5, [r0, #4]
 8005438:	6085      	str	r5, [r0, #8]
 800543a:	6005      	str	r5, [r0, #0]
 800543c:	60c5      	str	r5, [r0, #12]
 800543e:	6a75      	ldr	r5, [r6, #36]	; 0x24
 8005440:	68eb      	ldr	r3, [r5, #12]
 8005442:	2b00      	cmp	r3, #0
 8005444:	d013      	beq.n	800546e <_Balloc+0x5a>
 8005446:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005448:	00a2      	lsls	r2, r4, #2
 800544a:	68db      	ldr	r3, [r3, #12]
 800544c:	189b      	adds	r3, r3, r2
 800544e:	6818      	ldr	r0, [r3, #0]
 8005450:	2800      	cmp	r0, #0
 8005452:	d118      	bne.n	8005486 <_Balloc+0x72>
 8005454:	2101      	movs	r1, #1
 8005456:	000d      	movs	r5, r1
 8005458:	40a5      	lsls	r5, r4
 800545a:	1d6a      	adds	r2, r5, #5
 800545c:	0030      	movs	r0, r6
 800545e:	0092      	lsls	r2, r2, #2
 8005460:	f000 fb74 	bl	8005b4c <_calloc_r>
 8005464:	2800      	cmp	r0, #0
 8005466:	d00c      	beq.n	8005482 <_Balloc+0x6e>
 8005468:	6044      	str	r4, [r0, #4]
 800546a:	6085      	str	r5, [r0, #8]
 800546c:	e00d      	b.n	800548a <_Balloc+0x76>
 800546e:	2221      	movs	r2, #33	; 0x21
 8005470:	2104      	movs	r1, #4
 8005472:	0030      	movs	r0, r6
 8005474:	f000 fb6a 	bl	8005b4c <_calloc_r>
 8005478:	6a73      	ldr	r3, [r6, #36]	; 0x24
 800547a:	60e8      	str	r0, [r5, #12]
 800547c:	68db      	ldr	r3, [r3, #12]
 800547e:	2b00      	cmp	r3, #0
 8005480:	d1e1      	bne.n	8005446 <_Balloc+0x32>
 8005482:	2000      	movs	r0, #0
 8005484:	bd70      	pop	{r4, r5, r6, pc}
 8005486:	6802      	ldr	r2, [r0, #0]
 8005488:	601a      	str	r2, [r3, #0]
 800548a:	2300      	movs	r3, #0
 800548c:	6103      	str	r3, [r0, #16]
 800548e:	60c3      	str	r3, [r0, #12]
 8005490:	e7f8      	b.n	8005484 <_Balloc+0x70>
 8005492:	46c0      	nop			; (mov r8, r8)
 8005494:	08006e21 	.word	0x08006e21
 8005498:	08006ea4 	.word	0x08006ea4

0800549c <_Bfree>:
 800549c:	b570      	push	{r4, r5, r6, lr}
 800549e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80054a0:	0005      	movs	r5, r0
 80054a2:	000c      	movs	r4, r1
 80054a4:	2e00      	cmp	r6, #0
 80054a6:	d10e      	bne.n	80054c6 <_Bfree+0x2a>
 80054a8:	2010      	movs	r0, #16
 80054aa:	f7ff ff9d 	bl	80053e8 <malloc>
 80054ae:	1e02      	subs	r2, r0, #0
 80054b0:	6268      	str	r0, [r5, #36]	; 0x24
 80054b2:	d104      	bne.n	80054be <_Bfree+0x22>
 80054b4:	218a      	movs	r1, #138	; 0x8a
 80054b6:	4b09      	ldr	r3, [pc, #36]	; (80054dc <_Bfree+0x40>)
 80054b8:	4809      	ldr	r0, [pc, #36]	; (80054e0 <_Bfree+0x44>)
 80054ba:	f000 fdc9 	bl	8006050 <__assert_func>
 80054be:	6046      	str	r6, [r0, #4]
 80054c0:	6086      	str	r6, [r0, #8]
 80054c2:	6006      	str	r6, [r0, #0]
 80054c4:	60c6      	str	r6, [r0, #12]
 80054c6:	2c00      	cmp	r4, #0
 80054c8:	d007      	beq.n	80054da <_Bfree+0x3e>
 80054ca:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80054cc:	6862      	ldr	r2, [r4, #4]
 80054ce:	68db      	ldr	r3, [r3, #12]
 80054d0:	0092      	lsls	r2, r2, #2
 80054d2:	189b      	adds	r3, r3, r2
 80054d4:	681a      	ldr	r2, [r3, #0]
 80054d6:	6022      	str	r2, [r4, #0]
 80054d8:	601c      	str	r4, [r3, #0]
 80054da:	bd70      	pop	{r4, r5, r6, pc}
 80054dc:	08006e21 	.word	0x08006e21
 80054e0:	08006ea4 	.word	0x08006ea4

080054e4 <__multadd>:
 80054e4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80054e6:	000e      	movs	r6, r1
 80054e8:	9001      	str	r0, [sp, #4]
 80054ea:	000c      	movs	r4, r1
 80054ec:	001d      	movs	r5, r3
 80054ee:	2000      	movs	r0, #0
 80054f0:	690f      	ldr	r7, [r1, #16]
 80054f2:	3614      	adds	r6, #20
 80054f4:	6833      	ldr	r3, [r6, #0]
 80054f6:	3001      	adds	r0, #1
 80054f8:	b299      	uxth	r1, r3
 80054fa:	4351      	muls	r1, r2
 80054fc:	0c1b      	lsrs	r3, r3, #16
 80054fe:	4353      	muls	r3, r2
 8005500:	1949      	adds	r1, r1, r5
 8005502:	0c0d      	lsrs	r5, r1, #16
 8005504:	195b      	adds	r3, r3, r5
 8005506:	0c1d      	lsrs	r5, r3, #16
 8005508:	b289      	uxth	r1, r1
 800550a:	041b      	lsls	r3, r3, #16
 800550c:	185b      	adds	r3, r3, r1
 800550e:	c608      	stmia	r6!, {r3}
 8005510:	4287      	cmp	r7, r0
 8005512:	dcef      	bgt.n	80054f4 <__multadd+0x10>
 8005514:	2d00      	cmp	r5, #0
 8005516:	d022      	beq.n	800555e <__multadd+0x7a>
 8005518:	68a3      	ldr	r3, [r4, #8]
 800551a:	42bb      	cmp	r3, r7
 800551c:	dc19      	bgt.n	8005552 <__multadd+0x6e>
 800551e:	6863      	ldr	r3, [r4, #4]
 8005520:	9801      	ldr	r0, [sp, #4]
 8005522:	1c59      	adds	r1, r3, #1
 8005524:	f7ff ff76 	bl	8005414 <_Balloc>
 8005528:	1e06      	subs	r6, r0, #0
 800552a:	d105      	bne.n	8005538 <__multadd+0x54>
 800552c:	0002      	movs	r2, r0
 800552e:	21b5      	movs	r1, #181	; 0xb5
 8005530:	4b0c      	ldr	r3, [pc, #48]	; (8005564 <__multadd+0x80>)
 8005532:	480d      	ldr	r0, [pc, #52]	; (8005568 <__multadd+0x84>)
 8005534:	f000 fd8c 	bl	8006050 <__assert_func>
 8005538:	0021      	movs	r1, r4
 800553a:	6923      	ldr	r3, [r4, #16]
 800553c:	310c      	adds	r1, #12
 800553e:	1c9a      	adds	r2, r3, #2
 8005540:	0092      	lsls	r2, r2, #2
 8005542:	300c      	adds	r0, #12
 8005544:	f7fe fc06 	bl	8003d54 <memcpy>
 8005548:	0021      	movs	r1, r4
 800554a:	9801      	ldr	r0, [sp, #4]
 800554c:	f7ff ffa6 	bl	800549c <_Bfree>
 8005550:	0034      	movs	r4, r6
 8005552:	1d3b      	adds	r3, r7, #4
 8005554:	009b      	lsls	r3, r3, #2
 8005556:	18e3      	adds	r3, r4, r3
 8005558:	605d      	str	r5, [r3, #4]
 800555a:	1c7b      	adds	r3, r7, #1
 800555c:	6123      	str	r3, [r4, #16]
 800555e:	0020      	movs	r0, r4
 8005560:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005562:	46c0      	nop			; (mov r8, r8)
 8005564:	08006e93 	.word	0x08006e93
 8005568:	08006ea4 	.word	0x08006ea4

0800556c <__hi0bits>:
 800556c:	0003      	movs	r3, r0
 800556e:	0c02      	lsrs	r2, r0, #16
 8005570:	2000      	movs	r0, #0
 8005572:	4282      	cmp	r2, r0
 8005574:	d101      	bne.n	800557a <__hi0bits+0xe>
 8005576:	041b      	lsls	r3, r3, #16
 8005578:	3010      	adds	r0, #16
 800557a:	0e1a      	lsrs	r2, r3, #24
 800557c:	d101      	bne.n	8005582 <__hi0bits+0x16>
 800557e:	3008      	adds	r0, #8
 8005580:	021b      	lsls	r3, r3, #8
 8005582:	0f1a      	lsrs	r2, r3, #28
 8005584:	d101      	bne.n	800558a <__hi0bits+0x1e>
 8005586:	3004      	adds	r0, #4
 8005588:	011b      	lsls	r3, r3, #4
 800558a:	0f9a      	lsrs	r2, r3, #30
 800558c:	d101      	bne.n	8005592 <__hi0bits+0x26>
 800558e:	3002      	adds	r0, #2
 8005590:	009b      	lsls	r3, r3, #2
 8005592:	2b00      	cmp	r3, #0
 8005594:	db03      	blt.n	800559e <__hi0bits+0x32>
 8005596:	3001      	adds	r0, #1
 8005598:	005b      	lsls	r3, r3, #1
 800559a:	d400      	bmi.n	800559e <__hi0bits+0x32>
 800559c:	2020      	movs	r0, #32
 800559e:	4770      	bx	lr

080055a0 <__lo0bits>:
 80055a0:	6803      	ldr	r3, [r0, #0]
 80055a2:	0002      	movs	r2, r0
 80055a4:	2107      	movs	r1, #7
 80055a6:	0018      	movs	r0, r3
 80055a8:	4008      	ands	r0, r1
 80055aa:	420b      	tst	r3, r1
 80055ac:	d00d      	beq.n	80055ca <__lo0bits+0x2a>
 80055ae:	3906      	subs	r1, #6
 80055b0:	2000      	movs	r0, #0
 80055b2:	420b      	tst	r3, r1
 80055b4:	d105      	bne.n	80055c2 <__lo0bits+0x22>
 80055b6:	3002      	adds	r0, #2
 80055b8:	4203      	tst	r3, r0
 80055ba:	d003      	beq.n	80055c4 <__lo0bits+0x24>
 80055bc:	40cb      	lsrs	r3, r1
 80055be:	0008      	movs	r0, r1
 80055c0:	6013      	str	r3, [r2, #0]
 80055c2:	4770      	bx	lr
 80055c4:	089b      	lsrs	r3, r3, #2
 80055c6:	6013      	str	r3, [r2, #0]
 80055c8:	e7fb      	b.n	80055c2 <__lo0bits+0x22>
 80055ca:	b299      	uxth	r1, r3
 80055cc:	2900      	cmp	r1, #0
 80055ce:	d101      	bne.n	80055d4 <__lo0bits+0x34>
 80055d0:	2010      	movs	r0, #16
 80055d2:	0c1b      	lsrs	r3, r3, #16
 80055d4:	b2d9      	uxtb	r1, r3
 80055d6:	2900      	cmp	r1, #0
 80055d8:	d101      	bne.n	80055de <__lo0bits+0x3e>
 80055da:	3008      	adds	r0, #8
 80055dc:	0a1b      	lsrs	r3, r3, #8
 80055de:	0719      	lsls	r1, r3, #28
 80055e0:	d101      	bne.n	80055e6 <__lo0bits+0x46>
 80055e2:	3004      	adds	r0, #4
 80055e4:	091b      	lsrs	r3, r3, #4
 80055e6:	0799      	lsls	r1, r3, #30
 80055e8:	d101      	bne.n	80055ee <__lo0bits+0x4e>
 80055ea:	3002      	adds	r0, #2
 80055ec:	089b      	lsrs	r3, r3, #2
 80055ee:	07d9      	lsls	r1, r3, #31
 80055f0:	d4e9      	bmi.n	80055c6 <__lo0bits+0x26>
 80055f2:	3001      	adds	r0, #1
 80055f4:	085b      	lsrs	r3, r3, #1
 80055f6:	d1e6      	bne.n	80055c6 <__lo0bits+0x26>
 80055f8:	2020      	movs	r0, #32
 80055fa:	e7e2      	b.n	80055c2 <__lo0bits+0x22>

080055fc <__i2b>:
 80055fc:	b510      	push	{r4, lr}
 80055fe:	000c      	movs	r4, r1
 8005600:	2101      	movs	r1, #1
 8005602:	f7ff ff07 	bl	8005414 <_Balloc>
 8005606:	2800      	cmp	r0, #0
 8005608:	d106      	bne.n	8005618 <__i2b+0x1c>
 800560a:	21a0      	movs	r1, #160	; 0xa0
 800560c:	0002      	movs	r2, r0
 800560e:	4b04      	ldr	r3, [pc, #16]	; (8005620 <__i2b+0x24>)
 8005610:	4804      	ldr	r0, [pc, #16]	; (8005624 <__i2b+0x28>)
 8005612:	0049      	lsls	r1, r1, #1
 8005614:	f000 fd1c 	bl	8006050 <__assert_func>
 8005618:	2301      	movs	r3, #1
 800561a:	6144      	str	r4, [r0, #20]
 800561c:	6103      	str	r3, [r0, #16]
 800561e:	bd10      	pop	{r4, pc}
 8005620:	08006e93 	.word	0x08006e93
 8005624:	08006ea4 	.word	0x08006ea4

08005628 <__multiply>:
 8005628:	b5f0      	push	{r4, r5, r6, r7, lr}
 800562a:	690b      	ldr	r3, [r1, #16]
 800562c:	0014      	movs	r4, r2
 800562e:	6912      	ldr	r2, [r2, #16]
 8005630:	000d      	movs	r5, r1
 8005632:	b089      	sub	sp, #36	; 0x24
 8005634:	4293      	cmp	r3, r2
 8005636:	da01      	bge.n	800563c <__multiply+0x14>
 8005638:	0025      	movs	r5, r4
 800563a:	000c      	movs	r4, r1
 800563c:	692f      	ldr	r7, [r5, #16]
 800563e:	6926      	ldr	r6, [r4, #16]
 8005640:	6869      	ldr	r1, [r5, #4]
 8005642:	19bb      	adds	r3, r7, r6
 8005644:	9302      	str	r3, [sp, #8]
 8005646:	68ab      	ldr	r3, [r5, #8]
 8005648:	19ba      	adds	r2, r7, r6
 800564a:	4293      	cmp	r3, r2
 800564c:	da00      	bge.n	8005650 <__multiply+0x28>
 800564e:	3101      	adds	r1, #1
 8005650:	f7ff fee0 	bl	8005414 <_Balloc>
 8005654:	9001      	str	r0, [sp, #4]
 8005656:	2800      	cmp	r0, #0
 8005658:	d106      	bne.n	8005668 <__multiply+0x40>
 800565a:	215e      	movs	r1, #94	; 0x5e
 800565c:	0002      	movs	r2, r0
 800565e:	4b48      	ldr	r3, [pc, #288]	; (8005780 <__multiply+0x158>)
 8005660:	4848      	ldr	r0, [pc, #288]	; (8005784 <__multiply+0x15c>)
 8005662:	31ff      	adds	r1, #255	; 0xff
 8005664:	f000 fcf4 	bl	8006050 <__assert_func>
 8005668:	9b01      	ldr	r3, [sp, #4]
 800566a:	2200      	movs	r2, #0
 800566c:	3314      	adds	r3, #20
 800566e:	469c      	mov	ip, r3
 8005670:	19bb      	adds	r3, r7, r6
 8005672:	009b      	lsls	r3, r3, #2
 8005674:	4463      	add	r3, ip
 8005676:	9303      	str	r3, [sp, #12]
 8005678:	4663      	mov	r3, ip
 800567a:	9903      	ldr	r1, [sp, #12]
 800567c:	428b      	cmp	r3, r1
 800567e:	d32c      	bcc.n	80056da <__multiply+0xb2>
 8005680:	002b      	movs	r3, r5
 8005682:	0022      	movs	r2, r4
 8005684:	3314      	adds	r3, #20
 8005686:	00bf      	lsls	r7, r7, #2
 8005688:	3214      	adds	r2, #20
 800568a:	9306      	str	r3, [sp, #24]
 800568c:	00b6      	lsls	r6, r6, #2
 800568e:	19db      	adds	r3, r3, r7
 8005690:	9304      	str	r3, [sp, #16]
 8005692:	1993      	adds	r3, r2, r6
 8005694:	9307      	str	r3, [sp, #28]
 8005696:	2304      	movs	r3, #4
 8005698:	9305      	str	r3, [sp, #20]
 800569a:	002b      	movs	r3, r5
 800569c:	9904      	ldr	r1, [sp, #16]
 800569e:	3315      	adds	r3, #21
 80056a0:	9200      	str	r2, [sp, #0]
 80056a2:	4299      	cmp	r1, r3
 80056a4:	d305      	bcc.n	80056b2 <__multiply+0x8a>
 80056a6:	1b4b      	subs	r3, r1, r5
 80056a8:	3b15      	subs	r3, #21
 80056aa:	089b      	lsrs	r3, r3, #2
 80056ac:	3301      	adds	r3, #1
 80056ae:	009b      	lsls	r3, r3, #2
 80056b0:	9305      	str	r3, [sp, #20]
 80056b2:	9b07      	ldr	r3, [sp, #28]
 80056b4:	9a00      	ldr	r2, [sp, #0]
 80056b6:	429a      	cmp	r2, r3
 80056b8:	d311      	bcc.n	80056de <__multiply+0xb6>
 80056ba:	9b02      	ldr	r3, [sp, #8]
 80056bc:	2b00      	cmp	r3, #0
 80056be:	dd06      	ble.n	80056ce <__multiply+0xa6>
 80056c0:	9b03      	ldr	r3, [sp, #12]
 80056c2:	3b04      	subs	r3, #4
 80056c4:	9303      	str	r3, [sp, #12]
 80056c6:	681b      	ldr	r3, [r3, #0]
 80056c8:	9300      	str	r3, [sp, #0]
 80056ca:	2b00      	cmp	r3, #0
 80056cc:	d053      	beq.n	8005776 <__multiply+0x14e>
 80056ce:	9b01      	ldr	r3, [sp, #4]
 80056d0:	9a02      	ldr	r2, [sp, #8]
 80056d2:	0018      	movs	r0, r3
 80056d4:	611a      	str	r2, [r3, #16]
 80056d6:	b009      	add	sp, #36	; 0x24
 80056d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80056da:	c304      	stmia	r3!, {r2}
 80056dc:	e7cd      	b.n	800567a <__multiply+0x52>
 80056de:	9b00      	ldr	r3, [sp, #0]
 80056e0:	681b      	ldr	r3, [r3, #0]
 80056e2:	b298      	uxth	r0, r3
 80056e4:	2800      	cmp	r0, #0
 80056e6:	d01b      	beq.n	8005720 <__multiply+0xf8>
 80056e8:	4667      	mov	r7, ip
 80056ea:	2400      	movs	r4, #0
 80056ec:	9e06      	ldr	r6, [sp, #24]
 80056ee:	ce02      	ldmia	r6!, {r1}
 80056f0:	683a      	ldr	r2, [r7, #0]
 80056f2:	b28b      	uxth	r3, r1
 80056f4:	4343      	muls	r3, r0
 80056f6:	b292      	uxth	r2, r2
 80056f8:	189b      	adds	r3, r3, r2
 80056fa:	191b      	adds	r3, r3, r4
 80056fc:	0c0c      	lsrs	r4, r1, #16
 80056fe:	4344      	muls	r4, r0
 8005700:	683a      	ldr	r2, [r7, #0]
 8005702:	0c11      	lsrs	r1, r2, #16
 8005704:	1861      	adds	r1, r4, r1
 8005706:	0c1c      	lsrs	r4, r3, #16
 8005708:	1909      	adds	r1, r1, r4
 800570a:	0c0c      	lsrs	r4, r1, #16
 800570c:	b29b      	uxth	r3, r3
 800570e:	0409      	lsls	r1, r1, #16
 8005710:	430b      	orrs	r3, r1
 8005712:	c708      	stmia	r7!, {r3}
 8005714:	9b04      	ldr	r3, [sp, #16]
 8005716:	42b3      	cmp	r3, r6
 8005718:	d8e9      	bhi.n	80056ee <__multiply+0xc6>
 800571a:	4663      	mov	r3, ip
 800571c:	9a05      	ldr	r2, [sp, #20]
 800571e:	509c      	str	r4, [r3, r2]
 8005720:	9b00      	ldr	r3, [sp, #0]
 8005722:	681b      	ldr	r3, [r3, #0]
 8005724:	0c1e      	lsrs	r6, r3, #16
 8005726:	d020      	beq.n	800576a <__multiply+0x142>
 8005728:	4663      	mov	r3, ip
 800572a:	002c      	movs	r4, r5
 800572c:	4660      	mov	r0, ip
 800572e:	2700      	movs	r7, #0
 8005730:	681b      	ldr	r3, [r3, #0]
 8005732:	3414      	adds	r4, #20
 8005734:	6822      	ldr	r2, [r4, #0]
 8005736:	b29b      	uxth	r3, r3
 8005738:	b291      	uxth	r1, r2
 800573a:	4371      	muls	r1, r6
 800573c:	6802      	ldr	r2, [r0, #0]
 800573e:	0c12      	lsrs	r2, r2, #16
 8005740:	1889      	adds	r1, r1, r2
 8005742:	19cf      	adds	r7, r1, r7
 8005744:	0439      	lsls	r1, r7, #16
 8005746:	430b      	orrs	r3, r1
 8005748:	6003      	str	r3, [r0, #0]
 800574a:	cc02      	ldmia	r4!, {r1}
 800574c:	6843      	ldr	r3, [r0, #4]
 800574e:	0c09      	lsrs	r1, r1, #16
 8005750:	4371      	muls	r1, r6
 8005752:	b29b      	uxth	r3, r3
 8005754:	0c3f      	lsrs	r7, r7, #16
 8005756:	18cb      	adds	r3, r1, r3
 8005758:	9a04      	ldr	r2, [sp, #16]
 800575a:	19db      	adds	r3, r3, r7
 800575c:	0c1f      	lsrs	r7, r3, #16
 800575e:	3004      	adds	r0, #4
 8005760:	42a2      	cmp	r2, r4
 8005762:	d8e7      	bhi.n	8005734 <__multiply+0x10c>
 8005764:	4662      	mov	r2, ip
 8005766:	9905      	ldr	r1, [sp, #20]
 8005768:	5053      	str	r3, [r2, r1]
 800576a:	9b00      	ldr	r3, [sp, #0]
 800576c:	3304      	adds	r3, #4
 800576e:	9300      	str	r3, [sp, #0]
 8005770:	2304      	movs	r3, #4
 8005772:	449c      	add	ip, r3
 8005774:	e79d      	b.n	80056b2 <__multiply+0x8a>
 8005776:	9b02      	ldr	r3, [sp, #8]
 8005778:	3b01      	subs	r3, #1
 800577a:	9302      	str	r3, [sp, #8]
 800577c:	e79d      	b.n	80056ba <__multiply+0x92>
 800577e:	46c0      	nop			; (mov r8, r8)
 8005780:	08006e93 	.word	0x08006e93
 8005784:	08006ea4 	.word	0x08006ea4

08005788 <__pow5mult>:
 8005788:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800578a:	2303      	movs	r3, #3
 800578c:	0015      	movs	r5, r2
 800578e:	0007      	movs	r7, r0
 8005790:	000e      	movs	r6, r1
 8005792:	401a      	ands	r2, r3
 8005794:	421d      	tst	r5, r3
 8005796:	d008      	beq.n	80057aa <__pow5mult+0x22>
 8005798:	4925      	ldr	r1, [pc, #148]	; (8005830 <__pow5mult+0xa8>)
 800579a:	3a01      	subs	r2, #1
 800579c:	0092      	lsls	r2, r2, #2
 800579e:	5852      	ldr	r2, [r2, r1]
 80057a0:	2300      	movs	r3, #0
 80057a2:	0031      	movs	r1, r6
 80057a4:	f7ff fe9e 	bl	80054e4 <__multadd>
 80057a8:	0006      	movs	r6, r0
 80057aa:	10ad      	asrs	r5, r5, #2
 80057ac:	d03d      	beq.n	800582a <__pow5mult+0xa2>
 80057ae:	6a7c      	ldr	r4, [r7, #36]	; 0x24
 80057b0:	2c00      	cmp	r4, #0
 80057b2:	d10f      	bne.n	80057d4 <__pow5mult+0x4c>
 80057b4:	2010      	movs	r0, #16
 80057b6:	f7ff fe17 	bl	80053e8 <malloc>
 80057ba:	1e02      	subs	r2, r0, #0
 80057bc:	6278      	str	r0, [r7, #36]	; 0x24
 80057be:	d105      	bne.n	80057cc <__pow5mult+0x44>
 80057c0:	21d7      	movs	r1, #215	; 0xd7
 80057c2:	4b1c      	ldr	r3, [pc, #112]	; (8005834 <__pow5mult+0xac>)
 80057c4:	481c      	ldr	r0, [pc, #112]	; (8005838 <__pow5mult+0xb0>)
 80057c6:	0049      	lsls	r1, r1, #1
 80057c8:	f000 fc42 	bl	8006050 <__assert_func>
 80057cc:	6044      	str	r4, [r0, #4]
 80057ce:	6084      	str	r4, [r0, #8]
 80057d0:	6004      	str	r4, [r0, #0]
 80057d2:	60c4      	str	r4, [r0, #12]
 80057d4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80057d6:	689c      	ldr	r4, [r3, #8]
 80057d8:	9301      	str	r3, [sp, #4]
 80057da:	2c00      	cmp	r4, #0
 80057dc:	d108      	bne.n	80057f0 <__pow5mult+0x68>
 80057de:	0038      	movs	r0, r7
 80057e0:	4916      	ldr	r1, [pc, #88]	; (800583c <__pow5mult+0xb4>)
 80057e2:	f7ff ff0b 	bl	80055fc <__i2b>
 80057e6:	9b01      	ldr	r3, [sp, #4]
 80057e8:	0004      	movs	r4, r0
 80057ea:	6098      	str	r0, [r3, #8]
 80057ec:	2300      	movs	r3, #0
 80057ee:	6003      	str	r3, [r0, #0]
 80057f0:	2301      	movs	r3, #1
 80057f2:	421d      	tst	r5, r3
 80057f4:	d00a      	beq.n	800580c <__pow5mult+0x84>
 80057f6:	0031      	movs	r1, r6
 80057f8:	0022      	movs	r2, r4
 80057fa:	0038      	movs	r0, r7
 80057fc:	f7ff ff14 	bl	8005628 <__multiply>
 8005800:	0031      	movs	r1, r6
 8005802:	9001      	str	r0, [sp, #4]
 8005804:	0038      	movs	r0, r7
 8005806:	f7ff fe49 	bl	800549c <_Bfree>
 800580a:	9e01      	ldr	r6, [sp, #4]
 800580c:	106d      	asrs	r5, r5, #1
 800580e:	d00c      	beq.n	800582a <__pow5mult+0xa2>
 8005810:	6820      	ldr	r0, [r4, #0]
 8005812:	2800      	cmp	r0, #0
 8005814:	d107      	bne.n	8005826 <__pow5mult+0x9e>
 8005816:	0022      	movs	r2, r4
 8005818:	0021      	movs	r1, r4
 800581a:	0038      	movs	r0, r7
 800581c:	f7ff ff04 	bl	8005628 <__multiply>
 8005820:	2300      	movs	r3, #0
 8005822:	6020      	str	r0, [r4, #0]
 8005824:	6003      	str	r3, [r0, #0]
 8005826:	0004      	movs	r4, r0
 8005828:	e7e2      	b.n	80057f0 <__pow5mult+0x68>
 800582a:	0030      	movs	r0, r6
 800582c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800582e:	46c0      	nop			; (mov r8, r8)
 8005830:	08006ff0 	.word	0x08006ff0
 8005834:	08006e21 	.word	0x08006e21
 8005838:	08006ea4 	.word	0x08006ea4
 800583c:	00000271 	.word	0x00000271

08005840 <__lshift>:
 8005840:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005842:	000c      	movs	r4, r1
 8005844:	0017      	movs	r7, r2
 8005846:	6923      	ldr	r3, [r4, #16]
 8005848:	1155      	asrs	r5, r2, #5
 800584a:	b087      	sub	sp, #28
 800584c:	18eb      	adds	r3, r5, r3
 800584e:	9302      	str	r3, [sp, #8]
 8005850:	3301      	adds	r3, #1
 8005852:	9301      	str	r3, [sp, #4]
 8005854:	6849      	ldr	r1, [r1, #4]
 8005856:	68a3      	ldr	r3, [r4, #8]
 8005858:	9004      	str	r0, [sp, #16]
 800585a:	9a01      	ldr	r2, [sp, #4]
 800585c:	4293      	cmp	r3, r2
 800585e:	db10      	blt.n	8005882 <__lshift+0x42>
 8005860:	9804      	ldr	r0, [sp, #16]
 8005862:	f7ff fdd7 	bl	8005414 <_Balloc>
 8005866:	2300      	movs	r3, #0
 8005868:	0002      	movs	r2, r0
 800586a:	0006      	movs	r6, r0
 800586c:	0019      	movs	r1, r3
 800586e:	3214      	adds	r2, #20
 8005870:	4298      	cmp	r0, r3
 8005872:	d10c      	bne.n	800588e <__lshift+0x4e>
 8005874:	21da      	movs	r1, #218	; 0xda
 8005876:	0002      	movs	r2, r0
 8005878:	4b26      	ldr	r3, [pc, #152]	; (8005914 <__lshift+0xd4>)
 800587a:	4827      	ldr	r0, [pc, #156]	; (8005918 <__lshift+0xd8>)
 800587c:	31ff      	adds	r1, #255	; 0xff
 800587e:	f000 fbe7 	bl	8006050 <__assert_func>
 8005882:	3101      	adds	r1, #1
 8005884:	005b      	lsls	r3, r3, #1
 8005886:	e7e8      	b.n	800585a <__lshift+0x1a>
 8005888:	0098      	lsls	r0, r3, #2
 800588a:	5011      	str	r1, [r2, r0]
 800588c:	3301      	adds	r3, #1
 800588e:	42ab      	cmp	r3, r5
 8005890:	dbfa      	blt.n	8005888 <__lshift+0x48>
 8005892:	43eb      	mvns	r3, r5
 8005894:	17db      	asrs	r3, r3, #31
 8005896:	401d      	ands	r5, r3
 8005898:	211f      	movs	r1, #31
 800589a:	0023      	movs	r3, r4
 800589c:	0038      	movs	r0, r7
 800589e:	00ad      	lsls	r5, r5, #2
 80058a0:	1955      	adds	r5, r2, r5
 80058a2:	6922      	ldr	r2, [r4, #16]
 80058a4:	3314      	adds	r3, #20
 80058a6:	0092      	lsls	r2, r2, #2
 80058a8:	4008      	ands	r0, r1
 80058aa:	4684      	mov	ip, r0
 80058ac:	189a      	adds	r2, r3, r2
 80058ae:	420f      	tst	r7, r1
 80058b0:	d02a      	beq.n	8005908 <__lshift+0xc8>
 80058b2:	3101      	adds	r1, #1
 80058b4:	1a09      	subs	r1, r1, r0
 80058b6:	9105      	str	r1, [sp, #20]
 80058b8:	2100      	movs	r1, #0
 80058ba:	9503      	str	r5, [sp, #12]
 80058bc:	4667      	mov	r7, ip
 80058be:	6818      	ldr	r0, [r3, #0]
 80058c0:	40b8      	lsls	r0, r7
 80058c2:	4301      	orrs	r1, r0
 80058c4:	9803      	ldr	r0, [sp, #12]
 80058c6:	c002      	stmia	r0!, {r1}
 80058c8:	cb02      	ldmia	r3!, {r1}
 80058ca:	9003      	str	r0, [sp, #12]
 80058cc:	9805      	ldr	r0, [sp, #20]
 80058ce:	40c1      	lsrs	r1, r0
 80058d0:	429a      	cmp	r2, r3
 80058d2:	d8f3      	bhi.n	80058bc <__lshift+0x7c>
 80058d4:	0020      	movs	r0, r4
 80058d6:	3015      	adds	r0, #21
 80058d8:	2304      	movs	r3, #4
 80058da:	4282      	cmp	r2, r0
 80058dc:	d304      	bcc.n	80058e8 <__lshift+0xa8>
 80058de:	1b13      	subs	r3, r2, r4
 80058e0:	3b15      	subs	r3, #21
 80058e2:	089b      	lsrs	r3, r3, #2
 80058e4:	3301      	adds	r3, #1
 80058e6:	009b      	lsls	r3, r3, #2
 80058e8:	50e9      	str	r1, [r5, r3]
 80058ea:	2900      	cmp	r1, #0
 80058ec:	d002      	beq.n	80058f4 <__lshift+0xb4>
 80058ee:	9b02      	ldr	r3, [sp, #8]
 80058f0:	3302      	adds	r3, #2
 80058f2:	9301      	str	r3, [sp, #4]
 80058f4:	9b01      	ldr	r3, [sp, #4]
 80058f6:	9804      	ldr	r0, [sp, #16]
 80058f8:	3b01      	subs	r3, #1
 80058fa:	0021      	movs	r1, r4
 80058fc:	6133      	str	r3, [r6, #16]
 80058fe:	f7ff fdcd 	bl	800549c <_Bfree>
 8005902:	0030      	movs	r0, r6
 8005904:	b007      	add	sp, #28
 8005906:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005908:	cb02      	ldmia	r3!, {r1}
 800590a:	c502      	stmia	r5!, {r1}
 800590c:	429a      	cmp	r2, r3
 800590e:	d8fb      	bhi.n	8005908 <__lshift+0xc8>
 8005910:	e7f0      	b.n	80058f4 <__lshift+0xb4>
 8005912:	46c0      	nop			; (mov r8, r8)
 8005914:	08006e93 	.word	0x08006e93
 8005918:	08006ea4 	.word	0x08006ea4

0800591c <__mcmp>:
 800591c:	6902      	ldr	r2, [r0, #16]
 800591e:	690b      	ldr	r3, [r1, #16]
 8005920:	b530      	push	{r4, r5, lr}
 8005922:	0004      	movs	r4, r0
 8005924:	1ad0      	subs	r0, r2, r3
 8005926:	429a      	cmp	r2, r3
 8005928:	d10d      	bne.n	8005946 <__mcmp+0x2a>
 800592a:	009b      	lsls	r3, r3, #2
 800592c:	3414      	adds	r4, #20
 800592e:	3114      	adds	r1, #20
 8005930:	18e2      	adds	r2, r4, r3
 8005932:	18c9      	adds	r1, r1, r3
 8005934:	3a04      	subs	r2, #4
 8005936:	3904      	subs	r1, #4
 8005938:	6815      	ldr	r5, [r2, #0]
 800593a:	680b      	ldr	r3, [r1, #0]
 800593c:	429d      	cmp	r5, r3
 800593e:	d003      	beq.n	8005948 <__mcmp+0x2c>
 8005940:	2001      	movs	r0, #1
 8005942:	429d      	cmp	r5, r3
 8005944:	d303      	bcc.n	800594e <__mcmp+0x32>
 8005946:	bd30      	pop	{r4, r5, pc}
 8005948:	4294      	cmp	r4, r2
 800594a:	d3f3      	bcc.n	8005934 <__mcmp+0x18>
 800594c:	e7fb      	b.n	8005946 <__mcmp+0x2a>
 800594e:	4240      	negs	r0, r0
 8005950:	e7f9      	b.n	8005946 <__mcmp+0x2a>
	...

08005954 <__mdiff>:
 8005954:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005956:	000e      	movs	r6, r1
 8005958:	0007      	movs	r7, r0
 800595a:	0011      	movs	r1, r2
 800595c:	0030      	movs	r0, r6
 800595e:	b087      	sub	sp, #28
 8005960:	0014      	movs	r4, r2
 8005962:	f7ff ffdb 	bl	800591c <__mcmp>
 8005966:	1e05      	subs	r5, r0, #0
 8005968:	d110      	bne.n	800598c <__mdiff+0x38>
 800596a:	0001      	movs	r1, r0
 800596c:	0038      	movs	r0, r7
 800596e:	f7ff fd51 	bl	8005414 <_Balloc>
 8005972:	1e02      	subs	r2, r0, #0
 8005974:	d104      	bne.n	8005980 <__mdiff+0x2c>
 8005976:	4b40      	ldr	r3, [pc, #256]	; (8005a78 <__mdiff+0x124>)
 8005978:	4940      	ldr	r1, [pc, #256]	; (8005a7c <__mdiff+0x128>)
 800597a:	4841      	ldr	r0, [pc, #260]	; (8005a80 <__mdiff+0x12c>)
 800597c:	f000 fb68 	bl	8006050 <__assert_func>
 8005980:	2301      	movs	r3, #1
 8005982:	6145      	str	r5, [r0, #20]
 8005984:	6103      	str	r3, [r0, #16]
 8005986:	0010      	movs	r0, r2
 8005988:	b007      	add	sp, #28
 800598a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800598c:	2301      	movs	r3, #1
 800598e:	9301      	str	r3, [sp, #4]
 8005990:	2800      	cmp	r0, #0
 8005992:	db04      	blt.n	800599e <__mdiff+0x4a>
 8005994:	0023      	movs	r3, r4
 8005996:	0034      	movs	r4, r6
 8005998:	001e      	movs	r6, r3
 800599a:	2300      	movs	r3, #0
 800599c:	9301      	str	r3, [sp, #4]
 800599e:	0038      	movs	r0, r7
 80059a0:	6861      	ldr	r1, [r4, #4]
 80059a2:	f7ff fd37 	bl	8005414 <_Balloc>
 80059a6:	1e02      	subs	r2, r0, #0
 80059a8:	d103      	bne.n	80059b2 <__mdiff+0x5e>
 80059aa:	2190      	movs	r1, #144	; 0x90
 80059ac:	4b32      	ldr	r3, [pc, #200]	; (8005a78 <__mdiff+0x124>)
 80059ae:	0089      	lsls	r1, r1, #2
 80059b0:	e7e3      	b.n	800597a <__mdiff+0x26>
 80059b2:	9b01      	ldr	r3, [sp, #4]
 80059b4:	2700      	movs	r7, #0
 80059b6:	60c3      	str	r3, [r0, #12]
 80059b8:	6920      	ldr	r0, [r4, #16]
 80059ba:	3414      	adds	r4, #20
 80059bc:	9401      	str	r4, [sp, #4]
 80059be:	9b01      	ldr	r3, [sp, #4]
 80059c0:	0084      	lsls	r4, r0, #2
 80059c2:	191b      	adds	r3, r3, r4
 80059c4:	0034      	movs	r4, r6
 80059c6:	9302      	str	r3, [sp, #8]
 80059c8:	6933      	ldr	r3, [r6, #16]
 80059ca:	3414      	adds	r4, #20
 80059cc:	0099      	lsls	r1, r3, #2
 80059ce:	1863      	adds	r3, r4, r1
 80059d0:	9303      	str	r3, [sp, #12]
 80059d2:	0013      	movs	r3, r2
 80059d4:	3314      	adds	r3, #20
 80059d6:	469c      	mov	ip, r3
 80059d8:	9305      	str	r3, [sp, #20]
 80059da:	9b01      	ldr	r3, [sp, #4]
 80059dc:	9304      	str	r3, [sp, #16]
 80059de:	9b04      	ldr	r3, [sp, #16]
 80059e0:	cc02      	ldmia	r4!, {r1}
 80059e2:	cb20      	ldmia	r3!, {r5}
 80059e4:	9304      	str	r3, [sp, #16]
 80059e6:	b2ab      	uxth	r3, r5
 80059e8:	19df      	adds	r7, r3, r7
 80059ea:	b28b      	uxth	r3, r1
 80059ec:	1afb      	subs	r3, r7, r3
 80059ee:	0c09      	lsrs	r1, r1, #16
 80059f0:	0c2d      	lsrs	r5, r5, #16
 80059f2:	1a6d      	subs	r5, r5, r1
 80059f4:	1419      	asrs	r1, r3, #16
 80059f6:	186d      	adds	r5, r5, r1
 80059f8:	4661      	mov	r1, ip
 80059fa:	142f      	asrs	r7, r5, #16
 80059fc:	b29b      	uxth	r3, r3
 80059fe:	042d      	lsls	r5, r5, #16
 8005a00:	432b      	orrs	r3, r5
 8005a02:	c108      	stmia	r1!, {r3}
 8005a04:	9b03      	ldr	r3, [sp, #12]
 8005a06:	468c      	mov	ip, r1
 8005a08:	42a3      	cmp	r3, r4
 8005a0a:	d8e8      	bhi.n	80059de <__mdiff+0x8a>
 8005a0c:	0031      	movs	r1, r6
 8005a0e:	9c03      	ldr	r4, [sp, #12]
 8005a10:	3115      	adds	r1, #21
 8005a12:	2304      	movs	r3, #4
 8005a14:	428c      	cmp	r4, r1
 8005a16:	d304      	bcc.n	8005a22 <__mdiff+0xce>
 8005a18:	1ba3      	subs	r3, r4, r6
 8005a1a:	3b15      	subs	r3, #21
 8005a1c:	089b      	lsrs	r3, r3, #2
 8005a1e:	3301      	adds	r3, #1
 8005a20:	009b      	lsls	r3, r3, #2
 8005a22:	9901      	ldr	r1, [sp, #4]
 8005a24:	18cc      	adds	r4, r1, r3
 8005a26:	9905      	ldr	r1, [sp, #20]
 8005a28:	0026      	movs	r6, r4
 8005a2a:	18cb      	adds	r3, r1, r3
 8005a2c:	469c      	mov	ip, r3
 8005a2e:	9902      	ldr	r1, [sp, #8]
 8005a30:	428e      	cmp	r6, r1
 8005a32:	d310      	bcc.n	8005a56 <__mdiff+0x102>
 8005a34:	9e02      	ldr	r6, [sp, #8]
 8005a36:	1ee1      	subs	r1, r4, #3
 8005a38:	2500      	movs	r5, #0
 8005a3a:	428e      	cmp	r6, r1
 8005a3c:	d304      	bcc.n	8005a48 <__mdiff+0xf4>
 8005a3e:	0031      	movs	r1, r6
 8005a40:	3103      	adds	r1, #3
 8005a42:	1b0c      	subs	r4, r1, r4
 8005a44:	08a4      	lsrs	r4, r4, #2
 8005a46:	00a5      	lsls	r5, r4, #2
 8005a48:	195b      	adds	r3, r3, r5
 8005a4a:	3b04      	subs	r3, #4
 8005a4c:	6819      	ldr	r1, [r3, #0]
 8005a4e:	2900      	cmp	r1, #0
 8005a50:	d00f      	beq.n	8005a72 <__mdiff+0x11e>
 8005a52:	6110      	str	r0, [r2, #16]
 8005a54:	e797      	b.n	8005986 <__mdiff+0x32>
 8005a56:	ce02      	ldmia	r6!, {r1}
 8005a58:	b28d      	uxth	r5, r1
 8005a5a:	19ed      	adds	r5, r5, r7
 8005a5c:	0c0f      	lsrs	r7, r1, #16
 8005a5e:	1429      	asrs	r1, r5, #16
 8005a60:	1879      	adds	r1, r7, r1
 8005a62:	140f      	asrs	r7, r1, #16
 8005a64:	b2ad      	uxth	r5, r5
 8005a66:	0409      	lsls	r1, r1, #16
 8005a68:	430d      	orrs	r5, r1
 8005a6a:	4661      	mov	r1, ip
 8005a6c:	c120      	stmia	r1!, {r5}
 8005a6e:	468c      	mov	ip, r1
 8005a70:	e7dd      	b.n	8005a2e <__mdiff+0xda>
 8005a72:	3801      	subs	r0, #1
 8005a74:	e7e9      	b.n	8005a4a <__mdiff+0xf6>
 8005a76:	46c0      	nop			; (mov r8, r8)
 8005a78:	08006e93 	.word	0x08006e93
 8005a7c:	00000232 	.word	0x00000232
 8005a80:	08006ea4 	.word	0x08006ea4

08005a84 <__d2b>:
 8005a84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005a86:	2101      	movs	r1, #1
 8005a88:	0014      	movs	r4, r2
 8005a8a:	001e      	movs	r6, r3
 8005a8c:	9f08      	ldr	r7, [sp, #32]
 8005a8e:	f7ff fcc1 	bl	8005414 <_Balloc>
 8005a92:	1e05      	subs	r5, r0, #0
 8005a94:	d105      	bne.n	8005aa2 <__d2b+0x1e>
 8005a96:	0002      	movs	r2, r0
 8005a98:	4b26      	ldr	r3, [pc, #152]	; (8005b34 <__d2b+0xb0>)
 8005a9a:	4927      	ldr	r1, [pc, #156]	; (8005b38 <__d2b+0xb4>)
 8005a9c:	4827      	ldr	r0, [pc, #156]	; (8005b3c <__d2b+0xb8>)
 8005a9e:	f000 fad7 	bl	8006050 <__assert_func>
 8005aa2:	0333      	lsls	r3, r6, #12
 8005aa4:	0076      	lsls	r6, r6, #1
 8005aa6:	0b1b      	lsrs	r3, r3, #12
 8005aa8:	0d76      	lsrs	r6, r6, #21
 8005aaa:	d124      	bne.n	8005af6 <__d2b+0x72>
 8005aac:	9301      	str	r3, [sp, #4]
 8005aae:	2c00      	cmp	r4, #0
 8005ab0:	d027      	beq.n	8005b02 <__d2b+0x7e>
 8005ab2:	4668      	mov	r0, sp
 8005ab4:	9400      	str	r4, [sp, #0]
 8005ab6:	f7ff fd73 	bl	80055a0 <__lo0bits>
 8005aba:	9c00      	ldr	r4, [sp, #0]
 8005abc:	2800      	cmp	r0, #0
 8005abe:	d01e      	beq.n	8005afe <__d2b+0x7a>
 8005ac0:	9b01      	ldr	r3, [sp, #4]
 8005ac2:	2120      	movs	r1, #32
 8005ac4:	001a      	movs	r2, r3
 8005ac6:	1a09      	subs	r1, r1, r0
 8005ac8:	408a      	lsls	r2, r1
 8005aca:	40c3      	lsrs	r3, r0
 8005acc:	4322      	orrs	r2, r4
 8005ace:	616a      	str	r2, [r5, #20]
 8005ad0:	9301      	str	r3, [sp, #4]
 8005ad2:	9c01      	ldr	r4, [sp, #4]
 8005ad4:	61ac      	str	r4, [r5, #24]
 8005ad6:	1e63      	subs	r3, r4, #1
 8005ad8:	419c      	sbcs	r4, r3
 8005ada:	3401      	adds	r4, #1
 8005adc:	612c      	str	r4, [r5, #16]
 8005ade:	2e00      	cmp	r6, #0
 8005ae0:	d018      	beq.n	8005b14 <__d2b+0x90>
 8005ae2:	4b17      	ldr	r3, [pc, #92]	; (8005b40 <__d2b+0xbc>)
 8005ae4:	18f6      	adds	r6, r6, r3
 8005ae6:	2335      	movs	r3, #53	; 0x35
 8005ae8:	1836      	adds	r6, r6, r0
 8005aea:	1a18      	subs	r0, r3, r0
 8005aec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005aee:	603e      	str	r6, [r7, #0]
 8005af0:	6018      	str	r0, [r3, #0]
 8005af2:	0028      	movs	r0, r5
 8005af4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005af6:	2280      	movs	r2, #128	; 0x80
 8005af8:	0352      	lsls	r2, r2, #13
 8005afa:	4313      	orrs	r3, r2
 8005afc:	e7d6      	b.n	8005aac <__d2b+0x28>
 8005afe:	616c      	str	r4, [r5, #20]
 8005b00:	e7e7      	b.n	8005ad2 <__d2b+0x4e>
 8005b02:	a801      	add	r0, sp, #4
 8005b04:	f7ff fd4c 	bl	80055a0 <__lo0bits>
 8005b08:	2401      	movs	r4, #1
 8005b0a:	9b01      	ldr	r3, [sp, #4]
 8005b0c:	612c      	str	r4, [r5, #16]
 8005b0e:	616b      	str	r3, [r5, #20]
 8005b10:	3020      	adds	r0, #32
 8005b12:	e7e4      	b.n	8005ade <__d2b+0x5a>
 8005b14:	4b0b      	ldr	r3, [pc, #44]	; (8005b44 <__d2b+0xc0>)
 8005b16:	18c0      	adds	r0, r0, r3
 8005b18:	4b0b      	ldr	r3, [pc, #44]	; (8005b48 <__d2b+0xc4>)
 8005b1a:	6038      	str	r0, [r7, #0]
 8005b1c:	18e3      	adds	r3, r4, r3
 8005b1e:	009b      	lsls	r3, r3, #2
 8005b20:	18eb      	adds	r3, r5, r3
 8005b22:	6958      	ldr	r0, [r3, #20]
 8005b24:	f7ff fd22 	bl	800556c <__hi0bits>
 8005b28:	0164      	lsls	r4, r4, #5
 8005b2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005b2c:	1a24      	subs	r4, r4, r0
 8005b2e:	601c      	str	r4, [r3, #0]
 8005b30:	e7df      	b.n	8005af2 <__d2b+0x6e>
 8005b32:	46c0      	nop			; (mov r8, r8)
 8005b34:	08006e93 	.word	0x08006e93
 8005b38:	0000030a 	.word	0x0000030a
 8005b3c:	08006ea4 	.word	0x08006ea4
 8005b40:	fffffbcd 	.word	0xfffffbcd
 8005b44:	fffffbce 	.word	0xfffffbce
 8005b48:	3fffffff 	.word	0x3fffffff

08005b4c <_calloc_r>:
 8005b4c:	b570      	push	{r4, r5, r6, lr}
 8005b4e:	0c13      	lsrs	r3, r2, #16
 8005b50:	0c0d      	lsrs	r5, r1, #16
 8005b52:	d11e      	bne.n	8005b92 <_calloc_r+0x46>
 8005b54:	2b00      	cmp	r3, #0
 8005b56:	d10c      	bne.n	8005b72 <_calloc_r+0x26>
 8005b58:	b289      	uxth	r1, r1
 8005b5a:	b294      	uxth	r4, r2
 8005b5c:	434c      	muls	r4, r1
 8005b5e:	0021      	movs	r1, r4
 8005b60:	f000 f88c 	bl	8005c7c <_malloc_r>
 8005b64:	1e05      	subs	r5, r0, #0
 8005b66:	d01b      	beq.n	8005ba0 <_calloc_r+0x54>
 8005b68:	0022      	movs	r2, r4
 8005b6a:	2100      	movs	r1, #0
 8005b6c:	f7fe f8fb 	bl	8003d66 <memset>
 8005b70:	e016      	b.n	8005ba0 <_calloc_r+0x54>
 8005b72:	1c1d      	adds	r5, r3, #0
 8005b74:	1c0b      	adds	r3, r1, #0
 8005b76:	b292      	uxth	r2, r2
 8005b78:	b289      	uxth	r1, r1
 8005b7a:	b29c      	uxth	r4, r3
 8005b7c:	4351      	muls	r1, r2
 8005b7e:	b2ab      	uxth	r3, r5
 8005b80:	4363      	muls	r3, r4
 8005b82:	0c0c      	lsrs	r4, r1, #16
 8005b84:	191c      	adds	r4, r3, r4
 8005b86:	0c22      	lsrs	r2, r4, #16
 8005b88:	d107      	bne.n	8005b9a <_calloc_r+0x4e>
 8005b8a:	0424      	lsls	r4, r4, #16
 8005b8c:	b289      	uxth	r1, r1
 8005b8e:	430c      	orrs	r4, r1
 8005b90:	e7e5      	b.n	8005b5e <_calloc_r+0x12>
 8005b92:	2b00      	cmp	r3, #0
 8005b94:	d101      	bne.n	8005b9a <_calloc_r+0x4e>
 8005b96:	1c13      	adds	r3, r2, #0
 8005b98:	e7ed      	b.n	8005b76 <_calloc_r+0x2a>
 8005b9a:	230c      	movs	r3, #12
 8005b9c:	2500      	movs	r5, #0
 8005b9e:	6003      	str	r3, [r0, #0]
 8005ba0:	0028      	movs	r0, r5
 8005ba2:	bd70      	pop	{r4, r5, r6, pc}

08005ba4 <_free_r>:
 8005ba4:	b570      	push	{r4, r5, r6, lr}
 8005ba6:	0005      	movs	r5, r0
 8005ba8:	2900      	cmp	r1, #0
 8005baa:	d010      	beq.n	8005bce <_free_r+0x2a>
 8005bac:	1f0c      	subs	r4, r1, #4
 8005bae:	6823      	ldr	r3, [r4, #0]
 8005bb0:	2b00      	cmp	r3, #0
 8005bb2:	da00      	bge.n	8005bb6 <_free_r+0x12>
 8005bb4:	18e4      	adds	r4, r4, r3
 8005bb6:	0028      	movs	r0, r5
 8005bb8:	f000 fa9e 	bl	80060f8 <__malloc_lock>
 8005bbc:	4a1d      	ldr	r2, [pc, #116]	; (8005c34 <_free_r+0x90>)
 8005bbe:	6813      	ldr	r3, [r2, #0]
 8005bc0:	2b00      	cmp	r3, #0
 8005bc2:	d105      	bne.n	8005bd0 <_free_r+0x2c>
 8005bc4:	6063      	str	r3, [r4, #4]
 8005bc6:	6014      	str	r4, [r2, #0]
 8005bc8:	0028      	movs	r0, r5
 8005bca:	f000 fa9d 	bl	8006108 <__malloc_unlock>
 8005bce:	bd70      	pop	{r4, r5, r6, pc}
 8005bd0:	42a3      	cmp	r3, r4
 8005bd2:	d908      	bls.n	8005be6 <_free_r+0x42>
 8005bd4:	6821      	ldr	r1, [r4, #0]
 8005bd6:	1860      	adds	r0, r4, r1
 8005bd8:	4283      	cmp	r3, r0
 8005bda:	d1f3      	bne.n	8005bc4 <_free_r+0x20>
 8005bdc:	6818      	ldr	r0, [r3, #0]
 8005bde:	685b      	ldr	r3, [r3, #4]
 8005be0:	1841      	adds	r1, r0, r1
 8005be2:	6021      	str	r1, [r4, #0]
 8005be4:	e7ee      	b.n	8005bc4 <_free_r+0x20>
 8005be6:	001a      	movs	r2, r3
 8005be8:	685b      	ldr	r3, [r3, #4]
 8005bea:	2b00      	cmp	r3, #0
 8005bec:	d001      	beq.n	8005bf2 <_free_r+0x4e>
 8005bee:	42a3      	cmp	r3, r4
 8005bf0:	d9f9      	bls.n	8005be6 <_free_r+0x42>
 8005bf2:	6811      	ldr	r1, [r2, #0]
 8005bf4:	1850      	adds	r0, r2, r1
 8005bf6:	42a0      	cmp	r0, r4
 8005bf8:	d10b      	bne.n	8005c12 <_free_r+0x6e>
 8005bfa:	6820      	ldr	r0, [r4, #0]
 8005bfc:	1809      	adds	r1, r1, r0
 8005bfe:	1850      	adds	r0, r2, r1
 8005c00:	6011      	str	r1, [r2, #0]
 8005c02:	4283      	cmp	r3, r0
 8005c04:	d1e0      	bne.n	8005bc8 <_free_r+0x24>
 8005c06:	6818      	ldr	r0, [r3, #0]
 8005c08:	685b      	ldr	r3, [r3, #4]
 8005c0a:	1841      	adds	r1, r0, r1
 8005c0c:	6011      	str	r1, [r2, #0]
 8005c0e:	6053      	str	r3, [r2, #4]
 8005c10:	e7da      	b.n	8005bc8 <_free_r+0x24>
 8005c12:	42a0      	cmp	r0, r4
 8005c14:	d902      	bls.n	8005c1c <_free_r+0x78>
 8005c16:	230c      	movs	r3, #12
 8005c18:	602b      	str	r3, [r5, #0]
 8005c1a:	e7d5      	b.n	8005bc8 <_free_r+0x24>
 8005c1c:	6821      	ldr	r1, [r4, #0]
 8005c1e:	1860      	adds	r0, r4, r1
 8005c20:	4283      	cmp	r3, r0
 8005c22:	d103      	bne.n	8005c2c <_free_r+0x88>
 8005c24:	6818      	ldr	r0, [r3, #0]
 8005c26:	685b      	ldr	r3, [r3, #4]
 8005c28:	1841      	adds	r1, r0, r1
 8005c2a:	6021      	str	r1, [r4, #0]
 8005c2c:	6063      	str	r3, [r4, #4]
 8005c2e:	6054      	str	r4, [r2, #4]
 8005c30:	e7ca      	b.n	8005bc8 <_free_r+0x24>
 8005c32:	46c0      	nop			; (mov r8, r8)
 8005c34:	200005ac 	.word	0x200005ac

08005c38 <sbrk_aligned>:
 8005c38:	b570      	push	{r4, r5, r6, lr}
 8005c3a:	4e0f      	ldr	r6, [pc, #60]	; (8005c78 <sbrk_aligned+0x40>)
 8005c3c:	000d      	movs	r5, r1
 8005c3e:	6831      	ldr	r1, [r6, #0]
 8005c40:	0004      	movs	r4, r0
 8005c42:	2900      	cmp	r1, #0
 8005c44:	d102      	bne.n	8005c4c <sbrk_aligned+0x14>
 8005c46:	f000 f9f1 	bl	800602c <_sbrk_r>
 8005c4a:	6030      	str	r0, [r6, #0]
 8005c4c:	0029      	movs	r1, r5
 8005c4e:	0020      	movs	r0, r4
 8005c50:	f000 f9ec 	bl	800602c <_sbrk_r>
 8005c54:	1c43      	adds	r3, r0, #1
 8005c56:	d00a      	beq.n	8005c6e <sbrk_aligned+0x36>
 8005c58:	2303      	movs	r3, #3
 8005c5a:	1cc5      	adds	r5, r0, #3
 8005c5c:	439d      	bics	r5, r3
 8005c5e:	42a8      	cmp	r0, r5
 8005c60:	d007      	beq.n	8005c72 <sbrk_aligned+0x3a>
 8005c62:	1a29      	subs	r1, r5, r0
 8005c64:	0020      	movs	r0, r4
 8005c66:	f000 f9e1 	bl	800602c <_sbrk_r>
 8005c6a:	1c43      	adds	r3, r0, #1
 8005c6c:	d101      	bne.n	8005c72 <sbrk_aligned+0x3a>
 8005c6e:	2501      	movs	r5, #1
 8005c70:	426d      	negs	r5, r5
 8005c72:	0028      	movs	r0, r5
 8005c74:	bd70      	pop	{r4, r5, r6, pc}
 8005c76:	46c0      	nop			; (mov r8, r8)
 8005c78:	200005b0 	.word	0x200005b0

08005c7c <_malloc_r>:
 8005c7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005c7e:	2203      	movs	r2, #3
 8005c80:	1ccb      	adds	r3, r1, #3
 8005c82:	4393      	bics	r3, r2
 8005c84:	3308      	adds	r3, #8
 8005c86:	0006      	movs	r6, r0
 8005c88:	001f      	movs	r7, r3
 8005c8a:	2b0c      	cmp	r3, #12
 8005c8c:	d232      	bcs.n	8005cf4 <_malloc_r+0x78>
 8005c8e:	270c      	movs	r7, #12
 8005c90:	42b9      	cmp	r1, r7
 8005c92:	d831      	bhi.n	8005cf8 <_malloc_r+0x7c>
 8005c94:	0030      	movs	r0, r6
 8005c96:	f000 fa2f 	bl	80060f8 <__malloc_lock>
 8005c9a:	4d32      	ldr	r5, [pc, #200]	; (8005d64 <_malloc_r+0xe8>)
 8005c9c:	682b      	ldr	r3, [r5, #0]
 8005c9e:	001c      	movs	r4, r3
 8005ca0:	2c00      	cmp	r4, #0
 8005ca2:	d12e      	bne.n	8005d02 <_malloc_r+0x86>
 8005ca4:	0039      	movs	r1, r7
 8005ca6:	0030      	movs	r0, r6
 8005ca8:	f7ff ffc6 	bl	8005c38 <sbrk_aligned>
 8005cac:	0004      	movs	r4, r0
 8005cae:	1c43      	adds	r3, r0, #1
 8005cb0:	d11e      	bne.n	8005cf0 <_malloc_r+0x74>
 8005cb2:	682c      	ldr	r4, [r5, #0]
 8005cb4:	0025      	movs	r5, r4
 8005cb6:	2d00      	cmp	r5, #0
 8005cb8:	d14a      	bne.n	8005d50 <_malloc_r+0xd4>
 8005cba:	6823      	ldr	r3, [r4, #0]
 8005cbc:	0029      	movs	r1, r5
 8005cbe:	18e3      	adds	r3, r4, r3
 8005cc0:	0030      	movs	r0, r6
 8005cc2:	9301      	str	r3, [sp, #4]
 8005cc4:	f000 f9b2 	bl	800602c <_sbrk_r>
 8005cc8:	9b01      	ldr	r3, [sp, #4]
 8005cca:	4283      	cmp	r3, r0
 8005ccc:	d143      	bne.n	8005d56 <_malloc_r+0xda>
 8005cce:	6823      	ldr	r3, [r4, #0]
 8005cd0:	3703      	adds	r7, #3
 8005cd2:	1aff      	subs	r7, r7, r3
 8005cd4:	2303      	movs	r3, #3
 8005cd6:	439f      	bics	r7, r3
 8005cd8:	3708      	adds	r7, #8
 8005cda:	2f0c      	cmp	r7, #12
 8005cdc:	d200      	bcs.n	8005ce0 <_malloc_r+0x64>
 8005cde:	270c      	movs	r7, #12
 8005ce0:	0039      	movs	r1, r7
 8005ce2:	0030      	movs	r0, r6
 8005ce4:	f7ff ffa8 	bl	8005c38 <sbrk_aligned>
 8005ce8:	1c43      	adds	r3, r0, #1
 8005cea:	d034      	beq.n	8005d56 <_malloc_r+0xda>
 8005cec:	6823      	ldr	r3, [r4, #0]
 8005cee:	19df      	adds	r7, r3, r7
 8005cf0:	6027      	str	r7, [r4, #0]
 8005cf2:	e013      	b.n	8005d1c <_malloc_r+0xa0>
 8005cf4:	2b00      	cmp	r3, #0
 8005cf6:	dacb      	bge.n	8005c90 <_malloc_r+0x14>
 8005cf8:	230c      	movs	r3, #12
 8005cfa:	2500      	movs	r5, #0
 8005cfc:	6033      	str	r3, [r6, #0]
 8005cfe:	0028      	movs	r0, r5
 8005d00:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005d02:	6822      	ldr	r2, [r4, #0]
 8005d04:	1bd1      	subs	r1, r2, r7
 8005d06:	d420      	bmi.n	8005d4a <_malloc_r+0xce>
 8005d08:	290b      	cmp	r1, #11
 8005d0a:	d917      	bls.n	8005d3c <_malloc_r+0xc0>
 8005d0c:	19e2      	adds	r2, r4, r7
 8005d0e:	6027      	str	r7, [r4, #0]
 8005d10:	42a3      	cmp	r3, r4
 8005d12:	d111      	bne.n	8005d38 <_malloc_r+0xbc>
 8005d14:	602a      	str	r2, [r5, #0]
 8005d16:	6863      	ldr	r3, [r4, #4]
 8005d18:	6011      	str	r1, [r2, #0]
 8005d1a:	6053      	str	r3, [r2, #4]
 8005d1c:	0030      	movs	r0, r6
 8005d1e:	0025      	movs	r5, r4
 8005d20:	f000 f9f2 	bl	8006108 <__malloc_unlock>
 8005d24:	2207      	movs	r2, #7
 8005d26:	350b      	adds	r5, #11
 8005d28:	1d23      	adds	r3, r4, #4
 8005d2a:	4395      	bics	r5, r2
 8005d2c:	1aea      	subs	r2, r5, r3
 8005d2e:	429d      	cmp	r5, r3
 8005d30:	d0e5      	beq.n	8005cfe <_malloc_r+0x82>
 8005d32:	1b5b      	subs	r3, r3, r5
 8005d34:	50a3      	str	r3, [r4, r2]
 8005d36:	e7e2      	b.n	8005cfe <_malloc_r+0x82>
 8005d38:	605a      	str	r2, [r3, #4]
 8005d3a:	e7ec      	b.n	8005d16 <_malloc_r+0x9a>
 8005d3c:	6862      	ldr	r2, [r4, #4]
 8005d3e:	42a3      	cmp	r3, r4
 8005d40:	d101      	bne.n	8005d46 <_malloc_r+0xca>
 8005d42:	602a      	str	r2, [r5, #0]
 8005d44:	e7ea      	b.n	8005d1c <_malloc_r+0xa0>
 8005d46:	605a      	str	r2, [r3, #4]
 8005d48:	e7e8      	b.n	8005d1c <_malloc_r+0xa0>
 8005d4a:	0023      	movs	r3, r4
 8005d4c:	6864      	ldr	r4, [r4, #4]
 8005d4e:	e7a7      	b.n	8005ca0 <_malloc_r+0x24>
 8005d50:	002c      	movs	r4, r5
 8005d52:	686d      	ldr	r5, [r5, #4]
 8005d54:	e7af      	b.n	8005cb6 <_malloc_r+0x3a>
 8005d56:	230c      	movs	r3, #12
 8005d58:	0030      	movs	r0, r6
 8005d5a:	6033      	str	r3, [r6, #0]
 8005d5c:	f000 f9d4 	bl	8006108 <__malloc_unlock>
 8005d60:	e7cd      	b.n	8005cfe <_malloc_r+0x82>
 8005d62:	46c0      	nop			; (mov r8, r8)
 8005d64:	200005ac 	.word	0x200005ac

08005d68 <__ssputs_r>:
 8005d68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d6a:	688e      	ldr	r6, [r1, #8]
 8005d6c:	b085      	sub	sp, #20
 8005d6e:	0007      	movs	r7, r0
 8005d70:	000c      	movs	r4, r1
 8005d72:	9203      	str	r2, [sp, #12]
 8005d74:	9301      	str	r3, [sp, #4]
 8005d76:	429e      	cmp	r6, r3
 8005d78:	d83c      	bhi.n	8005df4 <__ssputs_r+0x8c>
 8005d7a:	2390      	movs	r3, #144	; 0x90
 8005d7c:	898a      	ldrh	r2, [r1, #12]
 8005d7e:	00db      	lsls	r3, r3, #3
 8005d80:	421a      	tst	r2, r3
 8005d82:	d034      	beq.n	8005dee <__ssputs_r+0x86>
 8005d84:	6909      	ldr	r1, [r1, #16]
 8005d86:	6823      	ldr	r3, [r4, #0]
 8005d88:	6960      	ldr	r0, [r4, #20]
 8005d8a:	1a5b      	subs	r3, r3, r1
 8005d8c:	9302      	str	r3, [sp, #8]
 8005d8e:	2303      	movs	r3, #3
 8005d90:	4343      	muls	r3, r0
 8005d92:	0fdd      	lsrs	r5, r3, #31
 8005d94:	18ed      	adds	r5, r5, r3
 8005d96:	9b01      	ldr	r3, [sp, #4]
 8005d98:	9802      	ldr	r0, [sp, #8]
 8005d9a:	3301      	adds	r3, #1
 8005d9c:	181b      	adds	r3, r3, r0
 8005d9e:	106d      	asrs	r5, r5, #1
 8005da0:	42ab      	cmp	r3, r5
 8005da2:	d900      	bls.n	8005da6 <__ssputs_r+0x3e>
 8005da4:	001d      	movs	r5, r3
 8005da6:	0553      	lsls	r3, r2, #21
 8005da8:	d532      	bpl.n	8005e10 <__ssputs_r+0xa8>
 8005daa:	0029      	movs	r1, r5
 8005dac:	0038      	movs	r0, r7
 8005dae:	f7ff ff65 	bl	8005c7c <_malloc_r>
 8005db2:	1e06      	subs	r6, r0, #0
 8005db4:	d109      	bne.n	8005dca <__ssputs_r+0x62>
 8005db6:	230c      	movs	r3, #12
 8005db8:	603b      	str	r3, [r7, #0]
 8005dba:	2340      	movs	r3, #64	; 0x40
 8005dbc:	2001      	movs	r0, #1
 8005dbe:	89a2      	ldrh	r2, [r4, #12]
 8005dc0:	4240      	negs	r0, r0
 8005dc2:	4313      	orrs	r3, r2
 8005dc4:	81a3      	strh	r3, [r4, #12]
 8005dc6:	b005      	add	sp, #20
 8005dc8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005dca:	9a02      	ldr	r2, [sp, #8]
 8005dcc:	6921      	ldr	r1, [r4, #16]
 8005dce:	f7fd ffc1 	bl	8003d54 <memcpy>
 8005dd2:	89a3      	ldrh	r3, [r4, #12]
 8005dd4:	4a14      	ldr	r2, [pc, #80]	; (8005e28 <__ssputs_r+0xc0>)
 8005dd6:	401a      	ands	r2, r3
 8005dd8:	2380      	movs	r3, #128	; 0x80
 8005dda:	4313      	orrs	r3, r2
 8005ddc:	81a3      	strh	r3, [r4, #12]
 8005dde:	9b02      	ldr	r3, [sp, #8]
 8005de0:	6126      	str	r6, [r4, #16]
 8005de2:	18f6      	adds	r6, r6, r3
 8005de4:	6026      	str	r6, [r4, #0]
 8005de6:	6165      	str	r5, [r4, #20]
 8005de8:	9e01      	ldr	r6, [sp, #4]
 8005dea:	1aed      	subs	r5, r5, r3
 8005dec:	60a5      	str	r5, [r4, #8]
 8005dee:	9b01      	ldr	r3, [sp, #4]
 8005df0:	429e      	cmp	r6, r3
 8005df2:	d900      	bls.n	8005df6 <__ssputs_r+0x8e>
 8005df4:	9e01      	ldr	r6, [sp, #4]
 8005df6:	0032      	movs	r2, r6
 8005df8:	9903      	ldr	r1, [sp, #12]
 8005dfa:	6820      	ldr	r0, [r4, #0]
 8005dfc:	f000 f968 	bl	80060d0 <memmove>
 8005e00:	68a3      	ldr	r3, [r4, #8]
 8005e02:	2000      	movs	r0, #0
 8005e04:	1b9b      	subs	r3, r3, r6
 8005e06:	60a3      	str	r3, [r4, #8]
 8005e08:	6823      	ldr	r3, [r4, #0]
 8005e0a:	199e      	adds	r6, r3, r6
 8005e0c:	6026      	str	r6, [r4, #0]
 8005e0e:	e7da      	b.n	8005dc6 <__ssputs_r+0x5e>
 8005e10:	002a      	movs	r2, r5
 8005e12:	0038      	movs	r0, r7
 8005e14:	f000 f980 	bl	8006118 <_realloc_r>
 8005e18:	1e06      	subs	r6, r0, #0
 8005e1a:	d1e0      	bne.n	8005dde <__ssputs_r+0x76>
 8005e1c:	0038      	movs	r0, r7
 8005e1e:	6921      	ldr	r1, [r4, #16]
 8005e20:	f7ff fec0 	bl	8005ba4 <_free_r>
 8005e24:	e7c7      	b.n	8005db6 <__ssputs_r+0x4e>
 8005e26:	46c0      	nop			; (mov r8, r8)
 8005e28:	fffffb7f 	.word	0xfffffb7f

08005e2c <_svfiprintf_r>:
 8005e2c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005e2e:	b0a1      	sub	sp, #132	; 0x84
 8005e30:	9003      	str	r0, [sp, #12]
 8005e32:	001d      	movs	r5, r3
 8005e34:	898b      	ldrh	r3, [r1, #12]
 8005e36:	000f      	movs	r7, r1
 8005e38:	0016      	movs	r6, r2
 8005e3a:	061b      	lsls	r3, r3, #24
 8005e3c:	d511      	bpl.n	8005e62 <_svfiprintf_r+0x36>
 8005e3e:	690b      	ldr	r3, [r1, #16]
 8005e40:	2b00      	cmp	r3, #0
 8005e42:	d10e      	bne.n	8005e62 <_svfiprintf_r+0x36>
 8005e44:	2140      	movs	r1, #64	; 0x40
 8005e46:	f7ff ff19 	bl	8005c7c <_malloc_r>
 8005e4a:	6038      	str	r0, [r7, #0]
 8005e4c:	6138      	str	r0, [r7, #16]
 8005e4e:	2800      	cmp	r0, #0
 8005e50:	d105      	bne.n	8005e5e <_svfiprintf_r+0x32>
 8005e52:	230c      	movs	r3, #12
 8005e54:	9a03      	ldr	r2, [sp, #12]
 8005e56:	3801      	subs	r0, #1
 8005e58:	6013      	str	r3, [r2, #0]
 8005e5a:	b021      	add	sp, #132	; 0x84
 8005e5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005e5e:	2340      	movs	r3, #64	; 0x40
 8005e60:	617b      	str	r3, [r7, #20]
 8005e62:	2300      	movs	r3, #0
 8005e64:	ac08      	add	r4, sp, #32
 8005e66:	6163      	str	r3, [r4, #20]
 8005e68:	3320      	adds	r3, #32
 8005e6a:	7663      	strb	r3, [r4, #25]
 8005e6c:	3310      	adds	r3, #16
 8005e6e:	76a3      	strb	r3, [r4, #26]
 8005e70:	9507      	str	r5, [sp, #28]
 8005e72:	0035      	movs	r5, r6
 8005e74:	782b      	ldrb	r3, [r5, #0]
 8005e76:	2b00      	cmp	r3, #0
 8005e78:	d001      	beq.n	8005e7e <_svfiprintf_r+0x52>
 8005e7a:	2b25      	cmp	r3, #37	; 0x25
 8005e7c:	d147      	bne.n	8005f0e <_svfiprintf_r+0xe2>
 8005e7e:	1bab      	subs	r3, r5, r6
 8005e80:	9305      	str	r3, [sp, #20]
 8005e82:	42b5      	cmp	r5, r6
 8005e84:	d00c      	beq.n	8005ea0 <_svfiprintf_r+0x74>
 8005e86:	0032      	movs	r2, r6
 8005e88:	0039      	movs	r1, r7
 8005e8a:	9803      	ldr	r0, [sp, #12]
 8005e8c:	f7ff ff6c 	bl	8005d68 <__ssputs_r>
 8005e90:	1c43      	adds	r3, r0, #1
 8005e92:	d100      	bne.n	8005e96 <_svfiprintf_r+0x6a>
 8005e94:	e0ae      	b.n	8005ff4 <_svfiprintf_r+0x1c8>
 8005e96:	6962      	ldr	r2, [r4, #20]
 8005e98:	9b05      	ldr	r3, [sp, #20]
 8005e9a:	4694      	mov	ip, r2
 8005e9c:	4463      	add	r3, ip
 8005e9e:	6163      	str	r3, [r4, #20]
 8005ea0:	782b      	ldrb	r3, [r5, #0]
 8005ea2:	2b00      	cmp	r3, #0
 8005ea4:	d100      	bne.n	8005ea8 <_svfiprintf_r+0x7c>
 8005ea6:	e0a5      	b.n	8005ff4 <_svfiprintf_r+0x1c8>
 8005ea8:	2201      	movs	r2, #1
 8005eaa:	2300      	movs	r3, #0
 8005eac:	4252      	negs	r2, r2
 8005eae:	6062      	str	r2, [r4, #4]
 8005eb0:	a904      	add	r1, sp, #16
 8005eb2:	3254      	adds	r2, #84	; 0x54
 8005eb4:	1852      	adds	r2, r2, r1
 8005eb6:	1c6e      	adds	r6, r5, #1
 8005eb8:	6023      	str	r3, [r4, #0]
 8005eba:	60e3      	str	r3, [r4, #12]
 8005ebc:	60a3      	str	r3, [r4, #8]
 8005ebe:	7013      	strb	r3, [r2, #0]
 8005ec0:	65a3      	str	r3, [r4, #88]	; 0x58
 8005ec2:	2205      	movs	r2, #5
 8005ec4:	7831      	ldrb	r1, [r6, #0]
 8005ec6:	4854      	ldr	r0, [pc, #336]	; (8006018 <_svfiprintf_r+0x1ec>)
 8005ec8:	f7ff fa98 	bl	80053fc <memchr>
 8005ecc:	1c75      	adds	r5, r6, #1
 8005ece:	2800      	cmp	r0, #0
 8005ed0:	d11f      	bne.n	8005f12 <_svfiprintf_r+0xe6>
 8005ed2:	6822      	ldr	r2, [r4, #0]
 8005ed4:	06d3      	lsls	r3, r2, #27
 8005ed6:	d504      	bpl.n	8005ee2 <_svfiprintf_r+0xb6>
 8005ed8:	2353      	movs	r3, #83	; 0x53
 8005eda:	a904      	add	r1, sp, #16
 8005edc:	185b      	adds	r3, r3, r1
 8005ede:	2120      	movs	r1, #32
 8005ee0:	7019      	strb	r1, [r3, #0]
 8005ee2:	0713      	lsls	r3, r2, #28
 8005ee4:	d504      	bpl.n	8005ef0 <_svfiprintf_r+0xc4>
 8005ee6:	2353      	movs	r3, #83	; 0x53
 8005ee8:	a904      	add	r1, sp, #16
 8005eea:	185b      	adds	r3, r3, r1
 8005eec:	212b      	movs	r1, #43	; 0x2b
 8005eee:	7019      	strb	r1, [r3, #0]
 8005ef0:	7833      	ldrb	r3, [r6, #0]
 8005ef2:	2b2a      	cmp	r3, #42	; 0x2a
 8005ef4:	d016      	beq.n	8005f24 <_svfiprintf_r+0xf8>
 8005ef6:	0035      	movs	r5, r6
 8005ef8:	2100      	movs	r1, #0
 8005efa:	200a      	movs	r0, #10
 8005efc:	68e3      	ldr	r3, [r4, #12]
 8005efe:	782a      	ldrb	r2, [r5, #0]
 8005f00:	1c6e      	adds	r6, r5, #1
 8005f02:	3a30      	subs	r2, #48	; 0x30
 8005f04:	2a09      	cmp	r2, #9
 8005f06:	d94e      	bls.n	8005fa6 <_svfiprintf_r+0x17a>
 8005f08:	2900      	cmp	r1, #0
 8005f0a:	d111      	bne.n	8005f30 <_svfiprintf_r+0x104>
 8005f0c:	e017      	b.n	8005f3e <_svfiprintf_r+0x112>
 8005f0e:	3501      	adds	r5, #1
 8005f10:	e7b0      	b.n	8005e74 <_svfiprintf_r+0x48>
 8005f12:	4b41      	ldr	r3, [pc, #260]	; (8006018 <_svfiprintf_r+0x1ec>)
 8005f14:	6822      	ldr	r2, [r4, #0]
 8005f16:	1ac0      	subs	r0, r0, r3
 8005f18:	2301      	movs	r3, #1
 8005f1a:	4083      	lsls	r3, r0
 8005f1c:	4313      	orrs	r3, r2
 8005f1e:	002e      	movs	r6, r5
 8005f20:	6023      	str	r3, [r4, #0]
 8005f22:	e7ce      	b.n	8005ec2 <_svfiprintf_r+0x96>
 8005f24:	9b07      	ldr	r3, [sp, #28]
 8005f26:	1d19      	adds	r1, r3, #4
 8005f28:	681b      	ldr	r3, [r3, #0]
 8005f2a:	9107      	str	r1, [sp, #28]
 8005f2c:	2b00      	cmp	r3, #0
 8005f2e:	db01      	blt.n	8005f34 <_svfiprintf_r+0x108>
 8005f30:	930b      	str	r3, [sp, #44]	; 0x2c
 8005f32:	e004      	b.n	8005f3e <_svfiprintf_r+0x112>
 8005f34:	425b      	negs	r3, r3
 8005f36:	60e3      	str	r3, [r4, #12]
 8005f38:	2302      	movs	r3, #2
 8005f3a:	4313      	orrs	r3, r2
 8005f3c:	6023      	str	r3, [r4, #0]
 8005f3e:	782b      	ldrb	r3, [r5, #0]
 8005f40:	2b2e      	cmp	r3, #46	; 0x2e
 8005f42:	d10a      	bne.n	8005f5a <_svfiprintf_r+0x12e>
 8005f44:	786b      	ldrb	r3, [r5, #1]
 8005f46:	2b2a      	cmp	r3, #42	; 0x2a
 8005f48:	d135      	bne.n	8005fb6 <_svfiprintf_r+0x18a>
 8005f4a:	9b07      	ldr	r3, [sp, #28]
 8005f4c:	3502      	adds	r5, #2
 8005f4e:	1d1a      	adds	r2, r3, #4
 8005f50:	681b      	ldr	r3, [r3, #0]
 8005f52:	9207      	str	r2, [sp, #28]
 8005f54:	2b00      	cmp	r3, #0
 8005f56:	db2b      	blt.n	8005fb0 <_svfiprintf_r+0x184>
 8005f58:	9309      	str	r3, [sp, #36]	; 0x24
 8005f5a:	4e30      	ldr	r6, [pc, #192]	; (800601c <_svfiprintf_r+0x1f0>)
 8005f5c:	2203      	movs	r2, #3
 8005f5e:	0030      	movs	r0, r6
 8005f60:	7829      	ldrb	r1, [r5, #0]
 8005f62:	f7ff fa4b 	bl	80053fc <memchr>
 8005f66:	2800      	cmp	r0, #0
 8005f68:	d006      	beq.n	8005f78 <_svfiprintf_r+0x14c>
 8005f6a:	2340      	movs	r3, #64	; 0x40
 8005f6c:	1b80      	subs	r0, r0, r6
 8005f6e:	4083      	lsls	r3, r0
 8005f70:	6822      	ldr	r2, [r4, #0]
 8005f72:	3501      	adds	r5, #1
 8005f74:	4313      	orrs	r3, r2
 8005f76:	6023      	str	r3, [r4, #0]
 8005f78:	7829      	ldrb	r1, [r5, #0]
 8005f7a:	2206      	movs	r2, #6
 8005f7c:	4828      	ldr	r0, [pc, #160]	; (8006020 <_svfiprintf_r+0x1f4>)
 8005f7e:	1c6e      	adds	r6, r5, #1
 8005f80:	7621      	strb	r1, [r4, #24]
 8005f82:	f7ff fa3b 	bl	80053fc <memchr>
 8005f86:	2800      	cmp	r0, #0
 8005f88:	d03c      	beq.n	8006004 <_svfiprintf_r+0x1d8>
 8005f8a:	4b26      	ldr	r3, [pc, #152]	; (8006024 <_svfiprintf_r+0x1f8>)
 8005f8c:	2b00      	cmp	r3, #0
 8005f8e:	d125      	bne.n	8005fdc <_svfiprintf_r+0x1b0>
 8005f90:	2207      	movs	r2, #7
 8005f92:	9b07      	ldr	r3, [sp, #28]
 8005f94:	3307      	adds	r3, #7
 8005f96:	4393      	bics	r3, r2
 8005f98:	3308      	adds	r3, #8
 8005f9a:	9307      	str	r3, [sp, #28]
 8005f9c:	6963      	ldr	r3, [r4, #20]
 8005f9e:	9a04      	ldr	r2, [sp, #16]
 8005fa0:	189b      	adds	r3, r3, r2
 8005fa2:	6163      	str	r3, [r4, #20]
 8005fa4:	e765      	b.n	8005e72 <_svfiprintf_r+0x46>
 8005fa6:	4343      	muls	r3, r0
 8005fa8:	0035      	movs	r5, r6
 8005faa:	2101      	movs	r1, #1
 8005fac:	189b      	adds	r3, r3, r2
 8005fae:	e7a6      	b.n	8005efe <_svfiprintf_r+0xd2>
 8005fb0:	2301      	movs	r3, #1
 8005fb2:	425b      	negs	r3, r3
 8005fb4:	e7d0      	b.n	8005f58 <_svfiprintf_r+0x12c>
 8005fb6:	2300      	movs	r3, #0
 8005fb8:	200a      	movs	r0, #10
 8005fba:	001a      	movs	r2, r3
 8005fbc:	3501      	adds	r5, #1
 8005fbe:	6063      	str	r3, [r4, #4]
 8005fc0:	7829      	ldrb	r1, [r5, #0]
 8005fc2:	1c6e      	adds	r6, r5, #1
 8005fc4:	3930      	subs	r1, #48	; 0x30
 8005fc6:	2909      	cmp	r1, #9
 8005fc8:	d903      	bls.n	8005fd2 <_svfiprintf_r+0x1a6>
 8005fca:	2b00      	cmp	r3, #0
 8005fcc:	d0c5      	beq.n	8005f5a <_svfiprintf_r+0x12e>
 8005fce:	9209      	str	r2, [sp, #36]	; 0x24
 8005fd0:	e7c3      	b.n	8005f5a <_svfiprintf_r+0x12e>
 8005fd2:	4342      	muls	r2, r0
 8005fd4:	0035      	movs	r5, r6
 8005fd6:	2301      	movs	r3, #1
 8005fd8:	1852      	adds	r2, r2, r1
 8005fda:	e7f1      	b.n	8005fc0 <_svfiprintf_r+0x194>
 8005fdc:	ab07      	add	r3, sp, #28
 8005fde:	9300      	str	r3, [sp, #0]
 8005fe0:	003a      	movs	r2, r7
 8005fe2:	0021      	movs	r1, r4
 8005fe4:	4b10      	ldr	r3, [pc, #64]	; (8006028 <_svfiprintf_r+0x1fc>)
 8005fe6:	9803      	ldr	r0, [sp, #12]
 8005fe8:	f7fd ff70 	bl	8003ecc <_printf_float>
 8005fec:	9004      	str	r0, [sp, #16]
 8005fee:	9b04      	ldr	r3, [sp, #16]
 8005ff0:	3301      	adds	r3, #1
 8005ff2:	d1d3      	bne.n	8005f9c <_svfiprintf_r+0x170>
 8005ff4:	89bb      	ldrh	r3, [r7, #12]
 8005ff6:	980d      	ldr	r0, [sp, #52]	; 0x34
 8005ff8:	065b      	lsls	r3, r3, #25
 8005ffa:	d400      	bmi.n	8005ffe <_svfiprintf_r+0x1d2>
 8005ffc:	e72d      	b.n	8005e5a <_svfiprintf_r+0x2e>
 8005ffe:	2001      	movs	r0, #1
 8006000:	4240      	negs	r0, r0
 8006002:	e72a      	b.n	8005e5a <_svfiprintf_r+0x2e>
 8006004:	ab07      	add	r3, sp, #28
 8006006:	9300      	str	r3, [sp, #0]
 8006008:	003a      	movs	r2, r7
 800600a:	0021      	movs	r1, r4
 800600c:	4b06      	ldr	r3, [pc, #24]	; (8006028 <_svfiprintf_r+0x1fc>)
 800600e:	9803      	ldr	r0, [sp, #12]
 8006010:	f7fe fa0e 	bl	8004430 <_printf_i>
 8006014:	e7ea      	b.n	8005fec <_svfiprintf_r+0x1c0>
 8006016:	46c0      	nop			; (mov r8, r8)
 8006018:	08006ffc 	.word	0x08006ffc
 800601c:	08007002 	.word	0x08007002
 8006020:	08007006 	.word	0x08007006
 8006024:	08003ecd 	.word	0x08003ecd
 8006028:	08005d69 	.word	0x08005d69

0800602c <_sbrk_r>:
 800602c:	2300      	movs	r3, #0
 800602e:	b570      	push	{r4, r5, r6, lr}
 8006030:	4d06      	ldr	r5, [pc, #24]	; (800604c <_sbrk_r+0x20>)
 8006032:	0004      	movs	r4, r0
 8006034:	0008      	movs	r0, r1
 8006036:	602b      	str	r3, [r5, #0]
 8006038:	f7fc faec 	bl	8002614 <_sbrk>
 800603c:	1c43      	adds	r3, r0, #1
 800603e:	d103      	bne.n	8006048 <_sbrk_r+0x1c>
 8006040:	682b      	ldr	r3, [r5, #0]
 8006042:	2b00      	cmp	r3, #0
 8006044:	d000      	beq.n	8006048 <_sbrk_r+0x1c>
 8006046:	6023      	str	r3, [r4, #0]
 8006048:	bd70      	pop	{r4, r5, r6, pc}
 800604a:	46c0      	nop			; (mov r8, r8)
 800604c:	200005b4 	.word	0x200005b4

08006050 <__assert_func>:
 8006050:	b530      	push	{r4, r5, lr}
 8006052:	0014      	movs	r4, r2
 8006054:	001a      	movs	r2, r3
 8006056:	4b09      	ldr	r3, [pc, #36]	; (800607c <__assert_func+0x2c>)
 8006058:	0005      	movs	r5, r0
 800605a:	681b      	ldr	r3, [r3, #0]
 800605c:	b085      	sub	sp, #20
 800605e:	68d8      	ldr	r0, [r3, #12]
 8006060:	4b07      	ldr	r3, [pc, #28]	; (8006080 <__assert_func+0x30>)
 8006062:	2c00      	cmp	r4, #0
 8006064:	d101      	bne.n	800606a <__assert_func+0x1a>
 8006066:	4b07      	ldr	r3, [pc, #28]	; (8006084 <__assert_func+0x34>)
 8006068:	001c      	movs	r4, r3
 800606a:	9301      	str	r3, [sp, #4]
 800606c:	9100      	str	r1, [sp, #0]
 800606e:	002b      	movs	r3, r5
 8006070:	4905      	ldr	r1, [pc, #20]	; (8006088 <__assert_func+0x38>)
 8006072:	9402      	str	r4, [sp, #8]
 8006074:	f000 f80a 	bl	800608c <fiprintf>
 8006078:	f000 faba 	bl	80065f0 <abort>
 800607c:	20000014 	.word	0x20000014
 8006080:	0800700d 	.word	0x0800700d
 8006084:	08007048 	.word	0x08007048
 8006088:	0800701a 	.word	0x0800701a

0800608c <fiprintf>:
 800608c:	b40e      	push	{r1, r2, r3}
 800608e:	b503      	push	{r0, r1, lr}
 8006090:	0001      	movs	r1, r0
 8006092:	ab03      	add	r3, sp, #12
 8006094:	4804      	ldr	r0, [pc, #16]	; (80060a8 <fiprintf+0x1c>)
 8006096:	cb04      	ldmia	r3!, {r2}
 8006098:	6800      	ldr	r0, [r0, #0]
 800609a:	9301      	str	r3, [sp, #4]
 800609c:	f000 f892 	bl	80061c4 <_vfiprintf_r>
 80060a0:	b002      	add	sp, #8
 80060a2:	bc08      	pop	{r3}
 80060a4:	b003      	add	sp, #12
 80060a6:	4718      	bx	r3
 80060a8:	20000014 	.word	0x20000014

080060ac <__ascii_mbtowc>:
 80060ac:	b082      	sub	sp, #8
 80060ae:	2900      	cmp	r1, #0
 80060b0:	d100      	bne.n	80060b4 <__ascii_mbtowc+0x8>
 80060b2:	a901      	add	r1, sp, #4
 80060b4:	1e10      	subs	r0, r2, #0
 80060b6:	d006      	beq.n	80060c6 <__ascii_mbtowc+0x1a>
 80060b8:	2b00      	cmp	r3, #0
 80060ba:	d006      	beq.n	80060ca <__ascii_mbtowc+0x1e>
 80060bc:	7813      	ldrb	r3, [r2, #0]
 80060be:	600b      	str	r3, [r1, #0]
 80060c0:	7810      	ldrb	r0, [r2, #0]
 80060c2:	1e43      	subs	r3, r0, #1
 80060c4:	4198      	sbcs	r0, r3
 80060c6:	b002      	add	sp, #8
 80060c8:	4770      	bx	lr
 80060ca:	2002      	movs	r0, #2
 80060cc:	4240      	negs	r0, r0
 80060ce:	e7fa      	b.n	80060c6 <__ascii_mbtowc+0x1a>

080060d0 <memmove>:
 80060d0:	b510      	push	{r4, lr}
 80060d2:	4288      	cmp	r0, r1
 80060d4:	d902      	bls.n	80060dc <memmove+0xc>
 80060d6:	188b      	adds	r3, r1, r2
 80060d8:	4298      	cmp	r0, r3
 80060da:	d303      	bcc.n	80060e4 <memmove+0x14>
 80060dc:	2300      	movs	r3, #0
 80060de:	e007      	b.n	80060f0 <memmove+0x20>
 80060e0:	5c8b      	ldrb	r3, [r1, r2]
 80060e2:	5483      	strb	r3, [r0, r2]
 80060e4:	3a01      	subs	r2, #1
 80060e6:	d2fb      	bcs.n	80060e0 <memmove+0x10>
 80060e8:	bd10      	pop	{r4, pc}
 80060ea:	5ccc      	ldrb	r4, [r1, r3]
 80060ec:	54c4      	strb	r4, [r0, r3]
 80060ee:	3301      	adds	r3, #1
 80060f0:	429a      	cmp	r2, r3
 80060f2:	d1fa      	bne.n	80060ea <memmove+0x1a>
 80060f4:	e7f8      	b.n	80060e8 <memmove+0x18>
	...

080060f8 <__malloc_lock>:
 80060f8:	b510      	push	{r4, lr}
 80060fa:	4802      	ldr	r0, [pc, #8]	; (8006104 <__malloc_lock+0xc>)
 80060fc:	f000 fc4f 	bl	800699e <__retarget_lock_acquire_recursive>
 8006100:	bd10      	pop	{r4, pc}
 8006102:	46c0      	nop			; (mov r8, r8)
 8006104:	200005b8 	.word	0x200005b8

08006108 <__malloc_unlock>:
 8006108:	b510      	push	{r4, lr}
 800610a:	4802      	ldr	r0, [pc, #8]	; (8006114 <__malloc_unlock+0xc>)
 800610c:	f000 fc48 	bl	80069a0 <__retarget_lock_release_recursive>
 8006110:	bd10      	pop	{r4, pc}
 8006112:	46c0      	nop			; (mov r8, r8)
 8006114:	200005b8 	.word	0x200005b8

08006118 <_realloc_r>:
 8006118:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800611a:	0007      	movs	r7, r0
 800611c:	000e      	movs	r6, r1
 800611e:	0014      	movs	r4, r2
 8006120:	2900      	cmp	r1, #0
 8006122:	d105      	bne.n	8006130 <_realloc_r+0x18>
 8006124:	0011      	movs	r1, r2
 8006126:	f7ff fda9 	bl	8005c7c <_malloc_r>
 800612a:	0005      	movs	r5, r0
 800612c:	0028      	movs	r0, r5
 800612e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006130:	2a00      	cmp	r2, #0
 8006132:	d103      	bne.n	800613c <_realloc_r+0x24>
 8006134:	f7ff fd36 	bl	8005ba4 <_free_r>
 8006138:	0025      	movs	r5, r4
 800613a:	e7f7      	b.n	800612c <_realloc_r+0x14>
 800613c:	f000 fc9e 	bl	8006a7c <_malloc_usable_size_r>
 8006140:	9001      	str	r0, [sp, #4]
 8006142:	4284      	cmp	r4, r0
 8006144:	d803      	bhi.n	800614e <_realloc_r+0x36>
 8006146:	0035      	movs	r5, r6
 8006148:	0843      	lsrs	r3, r0, #1
 800614a:	42a3      	cmp	r3, r4
 800614c:	d3ee      	bcc.n	800612c <_realloc_r+0x14>
 800614e:	0021      	movs	r1, r4
 8006150:	0038      	movs	r0, r7
 8006152:	f7ff fd93 	bl	8005c7c <_malloc_r>
 8006156:	1e05      	subs	r5, r0, #0
 8006158:	d0e8      	beq.n	800612c <_realloc_r+0x14>
 800615a:	9b01      	ldr	r3, [sp, #4]
 800615c:	0022      	movs	r2, r4
 800615e:	429c      	cmp	r4, r3
 8006160:	d900      	bls.n	8006164 <_realloc_r+0x4c>
 8006162:	001a      	movs	r2, r3
 8006164:	0031      	movs	r1, r6
 8006166:	0028      	movs	r0, r5
 8006168:	f7fd fdf4 	bl	8003d54 <memcpy>
 800616c:	0031      	movs	r1, r6
 800616e:	0038      	movs	r0, r7
 8006170:	f7ff fd18 	bl	8005ba4 <_free_r>
 8006174:	e7da      	b.n	800612c <_realloc_r+0x14>

08006176 <__sfputc_r>:
 8006176:	6893      	ldr	r3, [r2, #8]
 8006178:	b510      	push	{r4, lr}
 800617a:	3b01      	subs	r3, #1
 800617c:	6093      	str	r3, [r2, #8]
 800617e:	2b00      	cmp	r3, #0
 8006180:	da04      	bge.n	800618c <__sfputc_r+0x16>
 8006182:	6994      	ldr	r4, [r2, #24]
 8006184:	42a3      	cmp	r3, r4
 8006186:	db07      	blt.n	8006198 <__sfputc_r+0x22>
 8006188:	290a      	cmp	r1, #10
 800618a:	d005      	beq.n	8006198 <__sfputc_r+0x22>
 800618c:	6813      	ldr	r3, [r2, #0]
 800618e:	1c58      	adds	r0, r3, #1
 8006190:	6010      	str	r0, [r2, #0]
 8006192:	7019      	strb	r1, [r3, #0]
 8006194:	0008      	movs	r0, r1
 8006196:	bd10      	pop	{r4, pc}
 8006198:	f000 f94e 	bl	8006438 <__swbuf_r>
 800619c:	0001      	movs	r1, r0
 800619e:	e7f9      	b.n	8006194 <__sfputc_r+0x1e>

080061a0 <__sfputs_r>:
 80061a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80061a2:	0006      	movs	r6, r0
 80061a4:	000f      	movs	r7, r1
 80061a6:	0014      	movs	r4, r2
 80061a8:	18d5      	adds	r5, r2, r3
 80061aa:	42ac      	cmp	r4, r5
 80061ac:	d101      	bne.n	80061b2 <__sfputs_r+0x12>
 80061ae:	2000      	movs	r0, #0
 80061b0:	e007      	b.n	80061c2 <__sfputs_r+0x22>
 80061b2:	7821      	ldrb	r1, [r4, #0]
 80061b4:	003a      	movs	r2, r7
 80061b6:	0030      	movs	r0, r6
 80061b8:	f7ff ffdd 	bl	8006176 <__sfputc_r>
 80061bc:	3401      	adds	r4, #1
 80061be:	1c43      	adds	r3, r0, #1
 80061c0:	d1f3      	bne.n	80061aa <__sfputs_r+0xa>
 80061c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080061c4 <_vfiprintf_r>:
 80061c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80061c6:	b0a1      	sub	sp, #132	; 0x84
 80061c8:	0006      	movs	r6, r0
 80061ca:	000c      	movs	r4, r1
 80061cc:	001f      	movs	r7, r3
 80061ce:	9203      	str	r2, [sp, #12]
 80061d0:	2800      	cmp	r0, #0
 80061d2:	d004      	beq.n	80061de <_vfiprintf_r+0x1a>
 80061d4:	6983      	ldr	r3, [r0, #24]
 80061d6:	2b00      	cmp	r3, #0
 80061d8:	d101      	bne.n	80061de <_vfiprintf_r+0x1a>
 80061da:	f000 fb3f 	bl	800685c <__sinit>
 80061de:	4b8e      	ldr	r3, [pc, #568]	; (8006418 <_vfiprintf_r+0x254>)
 80061e0:	429c      	cmp	r4, r3
 80061e2:	d11c      	bne.n	800621e <_vfiprintf_r+0x5a>
 80061e4:	6874      	ldr	r4, [r6, #4]
 80061e6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80061e8:	07db      	lsls	r3, r3, #31
 80061ea:	d405      	bmi.n	80061f8 <_vfiprintf_r+0x34>
 80061ec:	89a3      	ldrh	r3, [r4, #12]
 80061ee:	059b      	lsls	r3, r3, #22
 80061f0:	d402      	bmi.n	80061f8 <_vfiprintf_r+0x34>
 80061f2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80061f4:	f000 fbd3 	bl	800699e <__retarget_lock_acquire_recursive>
 80061f8:	89a3      	ldrh	r3, [r4, #12]
 80061fa:	071b      	lsls	r3, r3, #28
 80061fc:	d502      	bpl.n	8006204 <_vfiprintf_r+0x40>
 80061fe:	6923      	ldr	r3, [r4, #16]
 8006200:	2b00      	cmp	r3, #0
 8006202:	d11d      	bne.n	8006240 <_vfiprintf_r+0x7c>
 8006204:	0021      	movs	r1, r4
 8006206:	0030      	movs	r0, r6
 8006208:	f000 f97a 	bl	8006500 <__swsetup_r>
 800620c:	2800      	cmp	r0, #0
 800620e:	d017      	beq.n	8006240 <_vfiprintf_r+0x7c>
 8006210:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006212:	07db      	lsls	r3, r3, #31
 8006214:	d50d      	bpl.n	8006232 <_vfiprintf_r+0x6e>
 8006216:	2001      	movs	r0, #1
 8006218:	4240      	negs	r0, r0
 800621a:	b021      	add	sp, #132	; 0x84
 800621c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800621e:	4b7f      	ldr	r3, [pc, #508]	; (800641c <_vfiprintf_r+0x258>)
 8006220:	429c      	cmp	r4, r3
 8006222:	d101      	bne.n	8006228 <_vfiprintf_r+0x64>
 8006224:	68b4      	ldr	r4, [r6, #8]
 8006226:	e7de      	b.n	80061e6 <_vfiprintf_r+0x22>
 8006228:	4b7d      	ldr	r3, [pc, #500]	; (8006420 <_vfiprintf_r+0x25c>)
 800622a:	429c      	cmp	r4, r3
 800622c:	d1db      	bne.n	80061e6 <_vfiprintf_r+0x22>
 800622e:	68f4      	ldr	r4, [r6, #12]
 8006230:	e7d9      	b.n	80061e6 <_vfiprintf_r+0x22>
 8006232:	89a3      	ldrh	r3, [r4, #12]
 8006234:	059b      	lsls	r3, r3, #22
 8006236:	d4ee      	bmi.n	8006216 <_vfiprintf_r+0x52>
 8006238:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800623a:	f000 fbb1 	bl	80069a0 <__retarget_lock_release_recursive>
 800623e:	e7ea      	b.n	8006216 <_vfiprintf_r+0x52>
 8006240:	2300      	movs	r3, #0
 8006242:	ad08      	add	r5, sp, #32
 8006244:	616b      	str	r3, [r5, #20]
 8006246:	3320      	adds	r3, #32
 8006248:	766b      	strb	r3, [r5, #25]
 800624a:	3310      	adds	r3, #16
 800624c:	76ab      	strb	r3, [r5, #26]
 800624e:	9707      	str	r7, [sp, #28]
 8006250:	9f03      	ldr	r7, [sp, #12]
 8006252:	783b      	ldrb	r3, [r7, #0]
 8006254:	2b00      	cmp	r3, #0
 8006256:	d001      	beq.n	800625c <_vfiprintf_r+0x98>
 8006258:	2b25      	cmp	r3, #37	; 0x25
 800625a:	d14e      	bne.n	80062fa <_vfiprintf_r+0x136>
 800625c:	9b03      	ldr	r3, [sp, #12]
 800625e:	1afb      	subs	r3, r7, r3
 8006260:	9305      	str	r3, [sp, #20]
 8006262:	9b03      	ldr	r3, [sp, #12]
 8006264:	429f      	cmp	r7, r3
 8006266:	d00d      	beq.n	8006284 <_vfiprintf_r+0xc0>
 8006268:	9b05      	ldr	r3, [sp, #20]
 800626a:	0021      	movs	r1, r4
 800626c:	0030      	movs	r0, r6
 800626e:	9a03      	ldr	r2, [sp, #12]
 8006270:	f7ff ff96 	bl	80061a0 <__sfputs_r>
 8006274:	1c43      	adds	r3, r0, #1
 8006276:	d100      	bne.n	800627a <_vfiprintf_r+0xb6>
 8006278:	e0b5      	b.n	80063e6 <_vfiprintf_r+0x222>
 800627a:	696a      	ldr	r2, [r5, #20]
 800627c:	9b05      	ldr	r3, [sp, #20]
 800627e:	4694      	mov	ip, r2
 8006280:	4463      	add	r3, ip
 8006282:	616b      	str	r3, [r5, #20]
 8006284:	783b      	ldrb	r3, [r7, #0]
 8006286:	2b00      	cmp	r3, #0
 8006288:	d100      	bne.n	800628c <_vfiprintf_r+0xc8>
 800628a:	e0ac      	b.n	80063e6 <_vfiprintf_r+0x222>
 800628c:	2201      	movs	r2, #1
 800628e:	1c7b      	adds	r3, r7, #1
 8006290:	9303      	str	r3, [sp, #12]
 8006292:	2300      	movs	r3, #0
 8006294:	4252      	negs	r2, r2
 8006296:	606a      	str	r2, [r5, #4]
 8006298:	a904      	add	r1, sp, #16
 800629a:	3254      	adds	r2, #84	; 0x54
 800629c:	1852      	adds	r2, r2, r1
 800629e:	602b      	str	r3, [r5, #0]
 80062a0:	60eb      	str	r3, [r5, #12]
 80062a2:	60ab      	str	r3, [r5, #8]
 80062a4:	7013      	strb	r3, [r2, #0]
 80062a6:	65ab      	str	r3, [r5, #88]	; 0x58
 80062a8:	9b03      	ldr	r3, [sp, #12]
 80062aa:	2205      	movs	r2, #5
 80062ac:	7819      	ldrb	r1, [r3, #0]
 80062ae:	485d      	ldr	r0, [pc, #372]	; (8006424 <_vfiprintf_r+0x260>)
 80062b0:	f7ff f8a4 	bl	80053fc <memchr>
 80062b4:	9b03      	ldr	r3, [sp, #12]
 80062b6:	1c5f      	adds	r7, r3, #1
 80062b8:	2800      	cmp	r0, #0
 80062ba:	d120      	bne.n	80062fe <_vfiprintf_r+0x13a>
 80062bc:	682a      	ldr	r2, [r5, #0]
 80062be:	06d3      	lsls	r3, r2, #27
 80062c0:	d504      	bpl.n	80062cc <_vfiprintf_r+0x108>
 80062c2:	2353      	movs	r3, #83	; 0x53
 80062c4:	a904      	add	r1, sp, #16
 80062c6:	185b      	adds	r3, r3, r1
 80062c8:	2120      	movs	r1, #32
 80062ca:	7019      	strb	r1, [r3, #0]
 80062cc:	0713      	lsls	r3, r2, #28
 80062ce:	d504      	bpl.n	80062da <_vfiprintf_r+0x116>
 80062d0:	2353      	movs	r3, #83	; 0x53
 80062d2:	a904      	add	r1, sp, #16
 80062d4:	185b      	adds	r3, r3, r1
 80062d6:	212b      	movs	r1, #43	; 0x2b
 80062d8:	7019      	strb	r1, [r3, #0]
 80062da:	9b03      	ldr	r3, [sp, #12]
 80062dc:	781b      	ldrb	r3, [r3, #0]
 80062de:	2b2a      	cmp	r3, #42	; 0x2a
 80062e0:	d016      	beq.n	8006310 <_vfiprintf_r+0x14c>
 80062e2:	2100      	movs	r1, #0
 80062e4:	68eb      	ldr	r3, [r5, #12]
 80062e6:	9f03      	ldr	r7, [sp, #12]
 80062e8:	783a      	ldrb	r2, [r7, #0]
 80062ea:	1c78      	adds	r0, r7, #1
 80062ec:	3a30      	subs	r2, #48	; 0x30
 80062ee:	4684      	mov	ip, r0
 80062f0:	2a09      	cmp	r2, #9
 80062f2:	d94f      	bls.n	8006394 <_vfiprintf_r+0x1d0>
 80062f4:	2900      	cmp	r1, #0
 80062f6:	d111      	bne.n	800631c <_vfiprintf_r+0x158>
 80062f8:	e017      	b.n	800632a <_vfiprintf_r+0x166>
 80062fa:	3701      	adds	r7, #1
 80062fc:	e7a9      	b.n	8006252 <_vfiprintf_r+0x8e>
 80062fe:	4b49      	ldr	r3, [pc, #292]	; (8006424 <_vfiprintf_r+0x260>)
 8006300:	682a      	ldr	r2, [r5, #0]
 8006302:	1ac0      	subs	r0, r0, r3
 8006304:	2301      	movs	r3, #1
 8006306:	4083      	lsls	r3, r0
 8006308:	4313      	orrs	r3, r2
 800630a:	602b      	str	r3, [r5, #0]
 800630c:	9703      	str	r7, [sp, #12]
 800630e:	e7cb      	b.n	80062a8 <_vfiprintf_r+0xe4>
 8006310:	9b07      	ldr	r3, [sp, #28]
 8006312:	1d19      	adds	r1, r3, #4
 8006314:	681b      	ldr	r3, [r3, #0]
 8006316:	9107      	str	r1, [sp, #28]
 8006318:	2b00      	cmp	r3, #0
 800631a:	db01      	blt.n	8006320 <_vfiprintf_r+0x15c>
 800631c:	930b      	str	r3, [sp, #44]	; 0x2c
 800631e:	e004      	b.n	800632a <_vfiprintf_r+0x166>
 8006320:	425b      	negs	r3, r3
 8006322:	60eb      	str	r3, [r5, #12]
 8006324:	2302      	movs	r3, #2
 8006326:	4313      	orrs	r3, r2
 8006328:	602b      	str	r3, [r5, #0]
 800632a:	783b      	ldrb	r3, [r7, #0]
 800632c:	2b2e      	cmp	r3, #46	; 0x2e
 800632e:	d10a      	bne.n	8006346 <_vfiprintf_r+0x182>
 8006330:	787b      	ldrb	r3, [r7, #1]
 8006332:	2b2a      	cmp	r3, #42	; 0x2a
 8006334:	d137      	bne.n	80063a6 <_vfiprintf_r+0x1e2>
 8006336:	9b07      	ldr	r3, [sp, #28]
 8006338:	3702      	adds	r7, #2
 800633a:	1d1a      	adds	r2, r3, #4
 800633c:	681b      	ldr	r3, [r3, #0]
 800633e:	9207      	str	r2, [sp, #28]
 8006340:	2b00      	cmp	r3, #0
 8006342:	db2d      	blt.n	80063a0 <_vfiprintf_r+0x1dc>
 8006344:	9309      	str	r3, [sp, #36]	; 0x24
 8006346:	2203      	movs	r2, #3
 8006348:	7839      	ldrb	r1, [r7, #0]
 800634a:	4837      	ldr	r0, [pc, #220]	; (8006428 <_vfiprintf_r+0x264>)
 800634c:	f7ff f856 	bl	80053fc <memchr>
 8006350:	2800      	cmp	r0, #0
 8006352:	d007      	beq.n	8006364 <_vfiprintf_r+0x1a0>
 8006354:	4b34      	ldr	r3, [pc, #208]	; (8006428 <_vfiprintf_r+0x264>)
 8006356:	682a      	ldr	r2, [r5, #0]
 8006358:	1ac0      	subs	r0, r0, r3
 800635a:	2340      	movs	r3, #64	; 0x40
 800635c:	4083      	lsls	r3, r0
 800635e:	4313      	orrs	r3, r2
 8006360:	3701      	adds	r7, #1
 8006362:	602b      	str	r3, [r5, #0]
 8006364:	7839      	ldrb	r1, [r7, #0]
 8006366:	1c7b      	adds	r3, r7, #1
 8006368:	2206      	movs	r2, #6
 800636a:	4830      	ldr	r0, [pc, #192]	; (800642c <_vfiprintf_r+0x268>)
 800636c:	9303      	str	r3, [sp, #12]
 800636e:	7629      	strb	r1, [r5, #24]
 8006370:	f7ff f844 	bl	80053fc <memchr>
 8006374:	2800      	cmp	r0, #0
 8006376:	d045      	beq.n	8006404 <_vfiprintf_r+0x240>
 8006378:	4b2d      	ldr	r3, [pc, #180]	; (8006430 <_vfiprintf_r+0x26c>)
 800637a:	2b00      	cmp	r3, #0
 800637c:	d127      	bne.n	80063ce <_vfiprintf_r+0x20a>
 800637e:	2207      	movs	r2, #7
 8006380:	9b07      	ldr	r3, [sp, #28]
 8006382:	3307      	adds	r3, #7
 8006384:	4393      	bics	r3, r2
 8006386:	3308      	adds	r3, #8
 8006388:	9307      	str	r3, [sp, #28]
 800638a:	696b      	ldr	r3, [r5, #20]
 800638c:	9a04      	ldr	r2, [sp, #16]
 800638e:	189b      	adds	r3, r3, r2
 8006390:	616b      	str	r3, [r5, #20]
 8006392:	e75d      	b.n	8006250 <_vfiprintf_r+0x8c>
 8006394:	210a      	movs	r1, #10
 8006396:	434b      	muls	r3, r1
 8006398:	4667      	mov	r7, ip
 800639a:	189b      	adds	r3, r3, r2
 800639c:	3909      	subs	r1, #9
 800639e:	e7a3      	b.n	80062e8 <_vfiprintf_r+0x124>
 80063a0:	2301      	movs	r3, #1
 80063a2:	425b      	negs	r3, r3
 80063a4:	e7ce      	b.n	8006344 <_vfiprintf_r+0x180>
 80063a6:	2300      	movs	r3, #0
 80063a8:	001a      	movs	r2, r3
 80063aa:	3701      	adds	r7, #1
 80063ac:	606b      	str	r3, [r5, #4]
 80063ae:	7839      	ldrb	r1, [r7, #0]
 80063b0:	1c78      	adds	r0, r7, #1
 80063b2:	3930      	subs	r1, #48	; 0x30
 80063b4:	4684      	mov	ip, r0
 80063b6:	2909      	cmp	r1, #9
 80063b8:	d903      	bls.n	80063c2 <_vfiprintf_r+0x1fe>
 80063ba:	2b00      	cmp	r3, #0
 80063bc:	d0c3      	beq.n	8006346 <_vfiprintf_r+0x182>
 80063be:	9209      	str	r2, [sp, #36]	; 0x24
 80063c0:	e7c1      	b.n	8006346 <_vfiprintf_r+0x182>
 80063c2:	230a      	movs	r3, #10
 80063c4:	435a      	muls	r2, r3
 80063c6:	4667      	mov	r7, ip
 80063c8:	1852      	adds	r2, r2, r1
 80063ca:	3b09      	subs	r3, #9
 80063cc:	e7ef      	b.n	80063ae <_vfiprintf_r+0x1ea>
 80063ce:	ab07      	add	r3, sp, #28
 80063d0:	9300      	str	r3, [sp, #0]
 80063d2:	0022      	movs	r2, r4
 80063d4:	0029      	movs	r1, r5
 80063d6:	0030      	movs	r0, r6
 80063d8:	4b16      	ldr	r3, [pc, #88]	; (8006434 <_vfiprintf_r+0x270>)
 80063da:	f7fd fd77 	bl	8003ecc <_printf_float>
 80063de:	9004      	str	r0, [sp, #16]
 80063e0:	9b04      	ldr	r3, [sp, #16]
 80063e2:	3301      	adds	r3, #1
 80063e4:	d1d1      	bne.n	800638a <_vfiprintf_r+0x1c6>
 80063e6:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80063e8:	07db      	lsls	r3, r3, #31
 80063ea:	d405      	bmi.n	80063f8 <_vfiprintf_r+0x234>
 80063ec:	89a3      	ldrh	r3, [r4, #12]
 80063ee:	059b      	lsls	r3, r3, #22
 80063f0:	d402      	bmi.n	80063f8 <_vfiprintf_r+0x234>
 80063f2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80063f4:	f000 fad4 	bl	80069a0 <__retarget_lock_release_recursive>
 80063f8:	89a3      	ldrh	r3, [r4, #12]
 80063fa:	065b      	lsls	r3, r3, #25
 80063fc:	d500      	bpl.n	8006400 <_vfiprintf_r+0x23c>
 80063fe:	e70a      	b.n	8006216 <_vfiprintf_r+0x52>
 8006400:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006402:	e70a      	b.n	800621a <_vfiprintf_r+0x56>
 8006404:	ab07      	add	r3, sp, #28
 8006406:	9300      	str	r3, [sp, #0]
 8006408:	0022      	movs	r2, r4
 800640a:	0029      	movs	r1, r5
 800640c:	0030      	movs	r0, r6
 800640e:	4b09      	ldr	r3, [pc, #36]	; (8006434 <_vfiprintf_r+0x270>)
 8006410:	f7fe f80e 	bl	8004430 <_printf_i>
 8006414:	e7e3      	b.n	80063de <_vfiprintf_r+0x21a>
 8006416:	46c0      	nop			; (mov r8, r8)
 8006418:	08007174 	.word	0x08007174
 800641c:	08007194 	.word	0x08007194
 8006420:	08007154 	.word	0x08007154
 8006424:	08006ffc 	.word	0x08006ffc
 8006428:	08007002 	.word	0x08007002
 800642c:	08007006 	.word	0x08007006
 8006430:	08003ecd 	.word	0x08003ecd
 8006434:	080061a1 	.word	0x080061a1

08006438 <__swbuf_r>:
 8006438:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800643a:	0005      	movs	r5, r0
 800643c:	000e      	movs	r6, r1
 800643e:	0014      	movs	r4, r2
 8006440:	2800      	cmp	r0, #0
 8006442:	d004      	beq.n	800644e <__swbuf_r+0x16>
 8006444:	6983      	ldr	r3, [r0, #24]
 8006446:	2b00      	cmp	r3, #0
 8006448:	d101      	bne.n	800644e <__swbuf_r+0x16>
 800644a:	f000 fa07 	bl	800685c <__sinit>
 800644e:	4b22      	ldr	r3, [pc, #136]	; (80064d8 <__swbuf_r+0xa0>)
 8006450:	429c      	cmp	r4, r3
 8006452:	d12e      	bne.n	80064b2 <__swbuf_r+0x7a>
 8006454:	686c      	ldr	r4, [r5, #4]
 8006456:	69a3      	ldr	r3, [r4, #24]
 8006458:	60a3      	str	r3, [r4, #8]
 800645a:	89a3      	ldrh	r3, [r4, #12]
 800645c:	071b      	lsls	r3, r3, #28
 800645e:	d532      	bpl.n	80064c6 <__swbuf_r+0x8e>
 8006460:	6923      	ldr	r3, [r4, #16]
 8006462:	2b00      	cmp	r3, #0
 8006464:	d02f      	beq.n	80064c6 <__swbuf_r+0x8e>
 8006466:	6823      	ldr	r3, [r4, #0]
 8006468:	6922      	ldr	r2, [r4, #16]
 800646a:	b2f7      	uxtb	r7, r6
 800646c:	1a98      	subs	r0, r3, r2
 800646e:	6963      	ldr	r3, [r4, #20]
 8006470:	b2f6      	uxtb	r6, r6
 8006472:	4283      	cmp	r3, r0
 8006474:	dc05      	bgt.n	8006482 <__swbuf_r+0x4a>
 8006476:	0021      	movs	r1, r4
 8006478:	0028      	movs	r0, r5
 800647a:	f000 f94d 	bl	8006718 <_fflush_r>
 800647e:	2800      	cmp	r0, #0
 8006480:	d127      	bne.n	80064d2 <__swbuf_r+0x9a>
 8006482:	68a3      	ldr	r3, [r4, #8]
 8006484:	3001      	adds	r0, #1
 8006486:	3b01      	subs	r3, #1
 8006488:	60a3      	str	r3, [r4, #8]
 800648a:	6823      	ldr	r3, [r4, #0]
 800648c:	1c5a      	adds	r2, r3, #1
 800648e:	6022      	str	r2, [r4, #0]
 8006490:	701f      	strb	r7, [r3, #0]
 8006492:	6963      	ldr	r3, [r4, #20]
 8006494:	4283      	cmp	r3, r0
 8006496:	d004      	beq.n	80064a2 <__swbuf_r+0x6a>
 8006498:	89a3      	ldrh	r3, [r4, #12]
 800649a:	07db      	lsls	r3, r3, #31
 800649c:	d507      	bpl.n	80064ae <__swbuf_r+0x76>
 800649e:	2e0a      	cmp	r6, #10
 80064a0:	d105      	bne.n	80064ae <__swbuf_r+0x76>
 80064a2:	0021      	movs	r1, r4
 80064a4:	0028      	movs	r0, r5
 80064a6:	f000 f937 	bl	8006718 <_fflush_r>
 80064aa:	2800      	cmp	r0, #0
 80064ac:	d111      	bne.n	80064d2 <__swbuf_r+0x9a>
 80064ae:	0030      	movs	r0, r6
 80064b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80064b2:	4b0a      	ldr	r3, [pc, #40]	; (80064dc <__swbuf_r+0xa4>)
 80064b4:	429c      	cmp	r4, r3
 80064b6:	d101      	bne.n	80064bc <__swbuf_r+0x84>
 80064b8:	68ac      	ldr	r4, [r5, #8]
 80064ba:	e7cc      	b.n	8006456 <__swbuf_r+0x1e>
 80064bc:	4b08      	ldr	r3, [pc, #32]	; (80064e0 <__swbuf_r+0xa8>)
 80064be:	429c      	cmp	r4, r3
 80064c0:	d1c9      	bne.n	8006456 <__swbuf_r+0x1e>
 80064c2:	68ec      	ldr	r4, [r5, #12]
 80064c4:	e7c7      	b.n	8006456 <__swbuf_r+0x1e>
 80064c6:	0021      	movs	r1, r4
 80064c8:	0028      	movs	r0, r5
 80064ca:	f000 f819 	bl	8006500 <__swsetup_r>
 80064ce:	2800      	cmp	r0, #0
 80064d0:	d0c9      	beq.n	8006466 <__swbuf_r+0x2e>
 80064d2:	2601      	movs	r6, #1
 80064d4:	4276      	negs	r6, r6
 80064d6:	e7ea      	b.n	80064ae <__swbuf_r+0x76>
 80064d8:	08007174 	.word	0x08007174
 80064dc:	08007194 	.word	0x08007194
 80064e0:	08007154 	.word	0x08007154

080064e4 <__ascii_wctomb>:
 80064e4:	0003      	movs	r3, r0
 80064e6:	1e08      	subs	r0, r1, #0
 80064e8:	d005      	beq.n	80064f6 <__ascii_wctomb+0x12>
 80064ea:	2aff      	cmp	r2, #255	; 0xff
 80064ec:	d904      	bls.n	80064f8 <__ascii_wctomb+0x14>
 80064ee:	228a      	movs	r2, #138	; 0x8a
 80064f0:	2001      	movs	r0, #1
 80064f2:	601a      	str	r2, [r3, #0]
 80064f4:	4240      	negs	r0, r0
 80064f6:	4770      	bx	lr
 80064f8:	2001      	movs	r0, #1
 80064fa:	700a      	strb	r2, [r1, #0]
 80064fc:	e7fb      	b.n	80064f6 <__ascii_wctomb+0x12>
	...

08006500 <__swsetup_r>:
 8006500:	4b37      	ldr	r3, [pc, #220]	; (80065e0 <__swsetup_r+0xe0>)
 8006502:	b570      	push	{r4, r5, r6, lr}
 8006504:	681d      	ldr	r5, [r3, #0]
 8006506:	0006      	movs	r6, r0
 8006508:	000c      	movs	r4, r1
 800650a:	2d00      	cmp	r5, #0
 800650c:	d005      	beq.n	800651a <__swsetup_r+0x1a>
 800650e:	69ab      	ldr	r3, [r5, #24]
 8006510:	2b00      	cmp	r3, #0
 8006512:	d102      	bne.n	800651a <__swsetup_r+0x1a>
 8006514:	0028      	movs	r0, r5
 8006516:	f000 f9a1 	bl	800685c <__sinit>
 800651a:	4b32      	ldr	r3, [pc, #200]	; (80065e4 <__swsetup_r+0xe4>)
 800651c:	429c      	cmp	r4, r3
 800651e:	d10f      	bne.n	8006540 <__swsetup_r+0x40>
 8006520:	686c      	ldr	r4, [r5, #4]
 8006522:	230c      	movs	r3, #12
 8006524:	5ee2      	ldrsh	r2, [r4, r3]
 8006526:	b293      	uxth	r3, r2
 8006528:	0711      	lsls	r1, r2, #28
 800652a:	d42d      	bmi.n	8006588 <__swsetup_r+0x88>
 800652c:	06d9      	lsls	r1, r3, #27
 800652e:	d411      	bmi.n	8006554 <__swsetup_r+0x54>
 8006530:	2309      	movs	r3, #9
 8006532:	2001      	movs	r0, #1
 8006534:	6033      	str	r3, [r6, #0]
 8006536:	3337      	adds	r3, #55	; 0x37
 8006538:	4313      	orrs	r3, r2
 800653a:	81a3      	strh	r3, [r4, #12]
 800653c:	4240      	negs	r0, r0
 800653e:	bd70      	pop	{r4, r5, r6, pc}
 8006540:	4b29      	ldr	r3, [pc, #164]	; (80065e8 <__swsetup_r+0xe8>)
 8006542:	429c      	cmp	r4, r3
 8006544:	d101      	bne.n	800654a <__swsetup_r+0x4a>
 8006546:	68ac      	ldr	r4, [r5, #8]
 8006548:	e7eb      	b.n	8006522 <__swsetup_r+0x22>
 800654a:	4b28      	ldr	r3, [pc, #160]	; (80065ec <__swsetup_r+0xec>)
 800654c:	429c      	cmp	r4, r3
 800654e:	d1e8      	bne.n	8006522 <__swsetup_r+0x22>
 8006550:	68ec      	ldr	r4, [r5, #12]
 8006552:	e7e6      	b.n	8006522 <__swsetup_r+0x22>
 8006554:	075b      	lsls	r3, r3, #29
 8006556:	d513      	bpl.n	8006580 <__swsetup_r+0x80>
 8006558:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800655a:	2900      	cmp	r1, #0
 800655c:	d008      	beq.n	8006570 <__swsetup_r+0x70>
 800655e:	0023      	movs	r3, r4
 8006560:	3344      	adds	r3, #68	; 0x44
 8006562:	4299      	cmp	r1, r3
 8006564:	d002      	beq.n	800656c <__swsetup_r+0x6c>
 8006566:	0030      	movs	r0, r6
 8006568:	f7ff fb1c 	bl	8005ba4 <_free_r>
 800656c:	2300      	movs	r3, #0
 800656e:	6363      	str	r3, [r4, #52]	; 0x34
 8006570:	2224      	movs	r2, #36	; 0x24
 8006572:	89a3      	ldrh	r3, [r4, #12]
 8006574:	4393      	bics	r3, r2
 8006576:	81a3      	strh	r3, [r4, #12]
 8006578:	2300      	movs	r3, #0
 800657a:	6063      	str	r3, [r4, #4]
 800657c:	6923      	ldr	r3, [r4, #16]
 800657e:	6023      	str	r3, [r4, #0]
 8006580:	2308      	movs	r3, #8
 8006582:	89a2      	ldrh	r2, [r4, #12]
 8006584:	4313      	orrs	r3, r2
 8006586:	81a3      	strh	r3, [r4, #12]
 8006588:	6923      	ldr	r3, [r4, #16]
 800658a:	2b00      	cmp	r3, #0
 800658c:	d10b      	bne.n	80065a6 <__swsetup_r+0xa6>
 800658e:	21a0      	movs	r1, #160	; 0xa0
 8006590:	2280      	movs	r2, #128	; 0x80
 8006592:	89a3      	ldrh	r3, [r4, #12]
 8006594:	0089      	lsls	r1, r1, #2
 8006596:	0092      	lsls	r2, r2, #2
 8006598:	400b      	ands	r3, r1
 800659a:	4293      	cmp	r3, r2
 800659c:	d003      	beq.n	80065a6 <__swsetup_r+0xa6>
 800659e:	0021      	movs	r1, r4
 80065a0:	0030      	movs	r0, r6
 80065a2:	f000 fa27 	bl	80069f4 <__smakebuf_r>
 80065a6:	220c      	movs	r2, #12
 80065a8:	5ea3      	ldrsh	r3, [r4, r2]
 80065aa:	2001      	movs	r0, #1
 80065ac:	001a      	movs	r2, r3
 80065ae:	b299      	uxth	r1, r3
 80065b0:	4002      	ands	r2, r0
 80065b2:	4203      	tst	r3, r0
 80065b4:	d00f      	beq.n	80065d6 <__swsetup_r+0xd6>
 80065b6:	2200      	movs	r2, #0
 80065b8:	60a2      	str	r2, [r4, #8]
 80065ba:	6962      	ldr	r2, [r4, #20]
 80065bc:	4252      	negs	r2, r2
 80065be:	61a2      	str	r2, [r4, #24]
 80065c0:	2000      	movs	r0, #0
 80065c2:	6922      	ldr	r2, [r4, #16]
 80065c4:	4282      	cmp	r2, r0
 80065c6:	d1ba      	bne.n	800653e <__swsetup_r+0x3e>
 80065c8:	060a      	lsls	r2, r1, #24
 80065ca:	d5b8      	bpl.n	800653e <__swsetup_r+0x3e>
 80065cc:	2240      	movs	r2, #64	; 0x40
 80065ce:	4313      	orrs	r3, r2
 80065d0:	81a3      	strh	r3, [r4, #12]
 80065d2:	3801      	subs	r0, #1
 80065d4:	e7b3      	b.n	800653e <__swsetup_r+0x3e>
 80065d6:	0788      	lsls	r0, r1, #30
 80065d8:	d400      	bmi.n	80065dc <__swsetup_r+0xdc>
 80065da:	6962      	ldr	r2, [r4, #20]
 80065dc:	60a2      	str	r2, [r4, #8]
 80065de:	e7ef      	b.n	80065c0 <__swsetup_r+0xc0>
 80065e0:	20000014 	.word	0x20000014
 80065e4:	08007174 	.word	0x08007174
 80065e8:	08007194 	.word	0x08007194
 80065ec:	08007154 	.word	0x08007154

080065f0 <abort>:
 80065f0:	2006      	movs	r0, #6
 80065f2:	b510      	push	{r4, lr}
 80065f4:	f000 fa74 	bl	8006ae0 <raise>
 80065f8:	2001      	movs	r0, #1
 80065fa:	f7fb ff9a 	bl	8002532 <_exit>
	...

08006600 <__sflush_r>:
 8006600:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006602:	898b      	ldrh	r3, [r1, #12]
 8006604:	0005      	movs	r5, r0
 8006606:	000c      	movs	r4, r1
 8006608:	071a      	lsls	r2, r3, #28
 800660a:	d45f      	bmi.n	80066cc <__sflush_r+0xcc>
 800660c:	684a      	ldr	r2, [r1, #4]
 800660e:	2a00      	cmp	r2, #0
 8006610:	dc04      	bgt.n	800661c <__sflush_r+0x1c>
 8006612:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8006614:	2a00      	cmp	r2, #0
 8006616:	dc01      	bgt.n	800661c <__sflush_r+0x1c>
 8006618:	2000      	movs	r0, #0
 800661a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800661c:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800661e:	2f00      	cmp	r7, #0
 8006620:	d0fa      	beq.n	8006618 <__sflush_r+0x18>
 8006622:	2200      	movs	r2, #0
 8006624:	2180      	movs	r1, #128	; 0x80
 8006626:	682e      	ldr	r6, [r5, #0]
 8006628:	602a      	str	r2, [r5, #0]
 800662a:	001a      	movs	r2, r3
 800662c:	0149      	lsls	r1, r1, #5
 800662e:	400a      	ands	r2, r1
 8006630:	420b      	tst	r3, r1
 8006632:	d034      	beq.n	800669e <__sflush_r+0x9e>
 8006634:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006636:	89a3      	ldrh	r3, [r4, #12]
 8006638:	075b      	lsls	r3, r3, #29
 800663a:	d506      	bpl.n	800664a <__sflush_r+0x4a>
 800663c:	6863      	ldr	r3, [r4, #4]
 800663e:	1ac0      	subs	r0, r0, r3
 8006640:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006642:	2b00      	cmp	r3, #0
 8006644:	d001      	beq.n	800664a <__sflush_r+0x4a>
 8006646:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006648:	1ac0      	subs	r0, r0, r3
 800664a:	0002      	movs	r2, r0
 800664c:	6a21      	ldr	r1, [r4, #32]
 800664e:	2300      	movs	r3, #0
 8006650:	0028      	movs	r0, r5
 8006652:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8006654:	47b8      	blx	r7
 8006656:	89a1      	ldrh	r1, [r4, #12]
 8006658:	1c43      	adds	r3, r0, #1
 800665a:	d106      	bne.n	800666a <__sflush_r+0x6a>
 800665c:	682b      	ldr	r3, [r5, #0]
 800665e:	2b1d      	cmp	r3, #29
 8006660:	d831      	bhi.n	80066c6 <__sflush_r+0xc6>
 8006662:	4a2c      	ldr	r2, [pc, #176]	; (8006714 <__sflush_r+0x114>)
 8006664:	40da      	lsrs	r2, r3
 8006666:	07d3      	lsls	r3, r2, #31
 8006668:	d52d      	bpl.n	80066c6 <__sflush_r+0xc6>
 800666a:	2300      	movs	r3, #0
 800666c:	6063      	str	r3, [r4, #4]
 800666e:	6923      	ldr	r3, [r4, #16]
 8006670:	6023      	str	r3, [r4, #0]
 8006672:	04cb      	lsls	r3, r1, #19
 8006674:	d505      	bpl.n	8006682 <__sflush_r+0x82>
 8006676:	1c43      	adds	r3, r0, #1
 8006678:	d102      	bne.n	8006680 <__sflush_r+0x80>
 800667a:	682b      	ldr	r3, [r5, #0]
 800667c:	2b00      	cmp	r3, #0
 800667e:	d100      	bne.n	8006682 <__sflush_r+0x82>
 8006680:	6560      	str	r0, [r4, #84]	; 0x54
 8006682:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006684:	602e      	str	r6, [r5, #0]
 8006686:	2900      	cmp	r1, #0
 8006688:	d0c6      	beq.n	8006618 <__sflush_r+0x18>
 800668a:	0023      	movs	r3, r4
 800668c:	3344      	adds	r3, #68	; 0x44
 800668e:	4299      	cmp	r1, r3
 8006690:	d002      	beq.n	8006698 <__sflush_r+0x98>
 8006692:	0028      	movs	r0, r5
 8006694:	f7ff fa86 	bl	8005ba4 <_free_r>
 8006698:	2000      	movs	r0, #0
 800669a:	6360      	str	r0, [r4, #52]	; 0x34
 800669c:	e7bd      	b.n	800661a <__sflush_r+0x1a>
 800669e:	2301      	movs	r3, #1
 80066a0:	0028      	movs	r0, r5
 80066a2:	6a21      	ldr	r1, [r4, #32]
 80066a4:	47b8      	blx	r7
 80066a6:	1c43      	adds	r3, r0, #1
 80066a8:	d1c5      	bne.n	8006636 <__sflush_r+0x36>
 80066aa:	682b      	ldr	r3, [r5, #0]
 80066ac:	2b00      	cmp	r3, #0
 80066ae:	d0c2      	beq.n	8006636 <__sflush_r+0x36>
 80066b0:	2b1d      	cmp	r3, #29
 80066b2:	d001      	beq.n	80066b8 <__sflush_r+0xb8>
 80066b4:	2b16      	cmp	r3, #22
 80066b6:	d101      	bne.n	80066bc <__sflush_r+0xbc>
 80066b8:	602e      	str	r6, [r5, #0]
 80066ba:	e7ad      	b.n	8006618 <__sflush_r+0x18>
 80066bc:	2340      	movs	r3, #64	; 0x40
 80066be:	89a2      	ldrh	r2, [r4, #12]
 80066c0:	4313      	orrs	r3, r2
 80066c2:	81a3      	strh	r3, [r4, #12]
 80066c4:	e7a9      	b.n	800661a <__sflush_r+0x1a>
 80066c6:	2340      	movs	r3, #64	; 0x40
 80066c8:	430b      	orrs	r3, r1
 80066ca:	e7fa      	b.n	80066c2 <__sflush_r+0xc2>
 80066cc:	690f      	ldr	r7, [r1, #16]
 80066ce:	2f00      	cmp	r7, #0
 80066d0:	d0a2      	beq.n	8006618 <__sflush_r+0x18>
 80066d2:	680a      	ldr	r2, [r1, #0]
 80066d4:	600f      	str	r7, [r1, #0]
 80066d6:	1bd2      	subs	r2, r2, r7
 80066d8:	9201      	str	r2, [sp, #4]
 80066da:	2200      	movs	r2, #0
 80066dc:	079b      	lsls	r3, r3, #30
 80066de:	d100      	bne.n	80066e2 <__sflush_r+0xe2>
 80066e0:	694a      	ldr	r2, [r1, #20]
 80066e2:	60a2      	str	r2, [r4, #8]
 80066e4:	9b01      	ldr	r3, [sp, #4]
 80066e6:	2b00      	cmp	r3, #0
 80066e8:	dc00      	bgt.n	80066ec <__sflush_r+0xec>
 80066ea:	e795      	b.n	8006618 <__sflush_r+0x18>
 80066ec:	003a      	movs	r2, r7
 80066ee:	0028      	movs	r0, r5
 80066f0:	9b01      	ldr	r3, [sp, #4]
 80066f2:	6a21      	ldr	r1, [r4, #32]
 80066f4:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80066f6:	47b0      	blx	r6
 80066f8:	2800      	cmp	r0, #0
 80066fa:	dc06      	bgt.n	800670a <__sflush_r+0x10a>
 80066fc:	2340      	movs	r3, #64	; 0x40
 80066fe:	2001      	movs	r0, #1
 8006700:	89a2      	ldrh	r2, [r4, #12]
 8006702:	4240      	negs	r0, r0
 8006704:	4313      	orrs	r3, r2
 8006706:	81a3      	strh	r3, [r4, #12]
 8006708:	e787      	b.n	800661a <__sflush_r+0x1a>
 800670a:	9b01      	ldr	r3, [sp, #4]
 800670c:	183f      	adds	r7, r7, r0
 800670e:	1a1b      	subs	r3, r3, r0
 8006710:	9301      	str	r3, [sp, #4]
 8006712:	e7e7      	b.n	80066e4 <__sflush_r+0xe4>
 8006714:	20400001 	.word	0x20400001

08006718 <_fflush_r>:
 8006718:	690b      	ldr	r3, [r1, #16]
 800671a:	b570      	push	{r4, r5, r6, lr}
 800671c:	0005      	movs	r5, r0
 800671e:	000c      	movs	r4, r1
 8006720:	2b00      	cmp	r3, #0
 8006722:	d102      	bne.n	800672a <_fflush_r+0x12>
 8006724:	2500      	movs	r5, #0
 8006726:	0028      	movs	r0, r5
 8006728:	bd70      	pop	{r4, r5, r6, pc}
 800672a:	2800      	cmp	r0, #0
 800672c:	d004      	beq.n	8006738 <_fflush_r+0x20>
 800672e:	6983      	ldr	r3, [r0, #24]
 8006730:	2b00      	cmp	r3, #0
 8006732:	d101      	bne.n	8006738 <_fflush_r+0x20>
 8006734:	f000 f892 	bl	800685c <__sinit>
 8006738:	4b14      	ldr	r3, [pc, #80]	; (800678c <_fflush_r+0x74>)
 800673a:	429c      	cmp	r4, r3
 800673c:	d11b      	bne.n	8006776 <_fflush_r+0x5e>
 800673e:	686c      	ldr	r4, [r5, #4]
 8006740:	220c      	movs	r2, #12
 8006742:	5ea3      	ldrsh	r3, [r4, r2]
 8006744:	2b00      	cmp	r3, #0
 8006746:	d0ed      	beq.n	8006724 <_fflush_r+0xc>
 8006748:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800674a:	07d2      	lsls	r2, r2, #31
 800674c:	d404      	bmi.n	8006758 <_fflush_r+0x40>
 800674e:	059b      	lsls	r3, r3, #22
 8006750:	d402      	bmi.n	8006758 <_fflush_r+0x40>
 8006752:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006754:	f000 f923 	bl	800699e <__retarget_lock_acquire_recursive>
 8006758:	0028      	movs	r0, r5
 800675a:	0021      	movs	r1, r4
 800675c:	f7ff ff50 	bl	8006600 <__sflush_r>
 8006760:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006762:	0005      	movs	r5, r0
 8006764:	07db      	lsls	r3, r3, #31
 8006766:	d4de      	bmi.n	8006726 <_fflush_r+0xe>
 8006768:	89a3      	ldrh	r3, [r4, #12]
 800676a:	059b      	lsls	r3, r3, #22
 800676c:	d4db      	bmi.n	8006726 <_fflush_r+0xe>
 800676e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006770:	f000 f916 	bl	80069a0 <__retarget_lock_release_recursive>
 8006774:	e7d7      	b.n	8006726 <_fflush_r+0xe>
 8006776:	4b06      	ldr	r3, [pc, #24]	; (8006790 <_fflush_r+0x78>)
 8006778:	429c      	cmp	r4, r3
 800677a:	d101      	bne.n	8006780 <_fflush_r+0x68>
 800677c:	68ac      	ldr	r4, [r5, #8]
 800677e:	e7df      	b.n	8006740 <_fflush_r+0x28>
 8006780:	4b04      	ldr	r3, [pc, #16]	; (8006794 <_fflush_r+0x7c>)
 8006782:	429c      	cmp	r4, r3
 8006784:	d1dc      	bne.n	8006740 <_fflush_r+0x28>
 8006786:	68ec      	ldr	r4, [r5, #12]
 8006788:	e7da      	b.n	8006740 <_fflush_r+0x28>
 800678a:	46c0      	nop			; (mov r8, r8)
 800678c:	08007174 	.word	0x08007174
 8006790:	08007194 	.word	0x08007194
 8006794:	08007154 	.word	0x08007154

08006798 <std>:
 8006798:	2300      	movs	r3, #0
 800679a:	b510      	push	{r4, lr}
 800679c:	0004      	movs	r4, r0
 800679e:	6003      	str	r3, [r0, #0]
 80067a0:	6043      	str	r3, [r0, #4]
 80067a2:	6083      	str	r3, [r0, #8]
 80067a4:	8181      	strh	r1, [r0, #12]
 80067a6:	6643      	str	r3, [r0, #100]	; 0x64
 80067a8:	0019      	movs	r1, r3
 80067aa:	81c2      	strh	r2, [r0, #14]
 80067ac:	6103      	str	r3, [r0, #16]
 80067ae:	6143      	str	r3, [r0, #20]
 80067b0:	6183      	str	r3, [r0, #24]
 80067b2:	2208      	movs	r2, #8
 80067b4:	305c      	adds	r0, #92	; 0x5c
 80067b6:	f7fd fad6 	bl	8003d66 <memset>
 80067ba:	4b05      	ldr	r3, [pc, #20]	; (80067d0 <std+0x38>)
 80067bc:	6224      	str	r4, [r4, #32]
 80067be:	6263      	str	r3, [r4, #36]	; 0x24
 80067c0:	4b04      	ldr	r3, [pc, #16]	; (80067d4 <std+0x3c>)
 80067c2:	62a3      	str	r3, [r4, #40]	; 0x28
 80067c4:	4b04      	ldr	r3, [pc, #16]	; (80067d8 <std+0x40>)
 80067c6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80067c8:	4b04      	ldr	r3, [pc, #16]	; (80067dc <std+0x44>)
 80067ca:	6323      	str	r3, [r4, #48]	; 0x30
 80067cc:	bd10      	pop	{r4, pc}
 80067ce:	46c0      	nop			; (mov r8, r8)
 80067d0:	08006b21 	.word	0x08006b21
 80067d4:	08006b49 	.word	0x08006b49
 80067d8:	08006b81 	.word	0x08006b81
 80067dc:	08006bad 	.word	0x08006bad

080067e0 <_cleanup_r>:
 80067e0:	b510      	push	{r4, lr}
 80067e2:	4902      	ldr	r1, [pc, #8]	; (80067ec <_cleanup_r+0xc>)
 80067e4:	f000 f8ba 	bl	800695c <_fwalk_reent>
 80067e8:	bd10      	pop	{r4, pc}
 80067ea:	46c0      	nop			; (mov r8, r8)
 80067ec:	08006719 	.word	0x08006719

080067f0 <__sfmoreglue>:
 80067f0:	b570      	push	{r4, r5, r6, lr}
 80067f2:	2568      	movs	r5, #104	; 0x68
 80067f4:	1e4a      	subs	r2, r1, #1
 80067f6:	4355      	muls	r5, r2
 80067f8:	000e      	movs	r6, r1
 80067fa:	0029      	movs	r1, r5
 80067fc:	3174      	adds	r1, #116	; 0x74
 80067fe:	f7ff fa3d 	bl	8005c7c <_malloc_r>
 8006802:	1e04      	subs	r4, r0, #0
 8006804:	d008      	beq.n	8006818 <__sfmoreglue+0x28>
 8006806:	2100      	movs	r1, #0
 8006808:	002a      	movs	r2, r5
 800680a:	6001      	str	r1, [r0, #0]
 800680c:	6046      	str	r6, [r0, #4]
 800680e:	300c      	adds	r0, #12
 8006810:	60a0      	str	r0, [r4, #8]
 8006812:	3268      	adds	r2, #104	; 0x68
 8006814:	f7fd faa7 	bl	8003d66 <memset>
 8006818:	0020      	movs	r0, r4
 800681a:	bd70      	pop	{r4, r5, r6, pc}

0800681c <__sfp_lock_acquire>:
 800681c:	b510      	push	{r4, lr}
 800681e:	4802      	ldr	r0, [pc, #8]	; (8006828 <__sfp_lock_acquire+0xc>)
 8006820:	f000 f8bd 	bl	800699e <__retarget_lock_acquire_recursive>
 8006824:	bd10      	pop	{r4, pc}
 8006826:	46c0      	nop			; (mov r8, r8)
 8006828:	200005b9 	.word	0x200005b9

0800682c <__sfp_lock_release>:
 800682c:	b510      	push	{r4, lr}
 800682e:	4802      	ldr	r0, [pc, #8]	; (8006838 <__sfp_lock_release+0xc>)
 8006830:	f000 f8b6 	bl	80069a0 <__retarget_lock_release_recursive>
 8006834:	bd10      	pop	{r4, pc}
 8006836:	46c0      	nop			; (mov r8, r8)
 8006838:	200005b9 	.word	0x200005b9

0800683c <__sinit_lock_acquire>:
 800683c:	b510      	push	{r4, lr}
 800683e:	4802      	ldr	r0, [pc, #8]	; (8006848 <__sinit_lock_acquire+0xc>)
 8006840:	f000 f8ad 	bl	800699e <__retarget_lock_acquire_recursive>
 8006844:	bd10      	pop	{r4, pc}
 8006846:	46c0      	nop			; (mov r8, r8)
 8006848:	200005ba 	.word	0x200005ba

0800684c <__sinit_lock_release>:
 800684c:	b510      	push	{r4, lr}
 800684e:	4802      	ldr	r0, [pc, #8]	; (8006858 <__sinit_lock_release+0xc>)
 8006850:	f000 f8a6 	bl	80069a0 <__retarget_lock_release_recursive>
 8006854:	bd10      	pop	{r4, pc}
 8006856:	46c0      	nop			; (mov r8, r8)
 8006858:	200005ba 	.word	0x200005ba

0800685c <__sinit>:
 800685c:	b513      	push	{r0, r1, r4, lr}
 800685e:	0004      	movs	r4, r0
 8006860:	f7ff ffec 	bl	800683c <__sinit_lock_acquire>
 8006864:	69a3      	ldr	r3, [r4, #24]
 8006866:	2b00      	cmp	r3, #0
 8006868:	d002      	beq.n	8006870 <__sinit+0x14>
 800686a:	f7ff ffef 	bl	800684c <__sinit_lock_release>
 800686e:	bd13      	pop	{r0, r1, r4, pc}
 8006870:	64a3      	str	r3, [r4, #72]	; 0x48
 8006872:	64e3      	str	r3, [r4, #76]	; 0x4c
 8006874:	6523      	str	r3, [r4, #80]	; 0x50
 8006876:	4b13      	ldr	r3, [pc, #76]	; (80068c4 <__sinit+0x68>)
 8006878:	4a13      	ldr	r2, [pc, #76]	; (80068c8 <__sinit+0x6c>)
 800687a:	681b      	ldr	r3, [r3, #0]
 800687c:	62a2      	str	r2, [r4, #40]	; 0x28
 800687e:	9301      	str	r3, [sp, #4]
 8006880:	42a3      	cmp	r3, r4
 8006882:	d101      	bne.n	8006888 <__sinit+0x2c>
 8006884:	2301      	movs	r3, #1
 8006886:	61a3      	str	r3, [r4, #24]
 8006888:	0020      	movs	r0, r4
 800688a:	f000 f81f 	bl	80068cc <__sfp>
 800688e:	6060      	str	r0, [r4, #4]
 8006890:	0020      	movs	r0, r4
 8006892:	f000 f81b 	bl	80068cc <__sfp>
 8006896:	60a0      	str	r0, [r4, #8]
 8006898:	0020      	movs	r0, r4
 800689a:	f000 f817 	bl	80068cc <__sfp>
 800689e:	2200      	movs	r2, #0
 80068a0:	2104      	movs	r1, #4
 80068a2:	60e0      	str	r0, [r4, #12]
 80068a4:	6860      	ldr	r0, [r4, #4]
 80068a6:	f7ff ff77 	bl	8006798 <std>
 80068aa:	2201      	movs	r2, #1
 80068ac:	2109      	movs	r1, #9
 80068ae:	68a0      	ldr	r0, [r4, #8]
 80068b0:	f7ff ff72 	bl	8006798 <std>
 80068b4:	2202      	movs	r2, #2
 80068b6:	2112      	movs	r1, #18
 80068b8:	68e0      	ldr	r0, [r4, #12]
 80068ba:	f7ff ff6d 	bl	8006798 <std>
 80068be:	2301      	movs	r3, #1
 80068c0:	61a3      	str	r3, [r4, #24]
 80068c2:	e7d2      	b.n	800686a <__sinit+0xe>
 80068c4:	08006ddc 	.word	0x08006ddc
 80068c8:	080067e1 	.word	0x080067e1

080068cc <__sfp>:
 80068cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80068ce:	0007      	movs	r7, r0
 80068d0:	f7ff ffa4 	bl	800681c <__sfp_lock_acquire>
 80068d4:	4b1f      	ldr	r3, [pc, #124]	; (8006954 <__sfp+0x88>)
 80068d6:	681e      	ldr	r6, [r3, #0]
 80068d8:	69b3      	ldr	r3, [r6, #24]
 80068da:	2b00      	cmp	r3, #0
 80068dc:	d102      	bne.n	80068e4 <__sfp+0x18>
 80068de:	0030      	movs	r0, r6
 80068e0:	f7ff ffbc 	bl	800685c <__sinit>
 80068e4:	3648      	adds	r6, #72	; 0x48
 80068e6:	68b4      	ldr	r4, [r6, #8]
 80068e8:	6873      	ldr	r3, [r6, #4]
 80068ea:	3b01      	subs	r3, #1
 80068ec:	d504      	bpl.n	80068f8 <__sfp+0x2c>
 80068ee:	6833      	ldr	r3, [r6, #0]
 80068f0:	2b00      	cmp	r3, #0
 80068f2:	d022      	beq.n	800693a <__sfp+0x6e>
 80068f4:	6836      	ldr	r6, [r6, #0]
 80068f6:	e7f6      	b.n	80068e6 <__sfp+0x1a>
 80068f8:	220c      	movs	r2, #12
 80068fa:	5ea5      	ldrsh	r5, [r4, r2]
 80068fc:	2d00      	cmp	r5, #0
 80068fe:	d11a      	bne.n	8006936 <__sfp+0x6a>
 8006900:	0020      	movs	r0, r4
 8006902:	4b15      	ldr	r3, [pc, #84]	; (8006958 <__sfp+0x8c>)
 8006904:	3058      	adds	r0, #88	; 0x58
 8006906:	60e3      	str	r3, [r4, #12]
 8006908:	6665      	str	r5, [r4, #100]	; 0x64
 800690a:	f000 f847 	bl	800699c <__retarget_lock_init_recursive>
 800690e:	f7ff ff8d 	bl	800682c <__sfp_lock_release>
 8006912:	0020      	movs	r0, r4
 8006914:	2208      	movs	r2, #8
 8006916:	0029      	movs	r1, r5
 8006918:	6025      	str	r5, [r4, #0]
 800691a:	60a5      	str	r5, [r4, #8]
 800691c:	6065      	str	r5, [r4, #4]
 800691e:	6125      	str	r5, [r4, #16]
 8006920:	6165      	str	r5, [r4, #20]
 8006922:	61a5      	str	r5, [r4, #24]
 8006924:	305c      	adds	r0, #92	; 0x5c
 8006926:	f7fd fa1e 	bl	8003d66 <memset>
 800692a:	6365      	str	r5, [r4, #52]	; 0x34
 800692c:	63a5      	str	r5, [r4, #56]	; 0x38
 800692e:	64a5      	str	r5, [r4, #72]	; 0x48
 8006930:	64e5      	str	r5, [r4, #76]	; 0x4c
 8006932:	0020      	movs	r0, r4
 8006934:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006936:	3468      	adds	r4, #104	; 0x68
 8006938:	e7d7      	b.n	80068ea <__sfp+0x1e>
 800693a:	2104      	movs	r1, #4
 800693c:	0038      	movs	r0, r7
 800693e:	f7ff ff57 	bl	80067f0 <__sfmoreglue>
 8006942:	1e04      	subs	r4, r0, #0
 8006944:	6030      	str	r0, [r6, #0]
 8006946:	d1d5      	bne.n	80068f4 <__sfp+0x28>
 8006948:	f7ff ff70 	bl	800682c <__sfp_lock_release>
 800694c:	230c      	movs	r3, #12
 800694e:	603b      	str	r3, [r7, #0]
 8006950:	e7ef      	b.n	8006932 <__sfp+0x66>
 8006952:	46c0      	nop			; (mov r8, r8)
 8006954:	08006ddc 	.word	0x08006ddc
 8006958:	ffff0001 	.word	0xffff0001

0800695c <_fwalk_reent>:
 800695c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800695e:	0004      	movs	r4, r0
 8006960:	0006      	movs	r6, r0
 8006962:	2700      	movs	r7, #0
 8006964:	9101      	str	r1, [sp, #4]
 8006966:	3448      	adds	r4, #72	; 0x48
 8006968:	6863      	ldr	r3, [r4, #4]
 800696a:	68a5      	ldr	r5, [r4, #8]
 800696c:	9300      	str	r3, [sp, #0]
 800696e:	9b00      	ldr	r3, [sp, #0]
 8006970:	3b01      	subs	r3, #1
 8006972:	9300      	str	r3, [sp, #0]
 8006974:	d504      	bpl.n	8006980 <_fwalk_reent+0x24>
 8006976:	6824      	ldr	r4, [r4, #0]
 8006978:	2c00      	cmp	r4, #0
 800697a:	d1f5      	bne.n	8006968 <_fwalk_reent+0xc>
 800697c:	0038      	movs	r0, r7
 800697e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006980:	89ab      	ldrh	r3, [r5, #12]
 8006982:	2b01      	cmp	r3, #1
 8006984:	d908      	bls.n	8006998 <_fwalk_reent+0x3c>
 8006986:	220e      	movs	r2, #14
 8006988:	5eab      	ldrsh	r3, [r5, r2]
 800698a:	3301      	adds	r3, #1
 800698c:	d004      	beq.n	8006998 <_fwalk_reent+0x3c>
 800698e:	0029      	movs	r1, r5
 8006990:	0030      	movs	r0, r6
 8006992:	9b01      	ldr	r3, [sp, #4]
 8006994:	4798      	blx	r3
 8006996:	4307      	orrs	r7, r0
 8006998:	3568      	adds	r5, #104	; 0x68
 800699a:	e7e8      	b.n	800696e <_fwalk_reent+0x12>

0800699c <__retarget_lock_init_recursive>:
 800699c:	4770      	bx	lr

0800699e <__retarget_lock_acquire_recursive>:
 800699e:	4770      	bx	lr

080069a0 <__retarget_lock_release_recursive>:
 80069a0:	4770      	bx	lr
	...

080069a4 <__swhatbuf_r>:
 80069a4:	b570      	push	{r4, r5, r6, lr}
 80069a6:	000e      	movs	r6, r1
 80069a8:	001d      	movs	r5, r3
 80069aa:	230e      	movs	r3, #14
 80069ac:	5ec9      	ldrsh	r1, [r1, r3]
 80069ae:	0014      	movs	r4, r2
 80069b0:	b096      	sub	sp, #88	; 0x58
 80069b2:	2900      	cmp	r1, #0
 80069b4:	da08      	bge.n	80069c8 <__swhatbuf_r+0x24>
 80069b6:	220c      	movs	r2, #12
 80069b8:	5eb3      	ldrsh	r3, [r6, r2]
 80069ba:	2200      	movs	r2, #0
 80069bc:	602a      	str	r2, [r5, #0]
 80069be:	061b      	lsls	r3, r3, #24
 80069c0:	d411      	bmi.n	80069e6 <__swhatbuf_r+0x42>
 80069c2:	2380      	movs	r3, #128	; 0x80
 80069c4:	00db      	lsls	r3, r3, #3
 80069c6:	e00f      	b.n	80069e8 <__swhatbuf_r+0x44>
 80069c8:	466a      	mov	r2, sp
 80069ca:	f000 f91b 	bl	8006c04 <_fstat_r>
 80069ce:	2800      	cmp	r0, #0
 80069d0:	dbf1      	blt.n	80069b6 <__swhatbuf_r+0x12>
 80069d2:	23f0      	movs	r3, #240	; 0xf0
 80069d4:	9901      	ldr	r1, [sp, #4]
 80069d6:	021b      	lsls	r3, r3, #8
 80069d8:	4019      	ands	r1, r3
 80069da:	4b05      	ldr	r3, [pc, #20]	; (80069f0 <__swhatbuf_r+0x4c>)
 80069dc:	18c9      	adds	r1, r1, r3
 80069de:	424b      	negs	r3, r1
 80069e0:	4159      	adcs	r1, r3
 80069e2:	6029      	str	r1, [r5, #0]
 80069e4:	e7ed      	b.n	80069c2 <__swhatbuf_r+0x1e>
 80069e6:	2340      	movs	r3, #64	; 0x40
 80069e8:	2000      	movs	r0, #0
 80069ea:	6023      	str	r3, [r4, #0]
 80069ec:	b016      	add	sp, #88	; 0x58
 80069ee:	bd70      	pop	{r4, r5, r6, pc}
 80069f0:	ffffe000 	.word	0xffffe000

080069f4 <__smakebuf_r>:
 80069f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80069f6:	2602      	movs	r6, #2
 80069f8:	898b      	ldrh	r3, [r1, #12]
 80069fa:	0005      	movs	r5, r0
 80069fc:	000c      	movs	r4, r1
 80069fe:	4233      	tst	r3, r6
 8006a00:	d006      	beq.n	8006a10 <__smakebuf_r+0x1c>
 8006a02:	0023      	movs	r3, r4
 8006a04:	3347      	adds	r3, #71	; 0x47
 8006a06:	6023      	str	r3, [r4, #0]
 8006a08:	6123      	str	r3, [r4, #16]
 8006a0a:	2301      	movs	r3, #1
 8006a0c:	6163      	str	r3, [r4, #20]
 8006a0e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8006a10:	466a      	mov	r2, sp
 8006a12:	ab01      	add	r3, sp, #4
 8006a14:	f7ff ffc6 	bl	80069a4 <__swhatbuf_r>
 8006a18:	9900      	ldr	r1, [sp, #0]
 8006a1a:	0007      	movs	r7, r0
 8006a1c:	0028      	movs	r0, r5
 8006a1e:	f7ff f92d 	bl	8005c7c <_malloc_r>
 8006a22:	2800      	cmp	r0, #0
 8006a24:	d108      	bne.n	8006a38 <__smakebuf_r+0x44>
 8006a26:	220c      	movs	r2, #12
 8006a28:	5ea3      	ldrsh	r3, [r4, r2]
 8006a2a:	059a      	lsls	r2, r3, #22
 8006a2c:	d4ef      	bmi.n	8006a0e <__smakebuf_r+0x1a>
 8006a2e:	2203      	movs	r2, #3
 8006a30:	4393      	bics	r3, r2
 8006a32:	431e      	orrs	r6, r3
 8006a34:	81a6      	strh	r6, [r4, #12]
 8006a36:	e7e4      	b.n	8006a02 <__smakebuf_r+0xe>
 8006a38:	4b0f      	ldr	r3, [pc, #60]	; (8006a78 <__smakebuf_r+0x84>)
 8006a3a:	62ab      	str	r3, [r5, #40]	; 0x28
 8006a3c:	2380      	movs	r3, #128	; 0x80
 8006a3e:	89a2      	ldrh	r2, [r4, #12]
 8006a40:	6020      	str	r0, [r4, #0]
 8006a42:	4313      	orrs	r3, r2
 8006a44:	81a3      	strh	r3, [r4, #12]
 8006a46:	9b00      	ldr	r3, [sp, #0]
 8006a48:	6120      	str	r0, [r4, #16]
 8006a4a:	6163      	str	r3, [r4, #20]
 8006a4c:	9b01      	ldr	r3, [sp, #4]
 8006a4e:	2b00      	cmp	r3, #0
 8006a50:	d00d      	beq.n	8006a6e <__smakebuf_r+0x7a>
 8006a52:	0028      	movs	r0, r5
 8006a54:	230e      	movs	r3, #14
 8006a56:	5ee1      	ldrsh	r1, [r4, r3]
 8006a58:	f000 f8e6 	bl	8006c28 <_isatty_r>
 8006a5c:	2800      	cmp	r0, #0
 8006a5e:	d006      	beq.n	8006a6e <__smakebuf_r+0x7a>
 8006a60:	2203      	movs	r2, #3
 8006a62:	89a3      	ldrh	r3, [r4, #12]
 8006a64:	4393      	bics	r3, r2
 8006a66:	001a      	movs	r2, r3
 8006a68:	2301      	movs	r3, #1
 8006a6a:	4313      	orrs	r3, r2
 8006a6c:	81a3      	strh	r3, [r4, #12]
 8006a6e:	89a0      	ldrh	r0, [r4, #12]
 8006a70:	4307      	orrs	r7, r0
 8006a72:	81a7      	strh	r7, [r4, #12]
 8006a74:	e7cb      	b.n	8006a0e <__smakebuf_r+0x1a>
 8006a76:	46c0      	nop			; (mov r8, r8)
 8006a78:	080067e1 	.word	0x080067e1

08006a7c <_malloc_usable_size_r>:
 8006a7c:	1f0b      	subs	r3, r1, #4
 8006a7e:	681b      	ldr	r3, [r3, #0]
 8006a80:	1f18      	subs	r0, r3, #4
 8006a82:	2b00      	cmp	r3, #0
 8006a84:	da01      	bge.n	8006a8a <_malloc_usable_size_r+0xe>
 8006a86:	580b      	ldr	r3, [r1, r0]
 8006a88:	18c0      	adds	r0, r0, r3
 8006a8a:	4770      	bx	lr

08006a8c <_raise_r>:
 8006a8c:	b570      	push	{r4, r5, r6, lr}
 8006a8e:	0004      	movs	r4, r0
 8006a90:	000d      	movs	r5, r1
 8006a92:	291f      	cmp	r1, #31
 8006a94:	d904      	bls.n	8006aa0 <_raise_r+0x14>
 8006a96:	2316      	movs	r3, #22
 8006a98:	6003      	str	r3, [r0, #0]
 8006a9a:	2001      	movs	r0, #1
 8006a9c:	4240      	negs	r0, r0
 8006a9e:	bd70      	pop	{r4, r5, r6, pc}
 8006aa0:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8006aa2:	2b00      	cmp	r3, #0
 8006aa4:	d004      	beq.n	8006ab0 <_raise_r+0x24>
 8006aa6:	008a      	lsls	r2, r1, #2
 8006aa8:	189b      	adds	r3, r3, r2
 8006aaa:	681a      	ldr	r2, [r3, #0]
 8006aac:	2a00      	cmp	r2, #0
 8006aae:	d108      	bne.n	8006ac2 <_raise_r+0x36>
 8006ab0:	0020      	movs	r0, r4
 8006ab2:	f000 f831 	bl	8006b18 <_getpid_r>
 8006ab6:	002a      	movs	r2, r5
 8006ab8:	0001      	movs	r1, r0
 8006aba:	0020      	movs	r0, r4
 8006abc:	f000 f81a 	bl	8006af4 <_kill_r>
 8006ac0:	e7ed      	b.n	8006a9e <_raise_r+0x12>
 8006ac2:	2000      	movs	r0, #0
 8006ac4:	2a01      	cmp	r2, #1
 8006ac6:	d0ea      	beq.n	8006a9e <_raise_r+0x12>
 8006ac8:	1c51      	adds	r1, r2, #1
 8006aca:	d103      	bne.n	8006ad4 <_raise_r+0x48>
 8006acc:	2316      	movs	r3, #22
 8006ace:	3001      	adds	r0, #1
 8006ad0:	6023      	str	r3, [r4, #0]
 8006ad2:	e7e4      	b.n	8006a9e <_raise_r+0x12>
 8006ad4:	2400      	movs	r4, #0
 8006ad6:	0028      	movs	r0, r5
 8006ad8:	601c      	str	r4, [r3, #0]
 8006ada:	4790      	blx	r2
 8006adc:	0020      	movs	r0, r4
 8006ade:	e7de      	b.n	8006a9e <_raise_r+0x12>

08006ae0 <raise>:
 8006ae0:	b510      	push	{r4, lr}
 8006ae2:	4b03      	ldr	r3, [pc, #12]	; (8006af0 <raise+0x10>)
 8006ae4:	0001      	movs	r1, r0
 8006ae6:	6818      	ldr	r0, [r3, #0]
 8006ae8:	f7ff ffd0 	bl	8006a8c <_raise_r>
 8006aec:	bd10      	pop	{r4, pc}
 8006aee:	46c0      	nop			; (mov r8, r8)
 8006af0:	20000014 	.word	0x20000014

08006af4 <_kill_r>:
 8006af4:	2300      	movs	r3, #0
 8006af6:	b570      	push	{r4, r5, r6, lr}
 8006af8:	4d06      	ldr	r5, [pc, #24]	; (8006b14 <_kill_r+0x20>)
 8006afa:	0004      	movs	r4, r0
 8006afc:	0008      	movs	r0, r1
 8006afe:	0011      	movs	r1, r2
 8006b00:	602b      	str	r3, [r5, #0]
 8006b02:	f7fb fd06 	bl	8002512 <_kill>
 8006b06:	1c43      	adds	r3, r0, #1
 8006b08:	d103      	bne.n	8006b12 <_kill_r+0x1e>
 8006b0a:	682b      	ldr	r3, [r5, #0]
 8006b0c:	2b00      	cmp	r3, #0
 8006b0e:	d000      	beq.n	8006b12 <_kill_r+0x1e>
 8006b10:	6023      	str	r3, [r4, #0]
 8006b12:	bd70      	pop	{r4, r5, r6, pc}
 8006b14:	200005b4 	.word	0x200005b4

08006b18 <_getpid_r>:
 8006b18:	b510      	push	{r4, lr}
 8006b1a:	f7fb fcf4 	bl	8002506 <_getpid>
 8006b1e:	bd10      	pop	{r4, pc}

08006b20 <__sread>:
 8006b20:	b570      	push	{r4, r5, r6, lr}
 8006b22:	000c      	movs	r4, r1
 8006b24:	250e      	movs	r5, #14
 8006b26:	5f49      	ldrsh	r1, [r1, r5]
 8006b28:	f000 f8a4 	bl	8006c74 <_read_r>
 8006b2c:	2800      	cmp	r0, #0
 8006b2e:	db03      	blt.n	8006b38 <__sread+0x18>
 8006b30:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8006b32:	181b      	adds	r3, r3, r0
 8006b34:	6563      	str	r3, [r4, #84]	; 0x54
 8006b36:	bd70      	pop	{r4, r5, r6, pc}
 8006b38:	89a3      	ldrh	r3, [r4, #12]
 8006b3a:	4a02      	ldr	r2, [pc, #8]	; (8006b44 <__sread+0x24>)
 8006b3c:	4013      	ands	r3, r2
 8006b3e:	81a3      	strh	r3, [r4, #12]
 8006b40:	e7f9      	b.n	8006b36 <__sread+0x16>
 8006b42:	46c0      	nop			; (mov r8, r8)
 8006b44:	ffffefff 	.word	0xffffefff

08006b48 <__swrite>:
 8006b48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006b4a:	001f      	movs	r7, r3
 8006b4c:	898b      	ldrh	r3, [r1, #12]
 8006b4e:	0005      	movs	r5, r0
 8006b50:	000c      	movs	r4, r1
 8006b52:	0016      	movs	r6, r2
 8006b54:	05db      	lsls	r3, r3, #23
 8006b56:	d505      	bpl.n	8006b64 <__swrite+0x1c>
 8006b58:	230e      	movs	r3, #14
 8006b5a:	5ec9      	ldrsh	r1, [r1, r3]
 8006b5c:	2200      	movs	r2, #0
 8006b5e:	2302      	movs	r3, #2
 8006b60:	f000 f874 	bl	8006c4c <_lseek_r>
 8006b64:	89a3      	ldrh	r3, [r4, #12]
 8006b66:	4a05      	ldr	r2, [pc, #20]	; (8006b7c <__swrite+0x34>)
 8006b68:	0028      	movs	r0, r5
 8006b6a:	4013      	ands	r3, r2
 8006b6c:	81a3      	strh	r3, [r4, #12]
 8006b6e:	0032      	movs	r2, r6
 8006b70:	230e      	movs	r3, #14
 8006b72:	5ee1      	ldrsh	r1, [r4, r3]
 8006b74:	003b      	movs	r3, r7
 8006b76:	f000 f81f 	bl	8006bb8 <_write_r>
 8006b7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006b7c:	ffffefff 	.word	0xffffefff

08006b80 <__sseek>:
 8006b80:	b570      	push	{r4, r5, r6, lr}
 8006b82:	000c      	movs	r4, r1
 8006b84:	250e      	movs	r5, #14
 8006b86:	5f49      	ldrsh	r1, [r1, r5]
 8006b88:	f000 f860 	bl	8006c4c <_lseek_r>
 8006b8c:	89a3      	ldrh	r3, [r4, #12]
 8006b8e:	1c42      	adds	r2, r0, #1
 8006b90:	d103      	bne.n	8006b9a <__sseek+0x1a>
 8006b92:	4a05      	ldr	r2, [pc, #20]	; (8006ba8 <__sseek+0x28>)
 8006b94:	4013      	ands	r3, r2
 8006b96:	81a3      	strh	r3, [r4, #12]
 8006b98:	bd70      	pop	{r4, r5, r6, pc}
 8006b9a:	2280      	movs	r2, #128	; 0x80
 8006b9c:	0152      	lsls	r2, r2, #5
 8006b9e:	4313      	orrs	r3, r2
 8006ba0:	81a3      	strh	r3, [r4, #12]
 8006ba2:	6560      	str	r0, [r4, #84]	; 0x54
 8006ba4:	e7f8      	b.n	8006b98 <__sseek+0x18>
 8006ba6:	46c0      	nop			; (mov r8, r8)
 8006ba8:	ffffefff 	.word	0xffffefff

08006bac <__sclose>:
 8006bac:	b510      	push	{r4, lr}
 8006bae:	230e      	movs	r3, #14
 8006bb0:	5ec9      	ldrsh	r1, [r1, r3]
 8006bb2:	f000 f815 	bl	8006be0 <_close_r>
 8006bb6:	bd10      	pop	{r4, pc}

08006bb8 <_write_r>:
 8006bb8:	b570      	push	{r4, r5, r6, lr}
 8006bba:	0004      	movs	r4, r0
 8006bbc:	0008      	movs	r0, r1
 8006bbe:	0011      	movs	r1, r2
 8006bc0:	001a      	movs	r2, r3
 8006bc2:	2300      	movs	r3, #0
 8006bc4:	4d05      	ldr	r5, [pc, #20]	; (8006bdc <_write_r+0x24>)
 8006bc6:	602b      	str	r3, [r5, #0]
 8006bc8:	f7fb fcdc 	bl	8002584 <_write>
 8006bcc:	1c43      	adds	r3, r0, #1
 8006bce:	d103      	bne.n	8006bd8 <_write_r+0x20>
 8006bd0:	682b      	ldr	r3, [r5, #0]
 8006bd2:	2b00      	cmp	r3, #0
 8006bd4:	d000      	beq.n	8006bd8 <_write_r+0x20>
 8006bd6:	6023      	str	r3, [r4, #0]
 8006bd8:	bd70      	pop	{r4, r5, r6, pc}
 8006bda:	46c0      	nop			; (mov r8, r8)
 8006bdc:	200005b4 	.word	0x200005b4

08006be0 <_close_r>:
 8006be0:	2300      	movs	r3, #0
 8006be2:	b570      	push	{r4, r5, r6, lr}
 8006be4:	4d06      	ldr	r5, [pc, #24]	; (8006c00 <_close_r+0x20>)
 8006be6:	0004      	movs	r4, r0
 8006be8:	0008      	movs	r0, r1
 8006bea:	602b      	str	r3, [r5, #0]
 8006bec:	f7fb fce6 	bl	80025bc <_close>
 8006bf0:	1c43      	adds	r3, r0, #1
 8006bf2:	d103      	bne.n	8006bfc <_close_r+0x1c>
 8006bf4:	682b      	ldr	r3, [r5, #0]
 8006bf6:	2b00      	cmp	r3, #0
 8006bf8:	d000      	beq.n	8006bfc <_close_r+0x1c>
 8006bfa:	6023      	str	r3, [r4, #0]
 8006bfc:	bd70      	pop	{r4, r5, r6, pc}
 8006bfe:	46c0      	nop			; (mov r8, r8)
 8006c00:	200005b4 	.word	0x200005b4

08006c04 <_fstat_r>:
 8006c04:	2300      	movs	r3, #0
 8006c06:	b570      	push	{r4, r5, r6, lr}
 8006c08:	4d06      	ldr	r5, [pc, #24]	; (8006c24 <_fstat_r+0x20>)
 8006c0a:	0004      	movs	r4, r0
 8006c0c:	0008      	movs	r0, r1
 8006c0e:	0011      	movs	r1, r2
 8006c10:	602b      	str	r3, [r5, #0]
 8006c12:	f7fb fcdd 	bl	80025d0 <_fstat>
 8006c16:	1c43      	adds	r3, r0, #1
 8006c18:	d103      	bne.n	8006c22 <_fstat_r+0x1e>
 8006c1a:	682b      	ldr	r3, [r5, #0]
 8006c1c:	2b00      	cmp	r3, #0
 8006c1e:	d000      	beq.n	8006c22 <_fstat_r+0x1e>
 8006c20:	6023      	str	r3, [r4, #0]
 8006c22:	bd70      	pop	{r4, r5, r6, pc}
 8006c24:	200005b4 	.word	0x200005b4

08006c28 <_isatty_r>:
 8006c28:	2300      	movs	r3, #0
 8006c2a:	b570      	push	{r4, r5, r6, lr}
 8006c2c:	4d06      	ldr	r5, [pc, #24]	; (8006c48 <_isatty_r+0x20>)
 8006c2e:	0004      	movs	r4, r0
 8006c30:	0008      	movs	r0, r1
 8006c32:	602b      	str	r3, [r5, #0]
 8006c34:	f7fb fcda 	bl	80025ec <_isatty>
 8006c38:	1c43      	adds	r3, r0, #1
 8006c3a:	d103      	bne.n	8006c44 <_isatty_r+0x1c>
 8006c3c:	682b      	ldr	r3, [r5, #0]
 8006c3e:	2b00      	cmp	r3, #0
 8006c40:	d000      	beq.n	8006c44 <_isatty_r+0x1c>
 8006c42:	6023      	str	r3, [r4, #0]
 8006c44:	bd70      	pop	{r4, r5, r6, pc}
 8006c46:	46c0      	nop			; (mov r8, r8)
 8006c48:	200005b4 	.word	0x200005b4

08006c4c <_lseek_r>:
 8006c4c:	b570      	push	{r4, r5, r6, lr}
 8006c4e:	0004      	movs	r4, r0
 8006c50:	0008      	movs	r0, r1
 8006c52:	0011      	movs	r1, r2
 8006c54:	001a      	movs	r2, r3
 8006c56:	2300      	movs	r3, #0
 8006c58:	4d05      	ldr	r5, [pc, #20]	; (8006c70 <_lseek_r+0x24>)
 8006c5a:	602b      	str	r3, [r5, #0]
 8006c5c:	f7fb fccf 	bl	80025fe <_lseek>
 8006c60:	1c43      	adds	r3, r0, #1
 8006c62:	d103      	bne.n	8006c6c <_lseek_r+0x20>
 8006c64:	682b      	ldr	r3, [r5, #0]
 8006c66:	2b00      	cmp	r3, #0
 8006c68:	d000      	beq.n	8006c6c <_lseek_r+0x20>
 8006c6a:	6023      	str	r3, [r4, #0]
 8006c6c:	bd70      	pop	{r4, r5, r6, pc}
 8006c6e:	46c0      	nop			; (mov r8, r8)
 8006c70:	200005b4 	.word	0x200005b4

08006c74 <_read_r>:
 8006c74:	b570      	push	{r4, r5, r6, lr}
 8006c76:	0004      	movs	r4, r0
 8006c78:	0008      	movs	r0, r1
 8006c7a:	0011      	movs	r1, r2
 8006c7c:	001a      	movs	r2, r3
 8006c7e:	2300      	movs	r3, #0
 8006c80:	4d05      	ldr	r5, [pc, #20]	; (8006c98 <_read_r+0x24>)
 8006c82:	602b      	str	r3, [r5, #0]
 8006c84:	f7fb fc61 	bl	800254a <_read>
 8006c88:	1c43      	adds	r3, r0, #1
 8006c8a:	d103      	bne.n	8006c94 <_read_r+0x20>
 8006c8c:	682b      	ldr	r3, [r5, #0]
 8006c8e:	2b00      	cmp	r3, #0
 8006c90:	d000      	beq.n	8006c94 <_read_r+0x20>
 8006c92:	6023      	str	r3, [r4, #0]
 8006c94:	bd70      	pop	{r4, r5, r6, pc}
 8006c96:	46c0      	nop			; (mov r8, r8)
 8006c98:	200005b4 	.word	0x200005b4

08006c9c <_init>:
 8006c9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c9e:	46c0      	nop			; (mov r8, r8)
 8006ca0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006ca2:	bc08      	pop	{r3}
 8006ca4:	469e      	mov	lr, r3
 8006ca6:	4770      	bx	lr

08006ca8 <_fini>:
 8006ca8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006caa:	46c0      	nop			; (mov r8, r8)
 8006cac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006cae:	bc08      	pop	{r3}
 8006cb0:	469e      	mov	lr, r3
 8006cb2:	4770      	bx	lr
